# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-06-22 21:03
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('cap', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BookRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('recipients', models.CharField(blank=True, max_length=512, null=True)),
                ('from_field', models.CharField(blank=True, db_column='from', max_length=128, null=True)),
                ('mail_body', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('send_date', models.DateField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=32, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('subject', models.CharField(blank=True, max_length=512, null=True)),
                ('delivery_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hollis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hollis_no', models.CharField(blank=True, max_length=9, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Hollis entries',
            },
        ),
        migrations.CreateModel(
            name='ProcessStep',
            fields=[
                ('step_id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('type', models.CharField(blank=True, max_length=1, null=True)),
                ('name', models.CharField(blank=True, max_length=24, null=True)),
                ('prereq', models.CharField(blank=True, max_length=1024, null=True)),
                ('desc', models.CharField(max_length=256)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Reporter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(blank=True, max_length=64, null=True)),
                ('reporter', models.CharField(max_length=256)),
                ('short', models.CharField(max_length=64)),
                ('start_date', models.IntegerField(blank=True, null=True)),
                ('end_date', models.IntegerField(blank=True, null=True)),
                ('volumes', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('original_volumes', models.IntegerField(blank=True, null=True)),
                ('original_start_date', models.CharField(blank=True, max_length=4, null=True)),
                ('original_end_date', models.CharField(blank=True, max_length=4, null=True)),
                ('observed_start_date', models.IntegerField(blank=True, null=True)),
                ('observed_end_date', models.IntegerField(blank=True, null=True)),
                ('observed_volumes', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TrackingToolLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=128)),
                ('location', models.CharField(blank=True, max_length=24, null=True)),
                ('destination', models.CharField(blank=True, max_length=128, null=True)),
                ('origination', models.CharField(blank=True, max_length=128, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('exception', models.BooleanField()),
                ('warning', models.BooleanField()),
                ('version_string', models.CharField(blank=True, max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TrackingToolUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privlevel', models.CharField(choices=[('0', '0'), ('1', '1'), ('5', '5'), ('10', '10'), ('15', '15')], max_length=3)),
                ('email', models.CharField(max_length=320)),
                ('active', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('remember_token', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VolumeMetadata',
            fields=[
                ('bar_code', models.CharField(max_length=64, primary_key=True, serialize=False, unique=True)),
                ('hollis_no', models.CharField(max_length=128)),
                ('volume', models.CharField(blank=True, max_length=64, null=True)),
                ('publicationdate', models.DateField(blank=True, null=True)),
                ('publisher', models.CharField(blank=True, max_length=255, null=True)),
                ('publicationyear', models.IntegerField(blank=True, null=True)),
                ('publicationdategranularity', models.CharField(blank=True, max_length=1, null=True)),
                ('nom_volume', models.CharField(blank=True, max_length=1024, null=True)),
                ('nominative_name', models.CharField(blank=True, max_length=1024, null=True)),
                ('series_volume', models.CharField(blank=True, max_length=1024, null=True)),
                ('spine_start_date', models.IntegerField(blank=True, null=True)),
                ('spine_end_date', models.IntegerField(blank=True, null=True)),
                ('start_date', models.IntegerField(blank=True, null=True)),
                ('end_date', models.IntegerField(blank=True, null=True)),
                ('page_start_date', models.IntegerField(blank=True, null=True)),
                ('page_end_date', models.IntegerField(blank=True, null=True)),
                ('redaction_profile', models.CharField(blank=True, max_length=1, null=True)),
                ('contributing_library', models.CharField(blank=True, max_length=256, null=True)),
                ('rare', models.BooleanField()),
                ('hscrev', models.CharField(blank=True, max_length=255, null=True)),
                ('hsc_accession', models.DateTimeField(blank=True, null=True)),
                ('needs_repair', models.CharField(blank=True, choices=[('N', 'N'), ('C', 'C'), ('Y', 'Y')], max_length=255, null=True)),
                ('missing_text_pages', models.TextField(blank=True, null=True)),
                ('bibrev', models.CharField(blank=True, choices=[('N', 'N'), ('C', 'C'), ('Y', 'Y')], max_length=1, null=True)),
                ('pages', models.IntegerField(blank=True, null=True)),
                ('dup', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('replaced_pages', models.CharField(blank=True, max_length=1024, null=True)),
                ('cases', models.IntegerField(blank=True, null=True)),
                ('marginalia', models.BooleanField()),
                ('pop', models.CharField(blank=True, max_length=1024, null=True)),
                ('title', models.CharField(blank=True, max_length=1024, null=True)),
                ('handfeed', models.BooleanField()),
                ('imgct', models.IntegerField(blank=True, null=True)),
                ('hold', models.BooleanField()),
                ('pub_del_pg', models.BooleanField()),
                ('notes', models.CharField(blank=True, max_length=512, null=True)),
                ('pubdel_pages', models.CharField(blank=True, max_length=512, null=True)),
                ('original_barcode', models.CharField(blank=True, max_length=64, null=True)),
                ('scope_reason', models.CharField(blank=True, choices=[('Damaged', 'Damaged'), ('Not Official', 'Not Official'), ('Duplicate', 'Duplicate'), ('No Cases', 'No Cases')], max_length=16, null=True)),
                ('out_of_scope', models.BooleanField()),
                ('meyer_box_barcode', models.CharField(blank=True, max_length=32, null=True)),
                ('uv_box_barcode', models.CharField(blank=True, max_length=32, null=True)),
                ('meyer_ky_truck', models.CharField(blank=True, max_length=32, null=True)),
                ('meyer_pallet', models.CharField(blank=True, max_length=32, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cap.TrackingToolUser')),
                ('reporter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cap.Reporter')),
                ('request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cap.BookRequest')),
            ],
            options={
                'verbose_name_plural': 'Volumes',
            },
        ),
        migrations.RenameModel(
            old_name='Case',
            new_name='CaseXML',
        ),
        migrations.RenameModel(
            old_name='Page',
            new_name='PageXML',
        ),
        migrations.RenameModel(
            old_name='Volume',
            new_name='VolumeXML',
        ),
        migrations.AddField(
            model_name='trackingtoollog',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cap.TrackingToolUser'),
        ),
        migrations.AddField(
            model_name='trackingtoollog',
            name='pstep',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cap.ProcessStep'),
        ),
        migrations.AddField(
            model_name='trackingtoollog',
            name='volume',
            field=models.ForeignKey(max_length=64, on_delete=django.db.models.deletion.CASCADE, to='cap.VolumeMetadata'),
        ),
        migrations.AddField(
            model_name='hollis',
            name='reporter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cap.Reporter'),
        ),
    ]
