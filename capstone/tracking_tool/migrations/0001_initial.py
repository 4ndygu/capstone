# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-06-23 19:11
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Batches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_by', models.IntegerField()),
                ('sent', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'batches',
            },
        ),
        migrations.CreateModel(
            name='BookRequests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('recipients', models.CharField(blank=True, max_length=512, null=True)),
                ('from_field', models.CharField(blank=True, db_column='from', max_length=128, null=True)),
                ('mail_body', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('send_date', models.DateField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=32, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('subject', models.CharField(blank=True, max_length=512, null=True)),
                ('delivery_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'book_requests',
            },
        ),
        migrations.CreateModel(
            name='Casepages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_code', models.CharField(max_length=64)),
                ('case_id', models.IntegerField()),
                ('seqid', models.CharField(max_length=12)),
                ('caseno', models.CharField(max_length=12)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'casepages',
            },
        ),
        migrations.CreateModel(
            name='Cases',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_code', models.CharField(max_length=64)),
                ('redacted_mets_xml', models.CharField(blank=True, max_length=256, null=True)),
                ('unredacted_mets_xml', models.CharField(blank=True, max_length=256, null=True)),
                ('bucket', models.CharField(max_length=32)),
                ('caseno', models.CharField(blank=True, max_length=12, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('unredacted_xml_invalid', models.CharField(blank=True, max_length=256, null=True)),
                ('redacted_xml_invalid', models.CharField(blank=True, max_length=256, null=True)),
                ('version', models.DateTimeField(blank=True, null=True)),
                ('unredacted_mets_xml_md5', models.CharField(blank=True, max_length=32, null=True)),
                ('redacted_mets_xml_md5', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'cases',
            },
        ),
        migrations.CreateModel(
            name='Eventloggers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_code', models.CharField(max_length=64)),
                ('type', models.CharField(max_length=128)),
                ('location', models.CharField(blank=True, max_length=24, null=True)),
                ('destination', models.CharField(blank=True, max_length=128, null=True)),
                ('origination', models.CharField(blank=True, max_length=128, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_by', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('pstep_id', models.CharField(blank=True, max_length=48, null=True)),
                ('exception', models.IntegerField(blank=True, null=True)),
                ('warning', models.IntegerField(blank=True, null=True)),
                ('version_string', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'eventloggers',
            },
        ),
        migrations.CreateModel(
            name='Holdingsbooks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tray', models.CharField(max_length=9)),
                ('barcode', models.CharField(max_length=16, unique=True)),
                ('hollis_no', models.CharField(blank=True, max_length=12, null=True)),
                ('title', models.CharField(blank=True, max_length=512, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('requested', models.IntegerField(blank=True, null=True)),
                ('inscope', models.IntegerField(blank=True, null=True)),
                ('volume', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'holdingsbooks',
            },
        ),
        migrations.CreateModel(
            name='Holdingstrays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tray', models.CharField(max_length=9)),
                ('aisle', models.IntegerField()),
                ('ladder', models.IntegerField()),
                ('position', models.IntegerField()),
                ('side', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'holdingstrays',
            },
        ),
        migrations.CreateModel(
            name='Hollis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hollis_no', models.CharField(blank=True, max_length=9, null=True)),
                ('reporter_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hollis',
            },
        ),
        migrations.CreateModel(
            name='InnodataCaseImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_id', models.IntegerField()),
                ('barcode', models.CharField(max_length=15)),
                ('bucket', models.CharField(blank=True, max_length=48, null=True)),
                ('s3key', models.CharField(max_length=255)),
                ('cases3key', models.CharField(max_length=255)),
                ('caseno', models.SmallIntegerField(db_column='caseNo')),
                ('docno', models.SmallIntegerField(db_column='docNo')),
                ('pageside', models.IntegerField(db_column='pageSide')),
                ('fileformat', models.CharField(db_column='fileFormat', max_length=3)),
                ('seqno', models.SmallIntegerField(db_column='seqNo')),
                ('version_string', models.CharField(blank=True, max_length=32, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'innodata_case_images',
            },
        ),
        migrations.CreateModel(
            name='InnodataPrivateCaseImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_id', models.IntegerField()),
                ('barcode', models.CharField(max_length=15)),
                ('bucket', models.CharField(blank=True, max_length=48, null=True)),
                ('s3key', models.CharField(max_length=255)),
                ('cases3key', models.CharField(max_length=255)),
                ('caseno', models.SmallIntegerField(db_column='caseNo')),
                ('docno', models.SmallIntegerField(db_column='docNo')),
                ('pageside', models.IntegerField(db_column='pageSide')),
                ('fileformat', models.CharField(db_column='fileFormat', max_length=3)),
                ('seqno', models.SmallIntegerField(db_column='seqNo')),
                ('version_string', models.CharField(blank=True, max_length=32, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'innodata_private_case_images',
            },
        ),
        migrations.CreateModel(
            name='InnodataPrivateCases',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', models.CharField(max_length=15)),
                ('s3key', models.CharField(max_length=255, unique=True)),
                ('etag', models.CharField(db_column='eTag', max_length=32)),
                ('caseno', models.SmallIntegerField(db_column='caseNo')),
                ('redacted', models.IntegerField()),
                ('deleted', models.IntegerField()),
                ('version_id', models.CharField(blank=True, max_length=48, null=True)),
                ('version_string', models.CharField(blank=True, max_length=32, null=True)),
                ('key_created', models.DateTimeField(blank=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('bucket', models.CharField(blank=True, max_length=32, null=True)),
                ('court_count', models.IntegerField()),
                ('caseabbrev_count', models.IntegerField()),
                ('docketnumber_count', models.IntegerField()),
                ('citation_count', models.IntegerField()),
                ('decisiondate_count', models.IntegerField()),
                ('otherdate_count', models.IntegerField()),
                ('publicationstatus_count', models.IntegerField()),
                ('parties_count', models.IntegerField()),
                ('judges_count', models.IntegerField()),
                ('attorneys_count', models.IntegerField()),
                ('opinion_count', models.IntegerField()),
                ('author_count', models.IntegerField()),
                ('p_count', models.IntegerField()),
                ('blockquote_count', models.IntegerField()),
                ('opiniontype_count', models.IntegerField()),
                ('pagelabel_count', models.IntegerField()),
                ('footnote_count', models.IntegerField()),
                ('footnotemark_count', models.IntegerField()),
                ('summary_count', models.IntegerField()),
                ('syllabus_count', models.IntegerField()),
                ('disposition_count', models.IntegerField()),
                ('history_count', models.IntegerField()),
                ('headnotes_count', models.IntegerField()),
                ('bracketnum_count', models.IntegerField()),
                ('key_count', models.IntegerField()),
                ('xml_version', models.IntegerField()),
                ('unknown_tags', models.CharField(blank=True, max_length=256, null=True)),
                ('casename_count', models.IntegerField()),
                ('qastatus', models.IntegerField(blank=True, null=True)),
                ('qanotes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'innodata_private_cases',
            },
        ),
        migrations.CreateModel(
            name='InnodataPrivateImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', models.CharField(max_length=15)),
                ('s3key', models.CharField(max_length=255, unique=True)),
                ('etag', models.CharField(db_column='eTag', max_length=32)),
                ('docno', models.SmallIntegerField(db_column='docNo')),
                ('pageside', models.IntegerField(db_column='pageSide')),
                ('fileformat', models.CharField(db_column='fileFormat', max_length=3)),
                ('seqno', models.SmallIntegerField(db_column='seqNo')),
                ('redacted', models.IntegerField()),
                ('deleted', models.IntegerField()),
                ('version_id', models.CharField(blank=True, max_length=48, null=True)),
                ('version_string', models.CharField(blank=True, max_length=32, null=True)),
                ('key_created', models.DateTimeField(blank=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('bucket', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'innodata_private_images',
            },
        ),
        migrations.CreateModel(
            name='InnodataPrivateVolumes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', models.CharField(max_length=15)),
                ('s3key', models.CharField(max_length=255, unique=True)),
                ('etag', models.CharField(db_column='eTag', max_length=32)),
                ('fileformat', models.CharField(db_column='fileFormat', max_length=3)),
                ('redacted', models.IntegerField()),
                ('deleted', models.IntegerField()),
                ('version_id', models.CharField(blank=True, max_length=48, null=True)),
                ('version_string', models.CharField(blank=True, max_length=32, null=True)),
                ('key_created', models.DateTimeField(blank=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('bucket', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'innodata_private_volumes',
            },
        ),
        migrations.CreateModel(
            name='InnodataSharedCaseImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_id', models.IntegerField()),
                ('barcode', models.CharField(max_length=15)),
                ('bucket', models.CharField(blank=True, max_length=48, null=True)),
                ('s3key', models.CharField(max_length=255)),
                ('cases3key', models.CharField(max_length=255)),
                ('caseno', models.SmallIntegerField(db_column='caseNo')),
                ('docno', models.SmallIntegerField(db_column='docNo')),
                ('pageside', models.IntegerField(db_column='pageSide')),
                ('fileformat', models.CharField(db_column='fileFormat', max_length=3)),
                ('seqno', models.SmallIntegerField(db_column='seqNo')),
                ('version_string', models.CharField(blank=True, max_length=32, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'innodata_shared_case_images',
            },
        ),
        migrations.CreateModel(
            name='InnodataSharedCases',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', models.CharField(max_length=15)),
                ('s3key', models.CharField(max_length=255, unique=True)),
                ('etag', models.CharField(db_column='eTag', max_length=32)),
                ('caseno', models.SmallIntegerField(db_column='caseNo')),
                ('redacted', models.IntegerField()),
                ('deleted', models.IntegerField()),
                ('version_id', models.CharField(blank=True, max_length=48, null=True)),
                ('version_string', models.CharField(blank=True, max_length=32, null=True)),
                ('key_created', models.DateTimeField(blank=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('bucket', models.CharField(blank=True, max_length=32, null=True)),
                ('court_count', models.IntegerField()),
                ('casename_count', models.IntegerField()),
                ('caseabbrev_count', models.IntegerField()),
                ('docketnumber_count', models.IntegerField()),
                ('citation_count', models.IntegerField()),
                ('decisiondate_count', models.IntegerField()),
                ('otherdate_count', models.IntegerField()),
                ('publicationstatus_count', models.IntegerField()),
                ('parties_count', models.IntegerField()),
                ('judges_count', models.IntegerField()),
                ('attorneys_count', models.IntegerField()),
                ('opinion_count', models.IntegerField()),
                ('author_count', models.IntegerField()),
                ('p_count', models.IntegerField()),
                ('blockquote_count', models.IntegerField()),
                ('opiniontype_count', models.IntegerField()),
                ('pagelabel_count', models.IntegerField()),
                ('footnote_count', models.IntegerField()),
                ('footnotemark_count', models.IntegerField()),
                ('summary_count', models.IntegerField()),
                ('syllabus_count', models.IntegerField()),
                ('disposition_count', models.IntegerField()),
                ('history_count', models.IntegerField()),
                ('headnotes_count', models.IntegerField()),
                ('bracketnum_count', models.IntegerField()),
                ('key_count', models.IntegerField()),
                ('xml_version', models.IntegerField()),
                ('unknown_tags', models.CharField(blank=True, max_length=256, null=True)),
                ('qastatus', models.IntegerField(blank=True, null=True)),
                ('qanotes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'innodata_shared_cases',
            },
        ),
        migrations.CreateModel(
            name='InnodataSharedImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', models.CharField(max_length=15)),
                ('s3key', models.CharField(max_length=255, unique=True)),
                ('etag', models.CharField(db_column='eTag', max_length=32)),
                ('docno', models.SmallIntegerField(db_column='docNo')),
                ('pageside', models.IntegerField(db_column='pageSide')),
                ('fileformat', models.CharField(db_column='fileFormat', max_length=3)),
                ('seqno', models.SmallIntegerField(db_column='seqNo')),
                ('redacted', models.IntegerField()),
                ('deleted', models.IntegerField()),
                ('version_id', models.CharField(blank=True, max_length=48, null=True)),
                ('version_string', models.CharField(blank=True, max_length=32, null=True)),
                ('key_created', models.DateTimeField(blank=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('bucket', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'innodata_shared_images',
            },
        ),
        migrations.CreateModel(
            name='InnodataSharedVolumes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', models.CharField(max_length=15)),
                ('s3key', models.CharField(max_length=255, unique=True)),
                ('etag', models.CharField(db_column='eTag', max_length=32)),
                ('fileformat', models.CharField(db_column='fileFormat', max_length=3)),
                ('redacted', models.IntegerField()),
                ('deleted', models.IntegerField()),
                ('version_id', models.CharField(blank=True, max_length=48, null=True)),
                ('version_string', models.CharField(blank=True, max_length=32, null=True)),
                ('key_created', models.DateTimeField(blank=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('bucket', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'innodata_shared_volumes',
            },
        ),
        migrations.CreateModel(
            name='Migrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('migration', models.CharField(max_length=255)),
                ('batch', models.IntegerField()),
            ],
            options={
                'db_table': 'migrations',
            },
        ),
        migrations.CreateModel(
            name='Pages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_code', models.CharField(max_length=64)),
                ('redacted_tiff', models.CharField(blank=True, max_length=256, null=True)),
                ('unredacted_tiff', models.CharField(blank=True, max_length=256, null=True)),
                ('redacted_jp2', models.CharField(blank=True, max_length=256, null=True)),
                ('unredacted_jp2', models.CharField(blank=True, max_length=256, null=True)),
                ('redacted_alto_xml', models.CharField(blank=True, max_length=256, null=True)),
                ('unredacted_alto_xml', models.CharField(blank=True, max_length=256, null=True)),
                ('bucket', models.CharField(max_length=32)),
                ('seqid', models.CharField(max_length=12)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.DateTimeField(blank=True, null=True)),
                ('unredacted_alto_xml_md5', models.CharField(blank=True, max_length=32, null=True)),
                ('redacted_alto_xml_md5', models.CharField(blank=True, max_length=32, null=True)),
                ('unredacted_jp2_md5', models.CharField(blank=True, max_length=32, null=True)),
                ('redacted_jp2_md5', models.CharField(blank=True, max_length=32, null=True)),
                ('unredacted_tiff_md5', models.CharField(blank=True, max_length=32, null=True)),
                ('redacted_tiff_md5', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'pages',
            },
        ),
        migrations.CreateModel(
            name='Preferences',
            fields=[
                ('id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('category', models.CharField(max_length=30)),
                ('privlevel', models.CharField(max_length=30)),
                ('value', models.TextField(blank=True, null=True)),
                ('default_value', models.CharField(blank=True, max_length=512, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'preferences',
            },
        ),
        migrations.CreateModel(
            name='PrivateReporterTagStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('reporter_id', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('case_count', models.IntegerField(blank=True, null=True)),
                ('case_missing_count', models.IntegerField(blank=True, null=True)),
                ('court_count', models.IntegerField(blank=True, null=True)),
                ('casename_count', models.IntegerField(blank=True, null=True)),
                ('caseabbrev_count', models.IntegerField(blank=True, null=True)),
                ('docketnumber_count', models.IntegerField(blank=True, null=True)),
                ('citation_count', models.IntegerField(blank=True, null=True)),
                ('decisiondate_count', models.IntegerField(blank=True, null=True)),
                ('otherdate_count', models.IntegerField(blank=True, null=True)),
                ('publicationstatus_count', models.IntegerField(blank=True, null=True)),
                ('parties_count', models.IntegerField(blank=True, null=True)),
                ('judges_count', models.IntegerField(blank=True, null=True)),
                ('attorneys_count', models.IntegerField(blank=True, null=True)),
                ('opinion_count', models.IntegerField(blank=True, null=True)),
                ('author_count', models.IntegerField(blank=True, null=True)),
                ('p_count', models.IntegerField(blank=True, null=True)),
                ('blockquote_count', models.IntegerField(blank=True, null=True)),
                ('opiniontype_count', models.IntegerField(blank=True, null=True)),
                ('pagelabel_count', models.IntegerField(blank=True, null=True)),
                ('footnote_count', models.IntegerField(blank=True, null=True)),
                ('footnotemark_count', models.IntegerField(blank=True, null=True)),
                ('summary_count', models.IntegerField(blank=True, null=True)),
                ('syllabus_count', models.IntegerField(blank=True, null=True)),
                ('disposition_count', models.IntegerField(blank=True, null=True)),
                ('history_count', models.IntegerField(blank=True, null=True)),
                ('headnotes_count', models.IntegerField(blank=True, null=True)),
                ('bracketnum_count', models.IntegerField(blank=True, null=True)),
                ('key_count', models.IntegerField(blank=True, null=True)),
                ('unknown_tags', models.IntegerField(blank=True, null=True)),
                ('qastatus', models.IntegerField(blank=True, null=True)),
                ('qanotes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'private_reporter_tag_stats',
            },
        ),
        migrations.CreateModel(
            name='PrivateVolumeTagStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('reporter_id', models.IntegerField(blank=True, null=True)),
                ('bar_code', models.CharField(blank=True, max_length=64, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('case_count', models.IntegerField(blank=True, null=True)),
                ('case_missing_count', models.IntegerField(blank=True, null=True)),
                ('court_count', models.IntegerField(blank=True, null=True)),
                ('casename_count', models.IntegerField(blank=True, null=True)),
                ('caseabbrev_count', models.IntegerField(blank=True, null=True)),
                ('docketnumber_count', models.IntegerField(blank=True, null=True)),
                ('citation_count', models.IntegerField(blank=True, null=True)),
                ('decisiondate_count', models.IntegerField(blank=True, null=True)),
                ('otherdate_count', models.IntegerField(blank=True, null=True)),
                ('publicationstatus_count', models.IntegerField(blank=True, null=True)),
                ('parties_count', models.IntegerField(blank=True, null=True)),
                ('judges_count', models.IntegerField(blank=True, null=True)),
                ('attorneys_count', models.IntegerField(blank=True, null=True)),
                ('opinion_count', models.IntegerField(blank=True, null=True)),
                ('author_count', models.IntegerField(blank=True, null=True)),
                ('p_count', models.IntegerField(blank=True, null=True)),
                ('blockquote_count', models.IntegerField(blank=True, null=True)),
                ('opiniontype_count', models.IntegerField(blank=True, null=True)),
                ('pagelabel_count', models.IntegerField(blank=True, null=True)),
                ('footnote_count', models.IntegerField(blank=True, null=True)),
                ('footnotemark_count', models.IntegerField(blank=True, null=True)),
                ('summary_count', models.IntegerField(blank=True, null=True)),
                ('syllabus_count', models.IntegerField(blank=True, null=True)),
                ('disposition_count', models.IntegerField(blank=True, null=True)),
                ('history_count', models.IntegerField(blank=True, null=True)),
                ('headnotes_count', models.IntegerField(blank=True, null=True)),
                ('bracketnum_count', models.IntegerField(blank=True, null=True)),
                ('key_count', models.IntegerField(blank=True, null=True)),
                ('unknown_tags', models.IntegerField(blank=True, null=True)),
                ('volume', models.IntegerField(blank=True, null=True)),
                ('publicationyear', models.IntegerField(blank=True, null=True)),
                ('qastatus', models.IntegerField(blank=True, null=True)),
                ('qanotes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'private_volume_tag_stats',
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=24)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'projects',
            },
        ),
        migrations.CreateModel(
            name='ProjectVolume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_code', models.CharField(max_length=64)),
                ('project_id', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'project_volume',
            },
        ),
        migrations.CreateModel(
            name='Pstep',
            fields=[
                ('step_id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('type', models.CharField(blank=True, max_length=1, null=True)),
                ('name', models.CharField(blank=True, max_length=24, null=True)),
                ('prereq', models.CharField(blank=True, max_length=1024, null=True)),
                ('desc', models.CharField(max_length=256)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'pstep',
            },
        ),
        migrations.CreateModel(
            name='Reporters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(blank=True, max_length=64, null=True)),
                ('reporter', models.CharField(max_length=256)),
                ('short', models.CharField(max_length=64)),
                ('start_date', models.IntegerField(blank=True, null=True)),
                ('end_date', models.IntegerField(blank=True, null=True)),
                ('volumes', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('original_volumes', models.IntegerField(blank=True, null=True)),
                ('original_start_date', models.CharField(blank=True, max_length=4, null=True)),
                ('original_end_date', models.CharField(blank=True, max_length=4, null=True)),
                ('observed_start_date', models.IntegerField(blank=True, null=True)),
                ('observed_end_date', models.IntegerField(blank=True, null=True)),
                ('observed_volumes', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'reporters',
            },
        ),
        migrations.CreateModel(
            name='S3KeyErrors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bucket', models.CharField(blank=True, max_length=48, null=True)),
                ('error_type', models.CharField(blank=True, max_length=12, null=True)),
                ('error_text', models.TextField(blank=True, null=True)),
                ('key_created', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 's3_key_errors',
            },
        ),
        migrations.CreateModel(
            name='S3ScannerOutput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', models.CharField(max_length=15)),
                ('s3key', models.CharField(max_length=90, unique=True)),
                ('etag', models.CharField(db_column='eTag', max_length=32)),
                ('fileformat', models.CharField(db_column='fileFormat', max_length=3)),
                ('version_id', models.CharField(blank=True, max_length=48, null=True)),
                ('docno', models.SmallIntegerField(blank=True, db_column='docNo', null=True)),
                ('pageside', models.IntegerField(blank=True, db_column='pageSide', null=True)),
                ('seqno', models.SmallIntegerField(blank=True, db_column='seqNo', null=True)),
                ('version_string', models.CharField(blank=True, max_length=32, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('bucket', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 's3_scanner_output',
            },
        ),
        migrations.CreateModel(
            name='ServerStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fqdn', models.CharField(max_length=256)),
                ('ip', models.CharField(max_length=16)),
                ('type', models.CharField(max_length=8)),
                ('qcwait', models.IntegerField(blank=True, null=True)),
                ('xferwait', models.IntegerField(blank=True, null=True)),
                ('pswait', models.IntegerField(blank=True, null=True)),
                ('df', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'server_stats',
            },
        ),
        migrations.CreateModel(
            name='SharedReporterTagStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('reporter_id', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('case_count', models.IntegerField(blank=True, null=True)),
                ('case_missing_count', models.IntegerField(blank=True, null=True)),
                ('court_count', models.IntegerField(blank=True, null=True)),
                ('casename_count', models.IntegerField(blank=True, null=True)),
                ('caseabbrev_count', models.IntegerField(blank=True, null=True)),
                ('docketnumber_count', models.IntegerField(blank=True, null=True)),
                ('citation_count', models.IntegerField(blank=True, null=True)),
                ('decisiondate_count', models.IntegerField(blank=True, null=True)),
                ('otherdate_count', models.IntegerField(blank=True, null=True)),
                ('publicationstatus_count', models.IntegerField(blank=True, null=True)),
                ('parties_count', models.IntegerField(blank=True, null=True)),
                ('judges_count', models.IntegerField(blank=True, null=True)),
                ('attorneys_count', models.IntegerField(blank=True, null=True)),
                ('opinion_count', models.IntegerField(blank=True, null=True)),
                ('author_count', models.IntegerField(blank=True, null=True)),
                ('p_count', models.IntegerField(blank=True, null=True)),
                ('blockquote_count', models.IntegerField(blank=True, null=True)),
                ('opiniontype_count', models.IntegerField(blank=True, null=True)),
                ('pagelabel_count', models.IntegerField(blank=True, null=True)),
                ('footnote_count', models.IntegerField(blank=True, null=True)),
                ('footnotemark_count', models.IntegerField(blank=True, null=True)),
                ('summary_count', models.IntegerField(blank=True, null=True)),
                ('syllabus_count', models.IntegerField(blank=True, null=True)),
                ('disposition_count', models.IntegerField(blank=True, null=True)),
                ('history_count', models.IntegerField(blank=True, null=True)),
                ('headnotes_count', models.IntegerField(blank=True, null=True)),
                ('bracketnum_count', models.IntegerField(blank=True, null=True)),
                ('key_count', models.IntegerField(blank=True, null=True)),
                ('unknown_tags', models.IntegerField(blank=True, null=True)),
                ('qastatus', models.IntegerField(blank=True, null=True)),
                ('qanotes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'shared_reporter_tag_stats',
            },
        ),
        migrations.CreateModel(
            name='SharedVolumeTagStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('reporter_id', models.IntegerField(blank=True, null=True)),
                ('bar_code', models.CharField(blank=True, max_length=64, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('case_count', models.IntegerField(blank=True, null=True)),
                ('case_missing_count', models.IntegerField(blank=True, null=True)),
                ('court_count', models.IntegerField(blank=True, null=True)),
                ('casename_count', models.IntegerField(blank=True, null=True)),
                ('caseabbrev_count', models.IntegerField(blank=True, null=True)),
                ('docketnumber_count', models.IntegerField(blank=True, null=True)),
                ('citation_count', models.IntegerField(blank=True, null=True)),
                ('decisiondate_count', models.IntegerField(blank=True, null=True)),
                ('otherdate_count', models.IntegerField(blank=True, null=True)),
                ('publicationstatus_count', models.IntegerField(blank=True, null=True)),
                ('parties_count', models.IntegerField(blank=True, null=True)),
                ('judges_count', models.IntegerField(blank=True, null=True)),
                ('attorneys_count', models.IntegerField(blank=True, null=True)),
                ('opinion_count', models.IntegerField(blank=True, null=True)),
                ('author_count', models.IntegerField(blank=True, null=True)),
                ('p_count', models.IntegerField(blank=True, null=True)),
                ('blockquote_count', models.IntegerField(blank=True, null=True)),
                ('opiniontype_count', models.IntegerField(blank=True, null=True)),
                ('pagelabel_count', models.IntegerField(blank=True, null=True)),
                ('footnote_count', models.IntegerField(blank=True, null=True)),
                ('footnotemark_count', models.IntegerField(blank=True, null=True)),
                ('summary_count', models.IntegerField(blank=True, null=True)),
                ('syllabus_count', models.IntegerField(blank=True, null=True)),
                ('disposition_count', models.IntegerField(blank=True, null=True)),
                ('history_count', models.IntegerField(blank=True, null=True)),
                ('headnotes_count', models.IntegerField(blank=True, null=True)),
                ('bracketnum_count', models.IntegerField(blank=True, null=True)),
                ('key_count', models.IntegerField(blank=True, null=True)),
                ('unknown_tags', models.IntegerField(blank=True, null=True)),
                ('volume', models.IntegerField(blank=True, null=True)),
                ('publicationyear', models.IntegerField(blank=True, null=True)),
                ('qastatus', models.IntegerField(blank=True, null=True)),
                ('qanotes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'shared_volume_tag_stats',
            },
        ),
        migrations.CreateModel(
            name='Statcache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=32, null=True)),
                ('updated_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('offset', models.SmallIntegerField(blank=True, null=True)),
                ('json', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'statcache',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privlevel', models.CharField(max_length=3)),
                ('email', models.CharField(max_length=320)),
                ('password', models.CharField(max_length=64)),
                ('active', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('remember_token', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='VolumeBackups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bar_code', models.CharField(max_length=64)),
                ('hollis_no', models.CharField(max_length=128)),
                ('volume', models.CharField(blank=True, max_length=64, null=True)),
                ('publicationdate', models.DateField(blank=True, null=True)),
                ('publisher', models.CharField(blank=True, max_length=255, null=True)),
                ('publicationyear', models.IntegerField(blank=True, null=True)),
                ('reporter_id', models.IntegerField(blank=True, null=True)),
                ('publicationdategranularity', models.CharField(blank=True, max_length=1, null=True)),
                ('nom_volume', models.CharField(blank=True, max_length=1024, null=True)),
                ('nominative_name', models.CharField(blank=True, max_length=1024, null=True)),
                ('series_volume', models.CharField(blank=True, max_length=1024, null=True)),
                ('spine_start_date', models.IntegerField(blank=True, null=True)),
                ('spine_end_date', models.IntegerField(blank=True, null=True)),
                ('start_date', models.IntegerField(blank=True, null=True)),
                ('end_date', models.IntegerField(blank=True, null=True)),
                ('page_start_date', models.IntegerField(blank=True, null=True)),
                ('page_end_date', models.IntegerField(blank=True, null=True)),
                ('redaction_profile', models.CharField(blank=True, max_length=1, null=True)),
                ('contributing_library', models.CharField(blank=True, max_length=256, null=True)),
                ('rare', models.CharField(blank=True, max_length=255, null=True)),
                ('hscrev', models.CharField(blank=True, max_length=255, null=True)),
                ('hsc_accession', models.DateTimeField(blank=True, null=True)),
                ('needs_repair', models.CharField(blank=True, max_length=255, null=True)),
                ('missing_text_pages', models.CharField(blank=True, max_length=10000, null=True)),
                ('created_by', models.IntegerField()),
                ('bibrev', models.CharField(blank=True, max_length=1, null=True)),
                ('pages', models.IntegerField(blank=True, null=True)),
                ('dup', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('replaced_pages', models.CharField(blank=True, max_length=1024, null=True)),
                ('cases', models.IntegerField(blank=True, null=True)),
                ('marginalia', models.IntegerField(blank=True, null=True)),
                ('pop', models.CharField(blank=True, max_length=1024, null=True)),
                ('title', models.CharField(blank=True, max_length=1024, null=True)),
                ('handfeed', models.IntegerField(blank=True, null=True)),
                ('imgct', models.IntegerField(blank=True, null=True)),
                ('hold', models.IntegerField(blank=True, null=True)),
                ('request_id', models.IntegerField(blank=True, null=True)),
                ('pub_del_pg', models.IntegerField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=512, null=True)),
                ('pubdel_pages', models.CharField(blank=True, max_length=512, null=True)),
                ('original_barcode', models.CharField(blank=True, max_length=64, null=True)),
                ('scope_reason', models.CharField(blank=True, max_length=16, null=True)),
                ('out_of_scope', models.IntegerField()),
                ('meyer_box_barcode', models.CharField(blank=True, max_length=32, null=True)),
                ('uv_box_barcode', models.CharField(blank=True, max_length=32, null=True)),
                ('meyer_ky_truck', models.CharField(blank=True, max_length=32, null=True)),
                ('meyer_pallet', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'volume_backups',
            },
        ),
        migrations.CreateModel(
            name='Volumes',
            fields=[
                ('bar_code', models.CharField(max_length=64, primary_key=True, serialize=False, unique=True)),
                ('hollis_no', models.CharField(max_length=128)),
                ('volume', models.CharField(blank=True, max_length=64, null=True)),
                ('publicationdate', models.DateField(blank=True, null=True)),
                ('publisher', models.CharField(blank=True, max_length=255, null=True)),
                ('publicationyear', models.IntegerField(blank=True, null=True)),
                ('reporter_id', models.IntegerField(blank=True, null=True)),
                ('publicationdategranularity', models.CharField(blank=True, max_length=1, null=True)),
                ('nom_volume', models.CharField(blank=True, max_length=1024, null=True)),
                ('nominative_name', models.CharField(blank=True, max_length=1024, null=True)),
                ('series_volume', models.CharField(blank=True, max_length=1024, null=True)),
                ('spine_start_date', models.IntegerField(blank=True, null=True)),
                ('spine_end_date', models.IntegerField(blank=True, null=True)),
                ('start_date', models.IntegerField(blank=True, null=True)),
                ('end_date', models.IntegerField(blank=True, null=True)),
                ('page_start_date', models.IntegerField(blank=True, null=True)),
                ('page_end_date', models.IntegerField(blank=True, null=True)),
                ('redaction_profile', models.CharField(blank=True, max_length=1, null=True)),
                ('contributing_library', models.CharField(blank=True, max_length=256, null=True)),
                ('rare', models.CharField(blank=True, max_length=255, null=True)),
                ('hscrev', models.CharField(blank=True, max_length=255, null=True)),
                ('hsc_accession', models.DateTimeField(blank=True, null=True)),
                ('needs_repair', models.CharField(blank=True, max_length=255, null=True)),
                ('missing_text_pages', models.CharField(blank=True, max_length=10000, null=True)),
                ('created_by', models.IntegerField()),
                ('bibrev', models.CharField(blank=True, max_length=1, null=True)),
                ('pages', models.IntegerField(blank=True, null=True)),
                ('dup', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('replaced_pages', models.CharField(blank=True, max_length=1024, null=True)),
                ('cases', models.IntegerField(blank=True, null=True)),
                ('marginalia', models.IntegerField(blank=True, null=True)),
                ('pop', models.CharField(blank=True, max_length=1024, null=True)),
                ('title', models.CharField(blank=True, max_length=1024, null=True)),
                ('handfeed', models.IntegerField(blank=True, null=True)),
                ('imgct', models.IntegerField(blank=True, null=True)),
                ('hold', models.IntegerField(blank=True, null=True)),
                ('request_id', models.IntegerField(blank=True, null=True)),
                ('pub_del_pg', models.IntegerField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=512, null=True)),
                ('pubdel_pages', models.CharField(blank=True, max_length=512, null=True)),
                ('original_barcode', models.CharField(blank=True, max_length=64, null=True)),
                ('scope_reason', models.CharField(blank=True, max_length=16, null=True)),
                ('out_of_scope', models.IntegerField()),
                ('meyer_box_barcode', models.CharField(blank=True, max_length=32, null=True)),
                ('uv_box_barcode', models.CharField(blank=True, max_length=32, null=True)),
                ('meyer_ky_truck', models.CharField(blank=True, max_length=32, null=True)),
                ('meyer_pallet', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'volumes',
            },
        ),
    ]
