{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/tone/Tone/source/Source.js","webpack:///./node_modules/tone/Tone/shim/WaveShaperNode.js","webpack:///./node_modules/tone/Tone/core/Context.js","webpack:///./node_modules/tone/Tone/signal/AudioToGain.js","webpack:///./node_modules/tone/Tone/core/AudioNode.js","webpack:///./node_modules/tone/Tone/core/Tone.js","webpack:///./node_modules/tone/Tone/core/TransportRepeatEvent.js","webpack:///./node_modules/tone/Tone/core/Gain.js","webpack:///./node_modules/tone/Tone/signal/SignalBase.js","webpack:///./node_modules/tone/Tone/core/OfflineContext.js","webpack:///./node_modules/tone/Tone/core/TransportEvent.js","webpack:///./node_modules/tone/Tone/core/Transport.js","webpack:///./node_modules/tone/Tone/source/FatOscillator.js","webpack:///./node_modules/tone/Tone/core/Timeline.js","webpack:///./node_modules/tone/Tone/core/Master.js","webpack:///./node_modules/chart.js/dist/Chart.js","webpack:///./node_modules/tone/Tone/shim/AudioBuffer.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./node_modules/tone/Tone/shim/BufferSourceNode.js","webpack:///./node_modules/tone/Tone/type/TimeBase.js","webpack:///./node_modules/vue-slider-component/dist/vue-slider-component.umd.min.js","webpack:///./node_modules/tone/Tone/instrument/Instrument.js","webpack:///./node_modules/tone/Tone/core/Param.js","webpack:///./node_modules/core-js/modules/_inherit-if-required.js","webpack:///./node_modules/core-js/modules/es6.string.iterator.js","webpack:///./node_modules/tone/Tone/signal/WaveShaper.js","webpack:///./node_modules/tone/Tone/signal/Pow.js","webpack:///./node_modules/tone/Tone/type/Frequency.js","webpack:///./node_modules/tone/Tone/source/PulseOscillator.js","webpack:///./node_modules/tone/Tone/core/Buffer.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/tone/Tone/source/AMOscillator.js","webpack:///./node_modules/tone/Tone/source/PWMOscillator.js","webpack:///./static/js/trends/main.vue?0064","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/toArray.js","webpack:///./node_modules/vue-chartjs/es/mixins/index.js","webpack:///./node_modules/vue-chartjs/es/BaseCharts.js","webpack:///./static/js/trends/LineChart.vue","webpack:///./static/js/vue-shared/panelset.vue","webpack:///static/js/trends/LineChart.vue","webpack:///./static/js/trends/LineChart.vue?077d","webpack:///static/js/vue-shared/panelset.vue","webpack:///./static/js/vue-shared/panelset.vue?8825","webpack:///./static/js/trends/search-results.vue?9152","webpack:///static/js/trends/search-results.vue","webpack:///./static/js/trends/search-results.vue?edf3","webpack:///./static/js/trends/search-results.vue","webpack:///static/js/trends/main.vue","webpack:///./static/js/trends/main.vue?1f3d","webpack:///./static/js/trends/main.vue","webpack:///./static/js/trends/main.js","webpack:///./node_modules/tone/Tone/shim/ConstantSourceNode.js","webpack:///./node_modules/tone/Tone/shim/OfflineAudioContext.js","webpack:///./node_modules/tone/Tone/core/IntervalTimeline.js","webpack:///./node_modules/core-js/modules/_set-proto.js","webpack:///./node_modules/tone/Tone/instrument/Monophonic.js","webpack:///./node_modules/tone/Tone/shim/AudioContext.js","webpack:///./node_modules/tone/Tone/signal/Signal.js","webpack:///./node_modules/tone/Tone/type/Time.js","webpack:///./node_modules/tone/Tone/type/Type.js","webpack:///./node_modules/tone/Tone/component/Volume.js","webpack:///./node_modules/tone/Tone/core/TimelineState.js","webpack:///./node_modules/tone/Tone/source/FMOscillator.js","webpack:///./node_modules/tone/Tone/source/OscillatorNode.js","webpack:///./node_modules/core-js/modules/_string-trim.js","webpack:///./node_modules/core-js/modules/es6.string.ends-with.js","webpack:///./node_modules/tone/Tone/signal/Multiply.js","webpack:///./node_modules/tone/Tone/type/Ticks.js","webpack:///./node_modules/tone/Tone/source/Oscillator.js","webpack:///external \"moment\"","webpack:///./node_modules/core-js/modules/es6.number.constructor.js","webpack:///./node_modules/tone/Tone/signal/TickSignal.js","webpack:///./node_modules/tone/Tone/source/OmniOscillator.js","webpack:///./node_modules/tone/Tone/component/AmplitudeEnvelope.js","webpack:///./node_modules/tone/Tone/core/Emitter.js","webpack:///./node_modules/tone/Tone/type/TransportTime.js","webpack:///./node_modules/tone/Tone/version.js","webpack:///./node_modules/tone/Tone/component/Envelope.js","webpack:///./node_modules/tone/Tone/instrument/Synth.js","webpack:///./node_modules/tone/Tone/core/Clock.js","webpack:///./node_modules/core-js/modules/_string-ws.js","webpack:///./node_modules/tone/Tone/source/TickSource.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","trends","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","Tone","Source","options","defaultArg","defaults","AudioNode","this","_volume","output","Volume","volume","_readOnly","_state","TimelineState","State","Stopped","memory","_synced","_scheduled","channelCount","channelCountMode","mute","extend","Transport","state","Started","getValueAtTime","seconds","now","set","_start","noOp","restart","_stop","start","time","offset","duration","isUndef","toSeconds","cancel","setStateAtTime","event","sched","schedule","_syncedStart","arguments","stop","sync","stateEvent","startOffset","_syncedStop","getSecondsAtTime","Math","max","sampleTime","on","unsync","off","id","clear","dispose","_writable","undefined","supported","global","AudioContext","_native_createWaveShaper","ua","navigator","userAgent","toLowerCase","isSafari","includes","WaveShaperNode","context","prop","_internalNode","input","_curve","_defineProperty","curve","array","Float32Array","val","createWaveShaper","Context","Emitter","Error","_context","rawContext","_latencyHint","latencyHint","_constants","lookAhead","_computedUpdateInterval","_ticker","Ticker","emit","clockSource","updateInterval","_timeouts","Timeline","_timeoutIds","_timeoutLoop","onstatechange","e","mixin","isContext","currentTime","master","destination","resume","Promise","resolve","close","closePromise","TONE_AUDIO_CONTEXT","then","getConstant","buffer","createBuffer","sampleRate","arr","getChannelData","constant","createBufferSource","loop","peek","callback","setTimeout","fn","timeout","add","clearTimeout","forEach","remove","interval","type","hint","isString","con","disconnect","_type","_updateInterval","_callback","_createClock","Type","Worker","Timeout","Offline","_createWorker","URL","webkitURL","blob","Blob","toFixed","blobUrl","createObjectURL","worker","onmessage","_worker","_createTimeout","_timeout","postMessage","_disposeClock","terminate","getContext","nativeConnect","connect","nativeDisconnect","toneConnect","B","outNum","inNum","isArray","toneDisconnect","AudioParam","initialized","TONE_SILENCE_VERSION_LOGGING","prefix","version","printString","console","log","warn","AudioToGain","SignalBase","_norm","WaveShaper","x","createInsOuts","inputs","outputs","createGain","Array","channelInterpretation","unit","outputNum","inputNum","isNumber","chain","currentUnit","toUnit","fan","isDefined","toString","className","isLetter","match","sameConstructor","constructor","isFunction","params","rampTime","isObject","tmpObj","paramLoop","attr","parent","indexOf","attrSplit","split","innerParam","join","param","Signal","Param","rampTo","TimeBase","_collectDefaults","ret","subRet","subAttr","constr","keys","_super","superDefs","values","given","fallback","givenProp","fallbackProp","debug","TONE_DEBUG_CLASS","args","from","unshift","assert","statement","error","connectSeries","arg","isBoolean","isNote","test","writable","Paused","equalPowerScale","percent","piFactor","PI","sin","dbToGain","db","pow","gainToDb","gain","LN10","intervalToFrequencyRatio","immediate","child","TempConstructor","_audioContext","setContext","ctx","hasAudioContext","hasPromises","Boolean","resCallback","TransportRepeatEvent","TransportEvent","Ticks","_interval","_currentId","_nextId","_nextTick","_boundRestart","_restart","Infinity","invoke","_createEvents","ticks","getTicksAtTime","scheduleOnce","ceil","_boundCreateEvents","Gain","_gainNode","units","convert","node","outputNumber","inputNumber","_param","cancelScheduledValues","setValueAtTime","overridden","OfflineContext","channels","offlineContext","OfflineAudioContext","_duration","_currentTime","render","blockTime","startRendering","_eventId","_once","once","_loopStart","_loopEnd","_ppq","TransportConstructor","PPQ","_clock","Clock","_processTick","frequency","_bindClockEvents","bpm","_toUnits","_fromUnits","BPM","_timeSignature","timeSignature","_scheduledEvents","_timeline","_repeatedEvents","IntervalTimeline","_syncedSignals","_swingTicks","_swingAmount","transport","swing","swingSubdivision","loopStart","loopEnd","isTransport","tickTime","progress","amount","setTicksAtTime","forEachAtTime","TransportTime","_addEvent","scheduleRepeat","startTime","Time","eventId","item","timeline","after","toTicks","forEachFrom","getStateAtTime","pause","toggle","timeSig","startPosition","endPosition","setLoopPoints","toNotation","subdivision","toBarsBeatsSixteenths","timeToTicks","round","ppq","freq","nextSubdivision","transportPos","remainingTicks","nextTickTime","syncSignal","signal","ratio","ratioSignal","initial","unsyncSignal","syncedSignal","FatOscillator","Frequency","detune","Cents","_oscillators","_spread","spread","_phase","phase","_partials","partials","_partialCount","partialCount","count","_forEach","osc","iterator","step","Oscillator","Custom","baseType","valueOf","index","_search","diff","comparator","getAfter","getBefore","len","cancelBefore","previousEvent","beginning","end","midPoint","floor","nextEvent","testEvent","_iterate","lowerBound","upperBound","forEachBefore","forEachAfter","forEachBetween","endTime","Master","isMaster","toMaster","MasterConstructor","factory","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","hsl2rgb","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lab2lch","lch2lab","lch2xyz","lch2rgb","rgb","h","g","b","min","delta","v","w","y","k","reverseKeywords","JSON","stringify","z","a","xyz","hsl","t1","t2","t3","sv","hsv","hi","f","q","sl","hwb","wh","bl","cmyk","lab","y2","hr","atan2","sqrt","lch","cos","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Converter","func","pair","exec","to","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","getHsl","getHwb","getAlpha","hexString","rgbString","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","string","abbr","hex","rgba","per","hexAlpha","parseInt","parseFloat","scale","alpha","isNaN","hsla","hexDouble","reverseNames","num","str","toUpperCase","Color","obj","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","toJSON","clone","source","target","spaces","maxes","charAt","capped","chans","sname","svalues","chartjsColor","helpers","noop","uid","isNullOrUndef","substr","isFinite","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","thisArg","each","loopable","reverse","arrayEquals","a0","a1","ilen","v0","v1","map","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","drawImage","beginPath","lineTo","SQRT1_2","fill","stroke","_isPointInArea","point","area","epsilon","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","toFontString","font","family","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","fontSize","fontFamily","lineHeight","fontStyle","helpers$1","easing","canvas","interpolate","view","model","ease","actual","origin","c0","c1","Element","configuration","initialize","hidden","pivot","_view","_model","transition","tooltipPosition","hasValue","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","Date","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","configurable","method","base","res","unlistenArrayEvents","stub","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","yRange","mouseY","pointStyle","element_point","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderSkipped","edge","borderSkipped","horizontal","parseBorderWidth","maxW","maxH","boundingRects","bounds","border","outer","inner","skipX","skipY","rectangle","element_rectangle","rects","fillRect","Arc","Line","Point","Rectangle","resolve$1","computeMinSampleSize","pixels","prev","curr","isHorizontal","getTicks","getPixelForTick","computeFitCategoryTraits","ruler","thickness","barThickness","stackCount","categoryPercentage","barPercentage","chunk","computeFlexCategoryTraits","next","hover","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","getPixelForValue","imeta","ivalue","getRightValue","minBarLength","controller","range","stackIndex","maxBarThickness","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","legend","generateLabels","ds","arcOpts","bw","onClick","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controller_scatter","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","findMaxPadding","boxes","box","getPadding","boxPadding","addSizeByPosition","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","props","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getMinimumBoxSize","fitBox","finalFitVerticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBoxSize","findNextWhere","minBox","scaleMargin","platform_basic","acquireContext","platform_dom","platform_dom$1","freeze","default","getCjsExportFromNamespace","stylesheet","EXPANDO_KEY","CSS_PREFIX","CSS_SIZE_MONITOR","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","initCanvas","config","renderHeight","getAttribute","renderWidth","displayWidth","aspectRatio","displayHeight","supportsEventListenerOptions","supports","addEventListener","eventListenerOptions","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","fromNativeEvent","pos","throttled","ticking","createDiv","cls","el","document","createElement","createResizer","maxSize","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","watchForRender","expando","proxy","renderProxy","animationName","reflow","offsetParent","classList","unwatchForRender","addResizeListener","container","maintainAspectRatio","parentNode","clientWidth","insertBefore","firstChild","removeResizeListener","removeChild","injectCSS","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","getElementById","releaseContext","removeAttribute","proxies","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getTooltipSize","tooltip","body","combinedBodyLength","reduce","bodyItem","before","lines","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","changed","existingModel","active","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","initConfig","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","initToolTip","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","Controller","types","configMerge","scaleMerge","core_helpers","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","almostWhole","rounded","NEGATIVE_INFINITY","sign","log10","exponent","LOG10E","powerOf10","isPowerOf10","toRadians","toDegrees","radians","_decimalPlaces","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","niceNum","niceFraction","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","paddingTop","paddingRight","paddingBottom","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","longestText","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","color","CanvasGradient","colorValue","CanvasPattern","abstract","DateAdapter","formats","parse","format","startOf","endOf","_create","override","members","_date","core_adapters","core_ticks","formatters","tickValue","logDelta","tickString","maxTick","logTick","toExponential","numDecimal","logarithmic","remain","valueOrDefault$9","labelsFromTicks","getPixelForGridLine","lineValue","computeTextSize","tick","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","sinRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","defaultConfig","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","generateTicks","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","MIN_SPACING","stepSize","maxNumSpaces","precision","rmin","rmax","spacing","scale_linearbase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","fixedStepSize","ticksAsNumbers","defaultConfig$1","scale_linear","DEFAULT_MIN","DEFAULT_MAX","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","generateTicks$1","exp","significand","tickVal","endExp","endSignificand","minNotZero","lastTick","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","textSize","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","drawingArea","getIndexAngle","hLimits","vLimits","setReductions","getTextAlignForAngle","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawRadiusLine","numberOrZero","scale_radialLinear","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","yCenterOffset","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","buildLookupTable","timestamps","distribution","table","lookup","mid","i0","i1","lo","interpolate$1","skey","tkey","span","toTimestamp","adapter","_adapter","parser","determineStepSize","capacity","milliseconds","determineUnitForAutoTicks","minUnit","determineUnitForFormatting","determineMajorUnit","generate","timeOpts","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","computeOffsets","ticksFromTimestamps","majorUnit","defaultConfig$4","adapters","displayFormat","displayFormats","scale_time","date","timestamp","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","_majorUnit","_offsets","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","category","radialLinear","FORMATS","_id","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","doFill","mapper","p0","p1","d0","d1","plugin_filler","afterDatasetsUpdate","$filler","beforeDatasetDraw","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","drawLegendBox","SQRT2","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","plugin_title","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","AudioBuffer","copyToChannel","chanNum","channel","copyFromChannel","dest","toObject","toAbsoluteIndex","toLength","O","aLen","endPos","isMobileSafari","bufferSource","_native_start","_val","_units","_defaultUnits","toFrequency","toMidi","_expressions","regexp","dot","scalar","_beatsToUnits","_getTimeSignature","_ticksToUnits","hz","_frequencyToUnits","tr","_secondsToUnits","samples","_getBpm","_getPPQ","_now","beats","_noArg","trim","typeName","quantity","expr","matching","toSamples","toMilliseconds","self","2350","btoa","sourceRoot","unescape","encodeURIComponent","499e","u","media","sourceMap","parts","DEBUG","refs","querySelector","styleSheet","cssText","childNodes","ssrId","4abb","locals","shadowMode","4ed8","556c","65d9","Reflect","defineMetadata","getOwnMetadataKeys","getOwnPropertyNames","getOwnMetadata","__proto__","__decorators__","mixins","_init","$options","_componentTag","getOwnPropertyDescriptor","methods","computed","getPrototypeOf","registerHooks","createDecorator","8bbf","ae61","d5ac","df80","fb15","decorate","currentScript","deep","watch","TypeError","ReferenceError","setPrototypeOf","disabled","$emit","ref","class","dotClasses","mousedown","dragStart","$slots","handleClasses","dotStyle","tooltipClasses","tooltipInnerClasses","tooltipStyle","tooltipValue","vue-slider-dot-disabled","vue-slider-dot-focus","focus","vue-slider-dot-handle-disabled","vue-slider-dot-handle-focus","tooltipPlacement","vue-slider-dot-tooltip-show","showTooltip","vue-slider-dot-tooltip-inner-disabled","vue-slider-dot-tooltip-inner-focus","tooltipFormatter","replace","validator","required","Function","P","S","E","R","D","A","V","_","stopPropagation","mark","marksClasses","stepClasses","stepStyle","stepActiveStyle","activeStyle","hideLabel","labelClasses","labelStyle","labelActiveStyle","click","labelClickHandle","vue-slider-mark-active","vue-slider-mark-step-active","vue-slider-mark-label-active","M","C","N","T","documentElement","pageYOffset","clientTop","pageXOffset","clientLeft","targetTouches","pageX","pageY","offsetWidth","offsetHeight","I","keyCode","UP","direction","RIGHT","DOWN","LEFT","END","HOME","PAGE_UP","PAGE_DOWN","L","H","U","F","$","getDecimalLen","getExponent","safeRoundUp","W","getOwnPropertySymbols","nt","G","Y","K","X","done","Z","Q","J","tt","et","rt","ot","VALUE","INTERVAL","MIN","MAX","ORDER","it","dotsPos","dotsValue","order","marks","included","process","adsorb","dotOptions","onError","minRange","maxRange","enableCross","fixed","emitError","setValue","setDotsValue","syncDotsPos","getValueByPos","parsePos","markList","parseValue","minus","divide","toNumber","multiply","plus","getValidPos","getFixedChangePosArr","getLimitRangeChangePosArr","setDotsPos","changePos","minRangeDir","maxRangeDir","isPos","valuePosRange","gap","getValueByIndex","processArray","some","isActiveByPos","getDotRange","getIndexByValue","st","at","ut","lt","states","has","delete","ct","dt","vt","ft","yt","ht","mt","kt","gt","bt","xt","wt","Ot","Pt","St","Et","Rt","Dt","At","None","Drag","Focus","jt","Vt","focusDotIndex","isNotSync","control","initControl","bindEvent","unbindEvent","dragMove","dragEnd","blurHandle","keydownHandle","$el","$watch","every","dots","isDiff","setScale","preventDefault","getPosByEvent","isCrossDot","setDotPos","syncValueByPos","canSort","dragRange","useKeyboard","$refs","contains","clickable","setValueByPos","dotsIndex","getRecentDot","isDisabledByDotIndex","$createElement","$scopedSlots","slot","containerClasses","containerStyles","attrs","aria-hidden","clickHandle","railStyle","renderSlot","tailSize","mainDirection","pressLabel","dot-style","disabledStyle","focusStyle","tooltip-style","tooltipDisabledStyle","tooltipFocusStyle","tooltip-formatter","tooltip-placement","tooltipDirections","dotBaseStyle","animateTime","drag-start","domProps","vue-slider-disabled","dotSize","contained","processStyle","transform","WebkitTransform","components","VueSliderDot","VueSliderMark","inheritAttrs","_t","Mt","Instrument","triggerAttack","triggerRelease","_syncMethod","timePosition","originalMethod","_original_triggerAttack","_original_triggerRelease","triggerAttackRelease","note","velocity","_events","Default","_initialValue","NormalRange","Positive","AudioRange","Decibels","minValue","maxValue","_minOutput","AutomationType","Linear","Exponential","Target","SetValue","Cancel","initialValue","previousVal","_exponentialApproach","_linearInterpolate","_exponentialInterpolate","setRampPoint","currentVal","cancelAndHoldAtTime","linearRampToValueAtTime","exponentialRampToValueAtTime","exponentialRampTo","linearRampTo","targetRampTo","exponentialApproachValueAtTime","timeConstant","setTargetAtTime","setValueCurveAtTime","scaling","segTime","valueAtTime","t0","that","$at","iterated","_i","mapping","bufferLen","_shaper","setMap","normalized","oversample","oversampling","RangeError","Pow","_exp","_expScaler","_expFunc","assign","midi","mtof","pitch","octave","noteToScaleIndex","noteNumber","transpose","harmonize","intervals","ftom","toNote","log2","A4","noteName","scaleIndexToNote","quarterTime","quarters","cbb","cb","c#","cx","dbb","d#","dx","ebb","eb","e#","ex","fbb","f#","fx","gbb","gb","g#","gx","abb","ab","a#","ax","bbb","bb","b#","bx","PulseOscillator","_widthGate","_sawtooth","_thresh","Buffer","_buffer","_reversed","_xhr","onload","url","loaded","load","catch","onerror","promise","buff","err","_removeFromDownloadQueue","abort","numberOfChannels","fromArray","isMultidimensional","toMono","toArray","outputArray","numChannels","channelArray","sample","startSamples","endSamples","replacement","retBuffer","_reverse","rev","_downloadQueue","baseUrl","fromUrl","extension","supportsType","totalProgress","XMLHttpRequest","open","responseType","status","decodeAudioData","response","lengthComputable","send","cancelDownloads","canPlayType","removeEvents","success","fail","$export","AMOscillator","_carrier","_modulator","modulationType","_modulationScale","harmonicity","Multiply","_modulationNode","PWMOscillator","_pulse","modulationFrequency","_vm","_h","_c","_self","_m","staticClass","submit","$event","submitForm","_v","query","href","clickHelpButton","aria-label","textToGraph","showLoading","panel-id","current-panel","currentPanel","helpLinkClicked","_l","jurisdiction","_s","appendJurisdictionCode","errors","_e","chartData","urls","aria-describedby","directives","rawName","expression","checked","_q","percentOrAbs","change","for","countType","sameYAxis","smoothingFactor","modifiers","searchForPoint","formatValue","datasetVersion","datasetDate","author","datasetYear","publication","currentUrl","download","imageDownloadClicked","contextmenu","csvDownloadClicked","jsonDownloadClicked","currentApiQueries","tabindex","keydown","chartKeyDown","chartOptions","styles","chartStyles","minYear","maxYear","role","aria-live","aria-atomic","canvasStatus","number","_n","blur","$forceUpdate","enable-cross","minPossible","maxPossible","$$v","yearSlider","staticRenderFns","_toArray","arrayWithHoles","iterableToArray","nonIterableRest","dataHandler","newData","oldData","$data","newDatasetLabels","oldDatasetLabels","oldLabels","newLabels","oldDatasetKeys","newDatasetKeys","deletionKeys","attribute","deletionKey","renderChart","reactiveData","reactiveProp","generateChart","chartId","chartType","cssClasses","addPlugin","Chart_default","beforeDestroy","LineChart_render","LineChart_staticRenderFns","panelset_render","panelset_staticRenderFns","LineChartvue_type_script_lang_js_","extends","trends_LineChartvue_type_script_lang_js_","component","componentNormalizer","LineChart","panelsetvue_type_script_lang_js_","PanelsetButton","vue_esm","template","panelId","$parent","focusInPanel","onBlur","_this","nextTick","firstFocus","querySelectorAll","PanelsetPanel","focusOnButton","closeButtonClick","closeButtonBlur","vue_shared_panelsetvue_type_script_lang_js_","panelset_component","panelset","search_resultsvue_type_template_id_5f705c6f_render","term","startYear","endYear","results","searchPageUrl","search_resultsvue_type_template_id_5f705c6f_staticRenderFns","search_resultsvue_type_script_lang_js_","CaseResult","case_result","search","searchParams","decision_date_min","decision_date_max","page_size","loadingMessage","api","resp","casesHeader","search_page","utils","trends_search_resultsvue_type_script_lang_js_","search_results_component","search_results","mod","deepCopy","mainvue_type_script_lang_js_","LineExample","LoadingButton","loading_button","VueSlider","vue_slider_component_umd_min_default","SearchResults","ExampleLink","beforeMount","jurisdictions","snippets","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_step$value","slicedToArray","jurisdictionLookup","return","beforeDraw","afterLayout","afterRender","mounted","route","$route","initialQuery","handleRouteUpdate","textToGraphUpdated","handleWindowResize","oldRoute","setUrlParam","graphResults","clampYears","newval","_newval","deselectedTerms","currentLine","selectLine","currentPoint","selectPoint","totalChartHeight","newVal","_this2","urlValues","toValue","clampYear","rawData","toParam","location","$router","currentYear","getFullYear","currentTab","currentHelpPanel","chartLegendHeight","smoothingWindow","previousSameYAxis","screenshotReady","colors","pointStyles","soundsOn","soundAutoplay","soundPlaySpeed","useScales","soundScales","currentSoundScale","synth","synthStopTime","chartOnClick","legendItemOnClick","formatYearRange","_Object$entries","entries","_Object$entries$_i","fullPath","yScaleLabel","startRange","endRange","toPrecision","_ref","getTerms","terms","_i2","_Object$entries2","_Object$entries2$_i","_this3","all","_term$split","_term$split2","firstWord","restWords","endsWith","jur","parseResponse","searchResults","lodash_debounce_default","_this4","newDatasets","dataMinYear","dataMaxYear","colorIndex","colorOffset","fullChartReset","years","_i3","_Object$entries3","_Object$entries3$_i","movingAverage","pointRadius","borderRadius","pointHitRadius","apiResults","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_i5","_Object$entries4","_Object$entries4$_i","gram","jurs","_i6","_Object$entries5","_Object$entries5$_i","jurName","jurData","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","yearData","_i4","_Object$keys","random","totalRange","code","payload","currentTarget","toConsumableArray","flatMap","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_step4$value","doc_count","_iterator4","sync_default","clickLegendItem","toggleSoundsOn","autoplaySound","setCanvasStatus","Synth_default","envelope","attack","_this5","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_step5$value","dispatchEvent","MouseEvent","halfStep","scaledValue","baseNote","octaves","granularity","quantizedValue","halfSteps","_baseNote","_octaves","_halfSteps","setNote","Tone_default","endSounds","targets","termIndex","pointIndex","tagName","trends_mainvue_type_script_lang_js_","main_component","main","Vue","devtools","productionTip","use","VueRouter","router","routes","path","Main","redirect","createConstantSource","ConstantSourceNode","_bufferSource","gainNode","_output","webkitOfflineAudioContext","_native_startRendering","oncomplete","renderedBuffer","_root","_length","IntervalNode","insert","updateHeight","updateMax","_rebalance","_removeNode","_setRoot","_replaceNodeInParent","isLeftChild","temp","balance","getBalance","_rotateLeft","pivotNode","_rotateRight","low","allNodes","traverse","ev","searchAfter","high","_left","_right","anObject","check","proto","buggy","Monophonic","portamento","_triggerEnvelopeAttack","_triggerEnvelopeRelease","getLevelAtTime","portTime","webkitAudioContext","suspend","createGainNode","createDelay","createDelayNode","decodeAudioDataPromise","audioData","Uint32Array","_native_decodeAudioData","_constantSource","quantize","capture","quantTo","subdiv","multiple","ideal","testNotations","power","closest","closestSeconds","notation","notationSeconds","measures","sixteenths","Interval","Degrees","MIDI","BarsBeatsSixteenths","Samples","Hertz","Note","Milliseconds","Seconds","Notation","_unmutedVolume","_initial","getLastState","getNextState","FMOscillator","modulationIndex","OscillatorNode","onended","_startTime","_stopTime","_oscillator","createOscillator","_gain","setPeriodicWave","periodicWave","cancelStop","defined","fails","non","ltrim","RegExp","rtrim","exporter","KEY","ALIAS","FORCE","TYPE","ENDS_WITH","$endsWith","searchString","_mult","_wave","Sine","Triangle","Sawtooth","Square","syncFrequency","unsyncFrequency","coefs","_getRealImaginary","createPeriodicWave","partial","fftSize","periodicWaveSize","real","imag","_inverseFFT","sum","_getInitialValue","twoPi","cof","inheritIfRequired","toPrimitive","gOPN","gOPD","dP","$trim","NUMBER","$Number","Base","BROKEN_COF","TRIM","argument","third","radix","maxCode","charCodeAt","digits","_wrapScheduleMethods","ticksUntilTime","_getTicksUntilEvent","TickSignal","prevEvent","segments","rampVal","segmentDur","val0","val1","getDurationOfTicks","currentTick","getTimeOfTick","sol1","sol2","ticksToTime","when","startTicks","endTicks","OmniOscillator","_sourceType","OmniOscType","Pulse","PWM","Osc","FM","AM","Fat","_createNewOscillator","oscType","OscillatorConstructor","oldOsc","SourceTypeNames","sType","sourceType","mType","AmplitudeEnvelope","Envelope","_sig","eventName","boundCallback","eventList","functions","emitterFunc","decay","sustain","release","_attackCurve","_releaseCurve","attackCurve","releaseCurve","decayCurve","_getCurve","_setCurve","curveDef","_decayCurve","curves","originalAttack","currentValue","attackRate","remainingDistance","decayValue","decayStart","curveLen","cosineCurve","rippleCurve","rippleCurveFreq","sineWave","stairsCurve","sineCurve","bounceCurve","invertCurve","reverseCurve","exponential","bounce","In","Out","cosine","ripple","sine","Synth","oscillator","_tickSource","TickSource","_lastUpdate","_boundLoop","forEachTickBetween","_tickOffset","stopEvent","tmpEvent","lastState","elapsedTicks","periodStartTime","offsetEvent","elapsedSeconds","absoluteTicks","lastStateEvent","ticksAtStart"],"mappings":"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YACAC,UAAA,aACAC,KAAA,cACAC,MAAA,UACAC,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACAC,IAAA,UACAC,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAC,OAAA,YACAC,YAAA,cAMAe,GAAA,CACAC,WACAC,WACAC,UACAC,UACAC,UACAC,YAEAC,aACAC,aACAC,cACAC,iBACAC,kBACAC,aACAC,cACAC,aACAlL,YAGA,SAAAqK,GAAAc,GACA,GAAAA,EAAA,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","file":"js/trends.6764418f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"trends\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/dist/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([5,\"chunk-common\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","define([\"../core/Tone\", \"../core/Transport\", \"../component/Volume\", \"../core/Master\", \"../type/Type\",\n\t\"../core/TimelineState\", \"../signal/Signal\", \"../core/AudioNode\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Base class for sources. Sources have start/stop methods\n\t *          and the ability to be synced to the\n\t *          start/stop of Tone.Transport.\n\t *\n\t *  @constructor\n\t *  @extends {Tone.AudioNode}\n\t *  @example\n\t * //Multiple state change events can be chained together,\n\t * //but must be set in the correct order and with ascending times\n\t *\n\t * // OK\n\t * state.start().stop(\"+0.2\");\n\t * // AND\n\t * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n\t *\n\t * // BAD\n\t * state.stop(\"+0.2\").start();\n\t * // OR\n\t * state.start(\"+0.3\").stop(\"+0.2\");\n\t *\n\t */\n\tTone.Source = function(options){\n\n\t\toptions = Tone.defaultArg(options, Tone.Source.defaults);\n\t\tTone.AudioNode.call(this);\n\n\t\t/**\n\t\t *  The output volume node\n\t\t *  @type  {Tone.Volume}\n\t\t *  @private\n\t\t */\n\t\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t\t/**\n\t\t * The volume of the output in decibels.\n\t\t * @type {Decibels}\n\t\t * @signal\n\t\t * @example\n\t\t * source.volume.value = -6;\n\t\t */\n\t\tthis.volume = this._volume.volume;\n\t\tthis._readOnly(\"volume\");\n\n\t\t/**\n\t\t * \tKeep track of the scheduled state.\n\t\t *  @type {Tone.TimelineState}\n\t\t *  @private\n\t\t */\n\t\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\t\tthis._state.memory = 100;\n\n\t\t/**\n\t\t *  The synced `start` callback function from the transport\n\t\t *  @type {Function}\n\t\t *  @private\n\t\t */\n\t\tthis._synced = false;\n\n\t\t/**\n\t\t *  Keep track of all of the scheduled event ids\n\t\t *  @type  {Array}\n\t\t *  @private\n\t\t */\n\t\tthis._scheduled = [];\n\n\t\t//make the output explicitly stereo\n\t\tthis._volume.output.output.channelCount = 2;\n\t\tthis._volume.output.output.channelCountMode = \"explicit\";\n\t\t//mute initially\n\t\tthis.mute = options.mute;\n\t};\n\n\tTone.extend(Tone.Source, Tone.AudioNode);\n\n\t/**\n\t *  The default parameters\n\t *  @static\n\t *  @const\n\t *  @type {Object}\n\t */\n\tTone.Source.defaults = {\n\t\t\"volume\" : 0,\n\t\t\"mute\" : false\n\t};\n\n\t/**\n\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t *  @type {Tone.State}\n\t *  @readOnly\n\t *  @memberOf Tone.Source#\n\t *  @name state\n\t */\n\tObject.defineProperty(Tone.Source.prototype, \"state\", {\n\t\tget : function(){\n\t\t\tif (this._synced){\n\t\t\t\tif (Tone.Transport.state === Tone.State.Started){\n\t\t\t\t\treturn this._state.getValueAtTime(Tone.Transport.seconds);\n\t\t\t\t} else {\n\t\t\t\t\treturn Tone.State.Stopped;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn this._state.getValueAtTime(this.now());\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * Mute the output.\n\t * @memberOf Tone.Source#\n\t * @type {boolean}\n\t * @name mute\n\t * @example\n\t * //mute the output\n\t * source.mute = true;\n\t */\n\tObject.defineProperty(Tone.Source.prototype, \"mute\", {\n\t\tget : function(){\n\t\t\treturn this._volume.mute;\n\t\t},\n\t\tset : function(mute){\n\t\t\tthis._volume.mute = mute;\n\t\t}\n\t});\n\n\t//overwrite these functions\n\tTone.Source.prototype._start = Tone.noOp;\n\tTone.Source.prototype.restart = Tone.noOp;\n\tTone.Source.prototype._stop = Tone.noOp;\n\n\t/**\n\t *  Start the source at the specified time. If no time is given,\n\t *  start the source now.\n\t *  @param  {Time} [time=now] When the source should be started.\n\t *  @returns {Tone.Source} this\n\t *  @example\n\t * source.start(\"+0.5\"); //starts the source 0.5 seconds from now\n\t */\n\tTone.Source.prototype.start = function(time, offset, duration){\n\t\tif (Tone.isUndef(time) && this._synced){\n\t\t\ttime = Tone.Transport.seconds;\n\t\t} else {\n\t\t\ttime = this.toSeconds(time);\n\t\t}\n\t\t//if it's started, stop it and restart it\n\t\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\t\tthis._state.cancel(time);\n\t\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\t\tthis.restart(time, offset, duration);\n\t\t} else {\n\t\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\t\tif (this._synced){\n\t\t\t\t// add the offset time to the event\n\t\t\t\tvar event = this._state.get(time);\n\t\t\t\tevent.offset = Tone.defaultArg(offset, 0);\n\t\t\t\tevent.duration = duration;\n\t\t\t\tvar sched = Tone.Transport.schedule(function(t){\n\t\t\t\t\tthis._start(t, offset, duration);\n\t\t\t\t}.bind(this), time);\n\t\t\t\tthis._scheduled.push(sched);\n\n\t\t\t\t//if it's already started\n\t\t\t\tif (Tone.Transport.state === Tone.State.Started){\n\t\t\t\t\tthis._syncedStart(this.now(), Tone.Transport.seconds);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._start.apply(this, arguments);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Stop the source at the specified time. If no time is given,\n\t *  stop the source now.\n\t *  @param  {Time} [time=now] When the source should be stopped.\n\t *  @returns {Tone.Source} this\n\t *  @example\n\t * source.stop(); // stops the source immediately\n\t */\n\tTone.Source.prototype.stop = function(time){\n\t\tif (Tone.isUndef(time) && this._synced){\n\t\t\ttime = Tone.Transport.seconds;\n\t\t} else {\n\t\t\ttime = this.toSeconds(time);\n\t\t}\n\t\tif (!this._synced){\n\t\t\tthis._stop.apply(this, arguments);\n\t\t} else {\n\t\t\tvar sched = Tone.Transport.schedule(this._stop.bind(this), time);\n\t\t\tthis._scheduled.push(sched);\n\t\t}\n\t\tthis._state.cancel(time);\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Sync the source to the Transport so that all subsequent\n\t *  calls to `start` and `stop` are synced to the TransportTime\n\t *  instead of the AudioContext time.\n\t *\n\t *  @returns {Tone.Source} this\n\t *  @example\n\t * //sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n\t * source.sync().start(0).stop(0.3);\n\t * //start the transport.\n\t * Tone.Transport.start();\n\t *\n\t *  @example\n\t * //start the transport with an offset and the sync'ed sources\n\t * //will start in the correct position\n\t * source.sync().start(0.1);\n\t * //the source will be invoked with an offset of 0.4\n\t * Tone.Transport.start(\"+0.5\", 0.5);\n\t */\n\tTone.Source.prototype.sync = function(){\n\t\tthis._synced = true;\n\t\tthis._syncedStart = function(time, offset){\n\t\t\tif (offset > 0){\n\t\t\t\t// get the playback state at that time\n\t\t\t\tvar stateEvent = this._state.get(offset);\n\t\t\t\t// listen for start events which may occur in the middle of the sync'ed time\n\t\t\t\tif (stateEvent && stateEvent.state === Tone.State.Started && stateEvent.time !== offset){\n\t\t\t\t\t// get the offset\n\t\t\t\t\tvar startOffset = offset - this.toSeconds(stateEvent.time);\n\t\t\t\t\tvar duration;\n\t\t\t\t\tif (stateEvent.duration){\n\t\t\t\t\t\tduration = this.toSeconds(stateEvent.duration) - startOffset;\n\t\t\t\t\t}\n\t\t\t\t\tthis._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n\t\t\t\t}\n\t\t\t}\n\t\t}.bind(this);\n\t\tthis._syncedStop = function(time){\n\t\t\tvar seconds = Tone.Transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));\n\t\t\tif (this._state.getValueAtTime(seconds) === Tone.State.Started){\n\t\t\t\tthis._stop(time);\n\t\t\t}\n\t\t}.bind(this);\n\t\tTone.Transport.on(\"start loopStart\", this._syncedStart);\n\t\tTone.Transport.on(\"stop pause loopEnd\", this._syncedStop);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Unsync the source to the Transport. See Tone.Source.sync\n\t *  @returns {Tone.Source} this\n\t */\n\tTone.Source.prototype.unsync = function(){\n\t\tif (this._synced){\n\t\t\tTone.Transport.off(\"stop pause loopEnd\", this._syncedStop);\n\t\t\tTone.Transport.off(\"start loopStart\", this._syncedStart);\n\t\t}\n\t\tthis._synced = false;\n\t\t// clear all of the scheduled ids\n\t\tfor (var i = 0; i < this._scheduled.length; i++){\n\t\t\tvar id = this._scheduled[i];\n\t\t\tTone.Transport.clear(id);\n\t\t}\n\t\tthis._scheduled = [];\n\t\tthis._state.cancel(0);\n\t\treturn this;\n\t};\n\n\t/**\n\t *\tClean up.\n\t *  @return {Tone.Source} this\n\t */\n\tTone.Source.prototype.dispose = function(){\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis.unsync();\n\t\tthis._scheduled = null;\n\t\tthis._writable(\"volume\");\n\t\tthis._volume.dispose();\n\t\tthis._volume = null;\n\t\tthis.volume = null;\n\t\tthis._state.dispose();\n\t\tthis._state = null;\n\t};\n\n\treturn Tone.Source;\n});\n","define([\"../core/Tone\", \"../shim/AudioContext\"], function(Tone){\n\n\tif (Tone.supported && !Tone.global.AudioContext.prototype._native_createWaveShaper){\n\n\t\t//fixes safari only bug which is still present in 11\n\t\tvar ua = navigator.userAgent.toLowerCase();\n\t\tvar isSafari = ua.includes(\"safari\") && !ua.includes(\"chrome\");\n\t\tif (isSafari){\n\n\t\t\tvar WaveShaperNode = function(context){\n\n\t\t\t\tthis._internalNode = this.input = this.output = context._native_createWaveShaper();\n\n\t\t\t\tthis._curve = null;\n\n\t\t\t\tfor (var prop in this._internalNode){\n\t\t\t\t\tthis._defineProperty(this._internalNode, prop);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tObject.defineProperty(WaveShaperNode.prototype, \"curve\", {\n\t\t\t\t\"get\" : function(){\n\t\t\t\t\treturn this._curve;\n\t\t\t\t},\n\t\t\t\t\"set\" : function(curve){\n\t\t\t\t\tthis._curve = curve;\n\t\t\t\t\tvar array = new Float32Array(curve.length+1);\n\t\t\t\t\tarray.set(curve, 1);\n\t\t\t\t\tarray[0] = curve[0];\n\t\t\t\t\tthis._internalNode.curve = array;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tWaveShaperNode.prototype._defineProperty = function(context, prop){\n\t\t\t\tif (Tone.isUndef(this[prop])){\n\t\t\t\t\tObject.defineProperty(this, prop, {\n\t\t\t\t\t\t\"get\" : function(){\n\t\t\t\t\t\t\tif (typeof context[prop] === \"function\"){\n\t\t\t\t\t\t\t\treturn context[prop].bind(context);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn context[prop];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"set\" : function(val){\n\t\t\t\t\t\t\tcontext[prop] = val;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tTone.global.AudioContext.prototype._native_createWaveShaper = Tone.global.AudioContext.prototype.createWaveShaper;\n\t\t\tTone.global.AudioContext.prototype.createWaveShaper = function(){\n\t\t\t\treturn new WaveShaperNode(this);\n\t\t\t};\n\t\t}\n\t}\n\n});\n","define([\"../core/Tone\", \"../core/Emitter\", \"../core/Timeline\", \"../shim/AudioContext\"], function(Tone){\n\n\t/**\n\t *  @class Wrapper around the native AudioContext.\n\t *  @extends {Tone.Emitter}\n\t *  @param {AudioContext=} context optionally pass in a context\n\t */\n\tTone.Context = function(){\n\n\t\tTone.Emitter.call(this);\n\n\t\tvar options = Tone.defaults(arguments, [\"context\"], Tone.Context);\n\n\t\tif (!options.context){\n\t\t\toptions.context = new Tone.global.AudioContext();\n\t\t\tif (!options.context){\n\t\t\t\tthrow new Error(\"could not create AudioContext. Possibly too many AudioContexts running already.\");\n\t\t\t}\n\t\t}\n\t\tthis._context = options.context;\n\t\t//make sure it's not an AudioContext wrapper\n\t\twhile (this._context.rawContext){\n\t\t\tthis._context = this._context.rawContext;\n\t\t}\n\t\t// extend all of the methods\n\t\tfor (var prop in this._context){\n\t\t\tthis._defineProperty(this._context, prop);\n\t\t}\n\n\t\t/**\n\t\t *  The default latency hint\n\t\t *  @type  {String}\n\t\t *  @private\n\t\t */\n\t\tthis._latencyHint = options.latencyHint;\n\n\t\t/**\n\t\t *  An object containing all of the constants AudioBufferSourceNodes\n\t\t *  @type  {Object}\n\t\t *  @private\n\t\t */\n\t\tthis._constants = {};\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t// WORKER\n\t\t///////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  The amount of time events are scheduled\n\t\t *  into the future\n\t\t *  @type  {Number}\n\t\t */\n\t\tthis.lookAhead = options.lookAhead;\n\n\t\t/**\n\t\t *  A reference to the actual computed update interval\n\t\t *  @type  {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._computedUpdateInterval = 0;\n\n\t\t/**\n\t\t *  A reliable callback method\n\t\t *  @private\n\t\t *  @type  {Ticker}\n\t\t */\n\t\tthis._ticker = new Ticker(this.emit.bind(this, \"tick\"), options.clockSource, options.updateInterval);\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t// TIMEOUTS\n\t\t///////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  All of the setTimeout events.\n\t\t *  @type  {Tone.Timeline}\n\t\t *  @private\n\t\t */\n\t\tthis._timeouts = new Tone.Timeline();\n\n\t\t/**\n\t\t *  The timeout id counter\n\t\t *  @private\n\t\t *  @type {Number}\n\t\t */\n\t\tthis._timeoutIds = 0;\n\n\t\tthis.on(\"tick\", this._timeoutLoop.bind(this));\n\n\t\t//forward state change events\n\t\tthis._context.onstatechange = function(e){\n\t\t\tthis.emit(\"statechange\", e);\n\t\t}.bind(this);\n\t};\n\n\tTone.extend(Tone.Context, Tone.Emitter);\n\tTone.Emitter.mixin(Tone.Context);\n\n\t/**\n\t * defaults\n\t * @static\n\t * @type {Object}\n\t */\n\tTone.Context.defaults = {\n\t\t\"clockSource\" : \"worker\",\n\t\t\"latencyHint\" : \"interactive\",\n\t\t\"lookAhead\" : 0.1,\n\t\t\"updateInterval\" : 0.03\n\t};\n\n\t/**\n\t * Is an instanceof Tone.Context\n\t * @type {Boolean}\n\t */\n\tTone.Context.prototype.isContext = true;\n\n\t/**\n\t *  Define a property on this Tone.Context.\n\t *  This is used to extend the native AudioContext\n\t *  @param  {AudioContext}  context\n\t *  @param  {String}  prop\n\t *  @private\n\t */\n\tTone.Context.prototype._defineProperty = function(context, prop){\n\t\tif (Tone.isUndef(this[prop])){\n\t\t\tObject.defineProperty(this, prop, {\n\t\t\t\t\"get\" : function(){\n\t\t\t\t\tif (typeof context[prop] === \"function\"){\n\t\t\t\t\t\treturn context[prop].bind(context);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn context[prop];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"set\" : function(val){\n\t\t\t\t\tcontext[prop] = val;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t *  The current audio context time\n\t *  @return  {Number}\n\t */\n\tTone.Context.prototype.now = function(){\n\t\treturn this._context.currentTime + this.lookAhead;\n\t};\n\n\t/**\n\t *  The audio output destination. Alias for Tone.Master\n\t *  @readyOnly\n\t *  @type  {Tone.Master}\n\t */\n\tObject.defineProperty(Tone.Context.prototype, \"destination\", {\n\t\t\"get\" : function(){\n\t\t\tif (!this.master){\n\t\t\t\treturn this._context.destination;\n\t\t\t} else {\n\t\t\t\treturn this.master;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  Starts the audio context from a suspended state. This is required\n\t *  to initially start the AudioContext.\n\t *  @return  {Promise}\n\t */\n\tTone.Context.prototype.resume = function(){\n\t\tif (this._context.state === \"suspended\" && this._context instanceof AudioContext){\n\t\t\treturn this._context.resume();\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t};\n\n\t/**\n\t *  Promise which is invoked when the context is running.\n\t *  Tries to resume the context if it's not started.\n\t *  @return  {Promise}\n\t */\n\tTone.Context.prototype.close = function(){\n\t\tvar closePromise = Promise.resolve();\n\t\t//never close the global Tone.Context\n\t\tif (this !== Tone.global.TONE_AUDIO_CONTEXT){\n\t\t\tclosePromise = this.rawContext.close();\n\t\t}\n\t\treturn closePromise.then(function(){\n\t\t\tTone.Context.emit(\"close\", this);\n\t\t}.bind(this));\n\t};\n\n\t/**\n\t *  Generate a looped buffer at some constant value.\n\t *  @param  {Number}  val\n\t *  @return  {BufferSourceNode}\n\t */\n\tTone.Context.prototype.getConstant = function(val){\n\t\tif (this._constants[val]){\n\t\t\treturn this._constants[val];\n\t\t} else {\n\t\t\tvar buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n\t\t\tvar arr = buffer.getChannelData(0);\n\t\t\tfor (var i = 0; i < arr.length; i++){\n\t\t\t\tarr[i] = val;\n\t\t\t}\n\t\t\tvar constant = this._context.createBufferSource();\n\t\t\tconstant.channelCount = 1;\n\t\t\tconstant.channelCountMode = \"explicit\";\n\t\t\tconstant.buffer = buffer;\n\t\t\tconstant.loop = true;\n\t\t\tconstant.start(0);\n\t\t\tthis._constants[val] = constant;\n\t\t\treturn constant;\n\t\t}\n\t};\n\n\t/**\n\t *  The private loop which keeps track of the context scheduled timeouts\n\t *  Is invoked from the clock source\n\t *  @private\n\t */\n\tTone.Context.prototype._timeoutLoop = function(){\n\t\tvar now = this.now();\n\t\twhile (this._timeouts && this._timeouts.length && this._timeouts.peek().time <= now){\n\t\t\tthis._timeouts.shift().callback();\n\t\t}\n\t};\n\n\t/**\n\t *  A setTimeout which is gaurenteed by the clock source.\n\t *  Also runs in the offline context.\n\t *  @param  {Function}  fn       The callback to invoke\n\t *  @param  {Seconds}    timeout  The timeout in seconds\n\t *  @returns {Number} ID to use when invoking Tone.Context.clearTimeout\n\t */\n\tTone.Context.prototype.setTimeout = function(fn, timeout){\n\t\tthis._timeoutIds++;\n\t\tvar now = this.now();\n\t\tthis._timeouts.add({\n\t\t\t\"callback\" : fn,\n\t\t\t\"time\" : now + timeout,\n\t\t\t\"id\" : this._timeoutIds\n\t\t});\n\t\treturn this._timeoutIds;\n\t};\n\n\t/**\n\t *  Clears a previously scheduled timeout with Tone.context.setTimeout\n\t *  @param  {Number}  id  The ID returned from setTimeout\n\t *  @return  {Tone.Context}  this\n\t */\n\tTone.Context.prototype.clearTimeout = function(id){\n\t\tthis._timeouts.forEach(function(event){\n\t\t\tif (event.id === id){\n\t\t\t\tthis.remove(event);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t};\n\n\t/**\n\t *  How often the Web Worker callback is invoked.\n\t *  This number corresponds to how responsive the scheduling\n\t *  can be. Context.updateInterval + Context.lookAhead gives you the\n\t *  total latency between scheduling an event and hearing it.\n\t *  @type {Number}\n\t *  @memberOf Tone.Context#\n\t *  @name updateInterval\n\t */\n\tObject.defineProperty(Tone.Context.prototype, \"updateInterval\", {\n\t\t\"get\" : function(){\n\t\t\treturn this._ticker.updateInterval;\n\t\t},\n\t\t\"set\" : function(interval){\n\t\t\tthis._ticker.updateInterval = interval;\n\t\t}\n\t});\n\n\t/**\n\t *  The unwrapped AudioContext.\n\t *  @type {AudioContext}\n\t *  @memberOf Tone.Context#\n\t *  @name rawContext\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.Context.prototype, \"rawContext\", {\n\t\t\"get\" : function(){\n\t\t\treturn this._context;\n\t\t}\n\t});\n\n\t/**\n\t *  What the source of the clock is, either \"worker\" (Web Worker [default]),\n\t *  \"timeout\" (setTimeout), or \"offline\" (none).\n\t *  @type {String}\n\t *  @memberOf Tone.Context#\n\t *  @name clockSource\n\t */\n\tObject.defineProperty(Tone.Context.prototype, \"clockSource\", {\n\t\t\"get\" : function(){\n\t\t\treturn this._ticker.type;\n\t\t},\n\t\t\"set\" : function(type){\n\t\t\tthis._ticker.type = type;\n\t\t}\n\t});\n\n\t/**\n\t *  The type of playback, which affects tradeoffs between audio\n\t *  output latency and responsiveness.\n\t *\n\t *  In addition to setting the value in seconds, the latencyHint also\n\t *  accepts the strings \"interactive\" (prioritizes low latency),\n\t *  \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n\t *  latency and performance), and \"fastest\" (lowest latency, might glitch more often).\n\t *  @type {String|Seconds}\n\t *  @memberOf Tone.Context#\n\t *  @name latencyHint\n\t *  @example\n\t * //set the lookAhead to 0.3 seconds\n\t * Tone.context.latencyHint = 0.3;\n\t */\n\tObject.defineProperty(Tone.Context.prototype, \"latencyHint\", {\n\t\t\"get\" : function(){\n\t\t\treturn this._latencyHint;\n\t\t},\n\t\t\"set\" : function(hint){\n\t\t\tvar lookAhead = hint;\n\t\t\tthis._latencyHint = hint;\n\t\t\tif (Tone.isString(hint)){\n\t\t\t\tswitch (hint){\n\t\t\t\t\tcase \"interactive\" :\n\t\t\t\t\t\tlookAhead = 0.1;\n\t\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"playback\" :\n\t\t\t\t\t\tlookAhead = 0.8;\n\t\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"balanced\" :\n\t\t\t\t\t\tlookAhead = 0.25;\n\t\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"fastest\" :\n\t\t\t\t\t\tthis._context.latencyHint = \"interactive\";\n\t\t\t\t\t\tlookAhead = 0.01;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.lookAhead = lookAhead;\n\t\t\tthis.updateInterval = lookAhead/3;\n\t\t}\n\t});\n\n\t/**\n\t *  Unlike other dispose methods, this returns a Promise\n\t *  which executes when the context is closed and disposed\n\t *  @returns {Promise} this\n\t */\n\tTone.Context.prototype.dispose = function(){\n\t\treturn this.close().then(function(){\n\t\t\tTone.Emitter.prototype.dispose.call(this);\n\t\t\tthis._ticker.dispose();\n\t\t\tthis._ticker = null;\n\t\t\tthis._timeouts.dispose();\n\t\t\tthis._timeouts = null;\n\t\t\tfor (var con in this._constants){\n\t\t\t\tthis._constants[con].disconnect();\n\t\t\t}\n\t\t\tthis._constants = null;\n\t\t}.bind(this));\n\t};\n\n\t/**\n\t * @class A class which provides a reliable callback using either\n\t *        a Web Worker, or if that isn't supported, falls back to setTimeout.\n\t * @private\n\t */\n\tvar Ticker = function(callback, type, updateInterval){\n\n\t\t/**\n\t\t * Either \"worker\" or \"timeout\"\n\t\t * @type {String}\n\t\t * @private\n\t\t */\n\t\tthis._type = type;\n\n\t\t/**\n\t\t * The update interval of the worker\n\t\t * @private\n\t\t * @type {Number}\n\t\t */\n\t\tthis._updateInterval = updateInterval;\n\n\t\t/**\n\t\t * The callback to invoke at regular intervals\n\t\t * @type {Function}\n\t\t * @private\n\t\t */\n\t\tthis._callback = Tone.defaultArg(callback, Tone.noOp);\n\n\t\t//create the clock source for the first time\n\t\tthis._createClock();\n\t};\n\n\t/**\n\t * The possible ticker types\n\t * @private\n\t * @type {Object}\n\t */\n\tTicker.Type = {\n\t\t\"Worker\" : \"worker\",\n\t\t\"Timeout\" : \"timeout\",\n\t\t\"Offline\" : \"offline\"\n\t};\n\n\t/**\n\t *  Generate a web worker\n\t *  @return  {WebWorker}\n\t *  @private\n\t */\n\tTicker.prototype._createWorker = function(){\n\n\t\t//URL Shim\n\t\tTone.global.URL = Tone.global.URL || Tone.global.webkitURL;\n\n\t\tvar blob = new Blob([\n\t\t\t//the initial timeout time\n\t\t\t\"var timeoutTime = \"+(this._updateInterval * 1000).toFixed(1)+\";\" +\n\t\t\t//onmessage callback\n\t\t\t\"self.onmessage = function(msg){\" +\n\t\t\t\"\ttimeoutTime = parseInt(msg.data);\" +\n\t\t\t\"};\" +\n\t\t\t//the tick function which posts a message\n\t\t\t//and schedules a new tick\n\t\t\t\"function tick(){\" +\n\t\t\t\"\tsetTimeout(tick, timeoutTime);\" +\n\t\t\t\"\tself.postMessage('tick');\" +\n\t\t\t\"}\" +\n\t\t\t//call tick initially\n\t\t\t\"tick();\"\n\t\t]);\n\t\tvar blobUrl = URL.createObjectURL(blob);\n\t\tvar worker = new Worker(blobUrl);\n\n\t\tworker.onmessage = this._callback.bind(this);\n\n\t\tthis._worker = worker;\n\t};\n\n\t/**\n\t * Create a timeout loop\n\t * @private\n\t */\n\tTicker.prototype._createTimeout = function(){\n\t\tthis._timeout = setTimeout(function(){\n\t\t\tthis._createTimeout();\n\t\t\tthis._callback();\n\t\t}.bind(this), this._updateInterval * 1000);\n\t};\n\n\t/**\n\t * Create the clock source.\n\t * @private\n\t */\n\tTicker.prototype._createClock = function(){\n\t\tif (this._type === Ticker.Type.Worker){\n\t\t\ttry {\n\t\t\t\tthis._createWorker();\n\t\t\t} catch (e){\n\t\t\t\t// workers not supported, fallback to timeout\n\t\t\t\tthis._type = Ticker.Type.Timeout;\n\t\t\t\tthis._createClock();\n\t\t\t}\n\t\t} else if (this._type === Ticker.Type.Timeout){\n\t\t\tthis._createTimeout();\n\t\t}\n\t};\n\n\t/**\n\t * @memberOf Ticker#\n\t * @type {Number}\n\t * @name updateInterval\n\t * @private\n\t */\n\tObject.defineProperty(Ticker.prototype, \"updateInterval\", {\n\t\t\"get\" : function(){\n\t\t\treturn this._updateInterval;\n\t\t},\n\t\t\"set\" : function(interval){\n\t\t\tthis._updateInterval = Math.max(interval, 128/44100);\n\t\t\tif (this._type === Ticker.Type.Worker){\n\t\t\t\tthis._worker.postMessage(Math.max(interval * 1000, 1));\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The type of the ticker, either a worker or a timeout\n\t * @memberOf Ticker#\n\t * @type {Number}\n\t * @name type\n\t * @private\n\t */\n\tObject.defineProperty(Ticker.prototype, \"type\", {\n\t\t\"get\" : function(){\n\t\t\treturn this._type;\n\t\t},\n\t\t\"set\" : function(type){\n\t\t\tthis._disposeClock();\n\t\t\tthis._type = type;\n\t\t\tthis._createClock();\n\t\t}\n\t});\n\n\t/**\n\t * Clean up the current clock source\n\t * @private\n\t */\n\tTicker.prototype._disposeClock = function(){\n\t\tif (this._timeout){\n\t\t\tclearTimeout(this._timeout);\n\t\t\tthis._timeout = null;\n\t\t}\n\t\tif (this._worker){\n\t\t\tthis._worker.terminate();\n\t\t\tthis._worker.onmessage = null;\n\t\t\tthis._worker = null;\n\t\t}\n\t};\n\n\t/**\n\t * Clean up\n\t * @private\n\t */\n\tTicker.prototype.dispose = function(){\n\t\tthis._disposeClock();\n\t\tthis._callback = null;\n\t};\n\n\t/**\n\t *  Adds connect/disconnect methods\n\t *  @private\n\t */\n\tTone.getContext(function(){\n\n\t\tvar nativeConnect = AudioNode.prototype.connect;\n\t\tvar nativeDisconnect = AudioNode.prototype.disconnect;\n\n\t\t//replace the old connect method\n\t\tfunction toneConnect(B, outNum, inNum){\n\t\t\tif (B.input){\n\t\t\t\tinNum = Tone.defaultArg(inNum, 0);\n\t\t\t\tif (Tone.isArray(B.input)){\n\t\t\t\t\treturn this.connect(B.input[inNum]);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.connect(B.input, outNum, inNum);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tif (B instanceof AudioNode){\n\t\t\t\t\t\tnativeConnect.call(this, B, outNum, inNum);\n\t\t\t\t\t\treturn B;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnativeConnect.call(this, B, outNum);\n\t\t\t\t\t\treturn B;\n\t\t\t\t\t}\n\t\t\t\t} catch (e){\n\t\t\t\t\tthrow new Error(\"error connecting to node: \"+B+\"\\n\"+e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//replace the old disconnect method\n\t\tfunction toneDisconnect(B, outNum, inNum){\n\t\t\tif (B && B.input && Tone.isArray(B.input)){\n\t\t\t\tinNum = Tone.defaultArg(inNum, 0);\n\t\t\t\tthis.disconnect(B.input[inNum], outNum, 0);\n\t\t\t} else if (B && B.input){\n\t\t\t\tthis.disconnect(B.input, outNum, inNum);\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tif (B instanceof AudioParam){\n\t\t\t\t\t\tnativeDisconnect.call(this, B, outNum);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnativeDisconnect.apply(this, arguments);\n\t\t\t\t\t}\n\t\t\t\t} catch (e){\n\t\t\t\t\tthrow new Error(\"error disconnecting node: \"+B+\"\\n\"+e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (AudioNode.prototype.connect !== toneConnect){\n\t\t\tAudioNode.prototype.connect = toneConnect;\n\t\t\tAudioNode.prototype.disconnect = toneDisconnect;\n\t\t}\n\t});\n\n\t// set the audio context initially, and if one is not already created\n\tif (Tone.supported && !Tone.initialized){\t\t\t\n\t\tif (!Tone.global.TONE_AUDIO_CONTEXT){\n\t\t\tTone.global.TONE_AUDIO_CONTEXT = new Tone.Context();\n\t\t}\n\t\tTone.context = Tone.global.TONE_AUDIO_CONTEXT;\n\n\t\t// log on first initialization\n\t\t// allow optional silencing of this log\n\t\tif (!Tone.global.TONE_SILENCE_VERSION_LOGGING){\n\t\t\tvar prefix = \"v\";\n\t\t\tif (Tone.version === \"dev\"){\n\t\t\t\tprefix = \"\";\n\t\t\t}\n\t\t\tvar printString = \" * Tone.js \" + prefix + Tone.version + \" * \"; \n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(\"%c\" + printString, \"background: #000; color: #fff\");\n\t\t}\n\t} else if (!Tone.supported){\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.warn(\"This browser does not support Tone.js\");\n\t}\n\n\treturn Tone.Context;\n});\n","define([\"../core/Tone\", \"../signal/WaveShaper\", \"../signal/Signal\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1]. \n\t *         See Tone.GainToAudio.\n\t *\n\t *  @extends {Tone.SignalBase}\n\t *  @constructor\n\t *  @example\n\t *  var a2g = new Tone.AudioToGain();\n\t */\n\tTone.AudioToGain = function(){\n\n\t\tTone.SignalBase.call(this);\n\t\t/**\n\t\t *  @type {WaveShaperNode}\n\t\t *  @private\n\t\t */\n\t\tthis._norm = this.input = this.output = new Tone.WaveShaper(function(x){\n\t\t\treturn (x + 1) / 2;\n\t\t});\n\t};\n\n\tTone.extend(Tone.AudioToGain, Tone.SignalBase);\n\n\t/**\n\t *  clean up\n\t *  @returns {Tone.AudioToGain} this\n\t */\n\tTone.AudioToGain.prototype.dispose = function(){\n\t\tTone.SignalBase.prototype.dispose.call(this);\n\t\tthis._norm.dispose();\n\t\tthis._norm = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.AudioToGain;\n});\n","define([\"../core/Tone\", \"../core/Context\"], function(Tone){\n\n\t/**\n\t *  @class Tone.AudioNode is the base class for classes which process audio.\n\t *         AudioNodes have inputs and outputs.\n\t *  @param\t{AudioContext=} context\tThe audio context to use with the class\n\t *  @extends {Tone}\n\t */\n\tTone.AudioNode = function(){\n\t\tTone.call(this);\n\n\t\t//use the default context if one is not passed in\n\t\tvar options = Tone.defaults(arguments, [\"context\"], {\n\t\t\t\"context\" : Tone.context\n\t\t});\n\n\t\t/**\n\t\t * The AudioContext of this instance\n\t\t * @private\n\t\t * @type {AudioContext}\n\t\t */\n\t\tthis._context = options.context;\n\t};\n\n\tTone.extend(Tone.AudioNode);\n\n\t/**\n\t * Get the audio context belonging to this instance.\n\t * @type {Tone.Context}\n\t * @memberOf Tone.AudioNode#\n\t * @name context\n\t * @readOnly\n\t */\n\tObject.defineProperty(Tone.AudioNode.prototype, \"context\", {\n\t\tget : function(){\n\t\t\treturn this._context;\n\t\t}\n\t});\n\n\t/**\n\t *  Create input and outputs for this object.\n\t *  @param  {Number}  [input=0]   The number of inputs\n\t *  @param  {Number}  [outputs=0]  The number of outputs\n\t *  @return  {Tone.AudioNode}  this\n\t *  @private\n\t */\n\tTone.AudioNode.prototype.createInsOuts = function(inputs, outputs){\n\n\t\tif (inputs === 1){\n\t\t\tthis.input = this.context.createGain();\n\t\t} else if (inputs > 1){\n\t\t\tthis.input = new Array(inputs);\n\t\t}\n\n\t\tif (outputs === 1){\n\t\t\tthis.output = this.context.createGain();\n\t\t} else if (outputs > 1){\n\t\t\tthis.output = new Array(outputs);\n\t\t}\n\t};\n\n\t/**\n\t *  channelCount is the number of channels used when up-mixing and down-mixing\n\t *  connections to any inputs to the node. The default value is 2 except for\n\t *  specific nodes where its value is specially determined.\n\t *\n\t *  @memberof Tone.AudioNode#\n\t *  @type {Number}\n\t *  @name channelCount\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.AudioNode.prototype, \"channelCount\", {\n\t\tget : function(){\n\t\t\treturn this.output.channelCount;\n\t\t},\n\t\tset : function(c){\n\t\t\treturn this.output.channelCount = c;\n\t\t}\n\t});\n\n\t/**\n\t *  channelCountMode determines how channels will be counted when up-mixing and\n\t *  down-mixing connections to any inputs to the node.\n\t *  The default value is \"max\". This attribute has no effect for nodes with no inputs.\n\t *  @memberof Tone.AudioNode#\n\t *  @type {String}\n\t *  @name channelCountMode\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.AudioNode.prototype, \"channelCountMode\", {\n\t\tget : function(){\n\t\t\treturn this.output.channelCountMode;\n\t\t},\n\t\tset : function(m){\n\t\t\treturn this.output.channelCountMode = m;\n\t\t}\n\t});\n\n\t/**\n\t *  channelInterpretation determines how individual channels will be treated\n\t *  when up-mixing and down-mixing connections to any inputs to the node.\n\t *  The default value is \"speakers\".\n\t *  @memberof Tone.AudioNode#\n\t *  @type {String}\n\t *  @name channelInterpretation\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.AudioNode.prototype, \"channelInterpretation\", {\n\t\tget : function(){\n\t\t\treturn this.output.channelInterpretation;\n\t\t},\n\t\tset : function(i){\n\t\t\treturn this.output.channelInterpretation = i;\n\t\t}\n\t});\n\n\t/**\n\t *  The number of inputs feeding into the AudioNode.\n\t *  For source nodes, this will be 0.\n\t *  @type {Number}\n\t *  @name numberOfInputs\n\t *  @memberof Tone.AudioNode#\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.AudioNode.prototype, \"numberOfInputs\", {\n\t\tget : function(){\n\t\t\tif (this.input){\n\t\t\t\tif (Tone.isArray(this.input)){\n\t\t\t\t\treturn this.input.length;\n\t\t\t\t} else {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  The number of outputs coming out of the AudioNode.\n\t *  @type {Number}\n\t *  @name numberOfOutputs\n\t *  @memberof Tone.AudioNode#\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.AudioNode.prototype, \"numberOfOutputs\", {\n\t\tget : function(){\n\t\t\tif (this.output){\n\t\t\t\tif (Tone.isArray(this.output)){\n\t\t\t\t\treturn this.output.length;\n\t\t\t\t} else {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  connect the output of a ToneNode to an AudioParam, AudioNode, or ToneNode\n\t *  @param  {Tone | AudioParam | AudioNode} unit\n\t *  @param {number} [outputNum=0] optionally which output to connect from\n\t *  @param {number} [inputNum=0] optionally which input to connect to\n\t *  @returns {Tone.AudioNode} this\n\t */\n\tTone.AudioNode.prototype.connect = function(unit, outputNum, inputNum){\n\t\tif (Tone.isArray(this.output)){\n\t\t\toutputNum = Tone.defaultArg(outputNum, 0);\n\t\t\tthis.output[outputNum].connect(unit, 0, inputNum);\n\t\t} else {\n\t\t\tthis.output.connect(unit, outputNum, inputNum);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  disconnect the output\n\t *  @param {Number|AudioNode} output Either the output index to disconnect\n\t *                                   if the output is an array, or the\n\t *                                   node to disconnect from.\n\t *  @returns {Tone.AudioNode} this\n\t */\n\tTone.AudioNode.prototype.disconnect = function(destination, outputNum, inputNum){\n\t\tif (Tone.isArray(this.output)){\n\t\t\tif (Tone.isNumber(destination)){\n\t\t\t\tthis.output[destination].disconnect();\n\t\t\t} else {\n\t\t\t\toutputNum = Tone.defaultArg(outputNum, 0);\n\t\t\t\tthis.output[outputNum].disconnect(destination, 0, inputNum);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.output.disconnect.apply(this.output, arguments);\n\t\t}\n\t};\n\n\t/**\n\t *  Connect the output of this node to the rest of the nodes in series.\n\t *  @example\n\t *  //connect a node to an effect, panVol and then to the master output\n\t *  node.chain(effect, panVol, Tone.Master);\n\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t *  @returns {Tone.AudioNode} this\n\t */\n\tTone.AudioNode.prototype.chain = function(){\n\t\tvar currentUnit = this;\n\t\tfor (var i = 0; i < arguments.length; i++){\n\t\t\tvar toUnit = arguments[i];\n\t\t\tcurrentUnit.connect(toUnit);\n\t\t\tcurrentUnit = toUnit;\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  connect the output of this node to the rest of the nodes in parallel.\n\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t *  @returns {Tone.AudioNode} this\n\t */\n\tTone.AudioNode.prototype.fan = function(){\n\t\tfor (var i = 0; i < arguments.length; i++){\n\t\t\tthis.connect(arguments[i]);\n\t\t}\n\t\treturn this;\n\t};\n\n\tif (Tone.global.AudioNode){\n\t\t//give native nodes chain and fan methods\n\t\tAudioNode.prototype.chain = Tone.AudioNode.prototype.chain;\n\t\tAudioNode.prototype.fan = Tone.AudioNode.prototype.fan;\n\t}\n\n\t/**\n\t * Dispose and disconnect\n\t * @return {Tone.AudioNode} this\n\t */\n\tTone.AudioNode.prototype.dispose = function(){\n\t\tif (Tone.isDefined(this.input)){\n\t\t\tif (this.input instanceof AudioNode){\n\t\t\t\tthis.input.disconnect();\n\t\t\t}\n\t\t\tthis.input = null;\n\t\t}\n\t\tif (Tone.isDefined(this.output)){\n\t\t\tif (this.output instanceof AudioNode){\n\t\t\t\tthis.output.disconnect();\n\t\t\t}\n\t\t\tthis.output = null;\n\t\t}\n\t\tthis._context = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.AudioNode;\n});\n","/**\n *  Tone.js\n *  @author Yotam Mann\n *  @license http://opensource.org/licenses/MIT MIT License\n *  @copyright 2014-2019 Yotam Mann\n */\ndefine([\"../version\"], function(version){\n\n\t\"use strict\";\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tTONE\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  @class  Tone is the base class of all other classes.\n\t *  @constructor\n\t */\n\tvar Tone = function(){\n\t\tif (!(this instanceof Tone)){\n\t\t\tthrow new Error(\"constructor needs to be called with the 'new' keyword\");\n\t\t}\n\t};\n\n\t/**\n\t *  @memberOf Tone#\n\t *  @returns {String} returns the name of the class as a string\n\t */\n\tTone.prototype.toString = function(){\n\t\tfor (var className in Tone){\n\t\t\tvar isLetter = className[0].match(/^[A-Z]$/);\n\t\t\tvar sameConstructor = Tone[className] === this.constructor;\n\t\t\tif (Tone.isFunction(Tone[className]) && isLetter && sameConstructor){\n\t\t\t\treturn className;\n\t\t\t}\n\t\t}\n\t\treturn \"Tone\";\n\t};\n\n\t/**\n\t *  @memberOf Tone#\n\t *  disconnect and dispose\n\t *  @returns {Tone} this\n\t */\n\tTone.prototype.dispose = function(){\n\t\treturn this;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tGET/SET\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Set the parameters at once. Either pass in an\n\t *  object mapping parameters to values, or to set a\n\t *  single parameter, by passing in a string and value.\n\t *  The last argument is an optional ramp time which\n\t *  will ramp any signal values to their destination value\n\t *  over the duration of the rampTime.\n\t *  @param {Object|String} params\n\t *  @param {Number=} value\n\t *  @param {Time=} rampTime\n\t *  @returns {Tone} this\n\t *  @memberOf Tone#\n\t *  @example\n\t * //set values using an object\n\t * filter.set({\n\t * \t\"frequency\" : 300,\n\t * \t\"type\" : highpass\n\t * });\n\t *  @example\n\t * filter.set(\"type\", \"highpass\");\n\t *  @example\n\t * //ramp to the value 220 over 3 seconds.\n\t * oscillator.set({\n\t * \t\"frequency\" : 220\n\t * }, 3);\n\t */\n\tTone.prototype.set = function(params, value, rampTime){\n\t\tif (Tone.isObject(params)){\n\t\t\trampTime = value;\n\t\t} else if (Tone.isString(params)){\n\t\t\tvar tmpObj = {};\n\t\t\ttmpObj[params] = value;\n\t\t\tparams = tmpObj;\n\t\t}\n\n\t\tparamLoop:\n\t\tfor (var attr in params){\n\t\t\tvalue = params[attr];\n\t\t\tvar parent = this;\n\t\t\tif (attr.indexOf(\".\") !== -1){\n\t\t\t\tvar attrSplit = attr.split(\".\");\n\t\t\t\tfor (var i = 0; i < attrSplit.length - 1; i++){\n\t\t\t\t\tparent = parent[attrSplit[i]];\n\t\t\t\t\tif (parent instanceof Tone){\n\t\t\t\t\t\tattrSplit.splice(0, i+1);\n\t\t\t\t\t\tvar innerParam = attrSplit.join(\".\");\n\t\t\t\t\t\tparent.set(innerParam, value);\n\t\t\t\t\t\tcontinue paramLoop;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tattr = attrSplit[attrSplit.length - 1];\n\t\t\t}\n\t\t\tvar param = parent[attr];\n\t\t\tif (Tone.isUndef(param)){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ((Tone.Signal && param instanceof Tone.Signal) ||\n\t\t\t\t\t(Tone.Param && param instanceof Tone.Param)){\n\t\t\t\tif (param.value !== value){\n\t\t\t\t\tif (Tone.isUndef(rampTime)){\n\t\t\t\t\t\tparam.value = value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparam.rampTo(value, rampTime);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (param instanceof AudioParam){\n\t\t\t\tif (param.value !== value){\n\t\t\t\t\tparam.value = value;\n\t\t\t\t}\n\t\t\t} else if (Tone.TimeBase && param instanceof Tone.TimeBase){\n\t\t\t\tparent[attr] = value;\n\t\t\t} else if (param instanceof Tone){\n\t\t\t\tparam.set(value);\n\t\t\t} else if (param !== value){\n\t\t\t\tparent[attr] = value;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Get the object's attributes. Given no arguments get\n\t *  will return all available object properties and their corresponding\n\t *  values. Pass in a single attribute to retrieve or an array\n\t *  of attributes. The attribute strings can also include a \".\"\n\t *  to access deeper properties.\n\t *  @memberOf Tone#\n\t *  @example\n\t * osc.get();\n\t * //returns {\"type\" : \"sine\", \"frequency\" : 440, ...etc}\n\t *  @example\n\t * osc.get(\"type\");\n\t * //returns { \"type\" : \"sine\"}\n\t * @example\n\t * //use dot notation to access deep properties\n\t * synth.get([\"envelope.attack\", \"envelope.release\"]);\n\t * //returns {\"envelope\" : {\"attack\" : 0.2, \"release\" : 0.4}}\n\t *  @param {Array=|string|undefined} params the parameters to get, otherwise will return\n\t *  \t\t\t\t\t                  all available.\n\t *  @returns {Object}\n\t */\n\tTone.prototype.get = function(params){\n\t\tif (Tone.isUndef(params)){\n\t\t\tparams = this._collectDefaults(this.constructor);\n\t\t} else if (Tone.isString(params)){\n\t\t\tparams = [params];\n\t\t}\n\t\tvar ret = {};\n\t\tfor (var i = 0; i < params.length; i++){\n\t\t\tvar attr = params[i];\n\t\t\tvar parent = this;\n\t\t\tvar subRet = ret;\n\t\t\tif (attr.indexOf(\".\") !== -1){\n\t\t\t\tvar attrSplit = attr.split(\".\");\n\t\t\t\tfor (var j = 0; j < attrSplit.length - 1; j++){\n\t\t\t\t\tvar subAttr = attrSplit[j];\n\t\t\t\t\tsubRet[subAttr] = subRet[subAttr] || {};\n\t\t\t\t\tsubRet = subRet[subAttr];\n\t\t\t\t\tparent = parent[subAttr];\n\t\t\t\t}\n\t\t\t\tattr = attrSplit[attrSplit.length - 1];\n\t\t\t}\n\t\t\tvar param = parent[attr];\n\t\t\tif (Tone.isObject(params[attr])){\n\t\t\t\tsubRet[attr] = param.get();\n\t\t\t} else if (Tone.Signal && param instanceof Tone.Signal){\n\t\t\t\tsubRet[attr] = param.value;\n\t\t\t} else if (Tone.Param && param instanceof Tone.Param){\n\t\t\t\tsubRet[attr] = param.value;\n\t\t\t} else if (param instanceof AudioParam){\n\t\t\t\tsubRet[attr] = param.value;\n\t\t\t} else if (param instanceof Tone){\n\t\t\t\tsubRet[attr] = param.get();\n\t\t\t} else if (!Tone.isFunction(param) && Tone.isDefined(param)){\n\t\t\t\tsubRet[attr] = param;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t};\n\n\t/**\n\t *  collect all of the default attributes in one\n\t *  @private\n\t *  @param {Function} constr the constructor to find the defaults from\n\t *  @return {Array} all of the attributes which belong to the class\n\t */\n\tTone.prototype._collectDefaults = function(constr){\n\t\tvar ret = [];\n\t\tif (Tone.isDefined(constr.defaults)){\n\t\t\tret = Object.keys(constr.defaults);\n\t\t}\n\t\tif (Tone.isDefined(constr._super)){\n\t\t\tvar superDefs = this._collectDefaults(constr._super);\n\t\t\t//filter out repeats\n\t\t\tfor (var i = 0; i < superDefs.length; i++){\n\t\t\t\tif (ret.indexOf(superDefs[i]) === -1){\n\t\t\t\t\tret.push(superDefs[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tDEFAULTS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  @memberOf Tone\n\t *  @param  {Array}  values  The arguments array\n\t *  @param  {Array}  keys    The names of the arguments\n\t *  @param {Function|Object} constr The class constructor\n\t *  @return  {Object}  An object composed of the  defaults between the class' defaults\n\t *                        and the passed in arguments.\n\t */\n\tTone.defaults = function(values, keys, constr){\n\t\tvar options = {};\n\t\tif (values.length === 1 && Tone.isObject(values[0])){\n\t\t\toptions = values[0];\n\t\t} else {\n\t\t\tfor (var i = 0; i < keys.length; i++){\n\t\t\t\toptions[keys[i]] = values[i];\n\t\t\t}\n\t\t}\n\t\tif (Tone.isDefined(constr.defaults)){\n\t\t\treturn Tone.defaultArg(options, constr.defaults);\n\t\t} else if (Tone.isObject(constr)){\n\t\t\treturn Tone.defaultArg(options, constr);\n\t\t} else {\n\t\t\treturn options;\n\t\t}\n\t};\n\n\t/**\n\t *  If the `given` parameter is undefined, use the `fallback`.\n\t *  If both `given` and `fallback` are object literals, it will\n\t *  return a deep copy which includes all of the parameters from both\n\t *  objects. If a parameter is undefined in given, it will return\n\t *  the fallback property.\n\t *  <br><br>\n\t *  WARNING: if object is self referential, it will go into an an\n\t *  infinite recursive loop.\n\t *  @memberOf Tone\n\t *  @param  {*} given\n\t *  @param  {*} fallback\n\t *  @return {*}\n\t */\n\tTone.defaultArg = function(given, fallback){\n\t\tif (Tone.isObject(given) && Tone.isObject(fallback)){\n\t\t\tvar ret = {};\n\t\t\t//make a deep copy of the given object\n\t\t\tfor (var givenProp in given){\n\t\t\t\tret[givenProp] = Tone.defaultArg(fallback[givenProp], given[givenProp]);\n\t\t\t}\n\t\t\tfor (var fallbackProp in fallback){\n\t\t\t\tret[fallbackProp] = Tone.defaultArg(given[fallbackProp], fallback[fallbackProp]);\n\t\t\t}\n\t\t\treturn ret;\n\t\t} else {\n\t\t\treturn Tone.isUndef(given) ? fallback : given;\n\t\t}\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tDEBUGGING\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Print the outputs to the console log for debugging purposes. \n\t *  Prints the contents only if either the object has a property\n\t *  called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n\t *  is set to the name of the class. \n\t *  @example\n\t * //prints all logs originating from Tone.OscillatorNode\n\t * Tone.global.TONE_DEBUG_CLASS = \"OscillatorNode\"\n\t *  @param {*} args Any arguments to print to the console.\n\t *  @private\n\t */\n\tTone.prototype.log = function(){\n\t\t//if the object is either set to debug = true\n\t\t//or if there is a string on the Tone.global.with the class name\n\t\tif (this.debug || this.toString() === Tone.global.TONE_DEBUG_CLASS){\n\t\t\tvar args = Array.from(arguments);\n\t\t\targs.unshift(this.toString()+\":\");\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log.apply(undefined, args);\n\t\t}\n\t};\n\n\t/**\n\t *  Assert that the statement is true, otherwise invoke the error. \n\t *  @param {Boolean} statement\n\t *  @param {String} error The message which is passed into an Error\n\t *  @private\n\t */\n\tTone.prototype.assert = function(statement, error){\n\t\tif (!statement){\n\t\t\tthrow new Error(error);\n\t\t}\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tCONNECTIONS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  connect together all of the arguments in series\n\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t *  @returns {Tone}\n\t *  @memberOf Tone\n\t *  @static\n\t */\n\tTone.connectSeries = function(){\n\t\tvar currentUnit = arguments[0];\n\t\tfor (var i = 1; i < arguments.length; i++){\n\t\t\tvar toUnit = arguments[i];\n\t\t\tcurrentUnit.connect(toUnit);\n\t\t\tcurrentUnit = toUnit;\n\t\t}\n\t\treturn Tone;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// TYPE CHECKING\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Test if the arg is undefined\n\t *  @param {*} arg the argument to test\n\t *  @returns {Boolean} true if the arg is undefined\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.isUndef = function(val){\n\t\treturn typeof val === \"undefined\";\n\t};\n\n\t/**\n\t *  Test if the arg is not undefined\n\t *  @param {*} arg the argument to test\n\t *  @returns {Boolean} true if the arg is undefined\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.isDefined = function(val){\n\t\treturn !Tone.isUndef(val);\n\t};\n\n\t/**\n\t *  Test if the arg is a function\n\t *  @param {*} arg the argument to test\n\t *  @returns {Boolean} true if the arg is a function\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.isFunction = function(val){\n\t\treturn typeof val === \"function\";\n\t};\n\n\t/**\n\t *  Test if the argument is a number.\n\t *  @param {*} arg the argument to test\n\t *  @returns {Boolean} true if the arg is a number\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.isNumber = function(arg){\n\t\treturn (typeof arg === \"number\");\n\t};\n\n\t/**\n\t *  Test if the given argument is an object literal (i.e. `{}`);\n\t *  @param {*} arg the argument to test\n\t *  @returns {Boolean} true if the arg is an object literal.\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.isObject = function(arg){\n\t\treturn (Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object);\n\t};\n\n\t/**\n\t *  Test if the argument is a boolean.\n\t *  @param {*} arg the argument to test\n\t *  @returns {Boolean} true if the arg is a boolean\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.isBoolean = function(arg){\n\t\treturn (typeof arg === \"boolean\");\n\t};\n\n\t/**\n\t *  Test if the argument is an Array\n\t *  @param {*} arg the argument to test\n\t *  @returns {Boolean} true if the arg is an array\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.isArray = function(arg){\n\t\treturn (Array.isArray(arg));\n\t};\n\n\t/**\n\t *  Test if the argument is a string.\n\t *  @param {*} arg the argument to test\n\t *  @returns {Boolean} true if the arg is a string\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.isString = function(arg){\n\t\treturn (typeof arg === \"string\");\n\t};\n\n\t/**\n\t *  Test if the argument is in the form of a note in scientific pitch notation.\n\t *  e.g. \"C4\"\n\t *  @param {*} arg the argument to test\n\t *  @returns {Boolean} true if the arg is a string\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.isNote = function(arg){\n\t\treturn Tone.isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n\t};\n\n\t/**\n\t *  An empty function.\n\t *  @static\n\t */\n\tTone.noOp = function(){};\n\n\t/**\n\t *  Make the property not writable. Internal use only.\n\t *  @private\n\t *  @param  {String}  property  the property to make not writable\n\t */\n\tTone.prototype._readOnly = function(property){\n\t\tif (Array.isArray(property)){\n\t\t\tfor (var i = 0; i < property.length; i++){\n\t\t\t\tthis._readOnly(property[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tObject.defineProperty(this, property, {\n\t\t\t\t\"writable\" : false,\n\t\t\t\t\"enumerable\" : true,\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t *  Make an attribute writeable. Interal use only.\n\t *  @private\n\t *  @param  {String}  property  the property to make writable\n\t */\n\tTone.prototype._writable = function(property){\n\t\tif (Array.isArray(property)){\n\t\t\tfor (var i = 0; i < property.length; i++){\n\t\t\t\tthis._writable(property[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tObject.defineProperty(this, property, {\n\t\t\t\t\"writable\" : true,\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Possible play states.\n\t * @enum {String}\n\t */\n\tTone.State = {\n\t\t\"Started\" : \"started\",\n\t\t\"Stopped\" : \"stopped\",\n\t\t\"Paused\" : \"paused\",\n\t};\n\n\t/**\n\t * A reference to the global context, `global` or `Tone.global.\n\t */\n\tTone.global = Tone.isUndef(global) ? window : global;\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// CONVERSIONS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Equal power gain scale. Good for cross-fading.\n\t *  @param  {NormalRange} percent (0-1)\n\t *  @return {Number}         output gain (0-1)\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.equalPowerScale = function(percent){\n\t\tvar piFactor = 0.5 * Math.PI;\n\t\treturn Math.sin(percent * piFactor);\n\t};\n\n\t/**\n\t *  Convert decibels into gain.\n\t *  @param  {Decibels} db\n\t *  @return {Number}\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.dbToGain = function(db){\n\t\treturn Math.pow(10, db / 20);\n\t};\n\n\t/**\n\t *  Convert gain to decibels.\n\t *  @param  {Number} gain (0-1)\n\t *  @return {Decibels}\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.gainToDb = function(gain){\n\t\treturn 20 * (Math.log(gain) / Math.LN10);\n\t};\n\n\t/**\n\t *  Convert an interval (in semitones) to a frequency ratio.\n\t *  @param  {Interval} interval the number of semitones above the base note\n\t *  @return {Number}          the frequency ratio\n\t *  @static\n\t *  @memberOf Tone\n\t *  @example\n\t * tone.intervalToFrequencyRatio(0); // 1\n\t * tone.intervalToFrequencyRatio(12); // 2\n\t * tone.intervalToFrequencyRatio(-12); // 0.5\n\t */\n\tTone.intervalToFrequencyRatio = function(interval){\n\t\treturn Math.pow(2, (interval/12));\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tTIMING\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Return the current time of the AudioContext clock plus\n\t *  the lookAhead.\n\t *  @return {Number} the currentTime from the AudioContext\n\t *  @memberOf Tone#\n\t */\n\tTone.prototype.now = function(){\n\t\treturn Tone.context.now();\n\t};\n\n\t/**\n\t *  Return the current time of the AudioContext clock plus\n\t *  the lookAhead.\n\t *  @return {Number} the currentTime from the AudioContext\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.now = function(){\n\t\treturn Tone.context.now();\n\t};\n\n\t/**\n\t *  Return the current time of the AudioContext clock without\n\t *  any lookAhead.\n\t *  @return {Number} the currentTime from the AudioContext\n\t *  @memberOf Tone#\n\t */\n\tTone.prototype.immediate = function(){\n\t\treturn Tone.context.currentTime;\n\t};\n\n\t/**\n\t *  Return the current time of the AudioContext clock without\n\t *  any lookAhead.\n\t *  @return {Number} the currentTime from the AudioContext\n\t *  @memberOf Tone\n\t */\n\tTone.immediate = function(){\n\t\treturn Tone.context.currentTime;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tINHERITANCE\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  have a child inherit all of Tone's (or a parent's) prototype\n\t *  to inherit the parent's properties, make sure to call\n\t *  Parent.call(this) in the child's constructor\n\t *\n\t *  based on closure library's inherit function\n\t *\n\t *  @memberOf Tone\n\t *  @static\n\t *  @param  {Function} \tchild\n\t *  @param  {Function=} parent (optional) parent to inherit from\n\t *                             if no parent is supplied, the child\n\t *                             will inherit from Tone\n\t */\n\tTone.extend = function(child, parent){\n\t\tif (Tone.isUndef(parent)){\n\t\t\tparent = Tone;\n\t\t}\n\t\tfunction TempConstructor(){}\n\t\tTempConstructor.prototype = parent.prototype;\n\t\tchild.prototype = new TempConstructor();\n\t\t/** @override */\n\t\tchild.prototype.constructor = child;\n\t\tchild._super = parent;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tCONTEXT\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t * The shared AudioContext\n\t * @type {Tone.Context}\n\t * @private\n\t */\n\tTone._audioContext = null;\n\n\t/**\n\t * \tMost browsers will not play _any_ audio until a user \n\t * \tclicks something (like a play button). Invoke this method\n\t * \ton a click or keypress event handler to start the audio context. \n\t * \tMore about the Autoplay policy [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n\t *  @memberOf Tone\n\t *  @static\n\t *  @return {Promise} This promise is resolved when the audio context is started. \n\t *  @example\n\t * document.querySelector('#playbutton').addEventListener('click', () => Tone.start())\n\t */\n\tTone.start = function(){\n\t\treturn Tone.context.resume();\n\t};\n\n\t/**\n\t *  A static pointer to the audio context accessible as Tone.context.\n\t *  @type {Tone.Context}\n\t *  @name context\n\t *  @memberOf Tone\n\t */\n\tObject.defineProperty(Tone, \"context\", {\n\t\t\"get\" : function(){\n\t\t\treturn Tone._audioContext;\n\t\t},\n\t\t\"set\" : function(context){\n\t\t\tif (context.isContext){\n\t\t\t\tTone._audioContext = context;\n\t\t\t} else {\n\t\t\t\tTone._audioContext = new Tone.Context(context);\n\t\t\t}\n\t\t\t//initialize the new audio context\n\t\t\tTone.Context.emit(\"init\", Tone._audioContext);\n\t\t}\n\t});\n\n\t/**\n\t *  The AudioContext\n\t *  @type {Tone.Context}\n\t *  @name context\n\t *  @memberOf Tone#\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.prototype, \"context\", {\n\t\t\"get\" : function(){\n\t\t\treturn Tone.context;\n\t\t}\n\t});\n\n\t/**\n\t *  Tone automatically creates a context on init, but if you are working\n\t *  with other libraries which also create an AudioContext, it can be\n\t *  useful to set your own. If you are going to set your own context,\n\t *  be sure to do it at the start of your code, before creating any objects.\n\t *  @static\n\t *  @param {AudioContext} ctx The new audio context to set\n\t */\n\tTone.setContext = function(ctx){\n\t\tTone.context = ctx;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tATTRIBUTES\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  The number of seconds of 1 processing block (128 samples)\n\t *  @type {Number}\n\t *  @name blockTime\n\t *  @memberOf Tone\n\t *  @static\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.prototype, \"blockTime\", {\n\t\t\"get\" : function(){\n\t\t\treturn 128 / this.context.sampleRate;\n\t\t}\n\t});\n\n\t/**\n\t *  The duration in seconds of one sample.\n\t *  @type {Number}\n\t *  @name sampleTime\n\t *  @memberOf Tone\n\t *  @static\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.prototype, \"sampleTime\", {\n\t\t\"get\" : function(){\n\t\t\treturn 1 / this.context.sampleRate;\n\t\t}\n\t});\n\n\t/**\n\t *  Whether or not all the technologies that Tone.js relies on are supported by the current browser.\n\t *  @type {Boolean}\n\t *  @name supported\n\t *  @memberOf Tone\n\t *  @readOnly\n\t *  @static\n\t */\n\tObject.defineProperty(Tone, \"supported\", {\n\t\t\"get\" : function(){\n\t\t\tvar hasAudioContext = Tone.global.hasOwnProperty(\"AudioContext\") || Tone.global.hasOwnProperty(\"webkitAudioContext\");\n\t\t\tvar hasPromises = Tone.global.hasOwnProperty(\"Promise\");\n\t\t\treturn hasAudioContext && hasPromises;\n\t\t}\n\t});\n\n\t/**\n\t *  Boolean value if the audio context has been initialized.\n\t *  @type {Boolean}\n\t *  @memberOf Tone\n\t *  @static\n\t *  @name initialized\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone, \"initialized\", {\n\t\t\"get\" : function(){\n\t\t\treturn Boolean(Tone.context);\n\t\t}\n\t});\n\n\t/**\n\t *  Get the context when it becomes available\n\t *  @param  {Function}  resolve  Callback when the context is initialized\n\t *  @return  {Tone}\n\t */\n\tTone.getContext = function(resolve){\n\t\tif (Tone.initialized){\n\t\t\tresolve(Tone.context);\n\t\t} else {\n\t\t\tvar resCallback = function(){\n\t\t\t\tresolve(Tone.context);\n\t\t\t\tTone.Context.off(\"init\", resCallback);\n\t\t\t};\n\t\t\tTone.Context.on(\"init\", resCallback);\n\t\t}\n\t\treturn Tone;\n\t};\n\n\t/**\n\t * The version number\n\t * @type {String}\n\t * @static\n\t */\n\tTone.version = version;\n\n\treturn Tone;\n});\n","define([\"../core/Tone\", \"../core/TransportEvent\", \"../type/Ticks\"], function(Tone){\n\n\t/**\n\t *  @class Tone.TransportRepeatEvent is an internal class used by Tone.Transport\n\t *         to schedule repeat events. This class should not be instantiated directly.\n\t *  @extends {Tone.TransportEvent}\n\t *  @param {Object} options\n\t */\n\tTone.TransportRepeatEvent = function(Transport, options){\n\n\t\tTone.TransportEvent.call(this, Transport, options);\n\t\toptions = Tone.defaultArg(options, Tone.TransportRepeatEvent.defaults);\n\n\t\t/**\n\t\t * When the event should stop repeating\n\t\t * @type {Ticks}\n\t\t * @private\n\t\t */\n\t\tthis.duration = Tone.Ticks(options.duration);\n\n\t\t/**\n\t\t * The interval of the repeated event\n\t\t * @type {Ticks}\n\t\t * @private\n\t\t */\n\t\tthis._interval = Tone.Ticks(options.interval);\n\n\t\t/**\n\t\t * The ID of the current timeline event\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\t\tthis._currentId = -1;\n\n\t\t/**\n\t\t * The ID of the next timeline event\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\t\tthis._nextId = -1;\n\n\t\t/**\n\t\t  * The time of the next event\n\t\t  * @type {Ticks}\n\t\t  * @private\n\t\t  */\n\t\tthis._nextTick = this.time;\n\n\t\t/**\n\t\t * a reference to the bound start method\n\t\t * @type {Function}\n\t\t * @private\n\t\t */\n\t\tthis._boundRestart = this._restart.bind(this);\n\t\tthis.Transport.on(\"start loopStart\", this._boundRestart);\n\t\tthis._restart();\n\t};\n\n\tTone.extend(Tone.TransportRepeatEvent, Tone.TransportEvent);\n\n\t/**\n\t * The defaults\n\t * @static\n\t * @type {Object}\n\t */\n\tTone.TransportRepeatEvent.defaults = {\n\t\t\"duration\" : Infinity,\n\t\t\"interval\" : 1\n\t};\n\n\t/**\n\t * Invoke the callback. Returns the tick time which\n\t * the next event should be scheduled at.\n\t * @param  {Number} time  The AudioContext time in seconds of the event\n\t */\n\tTone.TransportRepeatEvent.prototype.invoke = function(time){\n\t\t//create more events if necessary\n\t\tthis._createEvents(time);\n\t\t//call the super class\n\t\tTone.TransportEvent.prototype.invoke.call(this, time);\n\t};\n\n\t/**\n\t * Push more events onto the timeline to keep up with the position of the timeline\n\t * @private\n\t */\n\tTone.TransportRepeatEvent.prototype._createEvents = function(time){\n\t\t// schedule the next event\n\t\tvar ticks = this.Transport.getTicksAtTime(time);\n\t\tif (ticks >= this.time && ticks >= this._nextTick &&\n\t\tthis._nextTick + this._interval < this.time + this.duration){\n\t\t\tthis._nextTick += this._interval;\n\t\t\tthis._currentId = this._nextId;\n\t\t\tthis._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n\t\t}\n\t};\n\n\t/**\n\t * Push more events onto the timeline to keep up with the position of the timeline\n\t * @private\n\t */\n\tTone.TransportRepeatEvent.prototype._restart = function(time){\n\t\tthis.Transport.clear(this._currentId);\n\t\tthis.Transport.clear(this._nextId);\n\t\tthis._nextTick = this.time;\n\t\tvar ticks = this.Transport.getTicksAtTime(time);\n\t\tif (ticks > this.time){\n\t\t\tthis._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n\t\t}\n\t\tthis._currentId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n\t\tthis._nextTick += this._interval;\n\t\tthis._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n\t};\n\n\t/**\n\t * Clean up\n\t * @return {Tone.TransportRepeatEvent} this\n\t */\n\tTone.TransportRepeatEvent.prototype.dispose = function(){\n\t\tthis.Transport.clear(this._currentId);\n\t\tthis.Transport.clear(this._nextId);\n\t\tthis.Transport.off(\"start loopStart\", this._boundRestart);\n\t\tthis._boundCreateEvents = null;\n\t\tTone.TransportEvent.prototype.dispose.call(this);\n\t\tthis.duration = null;\n\t\tthis._interval = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.TransportRepeatEvent;\n});\n","define([\"../core/Tone\", \"../core/Param\", \"../type/Type\", \"../core/AudioNode\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class A thin wrapper around the Native Web Audio GainNode.\n\t *         The GainNode is a basic building block of the Web Audio\n\t *         API and is useful for routing audio and adjusting gains.\n\t *  @extends {Tone.AudioNode}\n\t *  @param  {Number=}  gain  The initial gain of the GainNode\n\t *  @param {Tone.Type=} units The units of the gain parameter.\n\t */\n\tTone.Gain = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"gain\", \"units\"], Tone.Gain);\n\t\tTone.AudioNode.call(this, options);\n\n\t\t/**\n\t\t *  The GainNode\n\t\t *  @type  {GainNode}\n\t\t *  @private\n\t\t */\n\t\tthis.input = this.output = this._gainNode = this.context.createGain();\n\n\t\t/**\n\t\t *  The gain parameter of the gain node.\n\t\t *  @type {Gain}\n\t\t *  @signal\n\t\t */\n\t\tthis.gain = new Tone.Param({\n\t\t\t\"param\" : this._gainNode.gain,\n\t\t\t\"units\" : options.units,\n\t\t\t\"value\" : options.gain,\n\t\t\t\"convert\" : options.convert\n\t\t});\n\t\tthis._readOnly(\"gain\");\n\t};\n\n\tTone.extend(Tone.Gain, Tone.AudioNode);\n\n\t/**\n\t *  The defaults\n\t *  @const\n\t *  @type  {Object}\n\t */\n\tTone.Gain.defaults = {\n\t\t\"gain\" : 1,\n\t\t\"convert\" : true,\n\t};\n\n\t/**\n\t *  Clean up.\n\t *  @return  {Tone.Gain}  this\n\t */\n\tTone.Gain.prototype.dispose = function(){\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis._gainNode.disconnect();\n\t\tthis._gainNode = null;\n\t\tthis._writable(\"gain\");\n\t\tthis.gain.dispose();\n\t\tthis.gain = null;\n\t};\n\n\treturn Tone.Gain;\n});\n","define([\"../core/Tone\", \"../core/AudioNode\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Base class for all Signals. Used Internally.\n\t *\n\t *  @constructor\n\t *  @extends {Tone}\n\t */\n\tTone.SignalBase = function(){\n\t\tTone.AudioNode.call(this);\n\t};\n\n\tTone.extend(Tone.SignalBase, Tone.AudioNode);\n\n\t/**\n\t *  When signals connect to other signals or AudioParams,\n\t *  they take over the output value of that signal or AudioParam.\n\t *  For all other nodes, the behavior is the same as a default <code>connect</code>.\n\t *\n\t *  @override\n\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node\n\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t *  @returns {Tone.SignalBase} this\n\t */\n\tTone.SignalBase.prototype.connect = function(node, outputNumber, inputNumber){\n\t\t//zero it out so that the signal can have full control\n\t\tif ((Tone.Signal && Tone.Signal === node.constructor) ||\n\t\t\t\t(Tone.Param && Tone.Param === node.constructor)){\n\t\t\t//cancel changes\n\t\t\tnode._param.cancelScheduledValues(0);\n\t\t\t//reset the value\n\t\t\tnode._param.setValueAtTime(0, 0);\n\t\t\t//mark the value as overridden\n\t\t\tnode.overridden = true;\n\t\t} else if (node instanceof AudioParam){\n\t\t\tnode.cancelScheduledValues(0);\n\t\t\tnode.setValueAtTime(0, 0);\n\t\t}\n\t\tTone.AudioNode.prototype.connect.call(this, node, outputNumber, inputNumber);\n\t\treturn this;\n\t};\n\n\treturn Tone.SignalBase;\n});\n","define([\"../core/Tone\", \"../core/Context\", \"../shim/OfflineAudioContext\"], function(Tone){\n\n\t/**\n\t *  @class Wrapper around the OfflineAudioContext\n\t *  @extends {Tone.Context}\n\t *  @param  {Number}  channels  The number of channels to render\n\t *  @param  {Number}  duration  The duration to render in samples\n\t *  @param {Number} sampleRate the sample rate to render at\n\t */\n\tTone.OfflineContext = function(channels, duration, sampleRate){\n\n\t\t/**\n\t\t *  The offline context\n\t\t *  @private\n\t\t *  @type  {OfflineAudioContext}\n\t\t */\n\t\tvar offlineContext = new OfflineAudioContext(channels, duration * sampleRate, sampleRate);\n\n\t\t//wrap the methods/members\n\t\tTone.Context.call(this, {\n\t\t\t\"context\" : offlineContext,\n\t\t\t\"clockSource\" : \"offline\",\n\t\t\t\"lookAhead\" : 0,\n\t\t\t\"updateInterval\" : 128 / sampleRate\n\t\t});\n\n\t\t/**\n\t\t *  A private reference to the duration\n\t\t *  @private\n\t\t *  @type  {Number}\n\t\t */\n\t\tthis._duration = duration;\n\n\t\t/**\n\t\t *  An artificial clock source\n\t\t *  @type  {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._currentTime = 0;\n\t};\n\n\tTone.extend(Tone.OfflineContext, Tone.Context);\n\n\t/**\n\t *  Override the now method to point to the internal clock time\n\t *  @return  {Number}\n\t */\n\tTone.OfflineContext.prototype.now = function(){\n\t\treturn this._currentTime;\n\t};\n\n\t/**\n\t *  Overwrite resume, should not do anything in the OfflineAudioContext.\n\t *  @return {Promise}\n\t */\n\tTone.OfflineContext.prototype.resume = function(){\n\t\treturn Promise.resolve();\n\t};\n\n\t/**\n\t *  Render the output of the OfflineContext\n\t *  @return  {Promise}\n\t */\n\tTone.OfflineContext.prototype.render = function(){\n\t\twhile (this._duration - this._currentTime >= 0){\n\t\t\t//invoke all the callbacks on that time\n\t\t\tthis.emit(\"tick\");\n\t\t\t//increment the clock\n\t\t\tthis._currentTime += this.blockTime;\n\t\t}\n\n\t\treturn this._context.startRendering();\n\t};\n\n\t/**\n\t *  Close the context\n\t *  @return  {Promise}\n\t */\n\tTone.OfflineContext.prototype.close = function(){\n\t\tthis._context = null;\n\t\treturn Promise.resolve();\n\t};\n\n\treturn Tone.OfflineContext;\n});\n","define([\"../core/Tone\", \"../type/Ticks\"], function(Tone){\n\n\t/**\n\t *  @class Tone.TransportEvent is an internal class used by (Tone.Transport)[Transport]\n\t *         to schedule events. Do no invoke this class directly, it is\n\t *         handled from within Tone.Transport.\n\t *  @extends {Tone}\n\t *  @param {Object} options\n\t */\n\tTone.TransportEvent = function(Transport, options){\n\n\t\toptions = Tone.defaultArg(options, Tone.TransportEvent.defaults);\n\t\tTone.call(this);\n\n\t\t/**\n\t\t * Reference to the Transport that created it\n\t\t * @type {Tone.Transport}\n\t\t */\n\t\tthis.Transport = Transport;\n\n\t\t/**\n\t\t * The unique id of the event\n\t\t * @type {Number}\n\t\t */\n\t\tthis.id = Tone.TransportEvent._eventId++;\n\n\t\t/**\n\t\t * The time the event starts\n\t\t * @type {Ticks}\n\t\t */\n\t\tthis.time = Tone.Ticks(options.time);\n\n\t\t/**\n\t\t * The callback to invoke\n\t\t * @type {Function}\n\t\t */\n\t\tthis.callback = options.callback;\n\n\t\t/**\n\t\t * If the event should be removed after being created.\n\t\t * @type {Boolean}\n\t\t * @private\n\t\t */\n\t\tthis._once = options.once;\n\t};\n\n\tTone.extend(Tone.TransportEvent);\n\n\t/**\n\t * The defaults\n\t * @static\n\t * @type {Object}\n\t */\n\tTone.TransportEvent.defaults = {\n\t\t\"once\" : false,\n\t\t\"callback\" : Tone.noOp,\n\t};\n\n\t/**\n\t * Current ID counter\n\t * @private\n\t * @static\n\t * @type {Number}\n\t */\n\tTone.TransportEvent._eventId = 0;\n\n\t/**\n\t * Invoke the event callback.\n\t * @param  {Time} time  The AudioContext time in seconds of the event\n\t */\n\tTone.TransportEvent.prototype.invoke = function(time){\n\t\tif (this.callback){\n\t\t\tthis.callback(time);\n\t\t\tif (this._once && this.Transport){\n\t\t\t\tthis.Transport.clear(this.id);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Clean up\n\t * @return {Tone.TransportEvent} this\n\t */\n\tTone.TransportEvent.prototype.dispose = function(){\n\t\tTone.prototype.dispose.call(this);\n\t\tthis.Transport = null;\n\t\tthis.callback = null;\n\t\tthis.time = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.TransportEvent;\n});\n","define([\"../core/Tone\", \"../core/Clock\", \"../type/Type\", \"../core/Timeline\",\n\t\"../core/Emitter\", \"../core/Gain\", \"../core/IntervalTimeline\",\n\t\"../core/TransportRepeatEvent\", \"../core/TransportEvent\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Transport for timing musical events.\n\t *          Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n\t *          Tone.Transport timing events pass in the exact time of the scheduled event\n\t *          in the argument of the callback function. Pass that time value to the object\n\t *          you're scheduling. <br><br>\n\t *          A single transport is created for you when the library is initialized.\n\t *          <br><br>\n\t *          The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n\t *          called with the time of that event as the argument.\n\t *\n\t *  @extends {Tone.Emitter}\n\t *  @singleton\n\t *  @example\n\t * //repeated event every 8th note\n\t * Tone.Transport.scheduleRepeat(function(time){\n\t * \t//do something with the time\n\t * }, \"8n\");\n\t *  @example\n\t * //schedule an event on the 16th measure\n\t * Tone.Transport.schedule(function(time){\n\t * \t//do something with the time\n\t * }, \"16:0:0\");\n\t */\n\tTone.Transport = function(){\n\n\t\tTone.Emitter.call(this);\n\n\t\tTone.getContext(function(){\n\n\t\t\t///////////////////////////////////////////////////////////////////////\n\t\t\t//\tLOOPING\n\t\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t\t/**\n\t\t\t * \tIf the transport loops or not.\n\t\t\t *  @type {boolean}\n\t\t\t */\n\t\t\tthis.loop = false;\n\n\t\t\t/**\n\t\t\t * \tThe loop start position in ticks\n\t\t\t *  @type {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._loopStart = 0;\n\n\t\t\t/**\n\t\t\t * \tThe loop end position in ticks\n\t\t\t *  @type {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._loopEnd = 0;\n\n\t\t\t///////////////////////////////////////////////////////////////////////\n\t\t\t//\tCLOCK/TEMPO\n\t\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t\t/**\n\t\t\t *  Pulses per quarter is the number of ticks per quarter note.\n\t\t\t *  @private\n\t\t\t *  @type  {Number}\n\t\t\t */\n\t\t\tthis._ppq = TransportConstructor.defaults.PPQ;\n\n\t\t\t/**\n\t\t\t *  watches the main oscillator for timing ticks\n\t\t\t *  initially starts at 120bpm\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Clock}\n\t\t\t */\n\t\t\tthis._clock = new Tone.Clock({\n\t\t\t\t\"callback\" : this._processTick.bind(this),\n\t\t\t\t\"frequency\" : 0,\n\t\t\t});\n\n\t\t\tthis._bindClockEvents();\n\n\t\t\t/**\n\t\t\t *  The Beats Per Minute of the Transport.\n\t\t\t *  @type {BPM}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * Tone.Transport.bpm.value = 80;\n\t\t\t * //ramp the bpm to 120 over 10 seconds\n\t\t\t * Tone.Transport.bpm.rampTo(120, 10);\n\t\t\t */\n\t\t\tthis.bpm = this._clock.frequency;\n\t\t\tthis.bpm._toUnits = this._toUnits.bind(this);\n\t\t\tthis.bpm._fromUnits = this._fromUnits.bind(this);\n\t\t\tthis.bpm.units = Tone.Type.BPM;\n\t\t\tthis.bpm.value = TransportConstructor.defaults.bpm;\n\t\t\tthis._readOnly(\"bpm\");\n\n\t\t\t/**\n\t\t\t *  The time signature, or more accurately the numerator\n\t\t\t *  of the time signature over a denominator of 4.\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._timeSignature = TransportConstructor.defaults.timeSignature;\n\n\t\t\t///////////////////////////////////////////////////////////////////////\n\t\t\t//\tTIMELINE EVENTS\n\t\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t\t/**\n\t\t\t *  All the events in an object to keep track by ID\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._scheduledEvents = {};\n\n\t\t\t/**\n\t\t\t * \tThe scheduled events.\n\t\t\t *  @type {Tone.Timeline}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._timeline = new Tone.Timeline();\n\n\t\t\t/**\n\t\t\t *  Repeated events\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._repeatedEvents = new Tone.IntervalTimeline();\n\n\t\t\t/**\n\t\t\t *  All of the synced Signals\n\t\t\t *  @private\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t\tthis._syncedSignals = [];\n\n\t\t\t///////////////////////////////////////////////////////////////////////\n\t\t\t//\tSWING\n\t\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t\t/**\n\t\t\t *  The subdivision of the swing\n\t\t\t *  @type  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._swingTicks = TransportConstructor.defaults.PPQ / 2; //8n\n\n\t\t\t/**\n\t\t\t *  The swing amount\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._swingAmount = 0;\n\n\t\t\t//transport is a singleton so it adds itself to the context\n\t\t\tthis.context.transport = this;\n\n\t\t}.bind(this));\n\t};\n\n\tTone.extend(Tone.Transport, Tone.Emitter);\n\n\t/**\n\t *  the defaults\n\t *  @type {Object}\n\t *  @const\n\t *  @static\n\t */\n\tTone.Transport.defaults = {\n\t\t\"bpm\" : 120,\n\t\t\"swing\" : 0,\n\t\t\"swingSubdivision\" : \"8n\",\n\t\t\"timeSignature\" : 4,\n\t\t\"loopStart\" : 0,\n\t\t\"loopEnd\" : \"4m\",\n\t\t\"PPQ\" : 192\n\t};\n\n\t/**\n\t * Is an instanceof Tone.Transport\n\t * @type {Boolean}\n\t */\n\tTone.Transport.prototype.isTransport = true;\n\n\t///////////////////////////////////////////////////////////////////////////////\n\t//\tTICKS\n\t///////////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  called on every tick\n\t *  @param   {number} tickTime clock relative tick time\n\t *  @private\n\t */\n\tTone.Transport.prototype._processTick = function(tickTime, ticks){\n\t\t//handle swing\n\t\tif (this._swingAmount > 0 &&\n\t\t\tticks % this._ppq !== 0 && //not on a downbeat\n\t\t\tticks % (this._swingTicks * 2) !== 0){\n\t\t\t//add some swing\n\t\t\tvar progress = (ticks % (this._swingTicks * 2)) / (this._swingTicks * 2);\n\t\t\tvar amount = Math.sin((progress) * Math.PI) * this._swingAmount;\n\t\t\ttickTime += Tone.Ticks(this._swingTicks * 2/3).toSeconds() * amount;\n\t\t}\n\t\t//do the loop test\n\t\tif (this.loop){\n\t\t\tif (ticks >= this._loopEnd){\n\t\t\t\tthis.emit(\"loopEnd\", tickTime);\n\t\t\t\tthis._clock.setTicksAtTime(this._loopStart, tickTime);\n\t\t\t\tticks = this._loopStart;\n\t\t\t\tthis.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n\t\t\t\tthis.emit(\"loop\", tickTime);\n\t\t\t}\n\t\t}\n\t\t//invoke the timeline events scheduled on this tick\n\t\tthis._timeline.forEachAtTime(ticks, function(event){\n\t\t\tevent.invoke(tickTime);\n\t\t});\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////////\n\t//\tSCHEDULABLE EVENTS\n\t///////////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Schedule an event along the timeline.\n\t *  @param {Function} callback The callback to be invoked at the time.\n\t *  @param {TransportTime}  time The time to invoke the callback at.\n\t *  @return {Number} The id of the event which can be used for canceling the event.\n\t *  @example\n\t * //trigger the callback when the Transport reaches the desired time\n\t * Tone.Transport.schedule(function(time){\n\t * \tenvelope.triggerAttack(time);\n\t * }, \"128i\");\n\t */\n\tTone.Transport.prototype.schedule = function(callback, time){\n\t\tvar event = new Tone.TransportEvent(this, {\n\t\t\t\"time\" : Tone.TransportTime(time),\n\t\t\t\"callback\" : callback\n\t\t});\n\t\treturn this._addEvent(event, this._timeline);\n\t};\n\n\t/**\n\t *  Schedule a repeated event along the timeline. The event will fire\n\t *  at the `interval` starting at the `startTime` and for the specified\n\t *  `duration`.\n\t *  @param  {Function}  callback   The callback to invoke.\n\t *  @param  {Time}    interval   The duration between successive\n\t *                               callbacks. Must be a positive number.\n\t *  @param  {TransportTime=}    startTime  When along the timeline the events should\n\t *                               start being invoked.\n\t *  @param {Time} [duration=Infinity] How long the event should repeat.\n\t *  @return  {Number}    The ID of the scheduled event. Use this to cancel\n\t *                           the event.\n\t *  @example\n\t * //a callback invoked every eighth note after the first measure\n\t * Tone.Transport.scheduleRepeat(callback, \"8n\", \"1m\");\n\t */\n\tTone.Transport.prototype.scheduleRepeat = function(callback, interval, startTime, duration){\n\t\tvar event = new Tone.TransportRepeatEvent(this, {\n\t\t\t\"callback\" : callback,\n\t\t\t\"interval\" : Tone.Time(interval),\n\t\t\t\"time\" : Tone.TransportTime(startTime),\n\t\t\t\"duration\" : Tone.Time(Tone.defaultArg(duration, Infinity)),\n\t\t});\n\t\t//kick it off if the Transport is started\n\t\treturn this._addEvent(event, this._repeatedEvents);\n\t};\n\n\t/**\n\t *  Schedule an event that will be removed after it is invoked.\n\t *  Note that if the given time is less than the current transport time,\n\t *  the event will be invoked immediately.\n\t *  @param {Function} callback The callback to invoke once.\n\t *  @param {TransportTime} time The time the callback should be invoked.\n\t *  @returns {Number} The ID of the scheduled event.\n\t */\n\tTone.Transport.prototype.scheduleOnce = function(callback, time){\n\t\tvar event = new Tone.TransportEvent(this, {\n\t\t\t\"time\" : Tone.TransportTime(time),\n\t\t\t\"callback\" : callback,\n\t\t\t\"once\" : true\n\t\t});\n\t\treturn this._addEvent(event, this._timeline);\n\t};\n\n\t/**\n\t *  Clear the passed in event id from the timeline\n\t *  @param {Number} eventId The id of the event.\n\t *  @returns {Tone.Transport} this\n\t */\n\tTone.Transport.prototype.clear = function(eventId){\n\t\tif (this._scheduledEvents.hasOwnProperty(eventId)){\n\t\t\tvar item = this._scheduledEvents[eventId.toString()];\n\t\t\titem.timeline.remove(item.event);\n\t\t\titem.event.dispose();\n\t\t\tdelete this._scheduledEvents[eventId.toString()];\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add an event to the correct timeline. Keep track of the\n\t * timeline it was added to.\n\t * @param {Tone.TransportEvent}\tevent\n\t * @param {Tone.Timeline} timeline\n\t * @returns {Number} the event id which was just added\n\t * @private\n\t */\n\tTone.Transport.prototype._addEvent = function(event, timeline){\n\t\tthis._scheduledEvents[event.id.toString()] = {\n\t\t\t\"event\" : event,\n\t\t\t\"timeline\" : timeline\n\t\t};\n\t\ttimeline.add(event);\n\t\treturn event.id;\n\t};\n\n\t/**\n\t *  Remove scheduled events from the timeline after\n\t *  the given time. Repeated events will be removed\n\t *  if their startTime is after the given time\n\t *  @param {TransportTime} [after=0] Clear all events after\n\t *                          this time.\n\t *  @returns {Tone.Transport} this\n\t */\n\tTone.Transport.prototype.cancel = function(after){\n\t\tafter = Tone.defaultArg(after, 0);\n\t\tafter = this.toTicks(after);\n\t\tthis._timeline.forEachFrom(after, function(event){\n\t\t\tthis.clear(event.id);\n\t\t}.bind(this));\n\t\tthis._repeatedEvents.forEachFrom(after, function(event){\n\t\t\tthis.clear(event.id);\n\t\t}.bind(this));\n\t\treturn this;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////////\n\t//\tSTART/STOP/PAUSE\n\t///////////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Bind start/stop/pause events from the clock and emit them.\n\t *  @private\n\t */\n\tTone.Transport.prototype._bindClockEvents = function(){\n\t\tthis._clock.on(\"start\", function(time, offset){\n\t\t\toffset = Tone.Ticks(offset).toSeconds();\n\t\t\tthis.emit(\"start\", time, offset);\n\t\t}.bind(this));\n\n\t\tthis._clock.on(\"stop\", function(time){\n\t\t\tthis.emit(\"stop\", time);\n\t\t}.bind(this));\n\n\t\tthis._clock.on(\"pause\", function(time){\n\t\t\tthis.emit(\"pause\", time);\n\t\t}.bind(this));\n\t};\n\n\t/**\n\t *  Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n\t *  @type {Tone.State}\n\t *  @readOnly\n\t *  @memberOf Tone.Transport#\n\t *  @name state\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"state\", {\n\t\tget : function(){\n\t\t\treturn this._clock.getStateAtTime(this.now());\n\t\t}\n\t});\n\n\t/**\n\t *  Start the transport and all sources synced to the transport.\n\t *  @param  {Time} [time=now] The time when the transport should start.\n\t *  @param  {TransportTime=} offset The timeline offset to start the transport.\n\t *  @returns {Tone.Transport} this\n\t *  @example\n\t * //start the transport in one second starting at beginning of the 5th measure.\n\t * Tone.Transport.start(\"+1\", \"4:0:0\");\n\t */\n\tTone.Transport.prototype.start = function(time, offset){\n\t\t//start the clock\n\t\tif (Tone.isDefined(offset)){\n\t\t\toffset = this.toTicks(offset);\n\t\t}\n\t\tthis._clock.start(time, offset);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Stop the transport and all sources synced to the transport.\n\t *  @param  {Time} [time=now] The time when the transport should stop.\n\t *  @returns {Tone.Transport} this\n\t *  @example\n\t * Tone.Transport.stop();\n\t */\n\tTone.Transport.prototype.stop = function(time){\n\t\tthis._clock.stop(time);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Pause the transport and all sources synced to the transport.\n\t *  @param  {Time} [time=now]\n\t *  @returns {Tone.Transport} this\n\t */\n\tTone.Transport.prototype.pause = function(time){\n\t\tthis._clock.pause(time);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Toggle the current state of the transport. If it is\n\t * started, it will stop it, otherwise it will start the Transport.\n\t * @param  {Time=} time The time of the event\n\t * @return {Tone.Transport}      this\n\t */\n\tTone.Transport.prototype.toggle = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tif (this._clock.getStateAtTime(time) !== Tone.State.Started){\n\t\t\tthis.start(time);\n\t\t} else {\n\t\t\tthis.stop(time);\n\t\t}\n\t\treturn this;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////////\n\t//\tSETTERS/GETTERS\n\t///////////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  The time signature as just the numerator over 4.\n\t *  For example 4/4 would be just 4 and 6/8 would be 3.\n\t *  @memberOf Tone.Transport#\n\t *  @type {Number|Array}\n\t *  @name timeSignature\n\t *  @example\n\t * //common time\n\t * Tone.Transport.timeSignature = 4;\n\t * // 7/8\n\t * Tone.Transport.timeSignature = [7, 8];\n\t * //this will be reduced to a single number\n\t * Tone.Transport.timeSignature; //returns 3.5\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"timeSignature\", {\n\t\tget : function(){\n\t\t\treturn this._timeSignature;\n\t\t},\n\t\tset : function(timeSig){\n\t\t\tif (Tone.isArray(timeSig)){\n\t\t\t\ttimeSig = (timeSig[0] / timeSig[1]) * 4;\n\t\t\t}\n\t\t\tthis._timeSignature = timeSig;\n\t\t}\n\t});\n\n\t/**\n\t * When the Tone.Transport.loop = true, this is the starting position of the loop.\n\t * @memberOf Tone.Transport#\n\t * @type {Time}\n\t * @name loopStart\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"loopStart\", {\n\t\tget : function(){\n\t\t\treturn Tone.Ticks(this._loopStart).toSeconds();\n\t\t},\n\t\tset : function(startPosition){\n\t\t\tthis._loopStart = this.toTicks(startPosition);\n\t\t}\n\t});\n\n\t/**\n\t * When the Tone.Transport.loop = true, this is the ending position of the loop.\n\t * @memberOf Tone.Transport#\n\t * @type {Time}\n\t * @name loopEnd\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"loopEnd\", {\n\t\tget : function(){\n\t\t\treturn Tone.Ticks(this._loopEnd).toSeconds();\n\t\t},\n\t\tset : function(endPosition){\n\t\t\tthis._loopEnd = this.toTicks(endPosition);\n\t\t}\n\t});\n\n\t/**\n\t *  Set the loop start and stop at the same time.\n\t *  @param {TransportTime} startPosition\n\t *  @param {TransportTime} endPosition\n\t *  @returns {Tone.Transport} this\n\t *  @example\n\t * //loop over the first measure\n\t * Tone.Transport.setLoopPoints(0, \"1m\");\n\t * Tone.Transport.loop = true;\n\t */\n\tTone.Transport.prototype.setLoopPoints = function(startPosition, endPosition){\n\t\tthis.loopStart = startPosition;\n\t\tthis.loopEnd = endPosition;\n\t\treturn this;\n\t};\n\n\t/**\n\t *  The swing value. Between 0-1 where 1 equal to\n\t *  the note + half the subdivision.\n\t *  @memberOf Tone.Transport#\n\t *  @type {NormalRange}\n\t *  @name swing\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"swing\", {\n\t\tget : function(){\n\t\t\treturn this._swingAmount;\n\t\t},\n\t\tset : function(amount){\n\t\t\t//scale the values to a normal range\n\t\t\tthis._swingAmount = amount;\n\t\t}\n\t});\n\n\t/**\n\t *  Set the subdivision which the swing will be applied to.\n\t *  The default value is an 8th note. Value must be less\n\t *  than a quarter note.\n\t *\n\t *  @memberOf Tone.Transport#\n\t *  @type {Time}\n\t *  @name swingSubdivision\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"swingSubdivision\", {\n\t\tget : function(){\n\t\t\treturn Tone.Ticks(this._swingTicks).toNotation();\n\t\t},\n\t\tset : function(subdivision){\n\t\t\tthis._swingTicks = this.toTicks(subdivision);\n\t\t}\n\t});\n\n\t/**\n\t *  The Transport's position in Bars:Beats:Sixteenths.\n\t *  Setting the value will jump to that position right away.\n\t *  @memberOf Tone.Transport#\n\t *  @type {BarsBeatsSixteenths}\n\t *  @name position\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"position\", {\n\t\tget : function(){\n\t\t\tvar now = this.now();\n\t\t\tvar ticks = this._clock.getTicksAtTime(now);\n\t\t\treturn Tone.Ticks(ticks).toBarsBeatsSixteenths();\n\t\t},\n\t\tset : function(progress){\n\t\t\tvar ticks = this.toTicks(progress);\n\t\t\tthis.ticks = ticks;\n\t\t}\n\t});\n\n\t/**\n\t *  The Transport's position in seconds\n\t *  Setting the value will jump to that position right away.\n\t *  @memberOf Tone.Transport#\n\t *  @type {Seconds}\n\t *  @name seconds\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"seconds\", {\n\t\tget : function(){\n\t\t\treturn this._clock.seconds;\n\t\t},\n\t\tset : function(s){\n\t\t\tvar now = this.now();\n\t\t\tvar ticks = this.bpm.timeToTicks(s, now);\n\t\t\tthis.ticks = ticks;\n\t\t}\n\t});\n\n\t/**\n\t *  The Transport's loop position as a normalized value. Always\n\t *  returns 0 if the transport if loop is not true.\n\t *  @memberOf Tone.Transport#\n\t *  @name progress\n\t *  @type {NormalRange}\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"progress\", {\n\t\tget : function(){\n\t\t\tif (this.loop){\n\t\t\t\tvar now = this.now();\n\t\t\t\tvar ticks = this._clock.getTicksAtTime(now);\n\t\t\t\treturn (ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  The transports current tick position.\n\t *\n\t *  @memberOf Tone.Transport#\n\t *  @type {Ticks}\n\t *  @name ticks\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"ticks\", {\n\t\tget : function(){\n\t\t\treturn this._clock.ticks;\n\t\t},\n\t\tset : function(t){\n\t\t\tif (this._clock.ticks !== t){\n\t\t\t\tvar now = this.now();\n\t\t\t\t//stop everything synced to the transport\n\t\t\t\tif (this.state === Tone.State.Started){\n\t\t\t\t\tthis.emit(\"stop\", now);\n\t\t\t\t\tthis._clock.setTicksAtTime(t, now);\n\t\t\t\t\t//restart it with the new time\n\t\t\t\t\tthis.emit(\"start\", now, this.seconds);\n\t\t\t\t} else {\n\t\t\t\t\tthis._clock.setTicksAtTime(t, now);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * Get the clock's ticks at the given time.\n\t * @param  {Time} time  When to get the tick value\n\t * @return {Ticks}       The tick value at the given time.\n\t */\n\tTone.Transport.prototype.getTicksAtTime = function(time){\n\t\treturn Math.round(this._clock.getTicksAtTime(time));\n\t};\n\n\t/**\n\t *  Return the elapsed seconds at the given time.\n\t *  @param  {Time}  time  When to get the elapsed seconds\n\t *  @return  {Seconds}  The number of elapsed seconds\n\t */\n\tTone.Transport.prototype.getSecondsAtTime = function(time){\n\t\treturn this._clock.getSecondsAtTime(time);\n\t};\n\n\t/**\n\t *  Pulses Per Quarter note. This is the smallest resolution\n\t *  the Transport timing supports. This should be set once\n\t *  on initialization and not set again. Changing this value\n\t *  after other objects have been created can cause problems.\n\t *\n\t *  @memberOf Tone.Transport#\n\t *  @type {Number}\n\t *  @name PPQ\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"PPQ\", {\n\t\tget : function(){\n\t\t\treturn this._ppq;\n\t\t},\n\t\tset : function(ppq){\n\t\t\tvar bpm = this.bpm.value;\n\t\t\tthis._ppq = ppq;\n\t\t\tthis.bpm.value = bpm;\n\t\t}\n\t});\n\n\t/**\n\t *  Convert from BPM to frequency (factoring in PPQ)\n\t *  @param  {BPM}  bpm The BPM value to convert to frequency\n\t *  @return  {Frequency}  The BPM as a frequency with PPQ factored in.\n\t *  @private\n\t */\n\tTone.Transport.prototype._fromUnits = function(bpm){\n\t\treturn 1 / (60 / bpm / this.PPQ);\n\t};\n\n\t/**\n\t *  Convert from frequency (with PPQ) into BPM\n\t *  @param  {Frequency}  freq The clocks frequency to convert to BPM\n\t *  @return  {BPM}  The frequency value as BPM.\n\t *  @private\n\t */\n\tTone.Transport.prototype._toUnits = function(freq){\n\t\treturn (freq / this.PPQ) * 60;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////////\n\t//\tSYNCING\n\t///////////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Returns the time aligned to the next subdivision\n\t *  of the Transport. If the Transport is not started,\n\t *  it will return 0.\n\t *  Note: this will not work precisely during tempo ramps.\n\t *  @param  {Time}  subdivision  The subdivision to quantize to\n\t *  @return  {Number}  The context time of the next subdivision.\n\t *  @example\n\t * Tone.Transport.start(); //the transport must be started\n\t * Tone.Transport.nextSubdivision(\"4n\");\n\t */\n\tTone.Transport.prototype.nextSubdivision = function(subdivision){\n\t\tsubdivision = this.toTicks(subdivision);\n\t\tif (this.state !== Tone.State.Started){\n\t\t\t//if the transport's not started, return 0\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tvar now = this.now();\n\t\t\t//the remainder of the current ticks and the subdivision\n\t\t\tvar transportPos = this.getTicksAtTime(now);\n\t\t\tvar remainingTicks = subdivision - transportPos % subdivision;\n\t\t\treturn this._clock.nextTickTime(remainingTicks, now);\n\t\t}\n\t};\n\n\t/**\n\t *  Attaches the signal to the tempo control signal so that\n\t *  any changes in the tempo will change the signal in the same\n\t *  ratio.\n\t *\n\t *  @param  {Tone.Signal} signal\n\t *  @param {number=} ratio Optionally pass in the ratio between\n\t *                         the two signals. Otherwise it will be computed\n\t *                         based on their current values.\n\t *  @returns {Tone.Transport} this\n\t */\n\tTone.Transport.prototype.syncSignal = function(signal, ratio){\n\t\tif (!ratio){\n\t\t\t//get the sync ratio\n\t\t\tvar now = this.now();\n\t\t\tif (signal.getValueAtTime(now) !== 0){\n\t\t\t\tratio = signal.getValueAtTime(now) / this.bpm.getValueAtTime(now);\n\t\t\t} else {\n\t\t\t\tratio = 0;\n\t\t\t}\n\t\t}\n\t\tvar ratioSignal = new Tone.Gain(ratio);\n\t\tthis.bpm.chain(ratioSignal, signal._param);\n\t\tthis._syncedSignals.push({\n\t\t\t\"ratio\" : ratioSignal,\n\t\t\t\"signal\" : signal,\n\t\t\t\"initial\" : signal.value\n\t\t});\n\t\tsignal.value = 0;\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Unsyncs a previously synced signal from the transport's control.\n\t *  See Tone.Transport.syncSignal.\n\t *  @param  {Tone.Signal} signal\n\t *  @returns {Tone.Transport} this\n\t */\n\tTone.Transport.prototype.unsyncSignal = function(signal){\n\t\tfor (var i = this._syncedSignals.length - 1; i >= 0; i--){\n\t\t\tvar syncedSignal = this._syncedSignals[i];\n\t\t\tif (syncedSignal.signal === signal){\n\t\t\t\tsyncedSignal.ratio.dispose();\n\t\t\t\tsyncedSignal.signal.value = syncedSignal.initial;\n\t\t\t\tthis._syncedSignals.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Clean up.\n\t *  @returns {Tone.Transport} this\n\t *  @private\n\t */\n\tTone.Transport.prototype.dispose = function(){\n\t\tTone.Emitter.prototype.dispose.call(this);\n\t\tthis._clock.dispose();\n\t\tthis._clock = null;\n\t\tthis._writable(\"bpm\");\n\t\tthis.bpm = null;\n\t\tthis._timeline.dispose();\n\t\tthis._timeline = null;\n\t\tthis._repeatedEvents.dispose();\n\t\tthis._repeatedEvents = null;\n\t\treturn this;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////////\n\t//\tINITIALIZATION\n\t///////////////////////////////////////////////////////////////////////////////\n\n\tvar TransportConstructor = Tone.Transport;\n\tTone.Transport = new TransportConstructor();\n\n\tTone.Context.on(\"init\", function(context){\n\t\tif (context.transport && context.transport.isTransport){\n\t\t\tTone.Transport = context.transport;\n\t\t} else {\n\t\t\tTone.Transport = new TransportConstructor();\n\t\t}\n\t});\n\n\tTone.Context.on(\"close\", function(context){\n\t\tif (context.transport && context.transport.isTransport){\n\t\t\tcontext.transport.dispose();\n\t\t}\n\t});\n\n\treturn Tone.Transport;\n});\n","define([\"../core/Tone\", \"../source/Source\", \"../source/Oscillator\",\n\t\"../signal/Multiply\", \"../core/Gain\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.FatOscillator\n\t *\n\t *  @extends {Tone.Source}\n\t *  @constructor\n\t *  @param {Frequency} frequency The starting frequency of the oscillator.\n\t *  @param {String} type The type of the carrier oscillator.\n\t *  @param {String} modulationType The type of the modulator oscillator.\n\t *  @example\n\t * //a sine oscillator frequency-modulated by a square wave\n\t * var fmOsc = new Tone.FatOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t */\n\tTone.FatOscillator = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"spread\"], Tone.FatOscillator);\n\t\tTone.Source.call(this, options);\n\n\t\t/**\n\t\t *  The oscillator's frequency\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t\t/**\n\t\t *  The detune control signal.\n\t\t *  @type {Cents}\n\t\t *  @signal\n\t\t */\n\t\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t\t/**\n\t\t *  The array of oscillators\n\t\t *  @type {Array}\n\t\t *  @private\n\t\t */\n\t\tthis._oscillators = [];\n\n\t\t/**\n\t\t *  The total spread of the oscillators\n\t\t *  @type  {Cents}\n\t\t *  @private\n\t\t */\n\t\tthis._spread = options.spread;\n\n\t\t/**\n\t\t *  The type of the oscillator\n\t\t *  @type {String}\n\t\t *  @private\n\t\t */\n\t\tthis._type = options.type;\n\n\t\t/**\n\t\t *  The phase of the oscillators\n\t\t *  @type {Degrees}\n\t\t *  @private\n\t\t */\n\t\tthis._phase = options.phase;\n\n\t\t/**\n\t\t *  The partials array\n\t\t *  @type {Array}\n\t\t *  @private\n\t\t */\n\t\tthis._partials = options.partials;\n\n\t\t/**\n\t\t *  The number of partials to use\n\t\t *  @type {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._partialCount = options.partialCount;\n\n\t\t//set the count initially\n\t\tthis.count = options.count;\n\t\tthis._readOnly([\"frequency\", \"detune\"]);\n\t};\n\n\tTone.extend(Tone.FatOscillator, Tone.Source);\n\n\t/**\n\t *  default values\n\t *  @static\n\t *  @type {Object}\n\t *  @const\n\t */\n\tTone.FatOscillator.defaults = {\n\t\t\"frequency\" : 440,\n\t\t\"detune\" : 0,\n\t\t\"phase\" : 0,\n\t\t\"spread\" : 20,\n\t\t\"count\" : 3,\n\t\t\"type\" : \"sawtooth\",\n\t\t\"partials\" : [],\n\t\t\"partialCount\" : 0\n\t};\n\n\t/**\n\t *  start the oscillator\n\t *  @param  {Time} [time=now]\n\t *  @private\n\t */\n\tTone.FatOscillator.prototype._start = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._forEach(function(osc){\n\t\t\tosc.start(time);\n\t\t});\n\t};\n\n\t/**\n\t *  stop the oscillator\n\t *  @param  {Time} [time=now]\n\t *  @private\n\t */\n\tTone.FatOscillator.prototype._stop = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._forEach(function(osc){\n\t\t\tosc.stop(time);\n\t\t});\n\t};\n\n\t/**\n\t *  restart the oscillator\n\t *  @param  {Time} time (optional) timing parameter\n\t *  @private\n\t */\n\tTone.FatOscillator.prototype.restart = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._forEach(function(osc){\n\t\t\tosc.restart(time);\n\t\t});\n\t};\n\n\t/**\n\t *  Iterate over all of the oscillators\n\t *  @param  {Function}  iterator  The iterator function\n\t *  @private\n\t */\n\tTone.FatOscillator.prototype._forEach = function(iterator){\n\t\tfor (var i = 0; i < this._oscillators.length; i++){\n\t\t\titerator.call(this, this._oscillators[i], i);\n\t\t}\n\t};\n\n\t/**\n\t * The type of the carrier oscillator\n\t * @memberOf Tone.FatOscillator#\n\t * @type {string}\n\t * @name type\n\t */\n\tObject.defineProperty(Tone.FatOscillator.prototype, \"type\", {\n\t\tget : function(){\n\t\t\treturn this._type;\n\t\t},\n\t\tset : function(type){\n\t\t\tthis._type = type;\n\t\t\tthis._forEach(function(osc){\n\t\t\t\tosc.type = type;\n\t\t\t});\n\t\t}\n\t});\n\n\t/**\n\t * The detune spread between the oscillators. If \"count\" is\n\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t * for a total detune spread of 40 cents.\n\t * @memberOf Tone.FatOscillator#\n\t * @type {Cents}\n\t * @name spread\n\t */\n\tObject.defineProperty(Tone.FatOscillator.prototype, \"spread\", {\n\t\tget : function(){\n\t\t\treturn this._spread;\n\t\t},\n\t\tset : function(spread){\n\t\t\tthis._spread = spread;\n\t\t\tif (this._oscillators.length > 1){\n\t\t\t\tvar start = -spread/2;\n\t\t\t\tvar step = spread / (this._oscillators.length - 1);\n\t\t\t\tthis._forEach(function(osc, i){\n\t\t\t\t\tosc.detune.value = start + step * i;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The number of detuned oscillators\n\t * @memberOf Tone.FatOscillator#\n\t * @type {Number}\n\t * @name count\n\t */\n\tObject.defineProperty(Tone.FatOscillator.prototype, \"count\", {\n\t\tget : function(){\n\t\t\treturn this._oscillators.length;\n\t\t},\n\t\tset : function(count){\n\t\t\tcount = Math.max(count, 1);\n\t\t\tif (this._oscillators.length !== count){\n\t\t\t\t//dispose the previous oscillators\n\t\t\t\tthis._forEach(function(osc){\n\t\t\t\t\tosc.dispose();\n\t\t\t\t});\n\t\t\t\tthis._oscillators = [];\n\t\t\t\tfor (var i = 0; i < count; i++){\n\t\t\t\t\tvar osc = new Tone.Oscillator();\n\t\t\t\t\tif (this.type === Tone.Oscillator.Type.Custom){\n\t\t\t\t\t\tosc.partials = this._partials;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tosc.type = this._type;\n\t\t\t\t\t}\n\t\t\t\t\tosc.partialCount = this._partialCount;\n\t\t\t\t\tosc.phase = this._phase + (i / count) * 360;\n\t\t\t\t\tosc.volume.value = -6 - count*1.1;\n\t\t\t\t\tthis.frequency.connect(osc.frequency);\n\t\t\t\t\tthis.detune.connect(osc.detune);\n\t\t\t\t\tosc.connect(this.output);\n\t\t\t\t\tthis._oscillators[i] = osc;\n\t\t\t\t}\n\t\t\t\t//set the spread\n\t\t\t\tthis.spread = this._spread;\n\t\t\t\tif (this.state === Tone.State.Started){\n\t\t\t\t\tthis._forEach(function(osc){\n\t\t\t\t\t\tosc.start();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t * @memberOf Tone.FatOscillator#\n\t * @type {Number}\n\t * @name phase\n\t */\n\tObject.defineProperty(Tone.FatOscillator.prototype, \"phase\", {\n\t\tget : function(){\n\t\t\treturn this._phase;\n\t\t},\n\t\tset : function(phase){\n\t\t\tthis._phase = phase;\n\t\t\tthis._forEach(function(osc){\n\t\t\t\tosc.phase = phase;\n\t\t\t});\n\t\t}\n\t});\n\n\t/**\n\t * The oscillator type without the partialsCount appended to the end\n\t * @memberOf Tone.FatOscillator#\n\t * @type {string}\n\t * @name baseType\n\t * @example\n\t * osc.type = 'sine2'\n\t * osc.baseType //'sine'\n\t * osc.partialCount = 2\n\t */\n\tObject.defineProperty(Tone.FatOscillator.prototype, \"baseType\", {\n\t\tget : function(){\n\t\t\treturn this._oscillators[0].baseType;\n\t\t},\n\t\tset : function(baseType){\n\t\t\tthis._forEach(function(osc){\n\t\t\t\tosc.baseType = baseType;\n\t\t\t});\n\t\t\tthis._type = this._oscillators[0].type;\n\t\t}\n\t});\n\n\t/**\n\t * The partials of the carrier waveform. A partial represents\n\t * the amplitude at a harmonic. The first harmonic is the\n\t * fundamental frequency, the second is the octave and so on\n\t * following the harmonic series.\n\t * Setting this value will automatically set the type to \"custom\".\n\t * The value is an empty array when the type is not \"custom\".\n\t * @memberOf Tone.FatOscillator#\n\t * @type {Array}\n\t * @name partials\n\t * @example\n\t * osc.partials = [1, 0.2, 0.01];\n\t */\n\tObject.defineProperty(Tone.FatOscillator.prototype, \"partials\", {\n\t\tget : function(){\n\t\t\treturn this._oscillators[0].partials;\n\t\t},\n\t\tset : function(partials){\n\t\t\tthis._partials = partials;\n\t\t\tthis._type = Tone.Oscillator.Type.Custom;\n\t\t\tthis._forEach(function(osc){\n\t\t\t\tosc.partials = partials;\n\t\t\t});\n\t\t}\n\t});\n\n\t/**\n\t * 'partialCount' offers an alternative way to set the number of used partials. \n\t * When partialCount is 0, the maximum number of partials are used when representing\n\t * the waveform using the periodicWave. When 'partials' is set, this value is \n\t * not settable, but equals the length of the partials array.\n\t * @memberOf Tone.FatOscillator#\n\t * @type {Number}\n\t * @name partialCount\n\t */\n\tObject.defineProperty(Tone.FatOscillator.prototype, \"partialCount\", {\n\t\tget : function(){\n\t\t\treturn this._oscillators[0].partialCount;\n\t\t},\n\t\tset : function(partialCount){\n\t\t\tthis._partialCount = partialCount;\n\t\t\tthis._forEach(function(osc){\n\t\t\t\tosc.partialCount = partialCount;\n\t\t\t});\n\t\t\tthis._type = this._oscillators[0].type;\n\t\t}\n\t});\n\n\t/**\n\t *  Clean up.\n\t *  @return {Tone.FatOscillator} this\n\t */\n\tTone.FatOscillator.prototype.dispose = function(){\n\t\tTone.Source.prototype.dispose.call(this);\n\t\tthis._writable([\"frequency\", \"detune\"]);\n\t\tthis.frequency.dispose();\n\t\tthis.frequency = null;\n\t\tthis.detune.dispose();\n\t\tthis.detune = null;\n\t\tthis._forEach(function(osc){\n\t\t\tosc.dispose();\n\t\t});\n\t\tthis._oscillators = null;\n\t\tthis._partials = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.FatOscillator;\n});\n","define([\"../core/Tone\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class A Timeline class for scheduling and maintaining state\n\t *         along a timeline. All events must have a \"time\" property.\n\t *         Internally, events are stored in time order for fast\n\t *         retrieval.\n\t *  @extends {Tone}\n\t *  @param {Positive} [memory=Infinity] The number of previous events that are retained.\n\t */\n\tTone.Timeline = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"memory\"], Tone.Timeline);\n\t\tTone.call(this);\n\n\t\t/**\n\t\t *  The array of scheduled timeline events\n\t\t *  @type  {Array}\n\t\t *  @private\n\t\t */\n\t\tthis._timeline = [];\n\n\t\t/**\n\t\t *  The memory of the timeline, i.e.\n\t\t *  how many events in the past it will retain\n\t\t *  @type {Positive}\n\t\t */\n\t\tthis.memory = options.memory;\n\t};\n\n\tTone.extend(Tone.Timeline);\n\n\t/**\n\t *  the default parameters\n\t *  @static\n\t *  @const\n\t */\n\tTone.Timeline.defaults = {\n\t\t\"memory\" : Infinity\n\t};\n\n\t/**\n\t *  The number of items in the timeline.\n\t *  @type {Number}\n\t *  @memberOf Tone.Timeline#\n\t *  @name length\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.Timeline.prototype, \"length\", {\n\t\tget : function(){\n\t\t\treturn this._timeline.length;\n\t\t}\n\t});\n\n\t/**\n\t *  Insert an event object onto the timeline. Events must have a \"time\" attribute.\n\t *  @param  {Object}  event  The event object to insert into the\n\t *                           timeline.\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.add = function(event){\n\t\t//the event needs to have a time attribute\n\t\tif (Tone.isUndef(event.time)){\n\t\t\tthrow new Error(\"Tone.Timeline: events must have a time attribute\");\n\t\t}\n\t\tevent.time = event.time.valueOf();\n\t\tvar index = this._search(event.time);\n\t\tthis._timeline.splice(index + 1, 0, event);\n\t\t//if the length is more than the memory, remove the previous ones\n\t\tif (this.length > this.memory){\n\t\t\tvar diff = this.length - this.memory;\n\t\t\tthis._timeline.splice(0, diff);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Remove an event from the timeline.\n\t *  @param  {Object}  event  The event object to remove from the list.\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.remove = function(event){\n\t\tvar index = this._timeline.indexOf(event);\n\t\tif (index !== -1){\n\t\t\tthis._timeline.splice(index, 1);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Get the nearest event whose time is less than or equal to the given time.\n\t *  @param  {Number}  time  The time to query.\n\t *  @param  {String}  comparator Which value in the object to compare\n\t *  @returns {Object} The event object set after that time.\n\t */\n\tTone.Timeline.prototype.get = function(time, comparator){\n\t\tcomparator = Tone.defaultArg(comparator, \"time\");\n\t\tvar index = this._search(time, comparator);\n\t\tif (index !== -1){\n\t\t\treturn this._timeline[index];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\t/**\n\t *  Return the first event in the timeline without removing it\n\t *  @returns {Object} The first event object\n\t */\n\tTone.Timeline.prototype.peek = function(){\n\t\treturn this._timeline[0];\n\t};\n\n\t/**\n\t *  Return the first event in the timeline and remove it\n\t *  @returns {Object} The first event object\n\t */\n\tTone.Timeline.prototype.shift = function(){\n\t\treturn this._timeline.shift();\n\t};\n\n\t/**\n\t *  Get the event which is scheduled after the given time.\n\t *  @param  {Number}  time  The time to query.\n\t *  @param  {String}  comparator Which value in the object to compare\n\t *  @returns {Object} The event object after the given time\n\t */\n\tTone.Timeline.prototype.getAfter = function(time, comparator){\n\t\tcomparator = Tone.defaultArg(comparator, \"time\");\n\t\tvar index = this._search(time, comparator);\n\t\tif (index + 1 < this._timeline.length){\n\t\t\treturn this._timeline[index + 1];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\t/**\n\t *  Get the event before the event at the given time.\n\t *  @param  {Number}  time  The time to query.\n\t *  @param  {String}  comparator Which value in the object to compare\n\t *  @returns {Object} The event object before the given time\n\t */\n\tTone.Timeline.prototype.getBefore = function(time, comparator){\n\t\tcomparator = Tone.defaultArg(comparator, \"time\");\n\t\tvar len = this._timeline.length;\n\t\t//if it's after the last item, return the last item\n\t\tif (len > 0 && this._timeline[len - 1][comparator] < time){\n\t\t\treturn this._timeline[len - 1];\n\t\t}\n\t\tvar index = this._search(time, comparator);\n\t\tif (index - 1 >= 0){\n\t\t\treturn this._timeline[index - 1];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\t/**\n\t *  Cancel events after the given time\n\t *  @param  {Number}  time  The time to query.\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.cancel = function(after){\n\t\tif (this._timeline.length > 1){\n\t\t\tvar index = this._search(after);\n\t\t\tif (index >= 0){\n\t\t\t\tif (this._timeline[index].time === after){\n\t\t\t\t\t//get the first item with that time\n\t\t\t\t\tfor (var i = index; i >= 0; i--){\n\t\t\t\t\t\tif (this._timeline[i].time === after){\n\t\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._timeline = this._timeline.slice(0, index);\n\t\t\t\t} else {\n\t\t\t\t\tthis._timeline = this._timeline.slice(0, index + 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._timeline = [];\n\t\t\t}\n\t\t} else if (this._timeline.length === 1){\n\t\t\t//the first item's time\n\t\t\tif (this._timeline[0].time >= after){\n\t\t\t\tthis._timeline = [];\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Cancel events before or equal to the given time.\n\t *  @param  {Number}  time  The time to cancel before.\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.cancelBefore = function(time){\n\t\tvar index = this._search(time);\n\t\tif (index >= 0){\n\t\t\tthis._timeline = this._timeline.slice(index + 1);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns the previous event if there is one. null otherwise\n\t * @param  {Object} event The event to find the previous one of\n\t * @return {Object}       The event right before the given event\n\t */\n\tTone.Timeline.prototype.previousEvent = function(event){\n\t\tvar index = this._timeline.indexOf(event);\n\t\tif (index > 0){\n\t\t\treturn this._timeline[index-1];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\t/**\n\t *  Does a binary search on the timeline array and returns the\n\t *  nearest event index whose time is after or equal to the given time.\n\t *  If a time is searched before the first index in the timeline, -1 is returned.\n\t *  If the time is after the end, the index of the last item is returned.\n\t *  @param  {Number}  time\n\t *  @param  {String}  comparator Which value in the object to compare\n\t *  @return  {Number} the index in the timeline array\n\t *  @private\n\t */\n\tTone.Timeline.prototype._search = function(time, comparator){\n\t\tif (this._timeline.length === 0){\n\t\t\treturn -1;\n\t\t}\n\t\tcomparator = Tone.defaultArg(comparator, \"time\");\n\t\tvar beginning = 0;\n\t\tvar len = this._timeline.length;\n\t\tvar end = len;\n\t\tif (len > 0 && this._timeline[len - 1][comparator] <= time){\n\t\t\treturn len - 1;\n\t\t}\n\t\twhile (beginning < end){\n\t\t\t// calculate the midpoint for roughly equal partition\n\t\t\tvar midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t\t\tvar event = this._timeline[midPoint];\n\t\t\tvar nextEvent = this._timeline[midPoint + 1];\n\t\t\tif (event[comparator] === time){\n\t\t\t\t//choose the last one that has the same time\n\t\t\t\tfor (var i = midPoint; i < this._timeline.length; i++){\n\t\t\t\t\tvar testEvent = this._timeline[i];\n\t\t\t\t\tif (testEvent[comparator] === time){\n\t\t\t\t\t\tmidPoint = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn midPoint;\n\t\t\t} else if (event[comparator] < time && nextEvent[comparator] > time){\n\t\t\t\treturn midPoint;\n\t\t\t} else if (event[comparator] > time){\n\t\t\t\t//search lower\n\t\t\t\tend = midPoint;\n\t\t\t} else {\n\t\t\t\t//search upper\n\t\t\t\tbeginning = midPoint + 1;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t};\n\n\t/**\n\t *  Internal iterator. Applies extra safety checks for\n\t *  removing items from the array.\n\t *  @param  {Function}  callback\n\t *  @param  {Number=}    lowerBound\n\t *  @param  {Number=}    upperBound\n\t *  @private\n\t */\n\tTone.Timeline.prototype._iterate = function(callback, lowerBound, upperBound){\n\t\tlowerBound = Tone.defaultArg(lowerBound, 0);\n\t\tupperBound = Tone.defaultArg(upperBound, this._timeline.length-1);\n\t\tthis._timeline.slice(lowerBound, upperBound+1).forEach(function(event){\n\t\t\tcallback.call(this, event);\n\t\t}.bind(this));\n\t};\n\n\t/**\n\t *  Iterate over everything in the array\n\t *  @param  {Function}  callback The callback to invoke with every item\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.forEach = function(callback){\n\t\tthis._iterate(callback);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Iterate over everything in the array at or before the given time.\n\t *  @param  {Number}  time The time to check if items are before\n\t *  @param  {Function}  callback The callback to invoke with every item\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.forEachBefore = function(time, callback){\n\t\t//iterate over the items in reverse so that removing an item doesn't break things\n\t\tvar upperBound = this._search(time);\n\t\tif (upperBound !== -1){\n\t\t\tthis._iterate(callback, 0, upperBound);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Iterate over everything in the array after the given time.\n\t *  @param  {Number}  time The time to check if items are before\n\t *  @param  {Function}  callback The callback to invoke with every item\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.forEachAfter = function(time, callback){\n\t\t//iterate over the items in reverse so that removing an item doesn't break things\n\t\tvar lowerBound = this._search(time);\n\t\tthis._iterate(callback, lowerBound + 1);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Iterate over everything in the array between the startTime and endTime. \n\t *  The timerange is inclusive of the startTime, but exclusive of the endTime. \n\t *  range = [startTime, endTime). \n\t *  @param  {Number}  startTime The time to check if items are before\n\t *  @param  {Number}  endTime The end of the test interval. \n\t *  @param  {Function}  callback The callback to invoke with every item\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.forEachBetween = function(startTime, endTime, callback){\n\t\tvar lowerBound = this._search(startTime);\n\t\tvar upperBound = this._search(endTime);\n\t\tif (lowerBound !== -1 && upperBound !== -1){\n\t\t\tif (this._timeline[lowerBound].time !== startTime){\n\t\t\t\tlowerBound += 1;\n\t\t\t}\n\t\t\t//exclusive of the end time\n\t\t\tif (this._timeline[upperBound].time === endTime){\n\t\t\t\tupperBound -= 1;\n\t\t\t}\n\t\t\tthis._iterate(callback, lowerBound, upperBound);\n\t\t} else if (lowerBound === -1){\n\t\t\tthis._iterate(callback, 0, upperBound);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Iterate over everything in the array at or after the given time. Similar to\n\t *  forEachAfter, but includes the item(s) at the given time.\n\t *  @param  {Number}  time The time to check if items are before\n\t *  @param  {Function}  callback The callback to invoke with every item\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.forEachFrom = function(time, callback){\n\t\t//iterate over the items in reverse so that removing an item doesn't break things\n\t\tvar lowerBound = this._search(time);\n\t\t//work backwards until the event time is less than time\n\t\twhile (lowerBound >= 0 && this._timeline[lowerBound].time >= time){\n\t\t\tlowerBound--;\n\t\t}\n\t\tthis._iterate(callback, lowerBound + 1);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Iterate over everything in the array at the given time\n\t *  @param  {Number}  time The time to check if items are before\n\t *  @param  {Function}  callback The callback to invoke with every item\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.forEachAtTime = function(time, callback){\n\t\t//iterate over the items in reverse so that removing an item doesn't break things\n\t\tvar upperBound = this._search(time);\n\t\tif (upperBound !== -1){\n\t\t\tthis._iterate(function(event){\n\t\t\t\tif (event.time === time){\n\t\t\t\t\tcallback.call(this, event);\n\t\t\t\t}\n\t\t\t}, 0, upperBound);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Clean up.\n\t *  @return  {Tone.Timeline}  this\n\t */\n\tTone.Timeline.prototype.dispose = function(){\n\t\tTone.prototype.dispose.call(this);\n\t\tthis._timeline = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Timeline;\n});\n","define([\"../core/Tone\", \"../component/Volume\", \"../core/Context\", \"../core/AudioNode\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  A single master output which is connected to the\n\t *          AudioDestinationNode (aka your speakers).\n\t *          It provides useful conveniences such as the ability\n\t *          to set the volume and mute the entire application.\n\t *          It also gives you the ability to apply master effects to your application.\n\t *          <br><br>\n\t *          Like Tone.Transport, A single Tone.Master is created\n\t *          on initialization and you do not need to explicitly construct one.\n\t *\n\t *  @constructor\n\t *  @extends {Tone}\n\t *  @singleton\n\t *  @example\n\t * //the audio will go from the oscillator to the speakers\n\t * oscillator.connect(Tone.Master);\n\t * //a convenience for connecting to the master output is also provided:\n\t * oscillator.toMaster();\n\t * //the above two examples are equivalent.\n\t */\n\tTone.Master = function(){\n\n\t\tTone.AudioNode.call(this);\n\t\tTone.getContext(function(){\n\t\t\tthis.createInsOuts(1, 0);\n\n\t\t\t/**\n\t\t\t *  The private volume node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._volume = this.output = new Tone.Volume();\n\n\t\t\t/**\n\t\t\t * The volume of the master output.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t\t\tthis.volume = this._volume.volume;\n\n\t\t\tthis._readOnly(\"volume\");\n\t\t\t//connections\n\t\t\tthis.input.chain(this.output, this.context.destination);\n\n\t\t\t//master is a singleton so it adds itself to the context\n\t\t\tthis.context.master = this;\n\t\t}.bind(this));\n\t};\n\n\tTone.extend(Tone.Master, Tone.AudioNode);\n\n\t/**\n\t *  @type {Object}\n\t *  @const\n\t */\n\tTone.Master.defaults = {\n\t\t\"volume\" : 0,\n\t\t\"mute\" : false\n\t};\n\n\t/**\n\t * Is an instanceof Tone.Master\n\t * @type {Boolean}\n\t */\n\tTone.Master.prototype.isMaster = true;\n\n\t/**\n\t * Mute the output.\n\t * @memberOf Tone.Master#\n\t * @type {boolean}\n\t * @name mute\n\t * @example\n\t * //mute the output\n\t * Tone.Master.mute = true;\n\t */\n\tObject.defineProperty(Tone.Master.prototype, \"mute\", {\n\t\tget : function(){\n\t\t\treturn this._volume.mute;\n\t\t},\n\t\tset : function(mute){\n\t\t\tthis._volume.mute = mute;\n\t\t}\n\t});\n\n\t/**\n\t *  Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n\t *  chained in the master effects chain.\n\t *  @param {AudioNode|Tone} args... All arguments will be connected in a row\n\t *                                  and the Master will be routed through it.\n\t *  @return  {Tone.Master}  this\n\t *  @example\n\t * //some overall compression to keep the levels in check\n\t * var masterCompressor = new Tone.Compressor({\n\t * \t\"threshold\" : -6,\n\t * \t\"ratio\" : 3,\n\t * \t\"attack\" : 0.5,\n\t * \t\"release\" : 0.1\n\t * });\n\t * //give a little boost to the lows\n\t * var lowBump = new Tone.Filter(200, \"lowshelf\");\n\t * //route everything through the filter\n\t * //and compressor before going to the speakers\n\t * Tone.Master.chain(lowBump, masterCompressor);\n\t */\n\tTone.Master.prototype.chain = function(){\n\t\tthis.input.disconnect();\n\t\tthis.input.chain.apply(this.input, arguments);\n\t\targuments[arguments.length - 1].connect(this.output);\n\t};\n\n\t/**\n\t *  Clean up\n\t *  @return  {Tone.Master}  this\n\t */\n\tTone.Master.prototype.dispose = function(){\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis._writable(\"volume\");\n\t\tthis._volume.dispose();\n\t\tthis._volume = null;\n\t\tthis.volume = null;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tAUGMENT TONE's PROTOTYPE\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Connect 'this' to the master output. Shorthand for this.connect(Tone.Master)\n\t *  @returns {Tone.AudioNode} this\n\t *  @example\n\t * //connect an oscillator to the master output\n\t * var osc = new Tone.Oscillator().toMaster();\n\t */\n\tTone.AudioNode.prototype.toMaster = function(){\n\t\tthis.connect(this.context.master);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  initialize the module and listen for new audio contexts\n\t */\n\tvar MasterConstructor = Tone.Master;\n\tTone.Master = new MasterConstructor();\n\n\tTone.Context.on(\"init\", function(context){\n\t\t// if it already exists, just restore it\n\t\tif (context.master && context.master.isMaster){\n\t\t\tTone.Master = context.master;\n\t\t} else {\n\t\t\tTone.Master = new MasterConstructor();\n\t\t}\n\t});\n\n\tTone.Context.on(\"close\", function(context){\n\t\tif (context.master && context.master.isMaster){\n\t\t\tcontext.master.dispose();\n\t\t}\n\t});\n\n\treturn Tone.Master;\n});\n","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function() { try { return require('moment'); } catch(e) { } }()) :\ntypeof define === 'function' && define.amd ? define(['require'], function(require) { return factory(function() { try { return require('moment'); } catch(e) { } }()); }) :\n(global.Chart = factory(global.moment));\n}(this, (function (moment) { 'use strict';\n\nmoment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n\n/* MIT license */\n\nvar conversions = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\nvar convert = function() {\n   return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   };\n});\n\nvar colorConvert = convert;\n\nvar colorName = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\n/* MIT license */\n\n\nvar colorString = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n};\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3,4})$/i,\n       hex =  /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr),\n       hexAlpha = \"\";\n   if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorName[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgba, a) {\n   var a = (a !== undefined && rgba.length === 3) ? a : rgba[3];\n   return \"#\" + hexDouble(rgba[0]) \n              + hexDouble(rgba[1])\n              + hexDouble(rgba[2])\n              + (\n                 (a >= 0 && a < 1)\n                 ? hexDouble(Math.round(a * 255))\n                 : \"\"\n              );\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorName) {\n   reverseNames[colorName[name]] = name;\n}\n\n/* MIT license */\n\n\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = colorString.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = colorString.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = colorString.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn colorString.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn colorString.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn colorString.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn colorString.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn colorString.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn colorString.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn colorString.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn colorString.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = colorConvert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nvar chartjsColor = Color;\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array (including typed arrays), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @function\n\t */\n\tisArray: function(value) {\n\t\tif (Array.isArray && Array.isArray(value)) {\n\t\t\treturn true;\n\t\t}\n\t\tvar type = Object.prototype.toString.call(value);\n\t\tif (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns true if `value` is a finite number, else returns false\n\t * @param {*} value  - The value to test.\n\t * @returns {boolean}\n\t */\n\tisFinite: function(value) {\n\t\treturn (typeof value === 'number' || value instanceof Number) && isFinite(value);\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {object|Array} loopable - The object or array to be iterated.\n\t * @param {function} fn - The function to call for each item.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see https://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @param {object} [options] - Merging options:\n\t * @param {function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @returns {object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {object} target - The target object in which all objects are merged into.\n\t * @param {object} arg1 - Object containing additional properties to merge in target.\n\t * @param {object} argN - Additional objects containing properties to merge in target.\n\t * @returns {object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nvar helpers_core = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nvar helpers_easing = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.easingEffects = effects;\n\nvar PI = Math.PI;\nvar RAD_PER_DEG = PI / 180;\nvar DOUBLE_PI = PI * 2;\nvar HALF_PI = PI / 2;\nvar QUARTER_PI = PI / 4;\nvar TWO_THIRDS_PI = PI * 2 / 3;\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports$1 = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {number} width - The rectangle's width.\n\t * @param {number} height - The rectangle's height.\n\t * @param {number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar r = Math.min(radius, height / 2, width / 2);\n\t\t\tvar left = x + r;\n\t\t\tvar top = y + r;\n\t\t\tvar right = x + width - r;\n\t\t\tvar bottom = y + height - r;\n\n\t\t\tctx.moveTo(x, top);\n\t\t\tif (left < right && top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, -HALF_PI);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, 0);\n\t\t\t\tctx.arc(right, bottom, r, 0, HALF_PI);\n\t\t\t\tctx.arc(left, bottom, r, HALF_PI, PI);\n\t\t\t} else if (left < right) {\n\t\t\t\tctx.moveTo(left, y);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, HALF_PI);\n\t\t\t\tctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n\t\t\t} else if (top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, 0);\n\t\t\t\tctx.arc(left, bottom, r, 0, PI);\n\t\t\t} else {\n\t\t\t\tctx.arc(left, top, r, -PI, PI);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, xOffset, yOffset, size, cornerRadius;\n\t\tvar rad = (rotation || 0) * RAD_PER_DEG;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(x, y, radius, 0, DOUBLE_PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\t// NOTE: the rounded rect implementation changed to use `arc` instead of\n\t\t\t// `quadraticCurveTo` since it generates better results when rect is\n\t\t\t// almost a circle. 0.516 (instead of 0.5) produces results with visually\n\t\t\t// closer proportion to the previous impl and it is inscribed in the\n\t\t\t// circle with `radius`. For more details, see the following PRs:\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5597\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5858\n\t\t\tcornerRadius = radius * 0.516;\n\t\t\tsize = radius - cornerRadius;\n\t\t\txOffset = Math.cos(rad + QUARTER_PI) * size;\n\t\t\tyOffset = Math.sin(rad + QUARTER_PI) * size;\n\t\t\tctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n\t\t\tctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n\t\t\tctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n\t\t\tctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tif (!rotation) {\n\t\t\t\tsize = Math.SQRT1_2 * radius;\n\t\t\t\tctx.rect(x - size, y - size, 2 * size, 2 * size);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'rectRot':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'cross':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\trad += QUARTER_PI;\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t},\n\n\t/**\n\t * Returns true if the point is inside the rectangle\n\t * @param {object} point - The point to test\n\t * @param {object} area - The rectangle\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_isPointInArea: function(point, area) {\n\t\tvar epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n\t\treturn point.x > area.left - epsilon && point.x < area.right + epsilon &&\n\t\t\tpoint.y > area.top - epsilon && point.y < area.bottom + epsilon;\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tvar stepped = target.steppedLine;\n\t\tif (stepped) {\n\t\t\tif (stepped === 'middle') {\n\t\t\t\tvar midpoint = (previous.x + target.x) / 2.0;\n\t\t\t\tctx.lineTo(midpoint, flip ? target.y : previous.y);\n\t\t\t\tctx.lineTo(midpoint, flip ? previous.y : target.y);\n\t\t\t} else if ((stepped === 'after' && !flip) || (stepped !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\nvar helpers_canvas = exports$1;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.clear = exports$1.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports$1.roundedRect.apply(exports$1, arguments);\n};\n\nvar defaults = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers_core.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\ndefaults._set('global', {\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tdefaultLineHeight: 1.2,\n\tshowLines: true\n});\n\nvar core_defaults = defaults;\n\nvar valueOrDefault = helpers_core.valueOrDefault;\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nfunction toFontString(font) {\n\tif (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n\t\treturn null;\n\t}\n\n\treturn (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nvar helpers_options = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {number|object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers_core.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Parses font options and returns the font object.\n\t * @param {object} options - A object that contains font options to be parsed.\n\t * @return {object} The font object.\n\t * @todo Support font.* options and renamed to toFont().\n\t * @private\n\t */\n\t_parseFont: function(options) {\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar font = {\n\t\t\tfamily: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\tlineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n\t\t\tsize: size,\n\t\t\tstyle: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\tweight: null,\n\t\t\tstring: ''\n\t\t};\n\n\t\tfont.string = toFontString(font);\n\t\treturn font;\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array} inputs - An array of values, falling back to the last value.\n\t * @param {object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers_core.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar helpers$1 = helpers_core;\nvar easing = helpers_easing;\nvar canvas = helpers_canvas;\nvar options = helpers_options;\nhelpers$1.easing = easing;\nhelpers$1.canvas = canvas;\nhelpers$1.options = options;\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = chartjsColor(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = chartjsColor(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers$1.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers$1.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers$1.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers$1.inherits;\n\nvar core_element = Element;\n\nvar exports$2 = core_element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\nvar core_animation = exports$2;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n\ncore_defaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers$1.noop,\n\t\tonComplete: helpers$1.noop\n\t}\n});\n\nvar core_animations = {\n\tanimations: [],\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {number} duration - The animation duration in ms.\n\t * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\t\tanimation.startTime = Date.now();\n\t\tanimation.duration = duration;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers$1.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\n\t\tme.advance();\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function() {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart, numSteps, nextStep;\n\t\tvar i = 0;\n\n\t\t// 1 animation per chart, so we are looping charts here\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\t\t\tnumSteps = animation.numSteps;\n\n\t\t\t// Make sure that currentStep starts at 1\n\t\t\t// https://github.com/chartjs/Chart.js/issues/6104\n\t\t\tnextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n\t\t\tanimation.currentStep = Math.min(nextStep, numSteps);\n\n\t\t\thelpers$1.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= numSteps) {\n\t\t\t\thelpers$1.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar resolve = helpers$1.options.resolve;\n\nvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n */\nfunction listenArrayEvents(array, listener) {\n\tif (array._chartjs) {\n\t\tarray._chartjs.listeners.push(listener);\n\t\treturn;\n\t}\n\n\tObject.defineProperty(array, '_chartjs', {\n\t\tconfigurable: true,\n\t\tenumerable: false,\n\t\tvalue: {\n\t\t\tlisteners: [listener]\n\t\t}\n\t});\n\n\tarrayEvents.forEach(function(key) {\n\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\tvar base = array[key];\n\n\t\tObject.defineProperty(array, key, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: function() {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\thelpers$1.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn res;\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nfunction unlistenArrayEvents(array, listener) {\n\tvar stub = array._chartjs;\n\tif (!stub) {\n\t\treturn;\n\t}\n\n\tvar listeners = stub.listeners;\n\tvar index = listeners.indexOf(listener);\n\tif (index !== -1) {\n\t\tlisteners.splice(index, 1);\n\t}\n\n\tif (listeners.length > 0) {\n\t\treturn;\n\t}\n\n\tarrayEvents.forEach(function(key) {\n\t\tdelete array[key];\n\t});\n\n\tdelete array._chartjs;\n}\n\n// Base class for all dataset controllers (line, bar, etc)\nvar DatasetController = function(chart, datasetIndex) {\n\tthis.initialize(chart, datasetIndex);\n};\n\nhelpers$1.extend(DatasetController.prototype, {\n\n\t/**\n\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t * @type {Chart.core.element}\n\t */\n\tdatasetElementType: null,\n\n\t/**\n\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t * @type {Chart.core.element}\n\t */\n\tdataElementType: null,\n\n\tinitialize: function(chart, datasetIndex) {\n\t\tvar me = this;\n\t\tme.chart = chart;\n\t\tme.index = datasetIndex;\n\t\tme.linkScales();\n\t\tme.addElements();\n\t},\n\n\tupdateIndex: function(datasetIndex) {\n\t\tthis.index = datasetIndex;\n\t},\n\n\tlinkScales: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\n\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t}\n\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t}\n\t},\n\n\tgetDataset: function() {\n\t\treturn this.chart.data.datasets[this.index];\n\t},\n\n\tgetMeta: function() {\n\t\treturn this.chart.getDatasetMeta(this.index);\n\t},\n\n\tgetScaleForId: function(scaleID) {\n\t\treturn this.chart.scales[scaleID];\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScale: function() {\n\t\treturn this.getScaleForId(this._getValueScaleId());\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScale: function() {\n\t\treturn this.getScaleForId(this._getIndexScaleId());\n\t},\n\n\treset: function() {\n\t\tthis.update(true);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroy: function() {\n\t\tif (this._data) {\n\t\t\tunlistenArrayEvents(this._data, this);\n\t\t}\n\t},\n\n\tcreateMetaDataset: function() {\n\t\tvar me = this;\n\t\tvar type = me.datasetElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index\n\t\t});\n\t},\n\n\tcreateMetaData: function(index) {\n\t\tvar me = this;\n\t\tvar type = me.dataElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index\n\t\t});\n\t},\n\n\taddElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data || [];\n\t\tvar metaData = meta.data;\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t}\n\n\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t},\n\n\taddElementAndReset: function(index) {\n\t\tvar element = this.createMetaData(index);\n\t\tthis.getMeta().data.splice(index, 0, element);\n\t\tthis.updateElement(element, index, true);\n\t},\n\n\tbuildOrUpdateElements: function() {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t// the internal meta data accordingly.\n\t\tif (me._data !== data) {\n\t\t\tif (me._data) {\n\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t}\n\n\t\t\tif (data && Object.isExtensible(data)) {\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t}\n\t\t\tme._data = data;\n\t\t}\n\n\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\tme.resyncElements();\n\t},\n\n\tupdate: helpers$1.noop,\n\n\ttransition: function(easingValue) {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].transition(easingValue);\n\t\t}\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.transition(easingValue);\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.draw();\n\t\t}\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].draw();\n\t\t}\n\t},\n\n\tremoveHoverStyle: function(element) {\n\t\thelpers$1.merge(element._model, element.$previousStyle || {});\n\t\tdelete element.$previousStyle;\n\t},\n\n\tsetHoverStyle: function(element) {\n\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\tvar index = element._index;\n\t\tvar custom = element.custom || {};\n\t\tvar model = element._model;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\telement.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth\n\t\t};\n\n\t\tmodel.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n\t\tmodel.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n\t\tmodel.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tresyncElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data;\n\t\tvar numMeta = meta.data.length;\n\t\tvar numData = data.length;\n\n\t\tif (numData < numMeta) {\n\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t} else if (numData > numMeta) {\n\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinsertElements: function(start, count) {\n\t\tfor (var i = 0; i < count; ++i) {\n\t\t\tthis.addElementAndReset(start + i);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPush: function() {\n\t\tvar count = arguments.length;\n\t\tthis.insertElements(this.getDataset().data.length - count, count);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPop: function() {\n\t\tthis.getMeta().data.pop();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataShift: function() {\n\t\tthis.getMeta().data.shift();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataSplice: function(start, count) {\n\t\tthis.getMeta().data.splice(start, count);\n\t\tthis.insertElements(start, arguments.length - 2);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataUnshift: function() {\n\t\tthis.insertElements(0, arguments.length);\n\t}\n});\n\nDatasetController.extend = helpers$1.inherits;\n\nvar core_datasetController = DatasetController;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: core_defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2,\n\t\t\tborderAlign: 'center'\n\t\t}\n\t}\n});\n\nvar element_arc = core_element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers$1.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\t\tvar pixelMargin = (vm.borderAlign === 'inner') ? 0.33 : 0;\n\t\tvar angleMargin;\n\n\t\tctx.save();\n\n\t\tctx.beginPath();\n\t\tctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\tctx.closePath();\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth) {\n\t\t\tif (vm.borderAlign === 'inner') {\n\t\t\t\t// Draw an inner border by cliping the arc and drawing a double-width border\n\t\t\t\t// Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\t\t\t\tctx.beginPath();\n\t\t\t\tangleMargin = pixelMargin / vm.outerRadius;\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\t\t\t\tif (vm.innerRadius > pixelMargin) {\n\t\t\t\t\tangleMargin = pixelMargin / vm.innerRadius;\n\t\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n\t\t\t\t} else {\n\t\t\t\t\tctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n\t\t\t\t}\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.clip();\n\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.lineWidth = vm.borderWidth * 2;\n\t\t\t\tctx.lineJoin = 'round';\n\t\t\t} else {\n\t\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\t\tctx.lineJoin = 'bevel';\n\t\t\t}\n\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$1 = helpers$1.valueOrDefault;\n\nvar defaultColor = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nvar element_line = core_element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers$1.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers$1.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$2 = helpers$1.valueOrDefault;\n\nvar defaultColor$1 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor$1,\n\t\t\tborderColor: defaultColor$1,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nvar element_point = core_element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n\nvar defaultColor$2 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaultColor$2,\n\t\t\tborderColor: defaultColor$2,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(vm) {\n\treturn vm && vm.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(vm) {\n\tvar x1, x2, y1, y2, half;\n\n\tif (isVertical(vm)) {\n\t\thalf = vm.width / 2;\n\t\tx1 = vm.x - half;\n\t\tx2 = vm.x + half;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\thalf = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - half;\n\t\ty2 = vm.y + half;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nfunction swap(orig, v1, v2) {\n\treturn orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction parseBorderSkipped(vm) {\n\tvar edge = vm.borderSkipped;\n\tvar res = {};\n\n\tif (!edge) {\n\t\treturn res;\n\t}\n\n\tif (vm.horizontal) {\n\t\tif (vm.base > vm.x) {\n\t\t\tedge = swap(edge, 'left', 'right');\n\t\t}\n\t} else if (vm.base < vm.y) {\n\t\tedge = swap(edge, 'bottom', 'top');\n\t}\n\n\tres[edge] = true;\n\treturn res;\n}\n\nfunction parseBorderWidth(vm, maxW, maxH) {\n\tvar value = vm.borderWidth;\n\tvar skip = parseBorderSkipped(vm);\n\tvar t, r, b, l;\n\n\tif (helpers$1.isObject(value)) {\n\t\tt = +value.top || 0;\n\t\tr = +value.right || 0;\n\t\tb = +value.bottom || 0;\n\t\tl = +value.left || 0;\n\t} else {\n\t\tt = r = b = l = +value || 0;\n\t}\n\n\treturn {\n\t\tt: skip.top || (t < 0) ? 0 : t > maxH ? maxH : t,\n\t\tr: skip.right || (r < 0) ? 0 : r > maxW ? maxW : r,\n\t\tb: skip.bottom || (b < 0) ? 0 : b > maxH ? maxH : b,\n\t\tl: skip.left || (l < 0) ? 0 : l > maxW ? maxW : l\n\t};\n}\n\nfunction boundingRects(vm) {\n\tvar bounds = getBarBounds(vm);\n\tvar width = bounds.right - bounds.left;\n\tvar height = bounds.bottom - bounds.top;\n\tvar border = parseBorderWidth(vm, width / 2, height / 2);\n\n\treturn {\n\t\touter: {\n\t\t\tx: bounds.left,\n\t\t\ty: bounds.top,\n\t\t\tw: width,\n\t\t\th: height\n\t\t},\n\t\tinner: {\n\t\t\tx: bounds.left + border.l,\n\t\t\ty: bounds.top + border.t,\n\t\t\tw: width - border.l - border.r,\n\t\t\th: height - border.t - border.b\n\t\t}\n\t};\n}\n\nfunction inRange(vm, x, y) {\n\tvar skipX = x === null;\n\tvar skipY = y === null;\n\tvar bounds = !vm || (skipX && skipY) ? false : getBarBounds(vm);\n\n\treturn bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nvar element_rectangle = core_element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar rects = boundingRects(vm);\n\t\tvar outer = rects.outer;\n\t\tvar inner = rects.inner;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n\t\tif (outer.w === inner.w && outer.h === inner.h) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(outer.x, outer.y, outer.w, outer.h);\n\t\tctx.clip();\n\t\tctx.fillStyle = vm.borderColor;\n\t\tctx.rect(inner.x, inner.y, inner.w, inner.h);\n\t\tctx.fill('evenodd');\n\t\tctx.restore();\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\treturn inRange(this._view, mouseX, mouseY);\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn isVertical(vm)\n\t\t\t? inRange(vm, mouseX, null)\n\t\t\t: inRange(vm, null, mouseY);\n\t},\n\n\tinXRange: function(mouseX) {\n\t\treturn inRange(this._view, mouseX, null);\n\t},\n\n\tinYRange: function(mouseY) {\n\t\treturn inRange(this._view, null, mouseY);\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(vm)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\n\t\treturn isVertical(vm)\n\t\t\t? vm.width * Math.abs(vm.y - vm.base)\n\t\t\t: vm.height * Math.abs(vm.x - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\nvar elements = {};\nvar Arc = element_arc;\nvar Line = element_line;\nvar Point = element_point;\nvar Rectangle = element_rectangle;\nelements.Arc = Arc;\nelements.Line = Line;\nelements.Point = Point;\nelements.Rectangle = Rectangle;\n\nvar resolve$1 = helpers$1.options.resolve;\n\ncore_defaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers$1.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale size.\n\t\tprev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - (curr - Math.min(prev, next)) / 2 * percent;\n\tsize = Math.abs(next - prev) / 2 * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nvar controller_bar = core_datasetController.extend({\n\n\tdataElementType: elements.Rectangle,\n\n\tinitialize: function() {\n\t\tvar me = this;\n\t\tvar meta;\n\n\t\tcore_datasetController.prototype.initialize.apply(me, arguments);\n\n\t\tmeta = me.getMeta();\n\t\tmeta.stack = me.getDataset().stack;\n\t\tmeta.bar = true;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar rects = me.getMeta().data;\n\t\tvar i, ilen;\n\n\t\tme._ruler = me.getRuler();\n\n\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\tme.updateElement(rects[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\t\tvar options = me._resolveElementOptions(rectangle, index);\n\n\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\trectangle._datasetIndex = me.index;\n\t\trectangle._index = index;\n\t\trectangle._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderSkipped: options.borderSkipped,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\tdatasetLabel: dataset.label,\n\t\t\tlabel: me.chart.data.labels[index]\n\t\t};\n\n\t\tme._updateElementGeometry(rectangle, index, reset);\n\n\t\trectangle.pivot();\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateElementGeometry: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar model = rectangle._model;\n\t\tvar vscale = me._getValueScale();\n\t\tvar base = vscale.getBasePixel();\n\t\tvar horizontal = vscale.isHorizontal();\n\t\tvar ruler = me._ruler || me.getRuler();\n\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\tmodel.horizontal = horizontal;\n\t\tmodel.base = reset ? base : vpixels.base;\n\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t},\n\n\t/**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n\t_getStacks: function(last) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stacked = scale.options.stacked;\n\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\tvar stacks = [];\n\t\tvar i, meta;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t(stacked === false ||\n\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\tstacks.push(meta.stack);\n\t\t\t}\n\t\t}\n\n\t\treturn stacks;\n\t},\n\n\t/**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n\tgetStackCount: function() {\n\t\treturn this._getStacks().length;\n\t},\n\n\t/**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n\t * @returns {number} The stack index\n\t * @private\n\t */\n\tgetStackIndex: function(datasetIndex, name) {\n\t\tvar stacks = this._getStacks(datasetIndex);\n\t\tvar index = (name !== undefined)\n\t\t\t? stacks.indexOf(name)\n\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\treturn (index === -1)\n\t\t\t? stacks.length - 1\n\t\t\t: index;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetRuler: function() {\n\t\tvar me = this;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stackCount = me.getStackCount();\n\t\tvar datasetIndex = me.index;\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\tvar pixels = [];\n\t\tvar i, ilen, min;\n\n\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t}\n\n\t\tmin = helpers$1.isNullOrUndef(scale.options.barThickness)\n\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t: -1;\n\n\t\treturn {\n\t\t\tmin: min,\n\t\t\tpixels: pixels,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tstackCount: stackCount,\n\t\t\tscale: scale\n\t\t};\n\t},\n\n\t/**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar scale = me._getValueScale();\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar datasets = chart.data.datasets;\n\t\tvar value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\tvar minBarLength = scale.options.minBarLength;\n\t\tvar stacked = scale.options.stacked;\n\t\tvar stack = meta.stack;\n\t\tvar start = 0;\n\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\tif (imeta.bar &&\n\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\timeta.controller._getValueScaleId() === scale.id &&\n\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\tivalue = +scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbase = scale.getPixelForValue(start);\n\t\thead = scale.getPixelForValue(start + value);\n\t\tsize = head - base;\n\n\t\tif (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n\t\t\tsize = minBarLength;\n\t\t\tif (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n\t\t\t\thead = base - minBarLength;\n\t\t\t} else {\n\t\t\t\thead = base + minBarLength;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tbase: base,\n\t\t\thead: head,\n\t\t\tcenter: head + size / 2\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\tvar me = this;\n\t\tvar options = ruler.scale.options;\n\t\tvar range = options.barThickness === 'flex'\n\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\tvar size = Math.min(\n\t\t\thelpers$1.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\trange.chunk * range.ratio);\n\n\t\treturn {\n\t\t\tbase: center - size / 2,\n\t\t\thead: center + size / 2,\n\t\t\tcenter: center,\n\t\t\tsize: size\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getValueScale();\n\t\tvar rects = me.getMeta().data;\n\t\tvar dataset = me.getDataset();\n\t\tvar ilen = rects.length;\n\t\tvar i = 0;\n\n\t\thelpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\trects[i].draw();\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(rectangle, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = rectangle.custom || {};\n\t\tvar options = chart.options.elements.rectangle;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderSkipped',\n\t\t\t'borderWidth'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$1([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t}\n});\n\nvar valueOrDefault$3 = helpers$1.valueOrDefault;\nvar resolve$2 = helpers$1.options.resolve;\n\ncore_defaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_bubble = core_datasetController.extend({\n\t/**\n\t * @protected\n\t */\n\tdataElementType: elements.Point,\n\n\t/**\n\t * @protected\n\t */\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data;\n\n\t\t// Update Points\n\t\thelpers$1.each(points, function(point, index) {\n\t\t\tme.updateElement(point, index, reset);\n\t\t});\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar options = me._resolveElementOptions(point, index);\n\t\tvar data = me.getDataset().data[index];\n\t\tvar dsIndex = me.index;\n\n\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = dsIndex;\n\t\tpoint._index = index;\n\t\tpoint._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\thitRadius: options.hitRadius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tradius: reset ? 0 : options.radius,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t};\n\n\t\tpoint.pivot();\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = options.radius + options.hoverRadius;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(point, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = point.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar data = dataset.data[index];\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t\t'hoverRadius',\n\t\t\t'hitRadius',\n\t\t\t'pointStyle',\n\t\t\t'rotation'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$2([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\t// Custom radius resolution\n\t\tvalues.radius = resolve$2([\n\t\t\tcustom.radius,\n\t\t\tdata ? data.r : undefined,\n\t\t\tdataset.radius,\n\t\t\toptions.radius\n\t\t], context, index);\n\n\t\treturn values;\n\t}\n});\n\nvar resolve$3 = helpers$1.options.resolve;\nvar valueOrDefault$4 = helpers$1.valueOrDefault;\n\ncore_defaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers$1.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_doughnut = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\tgetRingIndex: function(datasetIndex) {\n\t\tvar ringIndex = 0;\n\n\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t++ringIndex;\n\t\t\t}\n\t\t}\n\n\t\treturn ringIndex;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar availableWidth = chartArea.right - chartArea.left;\n\t\tvar availableHeight = chartArea.bottom - chartArea.top;\n\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\tvar offset = {x: 0, y: 0};\n\t\tvar meta = me.getMeta();\n\t\tvar arcs = meta.data;\n\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\tvar circumference = opts.circumference;\n\t\tvar chartWeight = me._getRingWeight(me.index);\n\t\tvar i, ilen;\n\n\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\tif (circumference < Math.PI * 2.0) {\n\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\tvar endAngle = startAngle + circumference;\n\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t}\n\n\t\tchart.borderWidth = me.getMaxBorderWidth();\n\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\tmeta.total = me.calculateTotal();\n\n\t\tme.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\tvar dataset = me.getDataset();\n\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\tstartAngle: startAngle,\n\t\t\t\tendAngle: endAngle,\n\t\t\t\tcircumference: circumference,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t}\n\t\t});\n\n\t\tvar model = arc._model;\n\n\t\t// Set correct angles if not resetting\n\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\tif (index === 0) {\n\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t} else {\n\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t}\n\n\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t}\n\n\t\tarc.pivot();\n\t},\n\n\tcalculateTotal: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar total = 0;\n\t\tvar value;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tvalue = dataset.data[index];\n\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\ttotal += Math.abs(value);\n\t\t\t}\n\t\t});\n\n\t\t/* if (total === 0) {\n\t\t\ttotal = NaN;\n\t\t}*/\n\n\t\treturn total;\n\t},\n\n\tcalculateCircumference: function(value) {\n\t\tvar total = this.getMeta().total;\n\t\tif (total > 0 && !isNaN(value)) {\n\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// gets the max border or hover width to properly scale pie charts\n\tgetMaxBorderWidth: function(arcs) {\n\t\tvar me = this;\n\t\tvar max = 0;\n\t\tvar chart = me.chart;\n\t\tvar i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n\t\tif (!arcs) {\n\t\t\t// Find the outmost visible dataset\n\t\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\tarcs = meta.data;\n\t\t\t\t\tif (i !== me.index) {\n\t\t\t\t\t\tcontroller = meta.controller;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!arcs) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarc = arcs[i];\n\t\t\toptions = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\t\t\tif (options.borderAlign !== 'inner') {\n\t\t\t\tborderWidth = options.borderWidth;\n\t\t\t\thoverWidth = options.hoverBorderWidth;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$3([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n\t_getRingWeightOffset: function(datasetIndex) {\n\t\tvar ringWeightOffset = 0;\n\n\t\tfor (var i = 0; i < datasetIndex; ++i) {\n\t\t\tif (this.chart.isDatasetVisible(i)) {\n\t\t\t\tringWeightOffset += this._getRingWeight(i);\n\t\t\t}\n\t\t}\n\n\t\treturn ringWeightOffset;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getRingWeight: function(dataSetIndex) {\n\t\treturn Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n\t},\n\n\t/**\n\t * Returns the sum of all visibile data set weights.  This value can be 0.\n\t * @private\n\t */\n\t_getVisibleDatasetWeightTotal: function() {\n\t\treturn this._getRingWeightOffset(this.chart.data.datasets.length);\n\t}\n});\n\ncore_defaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'category',\n\t\t\tposition: 'left',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\nvar controller_horizontalBar = controller_bar.extend({\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t}\n});\n\nvar valueOrDefault$5 = helpers$1.valueOrDefault;\nvar resolve$4 = helpers$1.options.resolve;\nvar isPointInArea = helpers$1.canvas._isPointInArea;\n\ncore_defaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nfunction lineEnabled(dataset, options) {\n\treturn valueOrDefault$5(dataset.showLine, options.showLines);\n}\n\nvar controller_line = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\tvar dataset = me.getDataset();\n\t\tvar showLine = lineEnabled(dataset, me.chart.options);\n\t\tvar i, ilen;\n\n\t\t// Update Line\n\t\tif (showLine) {\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\t// Utility\n\t\t\tline._scale = scale;\n\t\t\tline._datasetIndex = me.index;\n\t\t\t// Data\n\t\t\tline._children = points;\n\t\t\t// Model\n\t\t\tline._model = me._resolveLineOptions(line);\n\n\t\t\tline.pivot();\n\t\t}\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\tif (showLine && line._model.tension !== 0) {\n\t\t\tme.updateBezierControlPoints();\n\t\t}\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar datasetIndex = me.index;\n\t\tvar value = dataset.data[index];\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar x, y;\n\n\t\tvar options = me._resolvePointOptions(point, index);\n\n\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t// Utility\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = datasetIndex;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n\t\t\tsteppedLine: lineModel ? lineModel.steppedLine : false,\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options;\n\t\tvar elementOptions = options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill',\n\t\t\t'cubicInterpolationMode'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\telementOptions[key]\n\t\t\t]);\n\t\t}\n\n\t\t// The default behavior of lines is to break at null values, according\n\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t// This option gives lines the ability to span gaps\n\t\tvalues.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n\t\tvalues.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n\t\tvalues.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n\n\t\treturn values;\n\t},\n\n\tcalculatePointY: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar sumPos = 0;\n\t\tvar sumNeg = 0;\n\t\tvar i, ds, dsMeta;\n\n\t\tif (yScale.options.stacked) {\n\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\tif (rightValue < 0) {\n\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t}\n\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t}\n\n\t\treturn yScale.getPixelForValue(value);\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar area = chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\tif (lineModel.spanGaps) {\n\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\treturn !pt._model.skip;\n\t\t\t});\n\t\t}\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tif (lineModel.cubicInterpolationMode === 'monotone') {\n\t\t\thelpers$1.splineCurveMonotone(points);\n\t\t} else {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\t\thelpers$1.previousItem(points, i)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers$1.nextItem(points, i)._model,\n\t\t\t\t\tlineModel.tension\n\t\t\t\t);\n\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t}\n\t\t}\n\n\t\tif (chart.options.elements.line.capBezierPoints) {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tif (isPointInArea(model, area)) {\n\t\t\t\t\tif (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t\tif (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data || [];\n\t\tvar area = chart.chartArea;\n\t\tvar ilen = points.length;\n\t\tvar halfBorderWidth;\n\t\tvar i = 0;\n\n\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\thelpers$1.canvas.clipArea(chart.ctx, {\n\t\t\t\tleft: area.left,\n\t\t\t\tright: area.right,\n\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t});\n\n\t\t\tmeta.dataset.draw();\n\n\t\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t\t}\n\n\t\t// Draw the points\n\t\tfor (; i < ilen; ++i) {\n\t\t\tpoints[i].draw(area);\n\t\t}\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n\t},\n});\n\nvar resolve$5 = helpers$1.options.resolve;\n\ncore_defaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_polarArea = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\t\tvar start = me.chart.options.startAngle || 0;\n\t\tvar starts = me._starts = [];\n\t\tvar angles = me._angles = [];\n\t\tvar arcs = meta.data;\n\t\tvar i, ilen, angle;\n\n\t\tme._updateRadius();\n\n\t\tmeta.count = me.countVisibleElements();\n\n\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\tstarts[i] = start;\n\t\t\tangle = me._computeAngle(i);\n\t\t\tangles[i] = angle;\n\t\t\tstart += angle;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateRadius: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\tchart.outerRadius = Math.max(minSize / 2, 0);\n\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar scale = chart.scale;\n\t\tvar labels = chart.data.labels;\n\n\t\tvar centerX = scale.xCenter;\n\t\tvar centerY = scale.yCenter;\n\n\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\tvar datasetStartAngle = opts.startAngle;\n\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar startAngle = me._starts[index];\n\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\t\t\t_scale: scale,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX,\n\t\t\t\ty: centerY,\n\t\t\t\tinnerRadius: 0,\n\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t}\n\t\t});\n\n\t\tarc.pivot();\n\t},\n\n\tcountVisibleElements: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar count = 0;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\treturn count;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\t\tvar valueOrDefault = helpers$1.valueOrDefault;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$5([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_computeAngle: function(index) {\n\t\tvar me = this;\n\t\tvar count = this.getMeta().count;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\n\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: me.chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\treturn resolve$5([\n\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t(2 * Math.PI) / count\n\t\t], context, index);\n\t}\n});\n\ncore_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\ncore_defaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\n// Pie charts are Doughnut chart with different defaults\nvar controller_pie = controller_doughnut;\n\nvar valueOrDefault$6 = helpers$1.valueOrDefault;\nvar resolve$6 = helpers$1.options.resolve;\n\ncore_defaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nvar controller_radar = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.chart.scale;\n\t\tvar dataset = me.getDataset();\n\t\tvar i, ilen;\n\n\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\tdataset.lineTension = dataset.tension;\n\t\t}\n\n\t\t// Utility\n\t\tline._scale = scale;\n\t\tline._datasetIndex = me.index;\n\t\t// Data\n\t\tline._children = points;\n\t\tline._loop = true;\n\t\t// Model\n\t\tline._model = me._resolveLineOptions(line);\n\n\t\tline.pivot();\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\t// Update bezier control points\n\t\tme.updateBezierControlPoints();\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar scale = me.chart.scale;\n\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\t\tvar options = me._resolvePointOptions(point, index);\n\t\tvar lineModel = me.getMeta().dataset._model;\n\t\tvar x = reset ? scale.xCenter : pointPosition.x;\n\t\tvar y = reset ? scale.yCenter : pointPosition.y;\n\n\t\t// Utility\n\t\tpoint._scale = scale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = me.index;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t]);\n\t\t}\n\n\t\tvalues.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n\n\t\treturn values;\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar area = me.chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tmodel = points[i]._model;\n\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\thelpers$1.previousItem(points, i, true)._model,\n\t\t\t\tmodel,\n\t\t\t\thelpers$1.nextItem(points, i, true)._model,\n\t\t\t\tmodel.tension\n\t\t\t);\n\n\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\tmodel.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n\t\t\tmodel.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n\t\t\tmodel.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n\t\t\tmodel.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n\t\t}\n\t},\n\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n\t}\n});\n\ncore_defaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Scatter charts use line controllers\nvar controller_scatter = controller_line;\n\n// NOTE export a map in which the key represents the controller type, not\n// the class, and so must be CamelCase in order to be correctly retrieved\n// by the controller in core.controller.js (`controllers[meta.type]`).\n\nvar controllers = {\n\tbar: controller_bar,\n\tbubble: controller_bubble,\n\tdoughnut: controller_doughnut,\n\thorizontalBar: controller_horizontalBar,\n\tline: controller_line,\n\tpolarArea: controller_polarArea,\n\tpie: controller_pie,\n\tradar: controller_radar,\n\tscatter: controller_scatter\n};\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {object} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers$1.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param {Chart} chart - the chart\n * @param {function} handler - the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {ChartElement[]} items - elements to filter\n * @param {object} position - the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {object} position - the point to be nearest to\n * @param {boolean} intersect - if true, only consider items that intersect the position\n * @param {function} distanceMetric - function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nvar core_interaction = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\treturn getNearestItems(chart, position, options.intersect, distanceMetric);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\nfunction filterByPosition(array, position) {\n\treturn helpers$1.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\nfunction findMaxPadding(boxes) {\n\tvar top = 0;\n\tvar left = 0;\n\tvar bottom = 0;\n\tvar right = 0;\n\thelpers$1.each(boxes, function(box) {\n\t\tif (box.getPadding) {\n\t\t\tvar boxPadding = box.getPadding();\n\t\t\ttop = Math.max(top, boxPadding.top);\n\t\t\tleft = Math.max(left, boxPadding.left);\n\t\t\tbottom = Math.max(bottom, boxPadding.bottom);\n\t\t\tright = Math.max(right, boxPadding.right);\n\t\t}\n\t});\n\treturn {\n\t\ttop: top,\n\t\tleft: left,\n\t\tbottom: bottom,\n\t\tright: right\n\t};\n}\n\nfunction addSizeByPosition(boxes, size) {\n\thelpers$1.each(boxes, function(box) {\n\t\tsize[box.position] += box.isHorizontal() ? box.height : box.width;\n\t});\n}\n\ncore_defaults._set('global', {\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\n/**\n * @interface ILayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} getPadding -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nvar core_layouts = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {ILayoutItem} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {ILayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers$1.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\tvar verticalBoxes = leftBoxes.concat(rightBoxes);\n\t\tvar horizontalBoxes = topBoxes.concat(bottomBoxes);\n\t\tvar outerBoxes = verticalBoxes.concat(horizontalBoxes);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length;\n\n\t\t// Step 3\n\t\t// TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n\t\t// var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar outerBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\tvar minBoxSizes = [];\n\t\tvar maxPadding;\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\twidth: minSize.width,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(outerBoxes, getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tmaxPadding = findMaxPadding(outerBoxes);\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (minBoxSize.horizontal) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(outerBoxSizes.left, maxPadding.left),\n\t\t\t\t\t\tright: Math.max(outerBoxSizes.right, maxPadding.right),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers$1.each(verticalBoxes, fitBox);\n\t\taddSizeByPosition(verticalBoxes, outerBoxSizes);\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers$1.each(horizontalBoxes, fitBox);\n\t\taddSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: outerBoxSizes.top,\n\t\t\t\tbottom: outerBoxSizes.bottom\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers$1.each(verticalBoxes, finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\touterBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\taddSizeByPosition(outerBoxes, outerBoxSizes);\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n\t\touterBoxSizes.left += leftPaddingAddition;\n\t\touterBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n\t\touterBoxSizes.top += topPaddingAddition;\n\t\touterBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n\t\tvar newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers$1.each(verticalBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers$1.each(horizontalBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = outerBoxSizes.top;\n\t\t\t\tbox.bottom = outerBoxSizes.top + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers$1.each(rightBoxes, placeBox);\n\t\thelpers$1.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: outerBoxSizes.left,\n\t\t\ttop: outerBoxSizes.top,\n\t\t\tright: outerBoxSizes.left + maxChartAreaWidth,\n\t\t\tbottom: outerBoxSizes.top + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers$1.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nvar platform_basic = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\nvar platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n\nvar platform_dom$1 = /*#__PURE__*/Object.freeze({\ndefault: platform_dom\n});\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n.default || n;\n}\n\nvar stylesheet = getCjsExportFromNamespace(platform_dom$1);\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers$1.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\t// eslint-disable-next-line getter-return\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers$1.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction createDiv(cls) {\n\tvar el = document.createElement('div');\n\tel.className = cls || '';\n\treturn el;\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar maxSize = 1000000;\n\n\t// NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n\t// https://github.com/chartjs/Chart.js/issues/5902\n\tvar resizer = createDiv(CSS_SIZE_MONITOR);\n\tvar expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n\tvar shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n\n\texpand.appendChild(createDiv());\n\tshrink.appendChild(createDiv());\n\n\tresizer.appendChild(expand);\n\tresizer.appendChild(shrink);\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = chart.options.maintainAspectRatio && node.parentNode;\n\t\t\tvar w = container ? container.clientWidth : 0;\n\t\t\tlistener(createEvent('resize', chart));\n\t\t\tif (container && container.clientWidth < w && chart.canvas) {\n\t\t\t\t// If the container size shrank during chart resize, let's assume\n\t\t\t\t// scrollbar appeared. So we resize again with the scrollbar visible -\n\t\t\t\t// effectively making chart smaller and the scrollbar hidden again.\n\t\t\t\t// Because we are inside `throttled`, and currently `ticking`, scroll\n\t\t\t\t// events are ignored during this whole 2 resize process.\n\t\t\t\t// If we assumed wrong and something else happened, we are resizing\n\t\t\t\t// twice in a frame (potential performance issue)\n\t\t\t\tlistener(createEvent('resize', chart));\n\t\t\t}\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// https://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nvar platform_dom$2 = {\n\t/**\n\t * When `true`, prevents the automatic injection of the stylesheet required to\n\t * correctly detect when the chart is added to the DOM and then resized. This\n\t * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n\t * to be manually imported to make this library compatible with any CSP.\n\t * See https://github.com/chartjs/Chart.js/issues/5208\n\t */\n\tdisableCSSInjection: false,\n\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\t/**\n\t * @private\n\t */\n\t_ensureLoaded: function() {\n\t\tif (this._loaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._loaded = true;\n\n\t\t// https://github.com/chartjs/Chart.js/issues/5208\n\t\tif (!this.disableCSSInjection) {\n\t\t\tinjectCSS(this, stylesheet);\n\t\t}\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// Load platform resources on first chart creation, to make possible to change\n\t\t// platform options after importing the library (e.g. `disableCSSInjection`).\n\t\tthis._ensureLoaded();\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers$1.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers$1.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\t// eslint-disable-next-line no-self-assign\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.addEvent = addListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.removeEvent = removeListener;\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nvar platform = helpers$1.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link IEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link IEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\ncore_defaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nvar core_plugins = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {IPlugin[]} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {object[]} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers$1.clone(core_defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\nvar core_scaleService = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers$1.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers$1.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tcore_layouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n\nvar valueOrDefault$7 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers$1.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\t\t\t\t\tif (item.label) {\n\t\t\t\t\t\ttitle = item.label;\n\t\t\t\t\t} else if (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers$1.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tif (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n\t\t\t\t\tlabel += tooltipItem.value;\n\t\t\t\t} else {\n\t\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\t}\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers$1.noop,\n\t\t\tfooter: helpers$1.noop,\n\t\t\tafterFooter: helpers$1.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {object} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: x / count,\n\t\t\ty: y / count\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {object} the position of the event in canvas coordinates\n\t * @returns {object} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers$1.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {string} value - The value to split by newline.\n * @returns {string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param element - the chart element (point, arc, bar) to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\tvar controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\tvar indexScale = controller._getIndexScale();\n\tvar valueScale = controller._getValueScale();\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tlabel: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tvalue: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = core_defaults.global;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers$1.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers$1.each(body, function(bodyItem) {\n\t\thelpers$1.each(bodyItem.before, maxLineWidth);\n\t\thelpers$1.each(bodyItem.lines, maxLineWidth);\n\t\thelpers$1.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers$1.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\nfunction getAlignedX(vm, align) {\n\treturn align === 'center'\n\t\t? vm.x + vm.width / 2\n\t\t: align === 'right'\n\t\t\t? vm.x + vm.width - vm.xPadding\n\t\t\t: vm.x + vm.xPadding;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports$3 = core_element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = tooltipPosition.x;\n\t\t\tmodel.y = tooltipPosition.y;\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._titleAlign);\n\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = vm.titleFontColor;\n\t\t\tctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar bodyAlign = vm._bodyAlign;\n\t\tvar body = vm.body;\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\tvar labelColors = vm.labelColors;\n\t\tvar xLinePadding = 0;\n\t\tvar colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n\t\tvar textColor;\n\n\t\tctx.textAlign = bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\tpt.x = getAlignedX(vm, bodyAlign);\n\n\t\t// Before Body\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = vm.bodyFontColor;\n\t\thelpers$1.each(vm.beforeBody, fillLineOfText);\n\n\t\txLinePadding = drawColorBoxes && bodyAlign !== 'right'\n\t\t\t? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\n\t\t\t: 0;\n\n\t\t// Draw body lines now\n\t\thelpers$1.each(body, function(bodyItem, i) {\n\t\t\ttextColor = vm.labelTextColors[i];\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers$1.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers$1.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = vm.legendColorBackground;\n\t\t\t\t\tctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = labelColors[i].borderColor;\n\t\t\t\t\tctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = labelColors[i].backgroundColor;\n\t\t\t\t\tctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers$1.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers$1.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._footerAlign);\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = vm.footerFontColor;\n\t\t\tctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers$1.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize) {\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\tctx.save();\n\t\t\tctx.globalAlpha = opacity;\n\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx);\n\n\t\t\tctx.restore();\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers$1.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nvar positioners_1 = positioners;\n\nvar core_tooltip = exports$3;\ncore_tooltip.positioners = positioners_1;\n\nvar valueOrDefault$8 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\telements: {},\n\tevents: [\n\t\t'mousemove',\n\t\t'mouseout',\n\t\t'click',\n\t\t'touchstart',\n\t\t'touchmove'\n\t],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tmaintainAspectRatio: true,\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0\n});\n\n/**\n * Recursively merge the given config objects representing the `scales` option\n * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n * returns a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeScaleConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\tvar slen = source[key].length;\n\t\t\t\tvar i, type, scale;\n\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\ttarget[key] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\ttype = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\thelpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\thelpers$1.merge(target[key][i], scale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Recursively merge the given config objects as the root options by handling\n * default scale options for the `scales` and `scale` properties, then returns\n * a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tvar tval = target[key] || {};\n\t\t\tvar sval = source[key];\n\n\t\t\tif (key === 'scales') {\n\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\ttarget[key] = mergeScaleConfig(tval, sval);\n\t\t\t} else if (key === 'scale') {\n\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\ttarget[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction initConfig(config) {\n\tconfig = config || {};\n\n\t// Do NOT use mergeConfig for the data object because this method merges arrays\n\t// and so would change references to labels and datasets, preventing data updates.\n\tvar data = config.data = config.data || {};\n\tdata.datasets = data.datasets || [];\n\tdata.labels = data.labels || [];\n\n\tconfig.options = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[config.type],\n\t\tconfig.options || {});\n\n\treturn config;\n}\n\nfunction updateConfig(chart) {\n\tvar newOptions = chart.options;\n\n\thelpers$1.each(chart.scales, function(scale) {\n\t\tcore_layouts.removeBox(chart, scale);\n\t});\n\n\tnewOptions = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[chart.config.type],\n\t\tnewOptions);\n\n\tchart.options = chart.config.options = newOptions;\n\tchart.ensureScalesHaveIDs();\n\tchart.buildOrUpdateScales();\n\n\t// Tooltip\n\tchart.tooltip._options = newOptions.tooltips;\n\tchart.tooltip.initialize();\n}\n\nfunction positionIsHorizontal(position) {\n\treturn position === 'top' || position === 'bottom';\n}\n\nvar Chart = function(item, config) {\n\tthis.construct(item, config);\n\treturn this;\n};\n\nhelpers$1.extend(Chart.prototype, /** @lends Chart */ {\n\t/**\n\t * @private\n\t */\n\tconstruct: function(item, config) {\n\t\tvar me = this;\n\n\t\tconfig = initConfig(config);\n\n\t\tvar context = platform.acquireContext(item, config);\n\t\tvar canvas = context && context.canvas;\n\t\tvar height = canvas && canvas.height;\n\t\tvar width = canvas && canvas.width;\n\n\t\tme.id = helpers$1.uid();\n\t\tme.ctx = context;\n\t\tme.canvas = canvas;\n\t\tme.config = config;\n\t\tme.width = width;\n\t\tme.height = height;\n\t\tme.aspectRatio = height ? width / height : null;\n\t\tme.options = config.options;\n\t\tme._bufferedRender = false;\n\n\t\t/**\n\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t * @prop Chart#chart\n\t\t * @deprecated since version 2.6.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tme.chart = me;\n\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t// Add the chart instance to the global namespace\n\t\tChart.instances[me.id] = me;\n\n\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\tObject.defineProperty(me, 'data', {\n\t\t\tget: function() {\n\t\t\t\treturn me.config.data;\n\t\t\t},\n\t\t\tset: function(value) {\n\t\t\t\tme.config.data = value;\n\t\t\t}\n\t\t});\n\n\t\tif (!context || !canvas) {\n\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\treturn;\n\t\t}\n\n\t\tme.initialize();\n\t\tme.update();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinitialize: function() {\n\t\tvar me = this;\n\n\t\t// Before init plugin notification\n\t\tcore_plugins.notify(me, 'beforeInit');\n\n\t\thelpers$1.retinaScale(me, me.options.devicePixelRatio);\n\n\t\tme.bindEvents();\n\n\t\tif (me.options.responsive) {\n\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\tme.resize(true);\n\t\t}\n\n\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\tme.ensureScalesHaveIDs();\n\t\tme.buildOrUpdateScales();\n\t\tme.initToolTip();\n\n\t\t// After init plugin notification\n\t\tcore_plugins.notify(me, 'afterInit');\n\n\t\treturn me;\n\t},\n\n\tclear: function() {\n\t\thelpers$1.canvas.clear(this);\n\t\treturn this;\n\t},\n\n\tstop: function() {\n\t\t// Stops any current animation loop occurring\n\t\tcore_animations.cancelAnimation(this);\n\t\treturn this;\n\t},\n\n\tresize: function(silent) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar canvas = me.canvas;\n\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\tvar newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\treturn;\n\t\t}\n\n\t\tcanvas.width = me.width = newWidth;\n\t\tcanvas.height = me.height = newHeight;\n\t\tcanvas.style.width = newWidth + 'px';\n\t\tcanvas.style.height = newHeight + 'px';\n\n\t\thelpers$1.retinaScale(me, options.devicePixelRatio);\n\n\t\tif (!silent) {\n\t\t\t// Notify any plugins about the resize\n\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\tcore_plugins.notify(me, 'resize', [newSize]);\n\n\t\t\t// Notify of resize\n\t\t\tif (options.onResize) {\n\t\t\t\toptions.onResize(me, newSize);\n\t\t\t}\n\n\t\t\tme.stop();\n\t\t\tme.update({\n\t\t\t\tduration: options.responsiveAnimationDuration\n\t\t\t});\n\t\t}\n\t},\n\n\tensureScalesHaveIDs: function() {\n\t\tvar options = this.options;\n\t\tvar scalesOptions = options.scales || {};\n\t\tvar scaleOptions = options.scale;\n\n\t\thelpers$1.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t});\n\n\t\thelpers$1.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t});\n\n\t\tif (scaleOptions) {\n\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t}\n\t},\n\n\t/**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n\tbuildOrUpdateScales: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar scales = me.scales || {};\n\t\tvar items = [];\n\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\tobj[id] = false;\n\t\t\treturn obj;\n\t\t}, {});\n\n\t\tif (options.scales) {\n\t\t\titems = items.concat(\n\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t}),\n\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif (options.scale) {\n\t\t\titems.push({\n\t\t\t\toptions: options.scale,\n\t\t\t\tdtype: 'radialLinear',\n\t\t\t\tisDefault: true,\n\t\t\t\tdposition: 'chartArea'\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(items, function(item) {\n\t\t\tvar scaleOptions = item.options;\n\t\t\tvar id = scaleOptions.id;\n\t\t\tvar scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t}\n\n\t\t\tupdated[id] = true;\n\t\t\tvar scale = null;\n\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\tscale = scales[id];\n\t\t\t\tscale.options = scaleOptions;\n\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\tscale.chart = me;\n\t\t\t} else {\n\t\t\t\tvar scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tscale = new scaleClass({\n\t\t\t\t\tid: id,\n\t\t\t\t\ttype: scaleType,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\t\t\t\tscales[scale.id] = scale;\n\t\t\t}\n\n\t\t\tscale.mergeTicksOptions();\n\n\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\tif (item.isDefault) {\n\t\t\t\tme.scale = scale;\n\t\t\t}\n\t\t});\n\t\t// clear up discarded scales\n\t\thelpers$1.each(updated, function(hasUpdated, id) {\n\t\t\tif (!hasUpdated) {\n\t\t\t\tdelete scales[id];\n\t\t\t}\n\t\t});\n\n\t\tme.scales = scales;\n\n\t\tcore_scaleService.addScalesToLayout(this);\n\t},\n\n\tbuildOrUpdateControllers: function() {\n\t\tvar me = this;\n\t\tvar newControllers = [];\n\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t}\n\t\t\tmeta.type = type;\n\n\t\t\tif (meta.controller) {\n\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\tmeta.controller.linkScales();\n\t\t\t} else {\n\t\t\t\tvar ControllerClass = controllers[meta.type];\n\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t}\n\n\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t}\n\t\t}, me);\n\n\t\treturn newControllers;\n\t},\n\n\t/**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n\tresetElements: function() {\n\t\tvar me = this;\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t}, me);\n\t},\n\n\t/**\n\t* Resets the chart back to it's state before the initial animation\n\t*/\n\treset: function() {\n\t\tthis.resetElements();\n\t\tthis.tooltip.initialize();\n\t},\n\n\tupdate: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tupdateConfig(me);\n\n\t\t// plugins options references might have change, let's invalidate the cache\n\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\tcore_plugins._invalidate(me);\n\n\t\tif (core_plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case the entire data object changed\n\t\tme.tooltip._data = me.data;\n\n\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t// Make sure all dataset controllers have correct meta data counts\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t}, me);\n\n\t\tme.updateLayout();\n\n\t\t// Can only reset the new controllers after the scales have been updated\n\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\thelpers$1.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\t\t}\n\n\t\tme.updateDatasets();\n\n\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t// after update.\n\t\tme.tooltip.initialize();\n\n\t\t// Last active contains items that were previously in the tooltip.\n\t\t// When we reset the tooltip, we need to clear it\n\t\tme.lastActive = [];\n\n\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\tcore_plugins.notify(me, 'afterUpdate');\n\n\t\tif (me._bufferedRender) {\n\t\t\tme._bufferedRequest = {\n\t\t\t\tduration: config.duration,\n\t\t\t\teasing: config.easing,\n\t\t\t\tlazy: config.lazy\n\t\t\t};\n\t\t} else {\n\t\t\tme.render(config);\n\t\t}\n\t},\n\n\t/**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n\tupdateLayout: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeLayout') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tcore_layouts.update(this, this.width, this.height);\n\n\t\t/**\n\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t * @method IPlugin#afterScaleUpdate\n\t\t * @deprecated since version 2.5.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tcore_plugins.notify(me, 'afterScaleUpdate');\n\t\tcore_plugins.notify(me, 'afterLayout');\n\t},\n\n\t/**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n\tupdateDatasets: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.updateDataset(i);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsUpdate');\n\t},\n\n\t/**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n\tupdateDataset: function(index) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.update();\n\n\t\tcore_plugins.notify(me, 'afterDatasetUpdate', [args]);\n\t},\n\n\trender: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tvar animationOptions = me.options.animation;\n\t\tvar duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n\t\tvar lazy = config.lazy;\n\n\t\tif (core_plugins.notify(me, 'beforeRender') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar onComplete = function(animation) {\n\t\t\tcore_plugins.notify(me, 'afterRender');\n\t\t\thelpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t};\n\n\t\tif (animationOptions && duration) {\n\t\t\tvar animation = new core_animation({\n\t\t\t\tnumSteps: duration / 16.66, // 60 fps\n\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers$1.easing.effects[animationObject.easing];\n\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t},\n\n\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\tonAnimationComplete: onComplete\n\t\t\t});\n\n\t\t\tcore_animations.addAnimation(me, animation, duration, lazy);\n\t\t} else {\n\t\t\tme.draw();\n\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\tonComplete(new core_animation({numSteps: 0, chart: me}));\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdraw: function(easingValue) {\n\t\tvar me = this;\n\n\t\tme.clear();\n\n\t\tif (helpers$1.isNullOrUndef(easingValue)) {\n\t\t\teasingValue = 1;\n\t\t}\n\n\t\tme.transition(easingValue);\n\n\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw all the scales\n\t\thelpers$1.each(me.boxes, function(box) {\n\t\t\tbox.draw(me.chartArea);\n\t\t}, me);\n\n\t\tme.drawDatasets(easingValue);\n\t\tme._drawTooltip(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDraw', [easingValue]);\n\t},\n\n\t/**\n\t * @private\n\t */\n\ttransition: function(easingValue) {\n\t\tvar me = this;\n\n\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t}\n\t\t}\n\n\t\tme.tooltip.transition(easingValue);\n\t},\n\n\t/**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n\tdrawDatasets: function(easingValue) {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw datasets reversed to support proper line stacking\n\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t}\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t},\n\n\t/**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n\tdrawDataset: function(index, easingValue) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.draw(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDatasetDraw', [args]);\n\t},\n\n\t/**\n\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t * @private\n\t */\n\t_drawTooltip: function(easingValue) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\t\tvar args = {\n\t\t\ttooltip: tooltip,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\ttooltip.draw();\n\n\t\tcore_plugins.notify(me, 'afterTooltipDraw', [args]);\n\t},\n\n\t/**\n\t * Get the single element that was clicked on\n\t * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t */\n\tgetElementAtEvent: function(e) {\n\t\treturn core_interaction.modes.single(this, e);\n\t},\n\n\tgetElementsAtEvent: function(e) {\n\t\treturn core_interaction.modes.label(this, e, {intersect: true});\n\t},\n\n\tgetElementsAtXAxis: function(e) {\n\t\treturn core_interaction.modes['x-axis'](this, e, {intersect: true});\n\t},\n\n\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\tvar method = core_interaction.modes[mode];\n\t\tif (typeof method === 'function') {\n\t\t\treturn method(this, e, options);\n\t\t}\n\n\t\treturn [];\n\t},\n\n\tgetDatasetAtEvent: function(e) {\n\t\treturn core_interaction.modes.dataset(this, e, {intersect: true});\n\t},\n\n\tgetDatasetMeta: function(datasetIndex) {\n\t\tvar me = this;\n\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\tif (!dataset._meta) {\n\t\t\tdataset._meta = {};\n\t\t}\n\n\t\tvar meta = dataset._meta[me.id];\n\t\tif (!meta) {\n\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\ttype: null,\n\t\t\t\tdata: [],\n\t\t\t\tdataset: null,\n\t\t\t\tcontroller: null,\n\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\txAxisID: null,\n\t\t\t\tyAxisID: null\n\t\t\t};\n\t\t}\n\n\t\treturn meta;\n\t},\n\n\tgetVisibleDatasetCount: function() {\n\t\tvar count = 0;\n\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t},\n\n\tisDatasetVisible: function(datasetIndex) {\n\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t},\n\n\tgenerateLegend: function() {\n\t\treturn this.options.legendCallback(this);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroyDatasetMeta: function(datasetIndex) {\n\t\tvar id = this.id;\n\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\tif (meta) {\n\t\t\tmeta.controller.destroy();\n\t\t\tdelete dataset._meta[id];\n\t\t}\n\t},\n\n\tdestroy: function() {\n\t\tvar me = this;\n\t\tvar canvas = me.canvas;\n\t\tvar i, ilen;\n\n\t\tme.stop();\n\n\t\t// dataset controllers need to cleanup associated data\n\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.destroyDatasetMeta(i);\n\t\t}\n\n\t\tif (canvas) {\n\t\t\tme.unbindEvents();\n\t\t\thelpers$1.canvas.clear(me);\n\t\t\tplatform.releaseContext(me.ctx);\n\t\t\tme.canvas = null;\n\t\t\tme.ctx = null;\n\t\t}\n\n\t\tcore_plugins.notify(me, 'destroy');\n\n\t\tdelete Chart.instances[me.id];\n\t},\n\n\ttoBase64Image: function() {\n\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t},\n\n\tinitToolTip: function() {\n\t\tvar me = this;\n\t\tme.tooltip = new core_tooltip({\n\t\t\t_chart: me,\n\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t_data: me.data,\n\t\t\t_options: me.options.tooltips\n\t\t}, me);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners = {};\n\t\tvar listener = function() {\n\t\t\tme.eventHandler.apply(me, arguments);\n\t\t};\n\n\t\thelpers$1.each(me.options.events, function(type) {\n\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\tlisteners[type] = listener;\n\t\t});\n\n\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\tif (me.options.responsive) {\n\t\t\tlistener = function() {\n\t\t\t\tme.resize();\n\t\t\t};\n\n\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\tlisteners.resize = listener;\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tunbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners;\n\t\tif (!listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete me._listeners;\n\t\thelpers$1.each(listeners, function(listener, type) {\n\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t});\n\t},\n\n\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\tvar element, i, ilen;\n\n\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\telement = elements[i];\n\t\t\tif (element) {\n\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\teventHandler: function(e) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\n\t\tif (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Buffer any update calls so that renders do not occur\n\t\tme._bufferedRender = true;\n\t\tme._bufferedRequest = null;\n\n\t\tvar changed = me.handleEvent(e);\n\t\t// for smooth tooltip animations issue #4989\n\t\t// the tooltip should be the source of change\n\t\t// Animation check workaround:\n\t\t// tooltip._start will be null when tooltip isn't animating\n\t\tif (tooltip) {\n\t\t\tchanged = tooltip._start\n\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterEvent', [e]);\n\n\t\tvar bufferedRequest = me._bufferedRequest;\n\t\tif (bufferedRequest) {\n\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\tme.render(bufferedRequest);\n\t\t} else if (changed && !me.animating) {\n\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\tme.stop();\n\n\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\tme.render({\n\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\tlazy: true\n\t\t\t});\n\t\t}\n\n\t\tme._bufferedRender = false;\n\t\tme._bufferedRequest = null;\n\n\t\treturn me;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event the event to handle\n\t * @return {boolean} true if the chart needs to re-render\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me.options || {};\n\t\tvar hoverOptions = options.hover;\n\t\tvar changed = false;\n\n\t\tme.lastActive = me.lastActive || [];\n\n\t\t// Find Active Elements for hover and tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme.active = [];\n\t\t} else {\n\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t}\n\n\t\t// Invoke onHover hook\n\t\t// Need to call with native event here to not break backwards compatibility\n\t\thelpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\tif (options.onClick) {\n\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t}\n\t\t}\n\n\t\t// Remove styling for last active (even if it may still be active)\n\t\tif (me.lastActive.length) {\n\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t}\n\n\t\t// Built in hover styling\n\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t}\n\n\t\tchanged = !helpers$1.arrayEquals(me.active, me.lastActive);\n\n\t\t// Remember Last Actives\n\t\tme.lastActive = me.active;\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * NOTE(SB) We actually don't use this container anymore but we need to keep it\n * for backward compatibility. Though, it can still be useful for plugins that\n * would need to work on multiple charts?!\n */\nChart.instances = {};\n\nvar core_controller = Chart;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart instead.\n * @class Chart.Controller\n * @deprecated since version 2.6\n * @todo remove at version 3\n * @private\n */\nChart.Controller = Chart;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\nChart.types = {};\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.configMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.configMerge = mergeConfig;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.scaleMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.scaleMerge = mergeScaleConfig;\n\nvar core_helpers = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers$1.where = function(collection, filterCallback) {\n\t\tif (helpers$1.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers$1.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers$1.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers$1.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers$1.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers$1.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers$1.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers$1.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers$1.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers$1.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers$1.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers$1.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers$1.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\n\t/**\n\t * Returns the number of decimal places\n\t * i.e. the number of digits after the decimal point, of the value of this Number.\n\t * @param {number} x - A number.\n\t * @returns {number} The number of decimal places.\n\t * @private\n\t */\n\thelpers$1._decimalPlaces = function(x) {\n\t\tif (!helpers$1.isFinite(x)) {\n\t\t\treturn;\n\t\t}\n\t\tvar e = 1;\n\t\tvar p = 0;\n\t\twhile (Math.round(x * e) / e !== x) {\n\t\t\te *= 10;\n\t\t\tp++;\n\t\t}\n\t\treturn p;\n\t};\n\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers$1.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers$1.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\n\t/**\n\t * Provided for backward compatibility, not available anymore\n\t * @function Chart.helpers.aliasPixel\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t */\n\thelpers$1.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\n\t/**\n\t * Returns the aligned pixel value to avoid anti-aliasing blur\n\t * @param {Chart} chart - The chart instance.\n\t * @param {number} pixel - A pixel value.\n\t * @param {number} width - The width of the element.\n\t * @returns {number} The aligned pixel value.\n\t * @private\n\t */\n\thelpers$1._alignPixel = function(chart, pixel, width) {\n\t\tvar devicePixelRatio = chart.currentDevicePixelRatio;\n\t\tvar halfWidth = width / 2;\n\t\treturn Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n\t};\n\n\thelpers$1.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers$1.EPSILON = Number.EPSILON || 1e-14;\n\thelpers$1.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers$1.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers$1.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers$1.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers$1.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers$1.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t/**\n\t * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n\t * @param {HTMLElement} domNode - the node to check the constraint on\n\t * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n\t * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n\t * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n\t */\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers$1._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers$1._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers$1.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers$1._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.toString() === '[object ShadowRoot]') {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers$1.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers$1.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers$1.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers$1.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers$1.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers$1.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers$1.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers$1.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers$1.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers$1.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers$1.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers$1.color = !chartjsColor ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = core_defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn chartjsColor(value);\n\t\t};\n\n\thelpers$1.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient) ?\n\t\t\tcolorValue :\n\t\t\thelpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\nfunction abstract() {\n\tthrow new Error(\n\t\t'This method is not implemented: either no adapter can ' +\n\t\t'be found or an incomplete integration was provided.'\n\t);\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n/**\n * Currently supported unit string values.\n * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n * @memberof Chart._adapters._date\n * @name Unit\n */\n\n/**\n * @class\n */\nfunction DateAdapter(options) {\n\tthis.options = options || {};\n}\n\nhelpers$1.extend(DateAdapter.prototype, /** @lends DateAdapter */ {\n\t/**\n\t * Returns a map of time formats for the supported formatting units defined\n\t * in Unit as well as 'datetime' representing a detailed date/time string.\n\t * @returns {{string: string}}\n\t */\n\tformats: abstract,\n\n\t/**\n\t * Parses the given `value` and return the associated timestamp.\n\t * @param {any} value - the value to parse (usually comes from the data)\n\t * @param {string} [format] - the expected data format\n\t * @returns {(number|null)}\n\t * @function\n\t */\n\tparse: abstract,\n\n\t/**\n\t * Returns the formatted date in the specified `format` for a given `timestamp`.\n\t * @param {number} timestamp - the timestamp to format\n\t * @param {string} format - the date/time token\n\t * @return {string}\n\t * @function\n\t */\n\tformat: abstract,\n\n\t/**\n\t * Adds the specified `amount` of `unit` to the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {number} amount - the amount to add\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tadd: abstract,\n\n\t/**\n\t * Returns the number of `unit` between the given timestamps.\n\t * @param {number} max - the input timestamp (reference)\n\t * @param {number} min - the timestamp to substract\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tdiff: abstract,\n\n\t/**\n\t * Returns start of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n\t * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n\t * @function\n\t */\n\tstartOf: abstract,\n\n\t/**\n\t * Returns end of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @function\n\t */\n\tendOf: abstract,\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility for scale.getValueForPixel(),\n\t * this method should be overridden only by the moment adapter.\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(value) {\n\t\treturn value;\n\t}\n});\n\nDateAdapter.override = function(members) {\n\thelpers$1.extend(DateAdapter.prototype, members);\n};\n\nvar _date = DateAdapter;\n\nvar core_adapters = {\n\t_date: _date\n};\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nvar core_ticks = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {string|string[]} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers$1.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {number} the value to be formatted\n\t\t * @param index {number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {number[]} the list of ticks being converted\n\t\t * @return {string} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers$1.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers$1.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers$1.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\nvar valueOrDefault$9 = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\ncore_defaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: core_ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (scale.getTicks().length === 1) {\n\t\t\tlineValue -= scale.isHorizontal() ?\n\t\t\t\tMath.max(lineValue - scale.left, scale.right - lineValue) :\n\t\t\t\tMath.max(lineValue - scale.top, scale.bottom - lineValue);\n\t\t} else if (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers$1.isArray(tick) ?\n\t\thelpers$1.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nvar core_scale = core_element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers$1.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers$1.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\n\t\tme._maxLabelLines = 0;\n\t\tme.longestLabelWidth = 0;\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\t// Allow modification of ticks in callback.\n\t\tticks = me.afterBuildTicks(ticks) || ticks;\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers$1.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers$1.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers$1.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers$1.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers$1.noop,\n\tafterDataLimits: function() {\n\t\thelpers$1.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers$1.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers$1.noop,\n\tafterBuildTicks: function(ticks) {\n\t\tvar me = this;\n\t\t// ticks is empty for old axis implementations here\n\t\tif (helpers$1.isArray(ticks) && ticks.length) {\n\t\t\treturn helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n\t\t}\n\t\t// Support old implementations (that modified `this.ticks` directly in buildTicks)\n\t\tme.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n\t\treturn ticks;\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\t\tcontext.font = tickFont.string;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers$1.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = me._isVisible();\n\t\tvar position = opts.position;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar tickFont = parseFont(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelFont = parseFont(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing the labels\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t// Store max number of lines and widest label for _autoSkip\n\t\t\tme._maxLabelLines = tallestLabelHeightInLines;\n\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.lineHeight * tallestLabelHeightInLines)\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.string;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n\t\t\t\tvar offsetLeft = me.getPixelForTick(0) - me.left;\n\t\t\t\tvar offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n\t\t\t\tvar paddingLeft, paddingRight;\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tpaddingLeft = position === 'bottom' ? (cosRotation * firstLabelWidth) : (cosRotation * lineSpace);\n\t\t\t\t\tpaddingRight = position === 'bottom' ? (cosRotation * lineSpace) : (cosRotation * lastLabelWidth);\n\t\t\t\t} else {\n\t\t\t\t\tpaddingLeft = firstLabelWidth / 2;\n\t\t\t\t\tpaddingRight = lastLabelWidth / 2;\n\t\t\t\t}\n\t\t\t\tme.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\t\t\t\tme.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers$1.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers$1.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers$1.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + pixel;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + valueOffset;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar skipRatio = false;\n\t\tvar maxTicks = optionTicks.maxTicksLimit;\n\n\t\t// Total space needed to display all ticks. First and last ticks are\n\t\t// drawn as their center at end of axis, so tickCount-1\n\t\tvar ticksLength = me._tickSize() * (tickCount - 1);\n\n\t\t// Axis length\n\t\tvar axisLength = isHorizontal\n\t\t\t? me.width - (me.paddingLeft + me.paddingRight)\n\t\t\t: me.height - (me.paddingTop + me.PaddingBottom);\n\n\t\tvar result = [];\n\t\tvar i, tick;\n\n\t\tif (ticksLength > axisLength) {\n\t\t\tskipRatio = 1 + Math.floor(ticksLength / axisLength);\n\t\t}\n\n\t\t// if they defined a max number of optionTicks,\n\t\t// increase skipRatio until that number is met\n\t\tif (tickCount > maxTicks) {\n\t\t\tskipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\tif (skipRatio > 1 && i % skipRatio > 0) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_tickSize: function() {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\n\t\t// Calculate space needed by label in axis direction.\n\t\tvar rot = helpers$1.toRadians(me.labelRotation);\n\t\tvar cos = Math.abs(Math.cos(rot));\n\t\tvar sin = Math.abs(Math.sin(rot));\n\n\t\tvar padding = optionTicks.autoSkipPadding || 0;\n\t\tvar w = (me.longestLabelWidth + padding) || 0;\n\n\t\tvar tickFont = helpers$1.options._parseFont(optionTicks);\n\t\tvar h = (me._maxLabelLines * tickFont.lineHeight + padding) || 0;\n\n\t\t// Calculate space needed for 1 tick in axis direction.\n\t\treturn isHorizontal\n\t\t\t? h * cos > w * sin ? w / cos : h / sin\n\t\t\t: h * sin < w * cos ? h / cos : w / sin;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_isVisible: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar display = me.options.display;\n\t\tvar i, ilen, meta;\n\n\t\tif (display !== 'auto') {\n\t\t\treturn !!display;\n\t\t}\n\n\t\t// When 'auto', the scale is visible if at least one associated dataset is visible.\n\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t * Actually draw the scale on the canvas\n\t * @param {object} chartArea - the area of the chart to draw full grid lines on\n\t */\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\n\t\tif (!me._isVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar chart = me.chart;\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultFontColor = globalDefaults.defaultFontColor;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\t\tvar position = options.position;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isMirrored = optionTicks.mirror;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n\t\tvar tickFont = parseFont(optionTicks);\n\t\tvar lineHeight = tickFont.lineHeight;\n\t\tvar majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n\t\tvar majorTickFont = parseFont(optionMajorTicks);\n\t\tvar tickPadding = optionTicks.padding;\n\t\tvar labelOffset = optionTicks.labelOffset;\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n\t\tvar scaleLabelFont = parseFont(scaleLabel);\n\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n\t\tvar alignPixel = helpers$1._alignPixel;\n\t\tvar borderValue, tickStart, tickEnd;\n\n\t\tif (position === 'top') {\n\t\t\tborderValue = alignPixel(chart, me.bottom, axisWidth);\n\t\t\ttickStart = me.bottom - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else if (position === 'bottom') {\n\t\t\tborderValue = alignPixel(chart, me.top, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.top + tl;\n\t\t} else if (position === 'left') {\n\t\t\tborderValue = alignPixel(chart, me.right, axisWidth);\n\t\t\ttickStart = me.right - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else {\n\t\t\tborderValue = alignPixel(chart, me.left, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.left + tl;\n\t\t}\n\n\t\tvar epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n\t\thelpers$1.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers$1.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash || [];\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n\t\t\t} else {\n\t\t\t\tlineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = gridLines.borderDash || [];\n\t\t\t\tborderDashOffset = gridLines.borderDashOffset || 0.0;\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n\t\t\tvar labelCount = helpers$1.isArray(label) ? label.length : 1;\n\t\t\tvar lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (lineValue < me.left - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tty1 = tickStart;\n\t\t\t\tty2 = tickEnd;\n\t\t\t\tlabelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\tif (position === 'top') {\n\t\t\t\t\ty1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t\ttextOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n\t\t\t\tif (lineValue < me.top - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tickStart;\n\t\t\t\ttx2 = tickEnd;\n\t\t\t\tty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tlabelY = me.getPixelForTick(index) + labelOffset;\n\t\t\t\ttextOffset = (1 - labelCount) * lineHeight / 2;\n\n\t\t\t\tif (position === 'left') {\n\t\t\t\t\tx1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\ttextAlign = isMirrored ? 'left' : 'right';\n\t\t\t\t\tlabelX = me.right - labelXOffset;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextAlign = isMirrored ? 'right' : 'left';\n\t\t\t\t\tlabelX = me.left + labelXOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextOffset: textOffset,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers$1.each(itemsToDraw, function(itemToDraw) {\n\t\t\tvar glWidth = itemToDraw.glWidth;\n\t\t\tvar glColor = itemToDraw.glColor;\n\n\t\t\tif (gridLines.display && glWidth && glColor) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = glWidth;\n\t\t\t\tcontext.strokeStyle = glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tvar y = itemToDraw.textOffset;\n\t\t\t\tif (helpers$1.isArray(label)) {\n\t\t\t\t\tfor (var i = 0; i < label.length; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, y);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.string;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (axisWidth) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tvar firstLineWidth = axisWidth;\n\t\t\tvar lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n\t\t\tvar x1, x2, y1, y2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tx1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\tx2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\ty1 = y2 = borderValue;\n\t\t\t} else {\n\t\t\t\ty1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\ty2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\tx1 = x2 = borderValue;\n\t\t\t}\n\n\t\t\tcontext.lineWidth = axisWidth;\n\t\t\tcontext.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n\nvar defaultConfig = {\n\tposition: 'bottom'\n};\n\nvar scale_category = core_scale.extend({\n\t/**\n\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t* else fall back to data.labels\n\t* @private\n\t*/\n\tgetLabels: function() {\n\t\tvar data = this.chart.data;\n\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\tme.minIndex = 0;\n\t\tme.maxIndex = labels.length - 1;\n\t\tvar findIndex;\n\n\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t// user specified min value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t}\n\n\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t// user specified max value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t}\n\n\t\tme.min = labels[me.minIndex];\n\t\tme.max = labels[me.maxIndex];\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\t// If we are viewing some subset of labels, slice the original array\n\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\n\t\tif (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n\t\t\treturn me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n\t\t}\n\n\t\treturn me.ticks[index - me.minIndex];\n\t},\n\n\t// Used to get data value locations.  Value can either be an index or a numerical value\n\tgetPixelForValue: function(value, index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\t// 1 is added because we need the length but we have the indexes\n\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t// If value is a data object, then index is the index in the data array,\n\t\t// not the index of the scale. We need to change that.\n\t\tvar valueCategory;\n\t\tif (value !== undefined && value !== null) {\n\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t}\n\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\tvar labels = me.getLabels();\n\t\t\tvalue = valueCategory || value;\n\t\t\tvar idx = labels.indexOf(value);\n\t\t\tindex = idx !== -1 ? idx : index;\n\t\t}\n\n\t\tif (me.isHorizontal()) {\n\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t}\n\n\t\t\treturn me.left + widthOffset;\n\t\t}\n\t\tvar valueHeight = me.height / offsetAmt;\n\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\tif (offset) {\n\t\t\theightOffset += (valueHeight / 2);\n\t\t}\n\n\t\treturn me.top + heightOffset;\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tvar value;\n\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\tvar horz = me.isHorizontal();\n\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\tpixel -= horz ? me.left : me.top;\n\n\t\tif (offset) {\n\t\t\tpixel -= (valueDimension / 2);\n\t\t}\n\n\t\tif (pixel <= 0) {\n\t\t\tvalue = 0;\n\t\t} else {\n\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t}\n\n\t\treturn value + me.minIndex;\n\t},\n\n\tgetBasePixel: function() {\n\t\treturn this.bottom;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults = defaultConfig;\nscale_category._defaults = _defaults;\n\nvar noop = helpers$1.noop;\nvar isNullOrUndef = helpers$1.isNullOrUndef;\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar MIN_SPACING = 1e-14;\n\tvar stepSize = generationOptions.stepSize;\n\tvar unit = stepSize || 1;\n\tvar maxNumSpaces = generationOptions.maxTicks - 1;\n\tvar min = generationOptions.min;\n\tvar max = generationOptions.max;\n\tvar precision = generationOptions.precision;\n\tvar rmin = dataRange.min;\n\tvar rmax = dataRange.max;\n\tvar spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n\tvar factor, niceMin, niceMax, numSpaces;\n\n\t// Beyond MIN_SPACING floating point numbers being to lose precision\n\t// such that we can't do the math necessary to generate ticks\n\tif (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n\t\treturn [rmin, rmax];\n\t}\n\n\tnumSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\tif (numSpaces > maxNumSpaces) {\n\t\t// If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n\t\tspacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n\t}\n\n\tif (stepSize || isNullOrUndef(precision)) {\n\t\t// If a precision is not specified, calculate factor based on spacing\n\t\tfactor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n\t} else {\n\t\t// If the user specified a precision, round to that number of decimal places\n\t\tfactor = Math.pow(10, precision);\n\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t}\n\n\tniceMin = Math.floor(rmin / spacing) * spacing;\n\tniceMax = Math.ceil(rmax / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n\t\t\tniceMin = min;\n\t\t}\n\t\tif (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n\t\t\tniceMax = max;\n\t\t}\n\t}\n\n\tnumSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tniceMin = Math.round(niceMin * factor) / factor;\n\tniceMax = Math.round(niceMax * factor) / factor;\n\tticks.push(isNullOrUndef(min) ? niceMin : min);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n\t}\n\tticks.push(isNullOrUndef(max) ? niceMax : max);\n\n\treturn ticks;\n}\n\nvar scale_linearbase = core_scale.extend({\n\tgetRightValue: function(value) {\n\t\tif (typeof value === 'string') {\n\t\t\treturn +value;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, value);\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t// axis, they can manually override it\n\t\tif (tickOpts.beginAtZero) {\n\t\t\tvar minSign = helpers$1.sign(me.min);\n\t\t\tvar maxSign = helpers$1.sign(me.max);\n\n\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t// move the top up to 0\n\t\t\t\tme.max = 0;\n\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t// move the bottom down to 0\n\t\t\t\tme.min = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\tif (tickOpts.min !== undefined) {\n\t\t\tme.min = tickOpts.min;\n\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t} else {\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t}\n\t\t}\n\n\t\tif (tickOpts.max !== undefined) {\n\t\t\tme.max = tickOpts.max;\n\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t} else {\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t}\n\t\t}\n\n\t\tif (setMin !== setMax) {\n\t\t\t// We set the min or the max but not both.\n\t\t\t// So ensure that our range is good\n\t\t\t// Inverted or 0 length range can happen when\n\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\tif (me.min >= me.max) {\n\t\t\t\tif (setMin) {\n\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (me.min === me.max) {\n\t\t\tme.max++;\n\n\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\tme.min--;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar stepSize = tickOpts.stepSize;\n\t\tvar maxTicksLimit = tickOpts.maxTicksLimit;\n\t\tvar maxTicks;\n\n\t\tif (stepSize) {\n\t\t\tmaxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n\t\t} else {\n\t\t\tmaxTicks = me._computeTickLimit();\n\t\t\tmaxTicksLimit = maxTicksLimit || 11;\n\t\t}\n\n\t\tif (maxTicksLimit) {\n\t\t\tmaxTicks = Math.min(maxTicksLimit, maxTicks);\n\t\t}\n\n\t\treturn maxTicks;\n\t},\n\n\t_computeTickLimit: function() {\n\t\treturn Number.POSITIVE_INFINITY;\n\t},\n\n\thandleDirectionalChanges: noop,\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t// the graph. Make sure we always have at least 2 ticks\n\t\tvar maxTicks = me.getTickLimit();\n\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\tvar numericGeneratorOptions = {\n\t\t\tmaxTicks: maxTicks,\n\t\t\tmin: tickOpts.min,\n\t\t\tmax: tickOpts.max,\n\t\t\tprecision: tickOpts.precision,\n\t\t\tstepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\tme.handleDirectionalChanges();\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\tticks.reverse();\n\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(me);\n\t}\n});\n\nvar defaultConfig$1 = {\n\tposition: 'left',\n\tticks: {\n\t\tcallback: core_ticks.formatters.linear\n\t}\n};\n\nvar scale_linear = scale_linearbase.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar DEFAULT_MIN = 0;\n\t\tvar DEFAULT_MAX = 1;\n\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// First Calculate the range\n\t\tme.min = null;\n\t\tme.max = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Store these per type\n\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\tvar minVal = helpers$1.min(values);\n\t\t\t\tvar maxVal = helpers$1.max(values);\n\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickFont;\n\n\t\tif (me.isHorizontal()) {\n\t\t\treturn Math.ceil(me.width / 40);\n\t\t}\n\t\ttickFont = helpers$1.options._parseFont(me.options.ticks);\n\t\treturn Math.ceil(me.height / tickFont.lineHeight);\n\t},\n\n\t// Called after the ticks are built. We need\n\thandleDirectionalChanges: function() {\n\t\tif (!this.isHorizontal()) {\n\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\tthis.ticks.reverse();\n\t\t}\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\t// Utils\n\tgetPixelForValue: function(value) {\n\t\t// This must be called after fit has been run so that\n\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\tvar me = this;\n\t\tvar start = me.start;\n\n\t\tvar rightValue = +me.getRightValue(value);\n\t\tvar pixel;\n\t\tvar range = me.end - start;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t} else {\n\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\treturn me.start + ((me.end - me.start) * offset);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$1 = defaultConfig$1;\nscale_linear._defaults = _defaults$1;\n\nvar valueOrDefault$a = helpers$1.valueOrDefault;\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks$1(generationOptions, dataRange) {\n\tvar ticks = [];\n\n\tvar tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers$1.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers$1.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\nvar defaultConfig$2 = {\n\tposition: 'left',\n\n\t// label settings\n\tticks: {\n\t\tcallback: core_ticks.formatters.logarithmic\n\t}\n};\n\n// TODO(v3): change this to positiveOrDefault\nfunction nonNegativeOrDefault(value, defaultValue) {\n\treturn helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n}\n\nvar scale_logarithmic = core_scale.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// Calculate Range\n\t\tme.min = null;\n\t\tme.max = null;\n\t\tme.minNotZero = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\tvar minVal = helpers$1.min(valuesForType);\n\t\t\t\t\tvar maxVal = helpers$1.max(valuesForType);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar DEFAULT_MIN = 1;\n\t\tvar DEFAULT_MAX = 10;\n\n\t\tme.min = nonNegativeOrDefault(tickOpts.min, me.min);\n\t\tme.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n\t\tif (me.min === me.max) {\n\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n\t\t\t\tme.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n\t\t\t} else {\n\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t}\n\t\t}\n\t\tif (me.min === null) {\n\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n\t\t}\n\t\tif (me.max === null) {\n\t\t\tme.max = me.min !== 0\n\t\t\t\t? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1)\n\t\t\t\t: DEFAULT_MAX;\n\t\t}\n\t\tif (me.minNotZero === null) {\n\t\t\tif (me.min > 0) {\n\t\t\t\tme.minNotZero = me.min;\n\t\t\t} else if (me.max < 1) {\n\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n\t\t\t} else {\n\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t}\n\t\t}\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = !me.isHorizontal();\n\n\t\tvar generationOptions = {\n\t\t\tmin: nonNegativeOrDefault(tickOpts.min),\n\t\t\tmax: nonNegativeOrDefault(tickOpts.max)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks$1(generationOptions, me);\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\treverse = !reverse;\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t\tif (reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tthis.tickValues = this.ticks.slice();\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(this);\n\t},\n\n\t// Get the correct tooltip label\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t},\n\n\t/**\n\t * Returns the value of the first tick.\n\t * @param {number} value - The minimum not zero value.\n\t * @return {number} The first tick value.\n\t * @private\n\t */\n\t_getFirstTickValue: function(value) {\n\t\tvar exp = Math.floor(helpers$1.log10(value));\n\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\treturn significand * Math.pow(10, exp);\n\t},\n\n\tgetPixelForValue: function(value) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar offset = 0;\n\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\tvalue = +me.getRightValue(value);\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t\tsign = -1;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t\tsign = 1;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tpixel = reverse ? me.right : me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\toffset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tif (value !== 0) {\n\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t}\n\t\t\tpixel += sign * offset;\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar innerDimension, start, end, value;\n\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\tvar offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tvalue -= offset;\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tvalue *= log10(end) - log10(start);\n\t\t\tvalue /= innerDimension;\n\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t}\n\t\treturn value;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$2 = defaultConfig$2;\nscale_logarithmic._defaults = _defaults$2;\n\nvar valueOrDefault$b = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\nvar resolve$7 = helpers$1.options.resolve;\n\nvar defaultConfig$3 = {\n\tdisplay: true,\n\n\t// Boolean - Whether to animate scaling the chart from the centre\n\tanimate: true,\n\tposition: 'chartArea',\n\n\tangleLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\tgridLines: {\n\t\tcircular: false\n\t},\n\n\t// label settings\n\tticks: {\n\t\t// Boolean - Show a backdrop to the scale label\n\t\tshowLabelBackdrop: true,\n\n\t\t// String - The colour of the label backdrop\n\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t// Number - The backdrop padding above & below the label in pixels\n\t\tbackdropPaddingY: 2,\n\n\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\tbackdropPaddingX: 2,\n\n\t\tcallback: core_ticks.formatters.linear\n\t},\n\n\tpointLabels: {\n\t\t// Boolean - if true, show point labels\n\t\tdisplay: true,\n\n\t\t// Number - Point label font size in pixels\n\t\tfontSize: 10,\n\n\t\t// Function - Used to convert point labels\n\t\tcallback: function(label) {\n\t\t\treturn label;\n\t\t}\n\t}\n};\n\nfunction getValueCount(scale) {\n\tvar opts = scale.options;\n\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n}\n\nfunction getTickBackdropHeight(opts) {\n\tvar tickOpts = opts.ticks;\n\n\tif (tickOpts.display && opts.display) {\n\t\treturn valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n\t}\n\treturn 0;\n}\n\nfunction measureLabelSize(ctx, lineHeight, label) {\n\tif (helpers$1.isArray(label)) {\n\t\treturn {\n\t\t\tw: helpers$1.longestText(ctx, ctx.font, label),\n\t\t\th: label.length * lineHeight\n\t\t};\n\t}\n\n\treturn {\n\t\tw: ctx.measureText(label).width,\n\t\th: lineHeight\n\t};\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n\tif (angle === min || angle === max) {\n\t\treturn {\n\t\t\tstart: pos - (size / 2),\n\t\t\tend: pos + (size / 2)\n\t\t};\n\t} else if (angle < min || angle > max) {\n\t\treturn {\n\t\t\tstart: pos - size,\n\t\t\tend: pos\n\t\t};\n\t}\n\n\treturn {\n\t\tstart: pos,\n\t\tend: pos + size\n\t};\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n\t// Right, this is really confusing and there is a lot of maths going on here\n\t// The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t//\n\t// Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t//\n\t// Solution:\n\t//\n\t// We assume the radius of the polygon is half the size of the canvas at first\n\t// at each index we check if the text overlaps.\n\t//\n\t// Where it does, we store that angle and that index.\n\t//\n\t// After finding the largest index and angle we calculate how much we need to remove\n\t// from the shape radius to move the point inwards by that x.\n\t//\n\t// We average the left and right distances to get the maximum shape radius that can fit in the box\n\t// along with labels.\n\t//\n\t// Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t// on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t//\n\t// This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t// and position it in the most space efficient manner\n\t//\n\t// https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n\tvar plFont = helpers$1.options._parseFont(scale.options.pointLabels);\n\n\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\tvar furthestLimits = {\n\t\tl: 0,\n\t\tr: scale.width,\n\t\tt: 0,\n\t\tb: scale.height - scale.paddingTop\n\t};\n\tvar furthestAngles = {};\n\tvar i, textSize, pointPosition;\n\n\tscale.ctx.font = plFont.string;\n\tscale._pointLabelSizes = [];\n\n\tvar valueCount = getValueCount(scale);\n\tfor (i = 0; i < valueCount; i++) {\n\t\tpointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n\t\ttextSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\tvar angle = helpers$1.toDegrees(angleRadians) % 360;\n\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\tfurthestAngles.l = angleRadians;\n\t\t}\n\n\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\tfurthestAngles.r = angleRadians;\n\t\t}\n\n\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\tfurthestAngles.t = angleRadians;\n\t\t}\n\n\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\tfurthestAngles.b = angleRadians;\n\t\t}\n\t}\n\n\tscale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n}\n\nfunction getTextAlignForAngle(angle) {\n\tif (angle === 0 || angle === 180) {\n\t\treturn 'center';\n\t} else if (angle < 180) {\n\t\treturn 'left';\n\t}\n\n\treturn 'right';\n}\n\nfunction fillText(ctx, text, position, lineHeight) {\n\tvar y = position.y + lineHeight / 2;\n\tvar i, ilen;\n\n\tif (helpers$1.isArray(text)) {\n\t\tfor (i = 0, ilen = text.length; i < ilen; ++i) {\n\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\ty += lineHeight;\n\t\t}\n\t} else {\n\t\tctx.fillText(text, position.x, y);\n\t}\n}\n\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\tif (angle === 90 || angle === 270) {\n\t\tposition.y -= (textSize.h / 2);\n\t} else if (angle > 270 || angle < 90) {\n\t\tposition.y -= textSize.h;\n\t}\n}\n\nfunction drawPointLabels(scale) {\n\tvar ctx = scale.ctx;\n\tvar opts = scale.options;\n\tvar angleLineOpts = opts.angleLines;\n\tvar gridLineOpts = opts.gridLines;\n\tvar pointLabelOpts = opts.pointLabels;\n\tvar lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n\tvar lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n\tvar tickBackdropHeight = getTickBackdropHeight(opts);\n\n\tctx.save();\n\tctx.lineWidth = lineWidth;\n\tctx.strokeStyle = lineColor;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n\t\tctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n\t}\n\n\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t// Point Label Font\n\tvar plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n\tctx.font = plFont.string;\n\tctx.textBaseline = 'middle';\n\n\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\tif (angleLineOpts.display && lineWidth && lineColor) {\n\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tif (pointLabelOpts.display) {\n\t\t\t// Extra pixels out for some label spacing\n\t\t\tvar extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5);\n\n\t\t\t// Keep this in loop since we may support array properties here\n\t\t\tvar pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers$1.toDegrees(angleRadians);\n\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n\t\t}\n\t}\n\tctx.restore();\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\tvar ctx = scale.ctx;\n\tvar circular = gridLineOpts.circular;\n\tvar valueCount = getValueCount(scale);\n\tvar lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n\tvar lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n\tvar pointPosition;\n\n\tif ((!circular && !valueCount) || !lineColor || !lineWidth) {\n\t\treturn;\n\t}\n\n\tctx.save();\n\tctx.strokeStyle = lineColor;\n\tctx.lineWidth = lineWidth;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(gridLineOpts.borderDash || []);\n\t\tctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n\t}\n\n\tctx.beginPath();\n\tif (circular) {\n\t\t// Draw circular arcs between the points\n\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t} else {\n\t\t// Draw straight lines connecting each index\n\t\tpointPosition = scale.getPointPosition(0, radius);\n\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t}\n\t}\n\tctx.closePath();\n\tctx.stroke();\n\tctx.restore();\n}\n\nfunction numberOrZero(param) {\n\treturn helpers$1.isNumber(param) ? param : 0;\n}\n\nvar scale_radialLinear = scale_linearbase.extend({\n\tsetDimensions: function() {\n\t\tvar me = this;\n\n\t\t// Set the unconstrained dimension before label rotation\n\t\tme.width = me.maxWidth;\n\t\tme.height = me.maxHeight;\n\t\tme.paddingTop = getTickBackdropHeight(me.options) / 2;\n\t\tme.xCenter = Math.floor(me.width / 2);\n\t\tme.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n\t\tme.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar min = Number.POSITIVE_INFINITY;\n\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\thelpers$1.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tme.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\treturn Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\n\t\tscale_linearbase.prototype.convertTicksToLabels.call(me);\n\n\t\t// Point labels\n\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display && opts.pointLabels.display) {\n\t\t\tfitWithPointLabels(me);\n\t\t} else {\n\t\t\tme.setCenterPoint(0, 0, 0, 0);\n\t\t}\n\t},\n\n\t/**\n\t * Set radius reductions and determine new radius and center point\n\t * @private\n\t */\n\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\tvar me = this;\n\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n\n\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\tme.drawingArea = Math.min(\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t},\n\n\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\tvar me = this;\n\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\tvar maxTop = topMovement + me.drawingArea;\n\t\tvar maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n\n\t\tme.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n\t\tme.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n\t},\n\n\tgetIndexAngle: function(index) {\n\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\tthis.chart.options.startAngle :\n\t\t\t0;\n\n\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\treturn index * angleMultiplier + startAngleRadians;\n\t},\n\n\tgetDistanceFromCenterForValue: function(value) {\n\t\tvar me = this;\n\n\t\tif (value === null) {\n\t\t\treturn 0; // null always in center\n\t\t}\n\n\t\t// Take into account half font size + the yPadding of the top value\n\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\tif (me.options.ticks.reverse) {\n\t\t\treturn (me.max - value) * scalingFactor;\n\t\t}\n\t\treturn (value - me.min) * scalingFactor;\n\t},\n\n\tgetPointPosition: function(index, distanceFromCenter) {\n\t\tvar me = this;\n\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\treturn {\n\t\t\tx: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n\t\t\ty: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n\t\t};\n\t},\n\n\tgetPointPositionForValue: function(index, value) {\n\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t},\n\n\tgetBasePosition: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.getPointPositionForValue(0,\n\t\t\tme.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0);\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar tickOpts = opts.ticks;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar startAngle = this.getIndexAngle(0);\n\t\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\n\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\tdrawPointLabels(me);\n\t\t\t}\n\n\t\t\thelpers$1.each(me.ticks, function(label, index) {\n\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\tvar tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n\t\t\t\t\t\tctx.font = tickFont.string;\n\n\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t-yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\ttickFont.size + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$3 = defaultConfig$3;\nscale_radialLinear._defaults = _defaults$3;\n\nvar valueOrDefault$c = helpers$1.valueOrDefault;\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate$1(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\nfunction toTimestamp(scale, input) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options.time;\n\tvar parser = options.parser;\n\tvar format = parser || options.format;\n\tvar value = input;\n\n\tif (typeof parser === 'function') {\n\t\tvalue = parser(value);\n\t}\n\n\t// Only parse if its not a timestamp already\n\tif (!helpers$1.isFinite(value)) {\n\t\tvalue = typeof format === 'string'\n\t\t\t? adapter.parse(value, format)\n\t\t\t: adapter.parse(value);\n\t}\n\n\tif (value !== null) {\n\t\treturn +value;\n\t}\n\n\t// Labels are in an incompatible format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option for parsing.\n\tif (!parser && typeof format === 'function') {\n\t\tvalue = format(input);\n\n\t\t// `format` could return something else than a timestamp, if so, parse it\n\t\tif (!helpers$1.isFinite(value)) {\n\t\t\tvalue = adapter.parse(value);\n\t\t}\n\t}\n\n\treturn value;\n}\n\nfunction parse(scale, input) {\n\tif (helpers$1.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = toTimestamp(scale, scale.getRightValue(input));\n\tif (value === null) {\n\t\treturn value;\n\t}\n\n\tif (options.round) {\n\t\tvalue = +scale._adapter.startOf(value, options.round);\n\t}\n\n\treturn value;\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(scale, min, max, capacity) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options;\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = min;\n\tvar last = max;\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = +adapter.startOf(first, 'isoWeek', weekday);\n\t\tlast = +adapter.startOf(last, 'isoWeek', weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = +adapter.startOf(first, weekday ? 'day' : minor);\n\tlast = +adapter.startOf(last, weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast = +adapter.add(last, 1, minor);\n\t}\n\n\ttime = first;\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime = +adapter.startOf(time, major);\n\t\ttime = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time = +adapter.add(time, stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the start and end offsets from edges in the form of {start, end}\n * where each value is a relative width to the scale and ranges between 0 and 1.\n * They add extra margins on the both sides by scaling down the original scale.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar start = 0;\n\tvar end = 0;\n\tvar first, last;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tfirst = interpolate$1(table, 'time', ticks[0], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tstart = 1 - first;\n\t\t\t} else {\n\t\t\t\tstart = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n\t\t\t}\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tlast = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tend = last;\n\t\t\t} else {\n\t\t\t\tend = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {start: start, end: end};\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nvar defaultConfig$4 = {\n\tposition: 'bottom',\n\n\t/**\n\t * Data distribution along the scale:\n\t * - 'linear': data are spread according to their time (distances can vary),\n\t * - 'series': data are spread at the same distance from each other.\n\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t * @since 2.7.0\n\t */\n\tdistribution: 'linear',\n\n\t/**\n\t * Scale boundary strategy (bypassed by min/max time options)\n\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t * @since 2.7.0\n\t */\n\tbounds: 'data',\n\n\tadapters: {},\n\ttime: {\n\t\tparser: false, // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\tround: false, // none, or override with week, month, year, etc.\n\t\tdisplayFormat: false, // DEPRECATED\n\t\tisoWeekday: false, // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n\t\tminUnit: 'millisecond',\n\t\tdisplayFormats: {}\n\t},\n\tticks: {\n\t\tautoSkip: false,\n\n\t\t/**\n\t\t * Ticks generation input values:\n\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tsource: 'auto',\n\n\t\tmajor: {\n\t\t\tenabled: false\n\t\t}\n\t}\n};\n\nvar scale_time = core_scale.extend({\n\tinitialize: function() {\n\t\tthis.mergeTicksOptions();\n\t\tcore_scale.prototype.initialize.call(this);\n\t},\n\n\tupdate: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar time = options.time || (options.time = {});\n\t\tvar adapter = me._adapter = new core_adapters._date(options.adapters.date);\n\n\t\t// DEPRECATIONS: output a message only one time per update\n\t\tif (time.format) {\n\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t}\n\n\t\t// Backward compatibility: before introducing adapter, `displayFormats` was\n\t\t// supposed to contain *all* unit/string pairs but this can't be resolved\n\t\t// when loading the scale (adapters are loaded afterward), so let's populate\n\t\t// missing formats on update\n\t\thelpers$1.mergeIf(time.displayFormats, adapter.formats());\n\n\t\treturn core_scale.prototype.update.apply(me, arguments);\n\t},\n\n\t/**\n\t * Allows data to be referenced via 't' attribute\n\t */\n\tgetRightValue: function(rawValue) {\n\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\trawValue = rawValue.t;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, rawValue);\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar adapter = me._adapter;\n\t\tvar timeOpts = me.options.time;\n\t\tvar unit = timeOpts.unit || 'day';\n\t\tvar min = MAX_INTEGER;\n\t\tvar max = MIN_INTEGER;\n\t\tvar timestamps = [];\n\t\tvar datasets = [];\n\t\tvar labels = [];\n\t\tvar i, j, ilen, jlen, data, timestamp;\n\t\tvar dataLabels = chart.data.labels || [];\n\n\t\t// Convert labels to timestamps\n\t\tfor (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n\t\t\tlabels.push(parse(me, dataLabels[i]));\n\t\t}\n\n\t\t// Convert data to timestamps\n\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\tif (helpers$1.isObject(data[0])) {\n\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamp = parse(me, data[j]);\n\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (j = 0, jlen = labels.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamps.push(labels[j]);\n\t\t\t\t\t}\n\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdatasets[i] = [];\n\t\t\t}\n\t\t}\n\n\t\tif (labels.length) {\n\t\t\t// Sort labels **after** data have been converted\n\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\tmin = Math.min(min, labels[0]);\n\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t}\n\n\t\tif (timestamps.length) {\n\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t}\n\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\tmin = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n\t\tmax = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max;\n\n\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\tme.min = Math.min(min, max);\n\t\tme.max = Math.max(min + 1, max);\n\n\t\t// PRIVATE\n\t\tme._horizontal = me.isHorizontal();\n\t\tme._table = [];\n\t\tme._timestamps = {\n\t\t\tdata: timestamps,\n\t\t\tdatasets: datasets,\n\t\t\tlabels: labels\n\t\t};\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\t\tvar options = me.options;\n\t\tvar timeOpts = options.time;\n\t\tvar timestamps = [];\n\t\tvar ticks = [];\n\t\tvar i, ilen, timestamp;\n\n\t\tswitch (options.ticks.source) {\n\t\tcase 'data':\n\t\t\ttimestamps = me._timestamps.data;\n\t\t\tbreak;\n\t\tcase 'labels':\n\t\t\ttimestamps = me._timestamps.labels;\n\t\t\tbreak;\n\t\tcase 'auto':\n\t\tdefault:\n\t\t\ttimestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n\t\t}\n\n\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\tmin = timestamps[0];\n\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t}\n\n\t\t// Enforce limits with user min/max options\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// Remove ticks outside the min/max range\n\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\ttimestamp = timestamps[i];\n\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\tticks.push(timestamp);\n\t\t\t}\n\t\t}\n\n\t\tme.min = min;\n\t\tme.max = max;\n\n\t\t// PRIVATE\n\t\tme._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n\t\tif (options.ticks.reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\n\t\treturn ticksFromTimestamps(me, ticks, me._majorUnit);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar data = me.chart.data;\n\t\tvar timeOpts = me.options.time;\n\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\tif (helpers$1.isObject(value)) {\n\t\t\tlabel = me.getRightValue(value);\n\t\t}\n\t\tif (timeOpts.tooltipFormat) {\n\t\t\treturn adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n\t\t}\n\t\tif (typeof label === 'string') {\n\t\t\treturn label;\n\t\t}\n\t\treturn adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n\t},\n\n\t/**\n\t * Function to format an individual tick mark\n\t * @private\n\t */\n\ttickFormatFunction: function(time, index, ticks, format) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar options = me.options;\n\t\tvar formats = options.time.displayFormats;\n\t\tvar minorFormat = formats[me._unit];\n\t\tvar majorUnit = me._majorUnit;\n\t\tvar majorFormat = formats[majorUnit];\n\t\tvar majorTime = +adapter.startOf(time, majorUnit);\n\t\tvar majorTickOpts = options.ticks.major;\n\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\tvar label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\tvar formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n\n\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t},\n\n\tconvertTicksToLabels: function(ticks) {\n\t\tvar labels = [];\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\tlabels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n\t\t}\n\n\t\treturn labels;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetPixelForOffset: function(time) {\n\t\tvar me = this;\n\t\tvar isReverse = me.options.ticks.reverse;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n\t\tvar pos = interpolate$1(me._table, 'time', time, 'pos');\n\t\tvar offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n\n\t\treturn isReverse ? start - offset : start + offset;\n\t},\n\n\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar time = null;\n\n\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t}\n\n\t\tif (time === null) {\n\t\t\ttime = parse(me, value);\n\t\t}\n\n\t\tif (time !== null) {\n\t\t\treturn me.getPixelForOffset(time);\n\t\t}\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\tvar ticks = this.getTicks();\n\t\treturn index >= 0 && index < ticks.length ?\n\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\tnull;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? me.left : me.top;\n\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n\t\tvar time = interpolate$1(me._table, 'pos', pos, 'time');\n\n\t\t// DEPRECATION, we should return time directly\n\t\treturn me._adapter._create(time);\n\t},\n\n\t/**\n\t * Crude approximation of what the label width might be\n\t * @private\n\t */\n\tgetLabelWidth: function(label) {\n\t\tvar me = this;\n\t\tvar ticksOpts = me.options.ticks;\n\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\tvar angle = helpers$1.toRadians(ticksOpts.maxRotation);\n\t\tvar cosRotation = Math.cos(angle);\n\t\tvar sinRotation = Math.sin(angle);\n\t\tvar tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n\n\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetLabelCapacity: function(exampleTime) {\n\t\tvar me = this;\n\n\t\t// pick the longest format (milliseconds) for guestimation\n\t\tvar format = me.options.time.displayFormats.millisecond;\n\t\tvar exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\n\t\treturn capacity > 0 ? capacity : 1;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$4 = defaultConfig$4;\nscale_time._defaults = _defaults$4;\n\nvar scales = {\n\tcategory: scale_category,\n\tlinear: scale_linear,\n\tlogarithmic: scale_logarithmic,\n\tradialLinear: scale_radialLinear,\n\ttime: scale_time\n};\n\nvar FORMATS = {\n\tdatetime: 'MMM D, YYYY, h:mm:ss a',\n\tmillisecond: 'h:mm:ss.SSS a',\n\tsecond: 'h:mm:ss a',\n\tminute: 'h:mm a',\n\thour: 'hA',\n\tday: 'MMM D',\n\tweek: 'll',\n\tmonth: 'MMM YYYY',\n\tquarter: '[Q]Q - YYYY',\n\tyear: 'YYYY'\n};\n\ncore_adapters._date.override(typeof moment === 'function' ? {\n\t_id: 'moment', // DEBUG ONLY\n\n\tformats: function() {\n\t\treturn FORMATS;\n\t},\n\n\tparse: function(value, format) {\n\t\tif (typeof value === 'string' && typeof format === 'string') {\n\t\t\tvalue = moment(value, format);\n\t\t} else if (!(value instanceof moment)) {\n\t\t\tvalue = moment(value);\n\t\t}\n\t\treturn value.isValid() ? value.valueOf() : null;\n\t},\n\n\tformat: function(time, format) {\n\t\treturn moment(time).format(format);\n\t},\n\n\tadd: function(time, amount, unit) {\n\t\treturn moment(time).add(amount, unit).valueOf();\n\t},\n\n\tdiff: function(max, min, unit) {\n\t\treturn moment.duration(moment(max).diff(moment(min))).as(unit);\n\t},\n\n\tstartOf: function(time, unit, weekday) {\n\t\ttime = moment(time);\n\t\tif (unit === 'isoWeek') {\n\t\t\treturn time.isoWeekday(weekday).valueOf();\n\t\t}\n\t\treturn time.startOf(unit).valueOf();\n\t},\n\n\tendOf: function(time, unit) {\n\t\treturn moment(time).endOf(unit).valueOf();\n\t},\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility with scale.getValueForPixel().\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(time) {\n\t\treturn moment(time);\n\t},\n} : {});\n\ncore_defaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (helpers$1.isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nvar plugin_filler = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || core_defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers$1.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers$1.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\nvar noop$1 = helpers$1.noop;\nvar valueOrDefault$d = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\t\tonLeave: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers$1.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param {object} labelopts - the label options on the legend\n * @param {number} fontSize - the label font size\n * @return {number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\n\t\tfontSize :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = core_element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers$1.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t/**\n \t\t * @private\n \t\t */\n\t\tthis._hoveredItem = null;\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop$1,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop$1,\n\n\t//\n\n\tbeforeSetDimensions: noop$1,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$1,\n\n\t//\n\n\tbeforeBuildLabels: noop$1,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop$1,\n\n\t//\n\n\tbeforeFit: noop$1,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\tvar fontSize = labelFont.size;\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + labelOpts.padding;\n\t\t\t\t\t\tlineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop$1,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor;\n\t\tvar lineDefault = globalDefaults.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\t\tvar fontSize = labelFont.size;\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tvar lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = lineWidth;\n\t\t\t\tctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = boxWidth * Math.SQRT2 / 2;\n\t\t\t\t\tvar centerX = x + boxWidth / 2;\n\t\t\t\t\tvar centerY = y + fontSize / 2;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (lineWidth !== 0) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2) + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\t// Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n\t\t\t\t// instead of me.right and me.bottom because me.width and me.height\n\t\t\t\t// may have been changed since me.minSize was calculated\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2) + labelOpts.padding;\n\t\t\t\t\t}\n\t\t\t\t} else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + labelOpts.padding;\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getLegendItemAt: function(x, y) {\n\t\tvar me = this;\n\t\tvar i, hitBox, lh;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tlh = me.legendHitBoxes;\n\t\t\tfor (i = 0; i < lh.length; ++i) {\n\t\t\t\thitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\treturn me.legendItems[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar hoveredItem;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover && !opts.onLeave) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\thoveredItem = me._getLegendItemAt(e.x, e.y);\n\n\t\tif (type === 'click') {\n\t\t\tif (hoveredItem && opts.onClick) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onClick.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t} else {\n\t\t\tif (opts.onLeave && hoveredItem !== me._hoveredItem) {\n\t\t\t\tif (me._hoveredItem) {\n\t\t\t\t\topts.onLeave.call(me, e.native, me._hoveredItem);\n\t\t\t\t}\n\t\t\t\tme._hoveredItem = hoveredItem;\n\t\t\t}\n\n\t\t\tif (opts.onHover && hoveredItem) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onHover.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t}\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, legend, legendOpts);\n\tcore_layouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nvar plugin_legend = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tcore_layouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tcore_layouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\nvar noop$2 = helpers$1.noop;\n\ncore_defaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = core_element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers$1.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop$2,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop$2,\n\n\t//\n\n\tbeforeSetDimensions: noop$2,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$2,\n\n\t//\n\n\tbeforeBuildLabels: noop$2,\n\tbuildLabels: noop$2,\n\tafterBuildLabels: noop$2,\n\n\t//\n\n\tbeforeFit: noop$2,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\tvar textSize = display ? (lineCount * fontOpts.lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop$2,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display) {\n\t\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\t\tvar lineHeight = fontOpts.lineHeight;\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\t\t\tctx.font = fontOpts.string;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers$1.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, title, titleOpts);\n\tcore_layouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nvar plugin_title = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tcore_layouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tcore_layouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\nvar plugins = {};\nvar filler = plugin_filler;\nvar legend = plugin_legend;\nvar title = plugin_title;\nplugins.filler = filler;\nplugins.legend = legend;\nplugins.title = title;\n\n/**\n * @namespace Chart\n */\n\n\ncore_controller.helpers = helpers$1;\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\ncore_helpers(core_controller);\n\ncore_controller._adapters = core_adapters;\ncore_controller.Animation = core_animation;\ncore_controller.animationService = core_animations;\ncore_controller.controllers = controllers;\ncore_controller.DatasetController = core_datasetController;\ncore_controller.defaults = core_defaults;\ncore_controller.Element = core_element;\ncore_controller.elements = elements;\ncore_controller.Interaction = core_interaction;\ncore_controller.layouts = core_layouts;\ncore_controller.platform = platform;\ncore_controller.plugins = core_plugins;\ncore_controller.Scale = core_scale;\ncore_controller.scaleService = core_scaleService;\ncore_controller.Ticks = core_ticks;\ncore_controller.Tooltip = core_tooltip;\n\n// Register built-in scales\n\ncore_controller.helpers.each(scales, function(scale, type) {\n\tcore_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n});\n\n// Load to register built-in adapters (as side effects)\n\n\n// Loading built-in plugins\n\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tcore_controller.plugins.register(plugins[k]);\n\t}\n}\n\ncore_controller.platform.initialize();\n\nvar src = core_controller;\nif (typeof window !== 'undefined') {\n\twindow.Chart = core_controller;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Chart\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.Chart = core_controller;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.pluginService = core_controller.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.PluginBase = core_controller.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.canvasHelpers = core_controller.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.7.3\n * @todo remove at version 3\n * @private\n */\ncore_controller.layoutService = core_controller.layouts;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.LinearScaleBase\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\ncore_controller.LinearScaleBase = scale_linearbase;\n\n/**\n * Provided for backward compatibility, instead we should create a new Chart\n * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n */\ncore_controller.helpers.each(\n\t[\n\t\t'Bar',\n\t\t'Bubble',\n\t\t'Doughnut',\n\t\t'Line',\n\t\t'PolarArea',\n\t\t'Radar',\n\t\t'Scatter'\n\t],\n\tfunction(klass) {\n\t\tcore_controller[klass] = function(ctx, cfg) {\n\t\t\treturn new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n\t\t\t\ttype: klass.charAt(0).toLowerCase() + klass.slice(1)\n\t\t\t}));\n\t\t};\n\t}\n);\n\nreturn src;\n\n})));\n","define([\"../core/Tone\"], function(Tone){\n\n\t/**\n\t *  AudioBuffer.copyTo/FromChannel polyfill\n\t *  @private\n\t */\n\tif (Tone.supported){\n\t\tif (!AudioBuffer.prototype.copyToChannel){\n\t\t\tAudioBuffer.prototype.copyToChannel = function(src, chanNum, start){\n\t\t\t\tvar channel = this.getChannelData(chanNum);\n\t\t\t\tstart = start || 0;\n\t\t\t\tfor (var i = 0; i < channel.length; i++){\n\t\t\t\t\tchannel[i+start] = src[i];\n\t\t\t\t}\n\t\t\t};\n\t\t\tAudioBuffer.prototype.copyFromChannel = function(dest, chanNum, start){\n\t\t\t\tvar channel = this.getChannelData(chanNum);\n\t\t\t\tstart = start || 0;\n\t\t\t\tfor (var i = 0; i < dest.length; i++){\n\t\t\t\t\tdest[i] = channel[i+start];\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n});\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","define([\"../core/Tone\", \"../core/OfflineContext\"], function(Tone){\n\n\tif (Tone.supported){\n\n\t\tvar ua = navigator.userAgent.toLowerCase();\n\t\tvar isMobileSafari = ua.includes(\"safari\") && !ua.includes(\"chrome\") && ua.includes(\"mobile\");\n\t\tif (isMobileSafari){\n\t\t\t//mobile safari has a bizarre bug with the offline context\n\t\t\t//when a BufferSourceNode is started, it starts the offline context\n\t\t\t//\n\t\t\t//deferring all BufferSource starts till the last possible moment\n\t\t\t//reduces the likelihood of this happening\n\t\t\tTone.OfflineContext.prototype.createBufferSource = function(){\n\t\t\t\tvar bufferSource = this._context.createBufferSource();\n\t\t\t\tvar _native_start = bufferSource.start;\n\t\t\t\tbufferSource.start = function(time){\n\t\t\t\t\tthis.setTimeout(function(){\n\t\t\t\t\t\t_native_start.call(bufferSource, time);\n\t\t\t\t\t}.bind(this), 0);\n\t\t\t\t}.bind(this);\n\t\t\t\treturn bufferSource;\n\t\t\t};\n\t\t}\n\t}\n\n});\n","define([\"../core/Tone\"], function(Tone){\n\n\t/**\n\t *  @class Tone.TimeBase is a flexible encoding of time\n\t *         which can be evaluated to and from a string.\n\t *  @extends {Tone}\n\t *  @param  {Time}  val    The time value as a number, string or object\n\t *  @param  {String=}  units  Unit values\n\t *  @example\n\t * Tone.TimeBase(4, \"n\")\n\t * Tone.TimeBase(2, \"t\")\n\t * Tone.TimeBase(\"2t\")\n\t * Tone.TimeBase({\"2t\" : 2})\n\t * Tone.TimeBase(\"2t\") + Tone.TimeBase(\"4n\");\n\t */\n\tTone.TimeBase = function(val, units){\n\n\t\t//allows it to be constructed with or without 'new'\n\t\tif (this instanceof Tone.TimeBase){\n\n\t\t\t/**\n\t\t\t *  The value\n\t\t\t *  @type  {Number|String|Tone.TimeBase}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._val = val;\n\n\t\t\t/**\n\t\t\t * The units\n\t\t\t * @type {String?}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._units = units;\n\n\t\t\t//test if the value is a string representation of a number\n\t\t\tif (Tone.isUndef(this._units) && Tone.isString(this._val) &&\n\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\tparseFloat(this._val) == this._val && this._val.charAt(0) !== \"+\"){\n\t\t\t\tthis._val = parseFloat(this._val);\n\t\t\t\tthis._units = this._defaultUnits;\n\t\t\t} else if (val && val.constructor === this.constructor){\n\t\t\t\t//if they're the same type, just copy values over\n\t\t\t\tthis._val = val._val;\n\t\t\t\tthis._units = val._units;\n\t\t\t} else if (val instanceof Tone.TimeBase){\n\t\t\t\tswitch (this._defaultUnits){\n\t\t\t\t\tcase \"s\" :\n\t\t\t\t\t\tthis._val = val.toSeconds();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"i\" :\n\t\t\t\t\t\tthis._val = val.toTicks();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"hz\" :\n\t\t\t\t\t\tthis._val = val.toFrequency();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"midi\" :\n\t\t\t\t\t\tthis._val = val.toMidi();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault :\n\t\t\t\t\t\tthrow new Error(\"Unrecognized default units \"+this._defaultUnits);\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn new Tone.TimeBase(val, units);\n\t\t}\n\t};\n\n\tTone.extend(Tone.TimeBase);\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tABSTRACT SYNTAX TREE PARSER\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  All the primary expressions.\n\t *  @private\n\t *  @type  {Object}\n\t */\n\tTone.TimeBase.prototype._expressions = {\n\t\t\"n\" : {\n\t\t\tregexp : /^(\\d+)n(\\.?)$/i,\n\t\t\tmethod : function(value, dot){\n\t\t\t\tvalue = parseInt(value);\n\t\t\t\tvar scalar = dot === \".\" ? 1.5 : 1;\n\t\t\t\tif (value === 1){\n\t\t\t\t\treturn this._beatsToUnits(this._getTimeSignature())*scalar;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._beatsToUnits(4 / value)*scalar;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"t\" : {\n\t\t\tregexp : /^(\\d+)t$/i,\n\t\t\tmethod : function(value){\n\t\t\t\tvalue = parseInt(value);\n\t\t\t\treturn this._beatsToUnits(8 / (parseInt(value) * 3));\n\t\t\t}\n\t\t},\n\t\t\"m\" : {\n\t\t\tregexp : /^(\\d+)m$/i,\n\t\t\tmethod : function(value){\n\t\t\t\treturn this._beatsToUnits(parseInt(value) * this._getTimeSignature());\n\t\t\t}\n\t\t},\n\t\t\"i\" : {\n\t\t\tregexp : /^(\\d+)i$/i,\n\t\t\tmethod : function(value){\n\t\t\t\treturn this._ticksToUnits(parseInt(value));\n\t\t\t}\n\t\t},\n\t\t\"hz\" : {\n\t\t\tregexp : /^(\\d+(?:\\.\\d+)?)hz$/i,\n\t\t\tmethod : function(value){\n\t\t\t\treturn this._frequencyToUnits(parseFloat(value));\n\t\t\t}\n\t\t},\n\t\t\"tr\" : {\n\t\t\tregexp : /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/,\n\t\t\tmethod : function(m, q, s){\n\t\t\t\tvar total = 0;\n\t\t\t\tif (m && m !== \"0\"){\n\t\t\t\t\ttotal += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t\t}\n\t\t\t\tif (q && q !== \"0\"){\n\t\t\t\t\ttotal += this._beatsToUnits(parseFloat(q));\n\t\t\t\t}\n\t\t\t\tif (s && s !== \"0\"){\n\t\t\t\t\ttotal += this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t\t}\n\t\t\t\treturn total;\n\t\t\t}\n\t\t},\n\t\t\"s\" : {\n\t\t\tregexp : /^(\\d+(?:\\.\\d+)?)s$/,\n\t\t\tmethod : function(value){\n\t\t\t\treturn this._secondsToUnits(parseFloat(value));\n\t\t\t}\n\t\t},\n\t\t\"samples\" : {\n\t\t\tregexp : /^(\\d+)samples$/,\n\t\t\tmethod : function(value){\n\t\t\t\treturn parseInt(value) / this.context.sampleRate;\n\t\t\t}\n\t\t},\n\t\t\"default\" : {\n\t\t\tregexp : /^(\\d+(?:\\.\\d+)?)$/,\n\t\t\tmethod : function(value){\n\t\t\t\treturn this._expressions[this._defaultUnits].method.call(this, value);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t *  The default units if none are given.\n\t *  @type {String}\n\t *  @private\n\t */\n\tTone.TimeBase.prototype._defaultUnits = \"s\";\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tTRANSPORT FALLBACKS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t * Return the bpm, or 120 if Transport is not available\n\t * @type {Number}\n\t * @private\n\t */\n\tTone.TimeBase.prototype._getBpm = function(){\n\t\tif (Tone.Transport){\n\t\t\treturn Tone.Transport.bpm.value;\n\t\t} else {\n\t\t\treturn 120;\n\t\t}\n\t};\n\n\t/**\n\t * Return the timeSignature or 4 if Transport is not available\n\t * @type {Number}\n\t * @private\n\t */\n\tTone.TimeBase.prototype._getTimeSignature = function(){\n\t\tif (Tone.Transport){\n\t\t\treturn Tone.Transport.timeSignature;\n\t\t} else {\n\t\t\treturn 4;\n\t\t}\n\t};\n\n\t/**\n\t * Return the PPQ or 192 if Transport is not available\n\t * @type {Number}\n\t * @private\n\t */\n\tTone.TimeBase.prototype._getPPQ = function(){\n\t\tif (Tone.Transport){\n\t\t\treturn Tone.Transport.PPQ;\n\t\t} else {\n\t\t\treturn 192;\n\t\t}\n\t};\n\n\t/**\n\t * Return the current time in whichever context is relevant\n\t * @type {Number}\n\t * @private\n\t */\n\tTone.TimeBase.prototype._now = function(){\n\t\treturn this.now();\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tUNIT CONVERSIONS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Returns the value of a frequency in the current units\n\t *  @param {Frequency} freq\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.TimeBase.prototype._frequencyToUnits = function(freq){\n\t\treturn 1/freq;\n\t};\n\n\t/**\n\t *  Return the value of the beats in the current units\n\t *  @param {Number} beats\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.TimeBase.prototype._beatsToUnits = function(beats){\n\t\treturn (60 / this._getBpm()) * beats;\n\t};\n\n\t/**\n\t *  Returns the value of a second in the current units\n\t *  @param {Seconds} seconds\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.TimeBase.prototype._secondsToUnits = function(seconds){\n\t\treturn seconds;\n\t};\n\n\t/**\n\t *  Returns the value of a tick in the current time units\n\t *  @param {Ticks} ticks\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.TimeBase.prototype._ticksToUnits = function(ticks){\n\t\treturn ticks * (this._beatsToUnits(1) / this._getPPQ());\n\t};\n\n\t/**\n\t * With no arguments, return 'now'\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.TimeBase.prototype._noArg = function(){\n\t\treturn this._now();\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tEXPRESSIONS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Evaluate the time value. Returns the time\n\t *  in seconds.\n\t *  @return  {Seconds}\n\t */\n\tTone.TimeBase.prototype.valueOf = function(){\n\t\tif (Tone.isUndef(this._val)){\n\t\t\treturn this._noArg();\n\t\t} else if (Tone.isString(this._val) && Tone.isUndef(this._units)){\n\t\t\tfor (var units in this._expressions){\n\t\t\t\tif (this._expressions[units].regexp.test(this._val.trim())){\n\t\t\t\t\tthis._units = units;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (Tone.isObject(this._val)){\n\t\t\tvar total = 0;\n\t\t\tfor (var typeName in this._val){\n\t\t\t\tvar quantity = this._val[typeName];\n\t\t\t\tvar time = (new this.constructor(typeName)).valueOf() * quantity;\n\t\t\t\ttotal += time;\n\t\t\t}\n\t\t\treturn total;\n\t\t}\n\t\tif (Tone.isDefined(this._units)){\n\t\t\tvar expr = this._expressions[this._units];\n\t\t\tvar matching = this._val.toString().trim().match(expr.regexp);\n\t\t\tif (matching){\n\t\t\t\treturn expr.method.apply(this, matching.slice(1));\n\t\t\t} else {\n\t\t\t\treturn expr.method.call(this, parseFloat(this._val));\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._val;\n\t\t}\n\t};\n\n\t/**\n\t *  Return the value in seconds\n\t *  @return {Seconds}\n\t */\n\tTone.TimeBase.prototype.toSeconds = function(){\n\t\treturn this.valueOf();\n\t};\n\n\t/**\n\t *  Return the value in hertz\n\t *  @return {Frequency}\n\t */\n\tTone.TimeBase.prototype.toFrequency = function(){\n\t\treturn 1 / this.toSeconds();\n\t};\n\n\t/**\n\t *  Return the time in samples\n\t *  @return  {Samples}\n\t */\n\tTone.TimeBase.prototype.toSamples = function(){\n\t\treturn this.toSeconds() * this.context.sampleRate;\n\t};\n\n\t/**\n\t *  Return the time in milliseconds.\n\t *  @return  {Milliseconds}\n\t */\n\tTone.TimeBase.prototype.toMilliseconds = function(){\n\t\treturn this.toSeconds() * 1000;\n\t};\n\n\t/**\n\t *  Clean up\n\t *  @return {Tone.TimeBase} this\n\t */\n\tTone.TimeBase.prototype.dispose = function(){\n\t\tthis._val = null;\n\t\tthis._units = null;\n\t};\n\n\treturn Tone.TimeBase;\n});\n","(function(t,e){\"object\"===typeof exports&&\"object\"===typeof module?module.exports=e(require(\"vue\")):\"function\"===typeof define&&define.amd?define([],e):\"object\"===typeof exports?exports[\"vue-slider-component\"]=e(require(\"vue\")):t[\"vue-slider-component\"]=e(t[\"Vue\"])})(\"undefined\"!==typeof self?self:this,function(t){return function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){\"undefined\"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&\"object\"===typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t[\"default\"]}:function(){return t};return r.d(e,\"a\",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p=\"\",r(r.s=\"fb15\")}({2350:function(t,e){function r(t,e){var r=t[1]||\"\",o=t[3];if(!o)return r;if(e&&\"function\"===typeof btoa){var i=n(o),s=o.sources.map(function(t){return\"/*# sourceURL=\"+o.sourceRoot+t+\" */\"});return[r].concat(s).concat([i]).join(\"\\n\")}return[r].join(\"\\n\")}function n(t){var e=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r=\"sourceMappingURL=data:application/json;charset=utf-8;base64,\"+e;return\"/*# \"+r+\" */\"}t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var n=r(e,t);return e[2]?\"@media \"+e[2]+\"{\"+n+\"}\":n}).join(\"\")},e.i=function(t,r){\"string\"===typeof t&&(t=[[null,t,\"\"]]);for(var n={},o=0;o<this.length;o++){var i=this[o][0];\"number\"===typeof i&&(n[i]=!0)}for(o=0;o<t.length;o++){var s=t[o];\"number\"===typeof s[0]&&n[s[0]]||(r&&!s[2]?s[2]=r:r&&(s[2]=\"(\"+s[2]+\") and (\"+r+\")\"),e.push(s))}},e}},\"499e\":function(t,e,r){\"use strict\";function n(t,e){for(var r=[],n={},o=0;o<e.length;o++){var i=e[o],s=i[0],a=i[1],u=i[2],l=i[3],c={id:t+\":\"+o,css:a,media:u,sourceMap:l};n[s]?n[s].parts.push(c):r.push(n[s]={id:s,parts:[c]})}return r}r.r(e),r.d(e,\"default\",function(){return h});var o=\"undefined\"!==typeof document;if(\"undefined\"!==typeof DEBUG&&DEBUG&&!o)throw new Error(\"vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\");var i={},s=o&&(document.head||document.getElementsByTagName(\"head\")[0]),a=null,u=0,l=!1,c=function(){},d=null,f=\"data-vue-ssr-id\",p=\"undefined\"!==typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());function h(t,e,r,o){l=r,d=o||{};var s=n(t,e);return y(s),function(e){for(var r=[],o=0;o<s.length;o++){var a=s[o],u=i[a.id];u.refs--,r.push(u)}e?(s=n(t,e),y(s)):s=[];for(o=0;o<r.length;o++){u=r[o];if(0===u.refs){for(var l=0;l<u.parts.length;l++)u.parts[l]();delete i[u.id]}}}}function y(t){for(var e=0;e<t.length;e++){var r=t[e],n=i[r.id];if(n){n.refs++;for(var o=0;o<n.parts.length;o++)n.parts[o](r.parts[o]);for(;o<r.parts.length;o++)n.parts.push(m(r.parts[o]));n.parts.length>r.parts.length&&(n.parts.length=r.parts.length)}else{var s=[];for(o=0;o<r.parts.length;o++)s.push(m(r.parts[o]));i[r.id]={id:r.id,refs:1,parts:s}}}}function v(){var t=document.createElement(\"style\");return t.type=\"text/css\",s.appendChild(t),t}function m(t){var e,r,n=document.querySelector(\"style[\"+f+'~=\"'+t.id+'\"]');if(n){if(l)return c;n.parentNode.removeChild(n)}if(p){var o=u++;n=a||(a=v()),e=g.bind(null,n,o,!1),r=g.bind(null,n,o,!0)}else n=v(),e=k.bind(null,n),r=function(){n.parentNode.removeChild(n)};return e(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap)return;e(t=n)}else r()}}var b=function(){var t=[];return function(e,r){return t[e]=r,t.filter(Boolean).join(\"\\n\")}}();function g(t,e,r,n){var o=r?\"\":n.css;if(t.styleSheet)t.styleSheet.cssText=b(e,o);else{var i=document.createTextNode(o),s=t.childNodes;s[e]&&t.removeChild(s[e]),s.length?t.insertBefore(i,s[e]):t.appendChild(i)}}function k(t,e){var r=e.css,n=e.media,o=e.sourceMap;if(n&&t.setAttribute(\"media\",n),d.ssrId&&t.setAttribute(f,e.id),o&&(r+=\"\\n/*# sourceURL=\"+o.sources[0]+\" */\",r+=\"\\n/*# sourceMappingURL=data:application/json;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+\" */\"),t.styleSheet)t.styleSheet.cssText=r;else{while(t.firstChild)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}},\"4abb\":function(t,e,r){var n=r(\"df80\");\"string\"===typeof n&&(n=[[t.i,n,\"\"]]),n.locals&&(t.exports=n.locals);var o=r(\"499e\").default;o(\"3e7284f8\",n,!0,{sourceMap:!1,shadowMode:!1})},\"4ed8\":function(t,e,r){var n=r(\"ae61\");\"string\"===typeof n&&(n=[[t.i,n,\"\"]]),n.locals&&(t.exports=n.locals);var o=r(\"499e\").default;o(\"57c2b2f0\",n,!0,{sourceMap:!1,shadowMode:!1})},\"556c\":function(t,e,r){var n=r(\"d5ac\");\"string\"===typeof n&&(n=[[t.i,n,\"\"]]),n.locals&&(t.exports=n.locals);var o=r(\"499e\").default;o(\"f3ffc7f8\",n,!0,{sourceMap:!1,shadowMode:!1})},\"65d9\":function(t,e,r){\"use strict\";\n/**\n  * vue-class-component v7.0.1\n  * (c) 2015-present Evan You\n  * @license MIT\n  */function n(t){return t&&\"object\"===typeof t&&\"default\"in t?t[\"default\"]:t}Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(r(\"8bbf\")),i=\"undefined\"!==typeof Reflect&&Reflect.defineMetadata&&Reflect.getOwnMetadataKeys;function s(t,e){a(t,e),Object.getOwnPropertyNames(e.prototype).forEach(function(r){a(t.prototype,e.prototype,r)}),Object.getOwnPropertyNames(e).forEach(function(r){a(t,e,r)})}function a(t,e,r){var n=r?Reflect.getOwnMetadataKeys(e,r):Reflect.getOwnMetadataKeys(e);n.forEach(function(n){var o=r?Reflect.getOwnMetadata(n,e,r):Reflect.getOwnMetadata(n,e);r?Reflect.defineMetadata(n,o,t,r):Reflect.defineMetadata(n,o,t)})}var u={__proto__:[]},l=u instanceof Array;function c(t){return function(e,r,n){var o=\"function\"===typeof e?e:e.constructor;o.__decorators__||(o.__decorators__=[]),\"number\"!==typeof n&&(n=void 0),o.__decorators__.push(function(e){return t(e,r,n)})}}function d(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return o.extend({mixins:t})}function f(t){var e=typeof t;return null==t||\"object\"!==e&&\"function\"!==e}function p(t,e){var r=e.prototype._init;e.prototype._init=function(){var e=this,r=Object.getOwnPropertyNames(t);if(t.$options.props)for(var n in t.$options.props)t.hasOwnProperty(n)||r.push(n);r.forEach(function(r){\"_\"!==r.charAt(0)&&Object.defineProperty(e,r,{get:function(){return t[r]},set:function(e){t[r]=e},configurable:!0})})};var n=new e;e.prototype._init=r;var o={};return Object.keys(n).forEach(function(t){void 0!==n[t]&&(o[t]=n[t])}),o}var h=[\"data\",\"beforeCreate\",\"created\",\"beforeMount\",\"mounted\",\"beforeDestroy\",\"destroyed\",\"beforeUpdate\",\"updated\",\"activated\",\"deactivated\",\"render\",\"errorCaptured\",\"serverPrefetch\"];function y(t,e){void 0===e&&(e={}),e.name=e.name||t._componentTag||t.name;var r=t.prototype;Object.getOwnPropertyNames(r).forEach(function(t){if(\"constructor\"!==t)if(h.indexOf(t)>-1)e[t]=r[t];else{var n=Object.getOwnPropertyDescriptor(r,t);void 0!==n.value?\"function\"===typeof n.value?(e.methods||(e.methods={}))[t]=n.value:(e.mixins||(e.mixins=[])).push({data:function(){var e;return e={},e[t]=n.value,e}}):(n.get||n.set)&&((e.computed||(e.computed={}))[t]={get:n.get,set:n.set})}}),(e.mixins||(e.mixins=[])).push({data:function(){return p(this,t)}});var n=t.__decorators__;n&&(n.forEach(function(t){return t(e)}),delete t.__decorators__);var a=Object.getPrototypeOf(t.prototype),u=a instanceof o?a.constructor:o,l=u.extend(e);return v(l,t,u),i&&s(l,t),l}function v(t,e,r){Object.getOwnPropertyNames(e).forEach(function(n){if(\"prototype\"!==n){var o=Object.getOwnPropertyDescriptor(t,n);if(!o||o.configurable){var i=Object.getOwnPropertyDescriptor(e,n);if(!l){if(\"cid\"===n)return;var s=Object.getOwnPropertyDescriptor(r,n);if(!f(i.value)&&s&&s.value===i.value)return}0,Object.defineProperty(t,n,i)}}})}function m(t){return\"function\"===typeof t?y(t):function(e){return y(e,t)}}m.registerHooks=function(t){h.push.apply(h,t)},e.default=m,e.createDecorator=c,e.mixins=d},\"8bbf\":function(e,r){e.exports=t},ae61:function(t,e,r){e=t.exports=r(\"2350\")(!1),e.push([t.i,\".vue-slider-dot{position:absolute;will-change:transform;-webkit-transition:all 0s;transition:all 0s;z-index:5}.vue-slider-dot-tooltip{position:absolute;visibility:hidden}.vue-slider-dot-tooltip-show{visibility:visible}.vue-slider-dot-tooltip-top{top:-10px;left:50%;-webkit-transform:translate(-50%,-100%);transform:translate(-50%,-100%)}.vue-slider-dot-tooltip-bottom{bottom:-10px;left:50%;-webkit-transform:translate(-50%,100%);transform:translate(-50%,100%)}.vue-slider-dot-tooltip-left{left:-10px;top:50%;-webkit-transform:translate(-100%,-50%);transform:translate(-100%,-50%)}.vue-slider-dot-tooltip-right{right:-10px;top:50%;-webkit-transform:translate(100%,-50%);transform:translate(100%,-50%)}\",\"\"])},d5ac:function(t,e,r){e=t.exports=r(\"2350\")(!1),e.push([t.i,\".vue-slider-marks{position:relative;width:100%;height:100%}.vue-slider-mark{position:absolute;z-index:1}.vue-slider-ltr .vue-slider-mark,.vue-slider-rtl .vue-slider-mark{width:0;height:100%;top:50%}.vue-slider-ltr .vue-slider-mark-step,.vue-slider-rtl .vue-slider-mark-step{top:0}.vue-slider-ltr .vue-slider-mark-label,.vue-slider-rtl .vue-slider-mark-label{top:100%;margin-top:10px}.vue-slider-ltr .vue-slider-mark{-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.vue-slider-ltr .vue-slider-mark-step{left:0}.vue-slider-ltr .vue-slider-mark-label{left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.vue-slider-rtl .vue-slider-mark{-webkit-transform:translate(50%,-50%);transform:translate(50%,-50%)}.vue-slider-rtl .vue-slider-mark-step{right:0}.vue-slider-rtl .vue-slider-mark-label{right:50%;-webkit-transform:translateX(50%);transform:translateX(50%)}.vue-slider-btt .vue-slider-mark,.vue-slider-ttb .vue-slider-mark{width:100%;height:0;left:50%}.vue-slider-btt .vue-slider-mark-step,.vue-slider-ttb .vue-slider-mark-step{left:0}.vue-slider-btt .vue-slider-mark-label,.vue-slider-ttb .vue-slider-mark-label{left:100%;margin-left:10px}.vue-slider-btt .vue-slider-mark{-webkit-transform:translate(-50%,50%);transform:translate(-50%,50%)}.vue-slider-btt .vue-slider-mark-step{top:0}.vue-slider-btt .vue-slider-mark-label{top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.vue-slider-ttb .vue-slider-mark{-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.vue-slider-ttb .vue-slider-mark-step{bottom:0}.vue-slider-ttb .vue-slider-mark-label{bottom:50%;-webkit-transform:translateY(50%);transform:translateY(50%)}.vue-slider-mark-label,.vue-slider-mark-step{position:absolute}\",\"\"])},df80:function(t,e,r){e=t.exports=r(\"2350\")(!1),e.push([t.i,\".vue-slider{position:relative;-webkit-box-sizing:content-box;box-sizing:content-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:block;-ms-touch-action:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.vue-slider-disabled{pointer-events:none}.vue-slider-rail{position:relative;width:100%;height:100%;-webkit-transition-property:width,height,left,right,top,bottom;transition-property:width,height,left,right,top,bottom}.vue-slider-process{position:absolute;z-index:1}.vue-slider-sr-only{clip:rect(1px,1px,1px,1px);height:1px;width:1px;overflow:hidden;position:absolute!important}\",\"\"])},fb15:function(t,e,r){\"use strict\";var n;(r.r(e),\"undefined\"!==typeof window)&&((n=window.document.currentScript)&&(n=n.src.match(/(.+\\/)[^\\/]+\\.js(\\?.*)?$/))&&(r.p=n[1]));function o(t,e,r,n){var o,i=arguments.length,s=i<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,r):n;if(\"object\"===typeof Reflect&&\"function\"===typeof Reflect.decorate)s=Reflect.decorate(t,e,r,n);else for(var a=t.length-1;a>=0;a--)(o=t[a])&&(s=(i<3?o(s):i>3?o(e,r,s):o(e,r))||s);return i>3&&s&&Object.defineProperty(e,r,s),s}var i=r(\"8bbf\"),s=r.n(i),a=r(\"65d9\"),u=r.n(a);function l(t,e){return void 0===e&&(e={}),Object(a[\"createDecorator\"])(function(r,n){(r.props||(r.props={}))[n]=e,r.model={prop:n,event:t||n}})}function c(t){return void 0===t&&(t={}),Object(a[\"createDecorator\"])(function(e,r){(e.props||(e.props={}))[r]=t})}function d(t,e){void 0===e&&(e={});var r=e.deep,n=void 0!==r&&r,o=e.immediate,i=void 0!==o&&o;return Object(a[\"createDecorator\"])(function(e,r){\"object\"!==typeof e.watch&&(e.watch=Object.create(null));var o=e.watch;\"object\"!==typeof o[t]||Array.isArray(o[t])?\"undefined\"===typeof o[t]&&(o[t]=[]):o[t]=[o[t]],o[t].push({handler:r,deep:n,immediate:i})})}r(\"4ed8\");function f(t){return f=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},f(t)}function p(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function h(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function y(t,e,r){return e&&h(t.prototype,e),r&&h(t,r),t}function v(t,e){return!e||\"object\"!==f(e)&&\"function\"!==typeof e?m(t):e}function m(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}function b(t){return b=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},b(t)}function g(t,e){if(\"function\"!==typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&k(t,e)}function k(t,e){return k=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},k(t,e)}var x=function(t){function e(){return p(this,e),v(this,b(e).apply(this,arguments))}return g(e,t),y(e,[{key:\"dragStart\",value:function(t){if(this.disabled)return!1;this.$emit(\"drag-start\")}},{key:\"render\",value:function(){var t=arguments[0];return t(\"div\",{ref:\"dot\",class:this.dotClasses,on:{mousedown:this.dragStart,touchstart:this.dragStart}},[this.$slots.dot||t(\"div\",{class:this.handleClasses,style:this.dotStyle}),\"none\"!==this.tooltip?t(\"div\",{class:this.tooltipClasses},[this.$slots.tooltip||t(\"div\",{class:this.tooltipInnerClasses,style:this.tooltipStyle},[t(\"span\",{class:\"vue-slider-dot-tooltip-text\"},[this.tooltipValue])])]):null])}},{key:\"dotClasses\",get:function(){return[\"vue-slider-dot\",{\"vue-slider-dot-disabled\":this.disabled,\"vue-slider-dot-focus\":this.focus}]}},{key:\"handleClasses\",get:function(){return[\"vue-slider-dot-handle\",{\"vue-slider-dot-handle-disabled\":this.disabled,\"vue-slider-dot-handle-focus\":this.focus}]}},{key:\"tooltipClasses\",get:function(){return[\"vue-slider-dot-tooltip\",[\"vue-slider-dot-tooltip-\".concat(this.tooltipPlacement)],{\"vue-slider-dot-tooltip-show\":this.showTooltip}]}},{key:\"tooltipInnerClasses\",get:function(){return[\"vue-slider-dot-tooltip-inner\",[\"vue-slider-dot-tooltip-inner-\".concat(this.tooltipPlacement)],{\"vue-slider-dot-tooltip-inner-disabled\":this.disabled,\"vue-slider-dot-tooltip-inner-focus\":this.focus}]}},{key:\"showTooltip\",get:function(){switch(this.tooltip){case\"always\":return!0;case\"none\":return!1;case\"focus\":return!!this.focus;default:return!1}}},{key:\"tooltipValue\",get:function(){return this.tooltipFormatter?\"string\"===typeof this.tooltipFormatter?this.tooltipFormatter.replace(/\\{value\\}/,String(this.value)):this.tooltipFormatter(this.value):this.value}}]),e}(s.a);o([c({default:0})],x.prototype,\"value\",void 0),o([c()],x.prototype,\"tooltip\",void 0),o([c()],x.prototype,\"dotStyle\",void 0),o([c()],x.prototype,\"tooltipStyle\",void 0),o([c({type:String,validator:function(t){return[\"top\",\"right\",\"bottom\",\"left\"].indexOf(t)>-1},required:!0})],x.prototype,\"tooltipPlacement\",void 0),o([c({type:[String,Function]})],x.prototype,\"tooltipFormatter\",void 0),o([c({type:Boolean,default:!1})],x.prototype,\"focus\",void 0),o([c({default:!1})],x.prototype,\"disabled\",void 0),x=o([u.a],x);var w=x;r(\"556c\");function O(t){return O=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},O(t)}function P(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function S(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function E(t,e,r){return e&&S(t.prototype,e),r&&S(t,r),t}function R(t,e){return!e||\"object\"!==O(e)&&\"function\"!==typeof e?D(t):e}function D(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}function A(t){return A=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},A(t)}function j(t,e){if(\"function\"!==typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&V(t,e)}function V(t,e){return V=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},V(t,e)}var _=function(t){function e(){return P(this,e),R(this,A(e).apply(this,arguments))}return j(e,t),E(e,[{key:\"labelClickHandle\",value:function(t){t.stopPropagation(),this.$emit(\"pressLabel\",this.mark.pos)}},{key:\"render\",value:function(){var t=arguments[0],e=this.mark;return t(\"div\",{class:this.marksClasses},[this.$slots.step||t(\"div\",{class:this.stepClasses,style:[this.stepStyle,e.style,e.active?this.stepActiveStyle:null,e.active?e.activeStyle:null]}),this.hideLabel?null:this.$slots.label||t(\"div\",{class:this.labelClasses,style:[this.labelStyle,e.labelStyle,e.active?this.labelActiveStyle:null,e.active?e.labelActiveStyle:null],on:{click:this.labelClickHandle}},[e.label])])}},{key:\"marksClasses\",get:function(){return[\"vue-slider-mark\",{\"vue-slider-mark-active\":this.mark.active}]}},{key:\"stepClasses\",get:function(){return[\"vue-slider-mark-step\",{\"vue-slider-mark-step-active\":this.mark.active}]}},{key:\"labelClasses\",get:function(){return[\"vue-slider-mark-label\",{\"vue-slider-mark-label-active\":this.mark.active}]}}]),e}(s.a);o([c({required:!0})],_.prototype,\"mark\",void 0),o([c(Boolean)],_.prototype,\"hideLabel\",void 0),o([c()],_.prototype,\"stepStyle\",void 0),o([c()],_.prototype,\"stepActiveStyle\",void 0),o([c()],_.prototype,\"labelStyle\",void 0),o([c()],_.prototype,\"labelActiveStyle\",void 0),_=o([u.a],_);var M,C=_,N=function(t){return\"number\"===typeof t?\"\".concat(t,\"px\"):t},T=function(t){var e=document.documentElement,r=document.body,n=t.getBoundingClientRect(),o={y:n.top+(window.pageYOffset||e.scrollTop)-(e.clientTop||r.clientTop||0),x:n.left+(window.pageXOffset||e.scrollLeft)-(e.clientLeft||r.clientLeft||0)};return o},B=function(t,e,r){var n=\"targetTouches\"in t?t.targetTouches[0]:t,o=T(e),i={x:n.pageX-o.x,y:n.pageY-o.y};return{x:r?e.offsetWidth-i.x:i.x,y:r?e.offsetHeight-i.y:i.y}};(function(t){t[t[\"PAGE_UP\"]=33]=\"PAGE_UP\",t[t[\"PAGE_DOWN\"]=34]=\"PAGE_DOWN\",t[t[\"END\"]=35]=\"END\",t[t[\"HOME\"]=36]=\"HOME\",t[t[\"LEFT\"]=37]=\"LEFT\",t[t[\"UP\"]=38]=\"UP\",t[t[\"RIGHT\"]=39]=\"RIGHT\",t[t[\"DOWN\"]=40]=\"DOWN\"})(M||(M={}));var I=function(t,e){switch(t.keyCode){case M.UP:return function(t){return\"ttb\"===e.direction?t-1:t+1};case M.RIGHT:return function(t){return\"rtl\"===e.direction?t-1:t+1};case M.DOWN:return function(t){return\"ttb\"===e.direction?t+1:t-1};case M.LEFT:return function(t){return\"rtl\"===e.direction?t+1:t-1};case M.END:return function(){return e.max};case M.HOME:return function(){return e.min};case M.PAGE_UP:return function(t){return t+10};case M.PAGE_DOWN:return function(t){return t-10};default:return null}};function L(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function z(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function H(t,e,r){return e&&z(t.prototype,e),r&&z(t,r),t}var U,F,$=function(){function t(e){L(this,t),this.num=e}return H(t,[{key:\"decimal\",value:function(t,e){var r=this.num,n=this.getDecimalLen(r),o=this.getDecimalLen(t),i=0;switch(e){case\"+\":i=this.getExponent(n,o),this.num=(this.safeRoundUp(r,i)+this.safeRoundUp(t,i))/i;break;case\"-\":i=this.getExponent(n,o),this.num=(this.safeRoundUp(r,i)-this.safeRoundUp(t,i))/i;break;case\"*\":this.num=this.safeRoundUp(this.safeRoundUp(r,this.getExponent(n)),this.safeRoundUp(t,this.getExponent(o)))/this.getExponent(n+o);break;case\"/\":i=this.getExponent(n,o),this.num=this.safeRoundUp(r,i)/this.safeRoundUp(t,i);break;case\"%\":i=this.getExponent(n,o),this.num=this.safeRoundUp(r,i)%this.safeRoundUp(t,i)/i;break}return this}},{key:\"plus\",value:function(t){return this.decimal(t,\"+\")}},{key:\"minus\",value:function(t){return this.decimal(t,\"-\")}},{key:\"multiply\",value:function(t){return this.decimal(t,\"*\")}},{key:\"divide\",value:function(t){return this.decimal(t,\"/\")}},{key:\"remainder\",value:function(t){return this.decimal(t,\"%\")}},{key:\"toNumber\",value:function(){return this.num}},{key:\"getDecimalLen\",value:function(t){return(\"\".concat(t).split(\".\")[1]||\"\").length}},{key:\"getExponent\",value:function(t,e){return Math.pow(10,void 0!==e?Math.max(t,e):t)}},{key:\"safeRoundUp\",value:function(t,e){return Math.round(t*e)}}]),t}();function W(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{},n=Object.keys(r);\"function\"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable}))),n.forEach(function(e){nt(t,e,r[e])})}return t}function G(t,e){return Y(t)||K(t,e)||X()}function X(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}function K(t,e){var r=[],n=!0,o=!1,i=void 0;try{for(var s,a=t[Symbol.iterator]();!(n=(s=a.next()).done);n=!0)if(r.push(s.value),e&&r.length===e)break}catch(u){o=!0,i=u}finally{try{n||null==a[\"return\"]||a[\"return\"]()}finally{if(o)throw i}}return r}function Y(t){if(Array.isArray(t))return t}function q(t){return Z(t)||Q(t)||J()}function J(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}function Q(t){if(Symbol.iterator in Object(t)||\"[object Arguments]\"===Object.prototype.toString.call(t))return Array.from(t)}function Z(t){if(Array.isArray(t)){for(var e=0,r=new Array(t.length);e<t.length;e++)r[e]=t[e];return r}}function tt(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function et(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function rt(t,e,r){return e&&et(t.prototype,e),r&&et(t,r),t}function nt(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}(function(t){t[t[\"VALUE\"]=1]=\"VALUE\",t[t[\"INTERVAL\"]=2]=\"INTERVAL\",t[t[\"MIN\"]=3]=\"MIN\",t[t[\"MAX\"]=4]=\"MAX\",t[t[\"ORDER\"]=5]=\"ORDER\"})(F||(F={}));var ot=(U={},nt(U,F.VALUE,'The type of the \"value\" is illegal'),nt(U,F.INTERVAL,'The prop \"interval\" is invalid, \"(max - min)\" cannot be divisible by \"interval\"'),nt(U,F.MIN,'The \"value\" cannot be less than the minimum.'),nt(U,F.MAX,'The \"value\" cannot be greater than the maximum.'),nt(U,F.ORDER,'When \"order\" is false, the parameters \"minRange\", \"maxRange\", \"fixed\", \"enabled\" are invalid.'),U),it=function(){function t(e){tt(this,t),this.dotsPos=[],this.dotsValue=[],this.data=e.data,this.max=e.max,this.min=e.min,this.interval=e.interval,this.order=e.order,this.marks=e.marks,this.included=e.included,this.process=e.process,this.adsorb=e.adsorb,this.dotOptions=e.dotOptions,this.onError=e.onError,this.order?(this.minRange=e.minRange||0,this.maxRange=e.maxRange||0,this.enableCross=e.enableCross,this.fixed=e.fixed):((e.minRange||e.maxRange||!e.enableCross||e.fixed)&&this.emitError(F.ORDER),this.minRange=0,this.maxRange=0,this.enableCross=!0,this.fixed=!1),this.setValue(e.value)}return rt(t,[{key:\"setValue\",value:function(t){this.setDotsValue(Array.isArray(t)?q(t):[t],!0)}},{key:\"setDotsValue\",value:function(t,e){this.dotsValue=t,e&&this.syncDotsPos()}},{key:\"setDotsPos\",value:function(t){var e=this,r=this.order?q(t).sort(function(t,e){return t-e}):t;this.dotsPos=r,this.setDotsValue(r.map(function(t){return e.getValueByPos(t)}),this.adsorb)}},{key:\"getValueByPos\",value:function(t){var e=this.parsePos(t);if(this.included){var r=100;this.markList.forEach(function(n){var o=Math.abs(n.pos-t);o<r&&(r=o,e=n.value)})}return e}},{key:\"syncDotsPos\",value:function(){var t=this;this.dotsPos=this.dotsValue.map(function(e){return t.parseValue(e)})}},{key:\"getRecentDot\",value:function(t){var e=this.dotsPos.map(function(e){return Math.abs(e-t)});return e.indexOf(Math.min.apply(Math,q(e)))}},{key:\"getIndexByValue\",value:function(t){return this.data?this.data.indexOf(t):new $(+t).minus(this.min).divide(this.interval).toNumber()}},{key:\"getValueByIndex\",value:function(t){return t<0?t=0:t>this.total&&(t=this.total),this.data?this.data[t]:new $(t).multiply(this.interval).plus(this.min).toNumber()}},{key:\"setDotPos\",value:function(t,e){t=this.getValidPos(t,e).pos;var r=t-this.dotsPos[e];if(r){var n=new Array(this.dotsPos.length);this.fixed?n=this.getFixedChangePosArr(r,e):this.minRange||this.maxRange?n=this.getLimitRangeChangePosArr(t,r,e):n[e]=r,this.setDotsPos(this.dotsPos.map(function(t,e){return t+(n[e]||0)}))}}},{key:\"getFixedChangePosArr\",value:function(t,e){var r=this;return this.dotsPos.forEach(function(n,o){if(o!==e){var i=r.getValidPos(n+t,o),s=i.pos,a=i.inRange;a||(t=Math.min(Math.abs(s-n),Math.abs(t))*(t<0?-1:1))}}),this.dotsPos.map(function(e){return t})}},{key:\"getLimitRangeChangePosArr\",value:function(t,e,r){var n=this,o=[{index:r,changePos:e}],i=e;return[this.minRange,this.maxRange].forEach(function(s,a){if(!s)return!1;var u=0===a,l=e>0,c=0;c=u?l?1:-1:l?-1:1;var d=function(t,e){var r=Math.abs(t-e);return u?r<n.minRangeDir:r>n.maxRangeDir},f=r+c,p=n.dotsPos[f],h=t;while(n.isPos(p)&&d(p,h)){var y=n.getValidPos(p+i,f),v=y.pos;o.push({index:f,changePos:v-p}),f+=c,h=v,p=n.dotsPos[f]}}),this.dotsPos.map(function(t,e){var r=o.filter(function(t){return t.index===e});return r.length?r[0].changePos:0})}},{key:\"isPos\",value:function(t){return\"number\"===typeof t}},{key:\"getValidPos\",value:function(t,e){var r=this.valuePosRange[e],n=!0;return t<r[0]?(t=r[0],n=!1):t>r[1]&&(t=r[1],n=!1),{pos:t,inRange:n}}},{key:\"parseValue\",value:function(t){if(this.data)t=this.data.indexOf(t);else if(\"number\"===typeof t||\"string\"===typeof t){if(t=+t,t<this.min)return this.emitError(F.MIN),0;if(t>this.max)return this.emitError(F.MAX),0;if(\"number\"!==typeof t||t!==t)return this.emitError(F.VALUE),0;t=new $(t).minus(this.min).divide(this.interval).toNumber()}var e=new $(t).multiply(this.gap).toNumber();return e<0?0:e>100?100:e}},{key:\"parsePos\",value:function(t){var e=Math.round(t/this.gap);return this.getValueByIndex(e)}},{key:\"isActiveByPos\",value:function(t){return this.processArray.some(function(e){var r=G(e,2),n=r[0],o=r[1];return t>=n&&t<=o})}},{key:\"getValues\",value:function(){if(this.data)return this.data;for(var t=[],e=0;e<=this.total;e++)t.push(new $(e).multiply(this.interval).plus(this.min).toNumber());return t}},{key:\"emitError\",value:function(t){this.onError&&this.onError(t,ot[t])}},{key:\"getDotRange\",value:function(t,e,r){if(!this.dotOptions)return r;var n=Array.isArray(this.dotOptions)?this.dotOptions[t]:this.dotOptions;return n&&void 0!==n[e]?this.parseValue(n[e]):r}},{key:\"markList\",get:function(){var t=this;if(!this.marks)return[];var e=function(e,r){var n=t.parseValue(e);return W({pos:n,value:e,label:e,active:t.isActiveByPos(n)},r)};return!0===this.marks?this.getValues().map(function(t){return e(t)}):\"[object Object]\"===Object.prototype.toString.call(this.marks)?Object.keys(this.marks).sort(function(t,e){return+t-+e}).map(function(r){var n=t.marks[r];return e(r,\"string\"!==typeof n?n:{label:n})}):Array.isArray(this.marks)?this.marks.map(function(t){return e(t)}):\"function\"===typeof this.marks?this.getValues().map(function(e){return{value:e,result:t.marks(e)}}).filter(function(t){var e=t.result;return!!e}).map(function(t){var r=t.value,n=t.result;return e(r,n)}):[]}},{key:\"processArray\",get:function(){if(this.process){if(\"function\"===typeof this.process)return this.process(this.dotsPos);if(1===this.dotsPos.length)return[[0,this.dotsPos[0]]];if(this.dotsPos.length>1)return[[Math.min.apply(Math,q(this.dotsPos)),Math.max.apply(Math,q(this.dotsPos))]]}return[]}},{key:\"total\",get:function(){var t=0;return t=this.data?this.data.length-1:new $(this.max).minus(this.min).divide(this.interval).toNumber(),t-Math.floor(t)!==0?(this.emitError(F.INTERVAL),0):t}},{key:\"gap\",get:function(){return 100/this.total}},{key:\"minRangeDir\",get:function(){return this.minRange?this.minRange*this.gap:0}},{key:\"maxRangeDir\",get:function(){return this.maxRange?this.maxRange*this.gap:100}},{key:\"valuePosRange\",get:function(){var t=this,e=this.dotsPos,r=[];return e.forEach(function(n,o){r.push([Math.max(t.minRange?t.minRangeDir*o:0,t.enableCross?0:e[o-1]||0,t.getDotRange(o,\"min\",0)),Math.min(t.minRange?100-t.minRangeDir*(e.length-1-o):100,t.enableCross?100:e[o+1]||100,t.getDotRange(o,\"max\",100))])}),r}},{key:\"dotsIndex\",get:function(){var t=this;return this.dotsValue.map(function(e){return t.getIndexByValue(e)})}}]),t}();function st(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function at(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function ut(t,e,r){return e&&at(t.prototype,e),r&&at(t,r),t}var lt=function(){function t(e){st(this,t),this.states=0,this.map=e}return ut(t,[{key:\"add\",value:function(t){this.states|=t}},{key:\"delete\",value:function(t){this.states&=~t}},{key:\"toggle\",value:function(t){this.has(t)?this.delete(t):this.add(t)}},{key:\"has\",value:function(t){return!!(this.states&t)}}]),t}();r(\"4abb\");function ct(t){return ct=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},ct(t)}function dt(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{},n=Object.keys(r);\"function\"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable}))),n.forEach(function(e){vt(t,e,r[e])})}return t}function ft(t,e){return yt(t)||ht(t,e)||pt()}function pt(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}function ht(t,e){var r=[],n=!0,o=!1,i=void 0;try{for(var s,a=t[Symbol.iterator]();!(n=(s=a.next()).done);n=!0)if(r.push(s.value),e&&r.length===e)break}catch(u){o=!0,i=u}finally{try{n||null==a[\"return\"]||a[\"return\"]()}finally{if(o)throw i}}return r}function yt(t){if(Array.isArray(t))return t}function vt(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function mt(t){return kt(t)||gt(t)||bt()}function bt(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}function gt(t){if(Symbol.iterator in Object(t)||\"[object Arguments]\"===Object.prototype.toString.call(t))return Array.from(t)}function kt(t){if(Array.isArray(t)){for(var e=0,r=new Array(t.length);e<t.length;e++)r[e]=t[e];return r}}function xt(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function wt(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function Ot(t,e,r){return e&&wt(t.prototype,e),r&&wt(t,r),t}function Pt(t,e){return!e||\"object\"!==ct(e)&&\"function\"!==typeof e?St(t):e}function St(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}function Et(t){return Et=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},Et(t)}function Rt(t,e){if(\"function\"!==typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Dt(t,e)}function Dt(t,e){return Dt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},Dt(t,e)}var At={None:0,Drag:1,Focus:2},jt=4,Vt=function(t){function e(){var t;return xt(this,e),t=Pt(this,Et(e).apply(this,arguments)),t.states=new lt(At),t.scale=1,t.focusDotIndex=0,t}return Rt(e,t),Ot(e,[{key:\"onValueChanged\",value:function(){!this.states.has(At.Drag)&&this.isNotSync&&this.control.setValue(this.value)}},{key:\"created\",value:function(){this.initControl()}},{key:\"mounted\",value:function(){this.bindEvent()}},{key:\"beforeDestroy\",value:function(){this.unbindEvent()}},{key:\"bindEvent\",value:function(){document.addEventListener(\"touchmove\",this.dragMove,{passive:!1}),document.addEventListener(\"touchend\",this.dragEnd,{passive:!1}),document.addEventListener(\"mousedown\",this.blurHandle),document.addEventListener(\"mousemove\",this.dragMove),document.addEventListener(\"mouseup\",this.dragEnd),document.addEventListener(\"mouseleave\",this.dragEnd),document.addEventListener(\"keydown\",this.keydownHandle)}},{key:\"unbindEvent\",value:function(){document.removeEventListener(\"touchmove\",this.dragMove),document.removeEventListener(\"touchend\",this.dragEnd),document.removeEventListener(\"mousedown\",this.blurHandle),document.removeEventListener(\"mousemove\",this.dragMove),document.removeEventListener(\"mouseup\",this.dragEnd),document.removeEventListener(\"mouseleave\",this.dragEnd),document.removeEventListener(\"keydown\",this.keydownHandle)}},{key:\"setScale\",value:function(){this.scale=new $(Math.floor(this.isHorizontal?this.$el.offsetWidth:this.$el.offsetHeight)).divide(100).toNumber()}},{key:\"initControl\",value:function(){var t=this;this.control=new it({value:this.value,data:this.data,enableCross:this.enableCross,fixed:this.fixed,max:this.max,min:this.min,interval:this.interval,minRange:this.minRange,maxRange:this.maxRange,order:this.order,marks:this.marks,included:this.included,process:this.process,adsorb:this.adsorb,dotOptions:this.dotOptions,onError:this.emitError}),[\"data\",\"enableCross\",\"fixed\",\"max\",\"min\",\"interval\",\"minRange\",\"maxRange\",\"order\",\"marks\",\"process\",\"adsorb\",\"included\",\"dotOptions\"].forEach(function(e){t.$watch(e,function(r){if(\"data\"===e&&Array.isArray(t.control.data)&&Array.isArray(r)&&t.control.data.length===r.length&&r.every(function(e,r){return e===t.control.data[r]}))return!1;t.control[e]=r,[\"data\",\"max\",\"min\",\"interval\"].indexOf(e)>-1&&t.control.syncDotsPos()})})}},{key:\"isDisabledByDotIndex\",value:function(t){return this.dots[t].disabled}},{key:\"syncValueByPos\",value:function(){var t=this.control.dotsValue;this.isDiff(t,Array.isArray(this.value)?this.value:[this.value])&&this.$emit(\"change\",1===t.length?t[0]:mt(t))}},{key:\"isDiff\",value:function(t,e){return t.length!==e.length||t.some(function(t,r){return t!==e[r]})}},{key:\"emitError\",value:function(t,e){this.silent||console.error(\"[VueSlider error]: \".concat(e)),this.$emit(\"error\",t,e)}},{key:\"dragStart\",value:function(t){this.focusDotIndex=t,this.setScale(),this.states.add(At.Drag),this.states.add(At.Focus),this.$emit(\"drag-start\")}},{key:\"dragMove\",value:function(t){if(!this.states.has(At.Drag))return!1;t.preventDefault();var e=this.getPosByEvent(t);this.isCrossDot(e),this.control.setDotPos(e,this.focusDotIndex),this.lazy||this.syncValueByPos();var r=this.control.dotsValue;this.$emit(\"dragging\",1===r.length?r[0]:mt(r))}},{key:\"isCrossDot\",value:function(t){if(this.canSort){var e=this.focusDotIndex,r=t;r>this.dragRange[1]?(r=this.dragRange[1],this.focusDotIndex++):r<this.dragRange[0]&&(r=this.dragRange[0],this.focusDotIndex--),e!==this.focusDotIndex&&this.control.setDotPos(r,e)}}},{key:\"dragEnd\",value:function(){var t=this;if(!this.states.has(At.Drag))return!1;this.lazy&&this.syncValueByPos(),setTimeout(function(){t.included&&t.isNotSync?t.control.setValue(t.value):t.control.syncDotsPos(),t.states.delete(At.Drag),t.useKeyboard||t.states.delete(At.Focus),t.$emit(\"drag-end\")})}},{key:\"blurHandle\",value:function(t){if(!this.states.has(At.Focus)||!this.$refs.container||this.$refs.container.contains(t.target))return!1;this.states.delete(At.Focus)}},{key:\"clickHandle\",value:function(t){if(!this.clickable)return!1;if(!this.states.has(At.Drag)){this.setScale();var e=this.getPosByEvent(t);this.setValueByPos(e)}}},{key:\"focus\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.states.add(At.Focus),this.focusDotIndex=t}},{key:\"blur\",value:function(){this.states.delete(At.Focus)}},{key:\"getValue\",value:function(){var t=this.control.dotsValue;return 1===t.length?t[0]:t}},{key:\"getIndex\",value:function(){var t=this.control.dotsIndex;return 1===t.length?t[0]:t}},{key:\"setValue\",value:function(t){this.control.setValue(Array.isArray(t)?mt(t):[t]),this.syncValueByPos()}},{key:\"setIndex\",value:function(t){var e=this,r=Array.isArray(t)?t.map(function(t){return e.control.getValueByIndex(t)}):this.control.getValueByIndex(t);this.setValue(r)}},{key:\"setValueByPos\",value:function(t){var e=this,r=this.control.getRecentDot(t);if(this.isDisabledByDotIndex(r))return!1;this.focusDotIndex=r,this.control.setDotPos(t,r),this.syncValueByPos(),this.useKeyboard&&this.states.add(At.Focus),setTimeout(function(){e.included&&e.isNotSync?e.control.setValue(e.value):e.control.syncDotsPos()})}},{key:\"keydownHandle\",value:function(t){if(!this.useKeyboard||!this.states.has(At.Focus))return!1;var e=I(t,{direction:this.direction,max:this.control.total,min:0});if(e){t.preventDefault();var r=this.control.getIndexByValue(this.control.dotsValue[this.focusDotIndex]),n=e(r),o=this.control.parseValue(this.control.getValueByIndex(n));this.isCrossDot(o),this.control.setDotPos(o,this.focusDotIndex),this.syncValueByPos()}}},{key:\"getPosByEvent\",value:function(t){return B(t,this.$el,this.isReverse)[this.isHorizontal?\"x\":\"y\"]/this.scale}},{key:\"renderSlot\",value:function(t,e,r,n){var o=this.$createElement,i=this.$scopedSlots[t];return i?n?i(e):o(\"template\",{slot:t},[i(e)]):r}},{key:\"render\",value:function(){var t=this,e=arguments[0];return e(\"div\",{ref:\"container\",class:this.containerClasses,style:this.containerStyles,attrs:{\"aria-hidden\":!0},on:{click:this.clickHandle}},[e(\"div\",{class:\"vue-slider-rail\",style:this.railStyle},[this.processArray.map(function(r,n){return t.renderSlot(\"process\",r,e(\"div\",{class:\"vue-slider-process\",key:\"process-\".concat(n),style:r.style}),!0)}),this.marks?e(\"div\",{class:\"vue-slider-marks\"},[this.control.markList.map(function(r,n){var o;return t.renderSlot(\"mark\",r,e(\"vue-slider-mark\",{key:\"mark-\".concat(n),attrs:{mark:r,hideLabel:t.hideLabel,stepStyle:t.stepStyle,stepActiveStyle:t.stepActiveStyle,labelStyle:t.labelStyle,labelActiveStyle:t.labelActiveStyle},style:(o={},vt(o,t.isHorizontal?\"height\":\"width\",\"100%\"),vt(o,t.isHorizontal?\"width\":\"height\",t.tailSize),vt(o,t.mainDirection,\"\".concat(r.pos,\"%\")),o),on:{pressLabel:function(e){return t.setValueByPos(e)}}},[t.renderSlot(\"step\",r,null),t.renderSlot(\"label\",r,null)]),!0)})]):null,this.dots.map(function(r,n){var o;return e(\"vue-slider-dot\",{ref:\"dot-\".concat(n),key:\"dot-\".concat(n),attrs:{value:r.value,disabled:r.disabled,focus:r.focus,\"dot-style\":[r.style,r.disabled?r.disabledStyle:null,r.focus?r.focusStyle:null],tooltip:r.tooltip||t.tooltip,\"tooltip-style\":[t.tooltipStyle,r.tooltipStyle,r.disabled?r.tooltipDisabledStyle:null,r.focus?r.tooltipFocusStyle:null],\"tooltip-formatter\":Array.isArray(t.tooltipFormatter)?t.tooltipFormatter[n]:t.tooltipFormatter,\"tooltip-placement\":t.tooltipDirections[n]},style:[t.dotBaseStyle,(o={},vt(o,t.mainDirection,\"\".concat(r.pos,\"%\")),vt(o,\"transition\",\"\".concat(t.mainDirection,\" \").concat(t.animateTime,\"s\")),o)],on:{\"drag-start\":function(){return t.dragStart(n)}}},[t.renderSlot(\"dot\",r,null),t.renderSlot(\"tooltip\",r,null)])})]),1!==this.dots.length||this.data?null:e(\"input\",{class:\"vue-slider-sr-only\",attrs:{type:\"range\",min:this.min,max:this.max},domProps:{value:this.value}})])}},{key:\"tailSize\",get:function(){return N((this.isHorizontal?this.height:this.width)||jt)}},{key:\"containerClasses\",get:function(){return[\"vue-slider\",[\"vue-slider-\".concat(this.direction)],{\"vue-slider-disabled\":this.disabled}]}},{key:\"containerStyles\",get:function(){var t=Array.isArray(this.dotSize)?this.dotSize:[this.dotSize,this.dotSize],e=ft(t,2),r=e[0],n=e[1],o=this.width?N(this.width):this.isHorizontal?\"auto\":N(jt),i=this.height?N(this.height):this.isHorizontal?N(jt):\"auto\";return{padding:this.contained?\"\".concat(n/2,\"px \").concat(r/2,\"px\"):this.isHorizontal?\"\".concat(n/2,\"px 0\"):\"0 \".concat(r/2,\"px\"),width:o,height:i}}},{key:\"processArray\",get:function(){var t=this;return this.control.processArray.map(function(e){var r,n=ft(e,3),o=n[0],i=n[1],s=n[2];if(o>i){var a=[i,o];o=a[0],i=a[1]}var u=t.isHorizontal?\"width\":\"height\";return{start:o,end:i,style:dt((r={},vt(r,t.isHorizontal?\"height\":\"width\",\"100%\"),vt(r,t.isHorizontal?\"top\":\"left\",0),vt(r,t.mainDirection,\"\".concat(o,\"%\")),vt(r,u,\"\".concat(i-o,\"%\")),vt(r,\"transitionProperty\",\"\".concat(u,\",\").concat(t.mainDirection)),vt(r,\"transitionDuration\",\"\".concat(t.animateTime,\"s\")),r),t.processStyle,s)}})}},{key:\"dotBaseStyle\",get:function(){var t,e=Array.isArray(this.dotSize)?this.dotSize:[this.dotSize,this.dotSize],r=ft(e,2),n=r[0],o=r[1];return t=this.isHorizontal?vt({transform:\"translate(\".concat(this.isReverse?\"50%\":\"-50%\",\", -50%)\"),WebkitTransform:\"translate(\".concat(this.isReverse?\"50%\":\"-50%\",\", -50%)\"),top:\"50%\"},\"ltr\"===this.direction?\"left\":\"right\",\"0\"):vt({transform:\"translate(-50%, \".concat(this.isReverse?\"50%\":\"-50%\",\")\"),WebkitTransform:\"translate(-50%, \".concat(this.isReverse?\"50%\":\"-50%\",\")\"),left:\"50%\"},\"btt\"===this.direction?\"bottom\":\"top\",\"0\"),dt({width:\"\".concat(n,\"px\"),height:\"\".concat(o,\"px\")},t)}},{key:\"mainDirection\",get:function(){switch(this.direction){case\"ltr\":return\"left\";case\"rtl\":return\"right\";case\"btt\":return\"bottom\";case\"ttb\":return\"top\"}}},{key:\"isHorizontal\",get:function(){return\"ltr\"===this.direction||\"rtl\"===this.direction}},{key:\"isReverse\",get:function(){return\"rtl\"===this.direction||\"btt\"===this.direction}},{key:\"tooltipDirections\",get:function(){var t=this.tooltipPlacement||(this.isHorizontal?\"top\":\"left\");return Array.isArray(t)?t:this.dots.map(function(){return t})}},{key:\"dots\",get:function(){var t=this;return this.control.dotsPos.map(function(e,r){return dt({pos:e,index:r,value:t.control.dotsValue[r],focus:t.states.has(At.Focus)&&t.focusDotIndex===r,disabled:!1,style:t.dotStyle},(Array.isArray(t.dotOptions)?t.dotOptions[r]:t.dotOptions)||{})})}},{key:\"animateTime\",get:function(){return this.states.has(At.Drag)?0:this.duration}},{key:\"canSort\",get:function(){return this.order&&!this.minRange&&!this.maxRange&&!this.fixed&&this.enableCross}},{key:\"isNotSync\",get:function(){var t=this.control.dotsValue;return Array.isArray(this.value)?this.value.length!==t.length||this.value.some(function(e,r){return e!==t[r]}):this.value!==t[0]}},{key:\"dragRange\",get:function(){var t=this.dots[this.focusDotIndex-1],e=this.dots[this.focusDotIndex+1];return[t?t.pos:-1/0,e?e.pos:1/0]}}]),e}(s.a);o([l(\"change\",{default:0})],Vt.prototype,\"value\",void 0),o([c({type:Boolean,default:!1})],Vt.prototype,\"silent\",void 0),o([c({default:\"ltr\",validator:function(t){return[\"ltr\",\"rtl\",\"ttb\",\"btt\"].indexOf(t)>-1}})],Vt.prototype,\"direction\",void 0),o([c({type:[Number,String]})],Vt.prototype,\"width\",void 0),o([c({type:[Number,String]})],Vt.prototype,\"height\",void 0),o([c({default:14})],Vt.prototype,\"dotSize\",void 0),o([c({default:!1})],Vt.prototype,\"contained\",void 0),o([c({type:Number,default:0})],Vt.prototype,\"min\",void 0),o([c({type:Number,default:100})],Vt.prototype,\"max\",void 0),o([c({type:Number,default:1})],Vt.prototype,\"interval\",void 0),o([c({type:Boolean,default:!1})],Vt.prototype,\"disabled\",void 0),o([c({type:Boolean,default:!0})],Vt.prototype,\"clickable\",void 0),o([c({type:Number,default:.5})],Vt.prototype,\"duration\",void 0),o([c(Array)],Vt.prototype,\"data\",void 0),o([c({type:Boolean,default:!1})],Vt.prototype,\"lazy\",void 0),o([c({type:String,validator:function(t){return[\"none\",\"always\",\"focus\"].indexOf(t)>-1},default:\"focus\"})],Vt.prototype,\"tooltip\",void 0),o([c({type:[String,Array],validator:function(t){return(Array.isArray(t)?t:[t]).every(function(t){return[\"top\",\"right\",\"bottom\",\"left\"].indexOf(t)>-1})}})],Vt.prototype,\"tooltipPlacement\",void 0),o([c({type:[String,Array,Function]})],Vt.prototype,\"tooltipFormatter\",void 0),o([c({type:Boolean,default:!1})],Vt.prototype,\"useKeyboard\",void 0),o([c({type:Boolean,default:!0})],Vt.prototype,\"enableCross\",void 0),o([c({type:Boolean,default:!1})],Vt.prototype,\"fixed\",void 0),o([c({type:Boolean,default:!0})],Vt.prototype,\"order\",void 0),o([c(Number)],Vt.prototype,\"minRange\",void 0),o([c(Number)],Vt.prototype,\"maxRange\",void 0),o([c({type:[Boolean,Object,Array,Function],default:!1})],Vt.prototype,\"marks\",void 0),o([c({type:[Boolean,Function],default:!0})],Vt.prototype,\"process\",void 0),o([c(Boolean)],Vt.prototype,\"included\",void 0),o([c(Boolean)],Vt.prototype,\"adsorb\",void 0),o([c(Boolean)],Vt.prototype,\"hideLabel\",void 0),o([c()],Vt.prototype,\"dotOptions\",void 0),o([c()],Vt.prototype,\"railStyle\",void 0),o([c()],Vt.prototype,\"processStyle\",void 0),o([c()],Vt.prototype,\"dotStyle\",void 0),o([c()],Vt.prototype,\"tooltipStyle\",void 0),o([c()],Vt.prototype,\"stepStyle\",void 0),o([c()],Vt.prototype,\"stepActiveStyle\",void 0),o([c()],Vt.prototype,\"labelStyle\",void 0),o([c()],Vt.prototype,\"labelActiveStyle\",void 0),o([d(\"value\")],Vt.prototype,\"onValueChanged\",null),Vt=o([u()({data:function(){return{control:null}},components:{VueSliderDot:w,VueSliderMark:C},inheritAttrs:!1})],Vt);var _t=Vt,Mt=_t;r.d(e,\"ERROR_TYPE\",function(){return F});e[\"default\"]=Mt}})[\"default\"]});\n//# sourceMappingURL=vue-slider-component.umd.min.js.map","define([\"../core/Tone\", \"../type/Type\", \"../core/Master\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Base-class for all instruments\n\t *\n\t *  @constructor\n\t *  @extends {Tone.AudioNode}\n\t */\n\tTone.Instrument = function(options){\n\n\t\t//get the defaults\n\t\toptions = Tone.defaultArg(options, Tone.Instrument.defaults);\n\t\tTone.AudioNode.call(this);\n\n\t\t/**\n\t\t *  The output and volume triming node\n\t\t *  @type  {Tone.Volume}\n\t\t *  @private\n\t\t */\n\t\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t\t/**\n\t\t * The volume of the output in decibels.\n\t\t * @type {Decibels}\n\t\t * @signal\n\t\t * @example\n\t\t * source.volume.value = -6;\n\t\t */\n\t\tthis.volume = this._volume.volume;\n\t\tthis._readOnly(\"volume\");\n\n\t\t/**\n\t\t * Keep track of all events scheduled to the transport\n\t\t * when the instrument is 'synced'\n\t\t * @type {Array<Number>}\n\t\t * @private\n\t\t */\n\t\tthis._scheduledEvents = [];\n\t};\n\n\tTone.extend(Tone.Instrument, Tone.AudioNode);\n\n\t/**\n\t *  the default attributes\n\t *  @type {object}\n\t */\n\tTone.Instrument.defaults = {\n\t\t/** the volume of the output in decibels */\n\t\t\"volume\" : 0\n\t};\n\n\t/**\n\t *  @abstract\n\t *  @param {string|number} note the note to trigger\n\t *  @param {Time} [time=now] the time to trigger the ntoe\n\t *  @param {number} [velocity=1] the velocity to trigger the note\n\t */\n\tTone.Instrument.prototype.triggerAttack = Tone.noOp;\n\n\t/**\n\t *  @abstract\n\t *  @param {Time} [time=now] when to trigger the release\n\t */\n\tTone.Instrument.prototype.triggerRelease = Tone.noOp;\n\n\t/**\n\t * Sync the instrument to the Transport. All subsequent calls of\n\t * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n\t * will be scheduled along the transport.\n\t * @example\n\t * instrument.sync()\n\t * //schedule 3 notes when the transport first starts\n\t * instrument.triggerAttackRelease('C4', '8n', 0)\n\t * instrument.triggerAttackRelease('E4', '8n', '8n')\n\t * instrument.triggerAttackRelease('G4', '8n', '4n')\n\t * //start the transport to hear the notes\n\t * Transport.start()\n\t * @returns {Tone.Instrument} this\n\t */\n\tTone.Instrument.prototype.sync = function(){\n\t\tthis._syncMethod(\"triggerAttack\", 1);\n\t\tthis._syncMethod(\"triggerRelease\", 0);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Wrap the given method so that it can be synchronized\n\t * @param {String} method Which method to wrap and sync\n\t * @param  {Number} timePosition What position the time argument appears in\n\t * @private\n\t */\n\tTone.Instrument.prototype._syncMethod = function(method, timePosition){\n\t\tvar originalMethod = this[\"_original_\"+method] = this[method];\n\t\tthis[method] = function(){\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\tvar time = args[timePosition];\n\t\t\tvar id = Tone.Transport.schedule(function(t){\n\t\t\t\targs[timePosition] = t;\n\t\t\t\toriginalMethod.apply(this, args);\n\t\t\t}.bind(this), time);\n\t\t\tthis._scheduledEvents.push(id);\n\t\t}.bind(this);\n\t};\n\n\t/**\n\t * Unsync the instrument from the Transport\n\t * @returns {Tone.Instrument} this\n\t */\n\tTone.Instrument.prototype.unsync = function(){\n\t\tthis._scheduledEvents.forEach(function(id){\n\t\t\tTone.Transport.clear(id);\n\t\t});\n\t\tthis._scheduledEvents = [];\n\t\tif (this._original_triggerAttack){\n\t\t\tthis.triggerAttack = this._original_triggerAttack;\n\t\t\tthis.triggerRelease = this._original_triggerRelease;\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Trigger the attack and then the release after the duration.\n\t *  @param  {Frequency} note     The note to trigger.\n\t *  @param  {Time} duration How long the note should be held for before\n\t *                          triggering the release. This value must be greater than 0.\n\t *  @param {Time} [time=now]  When the note should be triggered.\n\t *  @param  {NormalRange} [velocity=1] The velocity the note should be triggered at.\n\t *  @returns {Tone.Instrument} this\n\t *  @example\n\t * //trigger \"C4\" for the duration of an 8th note\n\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t */\n\tTone.Instrument.prototype.triggerAttackRelease = function(note, duration, time, velocity){\n\t\ttime = this.toSeconds(time);\n\t\tduration = this.toSeconds(duration);\n\t\tthis.triggerAttack(note, time, velocity);\n\t\tthis.triggerRelease(time + duration);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  clean up\n\t *  @returns {Tone.Instrument} this\n\t */\n\tTone.Instrument.prototype.dispose = function(){\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis._volume.dispose();\n\t\tthis._volume = null;\n\t\tthis._writable([\"volume\"]);\n\t\tthis.volume = null;\n\t\tthis.unsync();\n\t\tthis._scheduledEvents = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Instrument;\n});\n","define([\"../core/Tone\", \"../type/Type\", \"../core/AudioNode\", \"../core/Timeline\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.Param wraps the native Web Audio's AudioParam to provide\n\t *         additional unit conversion functionality. It also\n\t *         serves as a base-class for classes which have a single,\n\t *         automatable parameter.\n\t *  @extends {Tone.AudioNode}\n\t *  @param  {AudioParam}  param  The parameter to wrap.\n\t *  @param  {Tone.Type} units The units of the audio param.\n\t *  @param  {Boolean} convert If the param should be converted.\n\t */\n\tTone.Param = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"param\", \"units\", \"convert\"], Tone.Param);\n\t\tTone.AudioNode.call(this, options);\n\n\t\t/**\n\t\t *  The native parameter to control\n\t\t *  @type  {AudioParam}\n\t\t *  @private\n\t\t */\n\t\tthis._param = this.input = options.param;\n\n\t\t/**\n\t\t *  The units of the parameter\n\t\t *  @type {Tone.Type}\n\t\t */\n\t\tthis.units = options.units;\n\n\t\t/**\n\t\t *  If the value should be converted or not\n\t\t *  @type {Boolean}\n\t\t */\n\t\tthis.convert = options.convert;\n\n\t\t/**\n\t\t *  True if the signal value is being overridden by\n\t\t *  a connected signal.\n\t\t *  @readOnly\n\t\t *  @type  {boolean}\n\t\t *  @private\n\t\t */\n\t\tthis.overridden = false;\n\n\t\t/**\n\t\t * The timeline which tracks all of the automations.\n\t\t * @type {Tone.Timeline}\n\t\t * @private\n\t\t */\n\t\tthis._events = new Tone.Timeline(1000);\n\n\t\tif (Tone.isDefined(options.value) && this._param){\n\t\t\tthis.setValueAtTime(options.value, 0);\n\t\t}\n\t};\n\n\tTone.extend(Tone.Param, Tone.AudioNode);\n\n\t/**\n\t *  Defaults\n\t *  @type  {Object}\n\t *  @const\n\t */\n\tTone.Param.defaults = {\n\t\t\"units\" : Tone.Type.Default,\n\t\t\"convert\" : true,\n\t\t\"param\" : undefined\n\t};\n\n\t/**\n\t * The current value of the parameter.\n\t * @memberOf Tone.Param#\n\t * @type {Number}\n\t * @name value\n\t */\n\tObject.defineProperty(Tone.Param.prototype, \"value\", {\n\t\tget : function(){\n\t\t\tvar now = this.now();\n\t\t\treturn this._toUnits(this.getValueAtTime(now));\n\t\t},\n\t\tset : function(value){\n\t\t\tthis._initialValue = this._fromUnits(value);\n\t\t\tthis.cancelScheduledValues(this.now());\n\t\t\tthis.setValueAtTime(value, this.now());\n\t\t}\n\t});\n\n\t/**\n\t * The minimum output value of the parameter\n\t * @memberOf Tone.Param#\n\t * @type {Number}\n\t * @name value\n\t */\n\tObject.defineProperty(Tone.Param.prototype, \"minValue\", {\n\t\tget : function(){\n\t\t\tif (this.units === Tone.Type.Time || this.units === Tone.Type.Frequency ||\n\t\t\t\tthis.units === Tone.Type.NormalRange || this.units === Tone.Type.Positive ||\n\t\t\t\tthis.units === Tone.Type.BPM){\n\t\t\t\treturn 0;\n\t\t\t} else if (this.units === Tone.Type.AudioRange){\n\t\t\t\treturn -1;\n\t\t\t} else if (this.units === Tone.Type.Decibels){\n\t\t\t\treturn -Infinity;\n\t\t\t} else {\n\t\t\t\treturn this._param.minValue;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The maximum output value of the parameter\n\t * @memberOf Tone.Param#\n\t * @type {Number}\n\t * @name value\n\t */\n\tObject.defineProperty(Tone.Param.prototype, \"maxValue\", {\n\t\tget : function(){\n\t\t\tif (this.units === Tone.Type.NormalRange ||\n\t\t\t\tthis.units === Tone.Type.AudioRange){\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn this._param.maxValue;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  Convert the given value from the type specified by Tone.Param.units\n\t *  into the destination value (such as Gain or Frequency).\n\t *  @private\n\t *  @param  {*} val the value to convert\n\t *  @return {number}     the number which the value should be set to\n\t */\n\tTone.Param.prototype._fromUnits = function(val){\n\t\tif ((this.convert || Tone.isUndef(this.convert)) && !this.overridden){\n\t\t\tswitch (this.units){\n\t\t\t\tcase Tone.Type.Time:\n\t\t\t\t\treturn this.toSeconds(val);\n\t\t\t\tcase Tone.Type.Frequency:\n\t\t\t\t\treturn this.toFrequency(val);\n\t\t\t\tcase Tone.Type.Decibels:\n\t\t\t\t\treturn Tone.dbToGain(val);\n\t\t\t\tcase Tone.Type.NormalRange:\n\t\t\t\t\treturn Math.min(Math.max(val, 0), 1);\n\t\t\t\tcase Tone.Type.AudioRange:\n\t\t\t\t\treturn Math.min(Math.max(val, -1), 1);\n\t\t\t\tcase Tone.Type.Positive:\n\t\t\t\t\treturn Math.max(val, 0);\n\t\t\t\tdefault:\n\t\t\t\t\treturn val;\n\t\t\t}\n\t\t} else {\n\t\t\treturn val;\n\t\t}\n\t};\n\n\t/**\n\t * Convert the parameters value into the units specified by Tone.Param.units.\n\t * @private\n\t * @param  {number} val the value to convert\n\t * @return {number}\n\t */\n\tTone.Param.prototype._toUnits = function(val){\n\t\tif (this.convert || Tone.isUndef(this.convert)){\n\t\t\tswitch (this.units){\n\t\t\t\tcase Tone.Type.Decibels:\n\t\t\t\t\treturn Tone.gainToDb(val);\n\t\t\t\tdefault:\n\t\t\t\t\treturn val;\n\t\t\t}\n\t\t} else {\n\t\t\treturn val;\n\t\t}\n\t};\n\n\t/**\n\t *  the minimum output value\n\t *  @type {Number}\n\t *  @private\n\t */\n\tTone.Param.prototype._minOutput = 1e-5;\n\n\t/**\n\t *  The event types\n\t *  @enum {String}\n\t *  @private\n\t */\n\tTone.Param.AutomationType = {\n\t\tLinear : \"linearRampToValueAtTime\",\n\t\tExponential : \"exponentialRampToValueAtTime\",\n\t\tTarget : \"setTargetAtTime\",\n\t\tSetValue : \"setValueAtTime\",\n\t\tCancel : \"cancelScheduledValues\"\n\t};\n\n\t/**\n\t *  Schedules a parameter value change at the given time.\n\t *  @param {*}\tvalue The value to set the signal.\n\t *  @param {Time}  time The time when the change should occur.\n\t *  @returns {Tone.Param} this\n\t *  @example\n\t * //set the frequency to \"G4\" in exactly 1 second from now.\n\t * freq.setValueAtTime(\"G4\", \"+1\");\n\t */\n\tTone.Param.prototype.setValueAtTime = function(value, time){\n\t\ttime = this.toSeconds(time);\n\t\tvalue = this._fromUnits(value);\n\t\tthis._events.add({\n\t\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\t\"value\" : value,\n\t\t\t\"time\" : time,\n\t\t});\n\t\tthis.log(Tone.Param.AutomationType.SetValue, value, time);\n\t\tthis._param.setValueAtTime(value, time);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Get the signals value at the given time. Subsequent scheduling\n\t *  may invalidate the returned value.\n\t *  @param {Time} time When to get the value\n\t *  @returns {Number} The value at the given time\n\t */\n\tTone.Param.prototype.getValueAtTime = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tvar after = this._events.getAfter(time);\n\t\tvar before = this._events.get(time);\n\t\tvar initialValue = Tone.defaultArg(this._initialValue, this._param.defaultValue);\n\t\tvar value = initialValue;\n\t\t//if it was set by\n\t\tif (before === null){\n\t\t\tvalue = initialValue;\n\t\t} else if (before.type === Tone.Param.AutomationType.Target){\n\t\t\tvar previous = this._events.getBefore(before.time);\n\t\t\tvar previousVal;\n\t\t\tif (previous === null){\n\t\t\t\tpreviousVal = initialValue;\n\t\t\t} else {\n\t\t\t\tpreviousVal = previous.value;\n\t\t\t}\n\t\t\tvalue = this._exponentialApproach(before.time, previousVal, before.value, before.constant, time);\n\t\t} else if (after === null){\n\t\t\tvalue = before.value;\n\t\t} else if (after.type === Tone.Param.AutomationType.Linear){\n\t\t\tvalue = this._linearInterpolate(before.time, before.value, after.time, after.value, time);\n\t\t} else if (after.type === Tone.Param.AutomationType.Exponential){\n\t\t\tvalue = this._exponentialInterpolate(before.time, before.value, after.time, after.value, time);\n\t\t} else {\n\t\t\tvalue = before.value;\n\t\t}\n\t\treturn value;\n\t};\n\n\t/**\n\t *  Creates a schedule point with the current value at the current time.\n\t *  This is useful for creating an automation anchor point in order to\n\t *  schedule changes from the current value.\n\t *\n\t *  @param {number=} now (Optionally) pass the now value in.\n\t *  @returns {Tone.Param} this\n\t */\n\tTone.Param.prototype.setRampPoint = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tvar currentVal = this.getValueAtTime(time);\n\t\tthis.cancelAndHoldAtTime(time);\n\t\tif (currentVal === 0){\n\t\t\tcurrentVal = this._minOutput;\n\t\t}\n\t\tthis.setValueAtTime(this._toUnits(currentVal), time);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Schedules a linear continuous change in parameter value from the\n\t *  previous scheduled parameter value to the given value.\n\t *\n\t *  @param  {number} value\n\t *  @param  {Time} endTime\n\t *  @returns {Tone.Param} this\n\t */\n\tTone.Param.prototype.linearRampToValueAtTime = function(value, endTime){\n\t\tvalue = this._fromUnits(value);\n\t\tendTime = this.toSeconds(endTime);\n\t\tthis._events.add({\n\t\t\t\"type\" : Tone.Param.AutomationType.Linear,\n\t\t\t\"value\" : value,\n\t\t\t\"time\" : endTime,\n\t\t});\n\t\tthis.log(Tone.Param.AutomationType.Linear, value, endTime);\n\t\tthis._param.linearRampToValueAtTime(value, endTime);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Schedules an exponential continuous change in parameter value from\n\t *  the previous scheduled parameter value to the given value.\n\t *\n\t *  @param  {number} value\n\t *  @param  {Time} endTime\n\t *  @returns {Tone.Param} this\n\t */\n\tTone.Param.prototype.exponentialRampToValueAtTime = function(value, endTime){\n\t\tvalue = this._fromUnits(value);\n\t\tvalue = Math.max(this._minOutput, value);\n\t\tendTime = this.toSeconds(endTime);\n\t\t//store the event\n\t\tthis._events.add({\n\t\t\t\"type\" : Tone.Param.AutomationType.Exponential,\n\t\t\t\"time\" : endTime,\n\t\t\t\"value\" : value\n\t\t});\n\t\tthis.log(Tone.Param.AutomationType.Exponential, value, endTime);\n\t\tthis._param.exponentialRampToValueAtTime(value, endTime);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Schedules an exponential continuous change in parameter value from\n\t *  the current time and current value to the given value over the\n\t *  duration of the rampTime.\n\t *\n\t *  @param  {number} value   The value to ramp to.\n\t *  @param  {Time} rampTime the time that it takes the\n\t *                               value to ramp from it's current value\n\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n\t *  @returns {Tone.Param} this\n\t *  @example\n\t * //exponentially ramp to the value 2 over 4 seconds.\n\t * signal.exponentialRampTo(2, 4);\n\t */\n\tTone.Param.prototype.exponentialRampTo = function(value, rampTime, startTime){\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setRampPoint(startTime);\n\t\tthis.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Schedules an linear continuous change in parameter value from\n\t *  the current time and current value to the given value over the\n\t *  duration of the rampTime.\n\t *\n\t *  @param  {number} value   The value to ramp to.\n\t *  @param  {Time} rampTime the time that it takes the\n\t *                               value to ramp from it's current value\n\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n\t *  @returns {Tone.Param} this\n\t *  @example\n\t * //linearly ramp to the value 4 over 3 seconds.\n\t * signal.linearRampTo(4, 3);\n\t */\n\tTone.Param.prototype.linearRampTo = function(value, rampTime, startTime){\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setRampPoint(startTime);\n\t\tthis.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Start exponentially approaching the target value at the given time. Since it\n\t *  is an exponential approach it will continue approaching after the ramp duration. The\n\t *  rampTime is the time that it takes to reach over 99% of the way towards the value.\n\t *  @param  {number} value   The value to ramp to.\n\t *  @param  {Time} rampTime the time that it takes the\n\t *                               value to ramp from it's current value\n\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n\t *  @returns {Tone.Param} this\n\t *  @example\n\t * //exponentially ramp to the value 2 over 4 seconds.\n\t * signal.exponentialRampTo(2, 4);\n\t */\n\tTone.Param.prototype.targetRampTo = function(value, rampTime, startTime){\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setRampPoint(startTime);\n\t\tthis.exponentialApproachValueAtTime(value, startTime, rampTime);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Start exponentially approaching the target value at the given time. Since it\n\t *  is an exponential approach it will continue approaching after the ramp duration. The\n\t *  rampTime is the time that it takes to reach over 99% of the way towards the value. This methods\n\t *  is similar to setTargetAtTime except the third argument is a time instead of a 'timeConstant'\n\t *  @param  {number} value   The value to ramp to.\n\t *  @param {Time}\ttime \tWhen the ramp should start.\n\t *  @param  {Time} rampTime the time that it takes the\n\t *                               value to ramp from it's current value\n\t *  @returns {Tone.Param} this\n\t *  @example\n\t * //exponentially ramp to the value 2 over 4 seconds.\n\t * signal.exponentialRampTo(2, 4);\n\t */\n\tTone.Param.prototype.exponentialApproachValueAtTime = function(value, time, rampTime){\n\t\tvar timeConstant = Math.log(this.toSeconds(rampTime)+1)/Math.log(200);\n\t\ttime = this.toSeconds(time);\n\t\treturn this.setTargetAtTime(value, time, timeConstant);\n\t};\n\n\t/**\n\t *  Start exponentially approaching the target value at the given time with\n\t *  a rate having the given time constant.\n\t *  @param {number} value\n\t *  @param {Time} startTime\n\t *  @param {number} timeConstant\n\t *  @returns {Tone.Param} this\n\t */\n\tTone.Param.prototype.setTargetAtTime = function(value, startTime, timeConstant){\n\t\tvalue = this._fromUnits(value);\n\t\t// The value will never be able to approach without timeConstant > 0.\n\t\tif (timeConstant <= 0){\n\t\t\tthrow new Error(\"timeConstant must be greater than 0\");\n\t\t}\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis._events.add({\n\t\t\t\"type\" : Tone.Param.AutomationType.Target,\n\t\t\t\"value\" : value,\n\t\t\t\"time\" : startTime,\n\t\t\t\"constant\" : timeConstant\n\t\t});\n\t\tthis.log(Tone.Param.AutomationType.Target, value, startTime, timeConstant);\n\t\tthis._param.setTargetAtTime(value, startTime, timeConstant);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Sets an array of arbitrary parameter values starting at the given time\n\t *  for the given duration.\n\t *\n\t *  @param {Array} values\n\t *  @param {Time} startTime\n\t *  @param {Time} duration\n\t *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n\t *  @returns {Tone.Param} this\n\t */\n\tTone.Param.prototype.setValueCurveAtTime = function(values, startTime, duration, scaling){\n\t\tscaling = Tone.defaultArg(scaling, 1);\n\t\tduration = this.toSeconds(duration);\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setValueAtTime(values[0] * scaling, startTime);\n\t\tvar segTime = duration / (values.length - 1);\n\t\tfor (var i = 1; i < values.length; i++){\n\t\t\tthis.linearRampToValueAtTime(values[i] * scaling, startTime + i * segTime);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Cancels all scheduled parameter changes with times greater than or\n\t *  equal to startTime.\n\t *\n\t *  @param  {Time} time\n\t *  @returns {Tone.Param} this\n\t */\n\tTone.Param.prototype.cancelScheduledValues = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._events.cancel(time);\n\t\tthis._param.cancelScheduledValues(time);\n\t\tthis.log(Tone.Param.AutomationType.Cancel, time);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  This is similar to [cancelScheduledValues](#cancelScheduledValues) except\n\t *  it holds the automated value at time until the next automated event.\n\t *  @param  {Time} time\n\t *  @returns {Tone.Param} this\n\t */\n\tTone.Param.prototype.cancelAndHoldAtTime = function(time){\n\t\tvar valueAtTime = this.getValueAtTime(time);\n\t\tthis.log(\"cancelAndHoldAtTime\", time, \"value=\"+valueAtTime);\n\n\t\t//remove the schedule events\n\t\tthis._param.cancelScheduledValues(time);\n\n\t\t//if there is an event at the given time\n\t\t//and that even is not a \"set\"\n\t\tvar before = this._events.get(time);\n\t\tvar after = this._events.getAfter(time);\n\t\tif (before && before.time === time){\n\t\t\t//remove everything after\n\t\t\tif (after){\n\t\t\t\tthis._events.cancel(after.time);\n\t\t\t} else {\n\t\t\t\tthis._events.cancel(time + this.sampleTime);\n\t\t\t}\n\t\t} else if (after){\n\t\t\t//cancel the next event(s)\n\t\t\tthis._events.cancel(after.time);\n\t\t\tif (after.type === Tone.Param.AutomationType.Linear){\n\t\t\t\tthis.linearRampToValueAtTime(valueAtTime, time);\n\t\t\t} else if (after.type === Tone.Param.AutomationType.Exponential){\n\t\t\t\tthis.exponentialRampToValueAtTime(valueAtTime, time);\n\t\t\t}\n\t\t}\n\n\t\t//set the value at the given time\n\t\tthis._events.add({\n\t\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\t\"value\" : valueAtTime,\n\t\t\t\"time\" : time\n\t\t});\n\t\tthis._param.setValueAtTime(valueAtTime, time);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Ramps to the given value over the duration of the rampTime.\n\t *  Automatically selects the best ramp type (exponential or linear)\n\t *  depending on the `units` of the signal\n\t *\n\t *  @param  {number} value\n\t *  @param  {Time} rampTime \tThe time that it takes the\n\t *                              value to ramp from it's current value\n\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n\t *  @returns {Tone.Param} this\n\t *  @example\n\t * //ramp to the value either linearly or exponentially\n\t * //depending on the \"units\" value of the signal\n\t * signal.rampTo(0, 10);\n\t *  @example\n\t * //schedule it to ramp starting at a specific time\n\t * signal.rampTo(0, 10, 5)\n\t */\n\tTone.Param.prototype.rampTo = function(value, rampTime, startTime){\n\t\trampTime = Tone.defaultArg(rampTime, 0.1);\n\t\tif (this.units === Tone.Type.Frequency || this.units === Tone.Type.BPM || this.units === Tone.Type.Decibels){\n\t\t\tthis.exponentialRampTo(value, rampTime, startTime);\n\t\t} else {\n\t\t\tthis.linearRampTo(value, rampTime, startTime);\n\t\t}\n\t\treturn this;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tAUTOMATION CURVE CALCULATIONS\n\t//\tMIT License, copyright (c) 2014 Jordan Santell\n\t///////////////////////////////////////////////////////////////////////////\n\n\t// Calculates the the value along the curve produced by setTargetAtTime\n\tTone.Param.prototype._exponentialApproach = function(t0, v0, v1, timeConstant, t){\n\t\treturn v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n\t};\n\n\t// Calculates the the value along the curve produced by linearRampToValueAtTime\n\tTone.Param.prototype._linearInterpolate = function(t0, v0, t1, v1, t){\n\t\treturn v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n\t};\n\n\t// Calculates the the value along the curve produced by exponentialRampToValueAtTime\n\tTone.Param.prototype._exponentialInterpolate = function(t0, v0, t1, v1, t){\n\t\treturn v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n\t};\n\n\t/**\n\t *  Clean up\n\t *  @returns {Tone.Param} this\n\t */\n\tTone.Param.prototype.dispose = function(){\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis._param = null;\n\t\tthis._events = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Param;\n});\n","var isObject = require('./_is-object');\nvar setPrototypeOf = require('./_set-proto').set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","define([\"../core/Tone\", \"../signal/SignalBase\", \"../shim/WaveShaperNode\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Wraps the native Web Audio API\n\t *         [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n\t *\n\t *  @extends {Tone.SignalBase}\n\t *  @constructor\n\t *  @param {function|Array|Number} mapping The function used to define the values.\n\t *                                    The mapping function should take two arguments:\n\t *                                    the first is the value at the current position\n\t *                                    and the second is the array position.\n\t *                                    If the argument is an array, that array will be\n\t *                                    set as the wave shaping function. The input\n\t *                                    signal is an AudioRange [-1, 1] value and the output\n\t *                                    signal can take on any numerical values.\n\t *\n\t *  @param {Number} [bufferLen=1024] The length of the WaveShaperNode buffer.\n\t *  @example\n\t * var timesTwo = new Tone.WaveShaper(function(val){\n\t * \treturn val * 2;\n\t * }, 2048);\n\t *  @example\n\t * //a waveshaper can also be constructed with an array of values\n\t * var invert = new Tone.WaveShaper([1, -1]);\n\t */\n\tTone.WaveShaper = function(mapping, bufferLen){\n\n\t\tTone.SignalBase.call(this);\n\n\t\t/**\n\t\t *  the waveshaper\n\t\t *  @type {WaveShaperNode}\n\t\t *  @private\n\t\t */\n\t\tthis._shaper = this.input = this.output = this.context.createWaveShaper();\n\n\t\t/**\n\t\t *  the waveshapers curve\n\t\t *  @type {Float32Array}\n\t\t *  @private\n\t\t */\n\t\tthis._curve = null;\n\n\t\tif (Array.isArray(mapping)){\n\t\t\tthis.curve = mapping;\n\t\t} else if (isFinite(mapping) || Tone.isUndef(mapping)){\n\t\t\tthis._curve = new Float32Array(Tone.defaultArg(mapping, 1024));\n\t\t} else if (Tone.isFunction(mapping)){\n\t\t\tthis._curve = new Float32Array(Tone.defaultArg(bufferLen, 1024));\n\t\t\tthis.setMap(mapping);\n\t\t}\n\t};\n\n\tTone.extend(Tone.WaveShaper, Tone.SignalBase);\n\n\t/**\n\t *  Uses a mapping function to set the value of the curve.\n\t *  @param {function} mapping The function used to define the values.\n\t *                            The mapping function take two arguments:\n\t *                            the first is the value at the current position\n\t *                            which goes from -1 to 1 over the number of elements\n\t *                            in the curve array. The second argument is the array position.\n\t *  @returns {Tone.WaveShaper} this\n\t *  @example\n\t * //map the input signal from [-1, 1] to [0, 10]\n\t * shaper.setMap(function(val, index){\n\t * \treturn (val + 1) * 5;\n\t * })\n\t */\n\tTone.WaveShaper.prototype.setMap = function(mapping){\n\t\tvar array = new Array(this._curve.length);\n\t\tfor (var i = 0, len = this._curve.length; i < len; i++){\n\t\t\tvar normalized = (i / (len - 1)) * 2 - 1;\n\t\t\tarray[i] = mapping(normalized, i);\n\t\t}\n\t\tthis.curve = array;\n\t\treturn this;\n\t};\n\n\t/**\n\t * The array to set as the waveshaper curve. For linear curves\n\t * array length does not make much difference, but for complex curves\n\t * longer arrays will provide smoother interpolation.\n\t * @memberOf Tone.WaveShaper#\n\t * @type {Array}\n\t * @name curve\n\t */\n\tObject.defineProperty(Tone.WaveShaper.prototype, \"curve\", {\n\t\tget : function(){\n\t\t\treturn this._shaper.curve;\n\t\t},\n\t\tset : function(mapping){\n\t\t\tthis._curve = new Float32Array(mapping);\n\t\t\tthis._shaper.curve = this._curve;\n\t\t}\n\t});\n\n\t/**\n\t * Specifies what type of oversampling (if any) should be used when\n\t * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\".\n\t * @memberOf Tone.WaveShaper#\n\t * @type {string}\n\t * @name oversample\n\t */\n\tObject.defineProperty(Tone.WaveShaper.prototype, \"oversample\", {\n\t\tget : function(){\n\t\t\treturn this._shaper.oversample;\n\t\t},\n\t\tset : function(oversampling){\n\t\t\tif ([\"none\", \"2x\", \"4x\"].includes(oversampling)){\n\t\t\t\tthis._shaper.oversample = oversampling;\n\t\t\t} else {\n\t\t\t\tthrow new RangeError(\"Tone.WaveShaper: oversampling must be either 'none', '2x', or '4x'\");\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  Clean up.\n\t *  @returns {Tone.WaveShaper} this\n\t */\n\tTone.WaveShaper.prototype.dispose = function(){\n\t\tTone.SignalBase.prototype.dispose.call(this);\n\t\tthis._shaper.disconnect();\n\t\tthis._shaper = null;\n\t\tthis._curve = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.WaveShaper;\n});\n","define([\"../core/Tone\", \"../signal/WaveShaper\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Pow applies an exponent to the incoming signal. The incoming signal\n\t *         must be AudioRange.\n\t *\n\t *  @extends {Tone.SignalBase}\n\t *  @constructor\n\t *  @param {Positive} exp The exponent to apply to the incoming signal, must be at least 2. \n\t *  @example\n\t * var pow = new Tone.Pow(2);\n\t * var sig = new Tone.Signal(0.5).connect(pow);\n\t * //output of pow is 0.25. \n\t */\n\tTone.Pow = function(exp){\n\n\t\tTone.SignalBase.call(this);\n\t\t\n\t\t/**\n\t\t * the exponent\n\t\t * @private\n\t\t * @type {number}\n\t\t */\n\t\tthis._exp = Tone.defaultArg(exp, 1);\n\n\t\t/**\n\t\t *  @type {WaveShaperNode}\n\t\t *  @private\n\t\t */\n\t\tthis._expScaler = this.input = this.output = new Tone.WaveShaper(this._expFunc(this._exp), 8192);\n\t};\n\n\tTone.extend(Tone.Pow, Tone.SignalBase);\n\n\t/**\n\t * The value of the exponent.\n\t * @memberOf Tone.Pow#\n\t * @type {number}\n\t * @name value\n\t */\n\tObject.defineProperty(Tone.Pow.prototype, \"value\", {\n\t\tget : function(){\n\t\t\treturn this._exp;\n\t\t},\n\t\tset : function(exp){\n\t\t\tthis._exp = exp;\n\t\t\tthis._expScaler.setMap(this._expFunc(this._exp));\n\t\t}\n\t});\n\n\t/**\n\t *  the function which maps the waveshaper\n\t *  @param   {number} exp\n\t *  @return {function}\n\t *  @private\n\t */\n\tTone.Pow.prototype._expFunc = function(exp){\n\t\treturn function(val){\n\t\t\treturn Math.pow(Math.abs(val), exp);\n\t\t};\n\t};\n\n\t/**\n\t *  Clean up.\n\t *  @returns {Tone.Pow} this\n\t */\n\tTone.Pow.prototype.dispose = function(){\n\t\tTone.SignalBase.prototype.dispose.call(this);\n\t\tthis._expScaler.dispose();\n\t\tthis._expScaler = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Pow;\n});\n","define([\"../core/Tone\", \"../type/TimeBase\"], function(Tone){\n\n\t/**\n\t *  @class Tone.Frequency is a primitive type for encoding Frequency values.\n\t *         Eventually all time values are evaluated to hertz\n\t *         using the `eval` method.\n\t *  @constructor\n\t *  @extends {Tone.TimeBase}\n\t *  @param  {String|Number}  val    The time value.\n\t *  @param  {String=}  units  The units of the value.\n\t *  @example\n\t * Tone.Frequency(\"C3\") // 261\n\t * Tone.Frequency(38, \"midi\") //\n\t * Tone.Frequency(\"C3\").transpose(4);\n\t */\n\tTone.Frequency = function(val, units){\n\t\tif (this instanceof Tone.Frequency){\n\n\t\t\tTone.TimeBase.call(this, val, units);\n\n\t\t} else {\n\t\t\treturn new Tone.Frequency(val, units);\n\t\t}\n\t};\n\n\tTone.extend(Tone.Frequency, Tone.TimeBase);\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tAUGMENT BASE EXPRESSIONS\n\t///////////////////////////////////////////////////////////////////////////\n\n\tTone.Frequency.prototype._expressions = Object.assign({}, Tone.TimeBase.prototype._expressions, {\n\t\t\"midi\" : {\n\t\t\tregexp : /^(\\d+(?:\\.\\d+)?midi)/,\n\t\t\tmethod : function(value){\n\t\t\t\tif (this._defaultUnits === \"midi\"){\n\t\t\t\t\treturn value;\n\t\t\t\t} else {\n\t\t\t\t\treturn Tone.Frequency.mtof(value);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"note\" : {\n\t\t\tregexp : /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n\t\t\tmethod : function(pitch, octave){\n\t\t\t\tvar index = noteToScaleIndex[pitch.toLowerCase()];\n\t\t\t\tvar noteNumber = index + (parseInt(octave) + 1) * 12;\n\t\t\t\tif (this._defaultUnits === \"midi\"){\n\t\t\t\t\treturn noteNumber;\n\t\t\t\t} else {\n\t\t\t\t\treturn Tone.Frequency.mtof(noteNumber);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tr\" : {\n\t\t\tregexp : /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t\t\tmethod : function(m, q, s){\n\t\t\t\tvar total = 1;\n\t\t\t\tif (m && m !== \"0\"){\n\t\t\t\t\ttotal *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t\t}\n\t\t\t\tif (q && q !== \"0\"){\n\t\t\t\t\ttotal *= this._beatsToUnits(parseFloat(q));\n\t\t\t\t}\n\t\t\t\tif (s && s !== \"0\"){\n\t\t\t\t\ttotal *= this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t\t}\n\t\t\t\treturn total;\n\t\t\t}\n\t\t}\n\t});\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tEXPRESSIONS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Transposes the frequency by the given number of semitones.\n\t *  @param  {Interval}  interval\n\t *  @return  {Tone.Frequency} A new transposed frequency\n\t *  @example\n\t * Tone.Frequency(\"A4\").transpose(3); //\"C5\"\n\t */\n\tTone.Frequency.prototype.transpose = function(interval){\n\t\treturn new this.constructor(this.valueOf() * Tone.intervalToFrequencyRatio(interval));\n\t};\n\n\t/**\n\t *  Takes an array of semitone intervals and returns\n\t *  an array of frequencies transposed by those intervals.\n\t *  @param  {Array}  intervals\n\t *  @return  {Array<Tone.Frequency>} Returns an array of Frequencies\n\t *  @example\n\t * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); //[\"A4\", \"C5\", \"E5\"]\n\t */\n\tTone.Frequency.prototype.harmonize = function(intervals){\n\t\treturn intervals.map(function(interval){\n\t\t\treturn this.transpose(interval);\n\t\t}.bind(this));\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tUNIT CONVERSIONS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Return the value of the frequency as a MIDI note\n\t *  @return  {MIDI}\n\t *  @example\n\t * Tone.Frequency(\"C4\").toMidi(); //60\n\t */\n\tTone.Frequency.prototype.toMidi = function(){\n\t\treturn Tone.Frequency.ftom(this.valueOf());\n\t};\n\n\t/**\n\t *  Return the value of the frequency in Scientific Pitch Notation\n\t *  @return  {Note}\n\t *  @example\n\t * Tone.Frequency(69, \"midi\").toNote(); //\"A4\"\n\t */\n\tTone.Frequency.prototype.toNote = function(){\n\t\tvar freq = this.toFrequency();\n\t\tvar log = Math.log2(freq / Tone.Frequency.A4);\n\t\tvar noteNumber = Math.round(12 * log) + 57;\n\t\tvar octave = Math.floor(noteNumber/12);\n\t\tif (octave < 0){\n\t\t\tnoteNumber += -12 * octave;\n\t\t}\n\t\tvar noteName = scaleIndexToNote[noteNumber % 12];\n\t\treturn noteName + octave.toString();\n\t};\n\n\t/**\n\t *  Return the duration of one cycle in seconds.\n\t *  @return  {Seconds}\n\t */\n\tTone.Frequency.prototype.toSeconds = function(){\n\t\treturn 1 / Tone.TimeBase.prototype.toSeconds.call(this);\n\t};\n\n\t/**\n\t *  Return the value in Hertz\n\t *  @return  {Frequency}\n\t */\n\tTone.Frequency.prototype.toFrequency = function(){\n\t\treturn Tone.TimeBase.prototype.toFrequency.call(this);\n\t};\n\n\t/**\n\t *  Return the duration of one cycle in ticks\n\t *  @return  {Ticks}\n\t */\n\tTone.Frequency.prototype.toTicks = function(){\n\t\tvar quarterTime = this._beatsToUnits(1);\n\t\tvar quarters = this.valueOf() / quarterTime;\n\t\treturn Math.floor(quarters * Tone.Transport.PPQ);\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tUNIT CONVERSIONS HELPERS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  With no arguments, return 0\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.Frequency.prototype._noArg = function(){\n\t\treturn 0;\n\t};\n\n\t/**\n\t *  Returns the value of a frequency in the current units\n\t *  @param {Frequency} freq\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.Frequency.prototype._frequencyToUnits = function(freq){\n\t\treturn freq;\n\t};\n\n\t/**\n\t *  Returns the value of a tick in the current time units\n\t *  @param {Ticks} ticks\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.Frequency.prototype._ticksToUnits = function(ticks){\n\t\treturn 1 / ((ticks * 60) / (Tone.Transport.bpm.value * Tone.Transport.PPQ));\n\t};\n\n\t/**\n\t *  Return the value of the beats in the current units\n\t *  @param {Number} beats\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.Frequency.prototype._beatsToUnits = function(beats){\n\t\treturn 1 / Tone.TimeBase.prototype._beatsToUnits.call(this, beats);\n\t};\n\n\t/**\n\t *  Returns the value of a second in the current units\n\t *  @param {Seconds} seconds\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.Frequency.prototype._secondsToUnits = function(seconds){\n\t\treturn 1 / seconds;\n\t};\n\n\t/**\n\t *  The default units if none are given.\n\t *  @private\n\t */\n\tTone.Frequency.prototype._defaultUnits = \"hz\";\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tFREQUENCY CONVERSIONS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Note to scale index\n\t *  @type  {Object}\n\t */\n\tvar noteToScaleIndex = {\n\t\t\"cbb\" : -2, \"cb\" : -1, \"c\" : 0, \"c#\" : 1, \"cx\" : 2,\n\t\t\"dbb\" : 0, \"db\" : 1, \"d\" : 2, \"d#\" : 3, \"dx\" : 4,\n\t\t\"ebb\" : 2, \"eb\" : 3, \"e\" : 4, \"e#\" : 5, \"ex\" : 6,\n\t\t\"fbb\" : 3, \"fb\" : 4, \"f\" : 5, \"f#\" : 6, \"fx\" : 7,\n\t\t\"gbb\" : 5, \"gb\" : 6, \"g\" : 7, \"g#\" : 8, \"gx\" : 9,\n\t\t\"abb\" : 7, \"ab\" : 8, \"a\" : 9, \"a#\" : 10, \"ax\" : 11,\n\t\t\"bbb\" : 9, \"bb\" : 10, \"b\" : 11, \"b#\" : 12, \"bx\" : 13,\n\t};\n\n\t/**\n\t *  scale index to note (sharps)\n\t *  @type  {Array}\n\t */\n\tvar scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n\n\t/**\n\t *  The [concert pitch](https://en.wikipedia.org/wiki/Concert_pitch)\n\t *  A4's values in Hertz.\n\t *  @type {Frequency}\n\t *  @static\n\t */\n\tTone.Frequency.A4 = 440;\n\n\t/**\n\t *  Convert a MIDI note to frequency value.\n\t *  @param  {MIDI} midi The midi number to convert.\n\t *  @return {Frequency} the corresponding frequency value\n\t *  @static\n\t *  @example\n\t * Tone.Frequency.mtof(69); // returns 440\n\t */\n\tTone.Frequency.mtof = function(midi){\n\t\treturn Tone.Frequency.A4 * Math.pow(2, (midi - 69) / 12);\n\t};\n\n\t/**\n\t *  Convert a frequency value to a MIDI note.\n\t *  @param {Frequency} frequency The value to frequency value to convert.\n\t *  @returns  {MIDI}\n\t *  @static\n\t *  @example\n\t * Tone.Frequency.ftom(440); // returns 69\n\t */\n\tTone.Frequency.ftom = function(frequency){\n\t\treturn 69 + Math.round(12 * Math.log2(frequency / Tone.Frequency.A4));\n\t};\n\n\treturn Tone.Frequency;\n});\n","define([\"../core/Tone\", \"../source/Source\", \"../source/Oscillator\",\n\t\"../signal/Signal\", \"../signal/WaveShaper\", \"../core/Gain\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.PulseOscillator is a pulse oscillator with control over pulse width,\n\t *         also known as the duty cycle. At 50% duty cycle (width = 0.5) the wave is\n\t *         a square and only odd-numbered harmonics are present. At all other widths\n\t *         even-numbered harmonics are present. Read more\n\t *         [here](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n\t *\n\t *  @constructor\n\t *  @extends {Tone.Source}\n\t *  @param {Frequency} [frequency] The frequency of the oscillator\n\t *  @param {NormalRange} [width] The width of the pulse\n\t *  @example\n\t * var pulse = new Tone.PulseOscillator(\"E5\", 0.4).toMaster().start();\n\t */\n\tTone.PulseOscillator = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"frequency\", \"width\"], Tone.Oscillator);\n\t\tTone.Source.call(this, options);\n\n\t\t/**\n\t\t *  The width of the pulse.\n\t\t *  @type {NormalRange}\n\t\t *  @signal\n\t\t */\n\t\tthis.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\n\t\t/**\n\t\t *  gate the width amount\n\t\t *  @type {Tone.Gain}\n\t\t *  @private\n\t\t */\n\t\tthis._widthGate = new Tone.Gain(0);\n\n\t\t/**\n\t\t *  the sawtooth oscillator\n\t\t *  @type {Tone.Oscillator}\n\t\t *  @private\n\t\t */\n\t\tthis._sawtooth = new Tone.Oscillator({\n\t\t\tfrequency : options.frequency,\n\t\t\tdetune : options.detune,\n\t\t\ttype : \"sawtooth\",\n\t\t\tphase : options.phase\n\t\t});\n\n\t\t/**\n\t\t *  The frequency control.\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = this._sawtooth.frequency;\n\n\t\t/**\n\t\t *  The detune in cents.\n\t\t *  @type {Cents}\n\t\t *  @signal\n\t\t */\n\t\tthis.detune = this._sawtooth.detune;\n\n\t\t/**\n\t\t *  Threshold the signal to turn it into a square\n\t\t *  @type {Tone.WaveShaper}\n\t\t *  @private\n\t\t */\n\t\tthis._thresh = new Tone.WaveShaper(function(val){\n\t\t\tif (val < 0){\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t});\n\n\t\t//connections\n\t\tthis._sawtooth.chain(this._thresh, this.output);\n\t\tthis.width.chain(this._widthGate, this._thresh);\n\t\tthis._readOnly([\"width\", \"frequency\", \"detune\"]);\n\t};\n\n\tTone.extend(Tone.PulseOscillator, Tone.Source);\n\n\t/**\n\t *  The default parameters.\n\t *  @static\n\t *  @const\n\t *  @type {Object}\n\t */\n\tTone.PulseOscillator.defaults = {\n\t\t\"frequency\" : 440,\n\t\t\"detune\" : 0,\n\t\t\"phase\" : 0,\n\t\t\"width\" : 0.2,\n\t};\n\n\t/**\n\t *  start the oscillator\n\t *  @param  {Time} time\n\t *  @private\n\t */\n\tTone.PulseOscillator.prototype._start = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._sawtooth.start(time);\n\t\tthis._widthGate.gain.setValueAtTime(1, time);\n\t};\n\n\t/**\n\t *  stop the oscillator\n\t *  @param  {Time} time\n\t *  @private\n\t */\n\tTone.PulseOscillator.prototype._stop = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._sawtooth.stop(time);\n\t\t//the width is still connected to the output.\n\t\t//that needs to be stopped also\n\t\tthis._widthGate.gain.setValueAtTime(0, time);\n\t};\n\n\t/**\n\t *  restart the oscillator\n\t *  @param  {Time} time (optional) timing parameter\n\t *  @private\n\t */\n\tTone.PulseOscillator.prototype.restart = function(time){\n\t\tthis._sawtooth.restart(time);\n\t\tthis._widthGate.gain.cancelScheduledValues(time);\n\t\tthis._widthGate.gain.setValueAtTime(1, time);\n\t};\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t * @memberOf Tone.PulseOscillator#\n\t * @type {Degrees}\n\t * @name phase\n\t */\n\tObject.defineProperty(Tone.PulseOscillator.prototype, \"phase\", {\n\t\tget : function(){\n\t\t\treturn this._sawtooth.phase;\n\t\t},\n\t\tset : function(phase){\n\t\t\tthis._sawtooth.phase = phase;\n\t\t}\n\t});\n\n\t/**\n\t * The type of the oscillator. Always returns \"pulse\".\n\t * @readOnly\n\t * @memberOf Tone.PulseOscillator#\n\t * @type {string}\n\t * @name type\n\t */\n\tObject.defineProperty(Tone.PulseOscillator.prototype, \"type\", {\n\t\tget : function(){\n\t\t\treturn \"pulse\";\n\t\t}\n\t});\n\n\t/**\n\t * The baseType of the oscillator. Always returns \"pulse\".\n\t * @readOnly\n\t * @memberOf Tone.PulseOscillator#\n\t * @type {string}\n\t * @name baseType\n\t */\n\tObject.defineProperty(Tone.PulseOscillator.prototype, \"baseType\", {\n\t\tget : function(){\n\t\t\treturn \"pulse\";\n\t\t}\n\t});\n\n\t/**\n\t * The partials of the waveform. Cannot set partials for this waveform type\n\t * @memberOf Tone.PulseOscillator#\n\t * @type {Array}\n\t * @name partials\n\t * @private\n\t */\n\tObject.defineProperty(Tone.PulseOscillator.prototype, \"partials\", {\n\t\tget : function(){\n\t\t\treturn [];\n\t\t}\n\t});\n\n\t/**\n\t *  Clean up method.\n\t *  @return {Tone.PulseOscillator} this\n\t */\n\tTone.PulseOscillator.prototype.dispose = function(){\n\t\tTone.Source.prototype.dispose.call(this);\n\t\tthis._sawtooth.dispose();\n\t\tthis._sawtooth = null;\n\t\tthis._writable([\"width\", \"frequency\", \"detune\"]);\n\t\tthis.width.dispose();\n\t\tthis.width = null;\n\t\tthis._widthGate.dispose();\n\t\tthis._widthGate = null;\n\t\tthis._thresh.dispose();\n\t\tthis._thresh = null;\n\t\tthis.frequency = null;\n\t\tthis.detune = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.PulseOscillator;\n});\n","define([\"../core/Tone\", \"../core/Emitter\", \"../type/Type\", \"../shim/AudioBuffer\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Buffer loading and storage. Tone.Buffer is used internally by all\n\t *          classes that make requests for audio files such as Tone.Player,\n\t *          Tone.Sampler and Tone.Convolver.\n\t *\n\t *          Aside from load callbacks from individual buffers, Tone.Buffer\n\t *  \t\tprovides events which keep track of the loading progress\n\t *  \t\tof _all_ of the buffers. These are Tone.Buffer.on(\"load\" / \"progress\" / \"error\")\n\t *\n\t *  @constructor\n\t *  @extends {Tone}\n\t *  @param {AudioBuffer|String} url The url to load, or the audio buffer to set.\n\t *  @param {Function=} onload A callback which is invoked after the buffer is loaded.\n\t *                            It's recommended to use `Tone.Buffer.on('load', callback)` instead\n\t *                            since it will give you a callback when _all_ buffers are loaded.\n\t *  @param {Function=} onerror The callback to invoke if there is an error\n\t *  @example\n\t * var buffer = new Tone.Buffer(\"path/to/sound.mp3\", function(){\n\t * \t//the buffer is now available.\n\t * \tvar buff = buffer.get();\n\t * });\n\t *  @example\n\t * //can load provide fallback extension types if the first type is not supported.\n\t * var buffer = new Tone.Buffer(\"path/to/sound.[mp3|ogg|wav]\");\n\t */\n\tTone.Buffer = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"url\", \"onload\", \"onerror\"], Tone.Buffer);\n\t\tTone.call(this);\n\n\t\t/**\n\t\t *  stores the loaded AudioBuffer\n\t\t *  @type {AudioBuffer}\n\t\t *  @private\n\t\t */\n\t\tthis._buffer = null;\n\n\t\t/**\n\t\t *  indicates if the buffer should be reversed or not\n\t\t *  @type {Boolean}\n\t\t *  @private\n\t\t */\n\t\tthis._reversed = options.reverse;\n\n\t\t/**\n\t\t *  The XHR\n\t\t *  @type  {XMLHttpRequest}\n\t\t *  @private\n\t\t */\n\t\tthis._xhr = null;\n\n\t\t/**\n\t\t * Private callback when the buffer is loaded.\n\t\t * @type {Function}\n\t\t * @private\n\t\t */\n\t\tthis.onload = Tone.noOp;\n\n\t\tif (options.url instanceof AudioBuffer || options.url instanceof Tone.Buffer){\n\t\t\tthis.set(options.url);\n\t\t\tif (!this.loaded){\n\t\t\t\tthis.onload = options.onload;\n\t\t\t}\n\t\t} else if (Tone.isString(options.url)){\n\t\t\tthis.load(options.url).then(options.onload).catch(options.onerror);\n\t\t}\n\t};\n\n\tTone.extend(Tone.Buffer);\n\n\t/**\n\t *  the default parameters\n\t *  @type {Object}\n\t */\n\tTone.Buffer.defaults = {\n\t\t\"url\" : undefined,\n\t\t\"reverse\" : false,\n\t\t\"onload\" : Tone.noOp,\n\t\t\"onerror\" : Tone.noOp\n\t};\n\n\t/**\n\t *  Pass in an AudioBuffer or Tone.Buffer to set the value\n\t *  of this buffer.\n\t *  @param {AudioBuffer|Tone.Buffer} buffer the buffer\n\t *  @returns {Tone.Buffer} this\n\t */\n\tTone.Buffer.prototype.set = function(buffer){\n\t\tif (buffer instanceof Tone.Buffer){\n\t\t\t//if it's loaded, set it\n\t\t\tif (buffer.loaded){\n\t\t\t\tthis._buffer = buffer.get();\n\t\t\t} else {\n\t\t\t\t//otherwise when it's loaded, invoke it's callback\n\t\t\t\tbuffer.onload = function(){\n\t\t\t\t\tthis.set(buffer);\n\t\t\t\t\tthis.onload(this);\n\t\t\t\t}.bind(this);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._buffer = buffer;\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  @return {AudioBuffer} The audio buffer stored in the object.\n\t */\n\tTone.Buffer.prototype.get = function(){\n\t\treturn this._buffer;\n\t};\n\n\t/**\n\t *  Makes an xhr reqest for the selected url then decodes\n\t *  the file as an audio buffer. Invokes\n\t *  the callback once the audio buffer loads.\n\t *  @param {String} url The url of the buffer to load.\n\t *                      filetype support depends on the\n\t *                      browser.\n\t *  @returns {Promise} returns a Promise which resolves with the Tone.Buffer\n\t */\n\tTone.Buffer.prototype.load = function(url, onload, onerror){\n\n\t\tvar promise = new Promise(function(load, error){\n\n\t\t\tthis._xhr = Tone.Buffer.load(url,\n\n\t\t\t\t//success\n\t\t\t\tfunction(buff){\n\t\t\t\t\tthis._xhr = null;\n\t\t\t\t\tthis.set(buff);\n\t\t\t\t\tload(this);\n\t\t\t\t\tthis.onload(this);\n\t\t\t\t\tif (onload){\n\t\t\t\t\t\tonload(this);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this),\n\n\t\t\t\t//error\n\t\t\t\tfunction(err){\n\t\t\t\t\tthis._xhr = null;\n\t\t\t\t\terror(err);\n\t\t\t\t\tif (onerror){\n\t\t\t\t\t\tonerror(err);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this));\n\n\t\t}.bind(this));\n\n\t\treturn promise;\n\t};\n\n\t/**\n\t *  dispose and disconnect\n\t *  @returns {Tone.Buffer} this\n\t */\n\tTone.Buffer.prototype.dispose = function(){\n\t\tTone.prototype.dispose.call(this);\n\t\tthis._buffer = null;\n\t\tif (this._xhr){\n\t\t\tTone.Buffer._removeFromDownloadQueue(this._xhr);\n\t\t\tthis._xhr.abort();\n\t\t\tthis._xhr = null;\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * If the buffer is loaded or not\n\t * @memberOf Tone.Buffer#\n\t * @type {Boolean}\n\t * @name loaded\n\t * @readOnly\n\t */\n\tObject.defineProperty(Tone.Buffer.prototype, \"loaded\", {\n\t\t\"get\" : function(){\n\t\t\treturn this.length > 0;\n\t\t},\n\t});\n\n\t/**\n\t * The duration of the buffer.\n\t * @memberOf Tone.Buffer#\n\t * @type {Number}\n\t * @name duration\n\t * @readOnly\n\t */\n\tObject.defineProperty(Tone.Buffer.prototype, \"duration\", {\n\t\t\"get\" : function(){\n\t\t\tif (this._buffer){\n\t\t\t\treturn this._buffer.duration;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t});\n\n\t/**\n\t * The length of the buffer in samples\n\t * @memberOf Tone.Buffer#\n\t * @type {Number}\n\t * @name length\n\t * @readOnly\n\t */\n\tObject.defineProperty(Tone.Buffer.prototype, \"length\", {\n\t\t\"get\" : function(){\n\t\t\tif (this._buffer){\n\t\t\t\treturn this._buffer.length;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t});\n\n\t/**\n\t * The number of discrete audio channels. Returns 0 if no buffer\n\t * is loaded.\n\t * @memberOf Tone.Buffer#\n\t * @type {Number}\n\t * @name numberOfChannels\n\t * @readOnly\n\t */\n\tObject.defineProperty(Tone.Buffer.prototype, \"numberOfChannels\", {\n\t\t\"get\" : function(){\n\t\t\tif (this._buffer){\n\t\t\t\treturn this._buffer.numberOfChannels;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t});\n\n\t/**\n\t *  Set the audio buffer from the array. To create a multichannel AudioBuffer,\n\t *  pass in a multidimensional array.\n\t *  @param {Float32Array} array The array to fill the audio buffer\n\t *  @return {Tone.Buffer} this\n\t */\n\tTone.Buffer.prototype.fromArray = function(array){\n\t\tvar isMultidimensional = array[0].length > 0;\n\t\tvar channels = isMultidimensional ? array.length : 1;\n\t\tvar len = isMultidimensional ? array[0].length : array.length;\n\t\tvar buffer = this.context.createBuffer(channels, len, this.context.sampleRate);\n\t\tif (!isMultidimensional && channels === 1){\n\t\t\tarray = [array];\n\t\t}\n\t\tfor (var c = 0; c < channels; c++){\n\t\t\tbuffer.copyToChannel(array[c], c);\n\t\t}\n\t\tthis._buffer = buffer;\n\t\treturn this;\n\t};\n\n\t/**\n\t * \tSums muliple channels into 1 channel\n\t *  @param {Number=} channel Optionally only copy a single channel from the array.\n\t *  @return {Array}\n\t */\n\tTone.Buffer.prototype.toMono = function(chanNum){\n\t\tif (Tone.isNumber(chanNum)){\n\t\t\tthis.fromArray(this.toArray(chanNum));\n\t\t} else {\n\t\t\tvar outputArray = new Float32Array(this.length);\n\t\t\tvar numChannels = this.numberOfChannels;\n\t\t\tfor (var channel = 0; channel < numChannels; channel++){\n\t\t\t\tvar channelArray = this.toArray(channel);\n\t\t\t\tfor (var i = 0; i < channelArray.length; i++){\n\t\t\t\t\toutputArray[i] += channelArray[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\t//divide by the number of channels\n\t\t\toutputArray = outputArray.map(function(sample){\n\t\t\t\treturn sample / numChannels;\n\t\t\t});\n\t\t\tthis.fromArray(outputArray);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * \tGet the buffer as an array. Single channel buffers will return a 1-dimensional\n\t * \tFloat32Array, and multichannel buffers will return multidimensional arrays.\n\t *  @param {Number=} channel Optionally only copy a single channel from the array.\n\t *  @return {Array}\n\t */\n\tTone.Buffer.prototype.toArray = function(channel){\n\t\tif (Tone.isNumber(channel)){\n\t\t\treturn this.getChannelData(channel);\n\t\t} else if (this.numberOfChannels === 1){\n\t\t\treturn this.toArray(0);\n\t\t} else {\n\t\t\tvar ret = [];\n\t\t\tfor (var c = 0; c < this.numberOfChannels; c++){\n\t\t\t\tret[c] = this.getChannelData(c);\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n\n\t/**\n\t *  Returns the Float32Array representing the PCM audio data for the specific channel.\n\t *  @param  {Number}  channel  The channel number to return\n\t *  @return  {Float32Array}  The audio as a TypedArray\n\t */\n\tTone.Buffer.prototype.getChannelData = function(channel){\n\t\treturn this._buffer.getChannelData(channel);\n\t};\n\n\t/**\n\t *  Cut a subsection of the array and return a buffer of the\n\t *  subsection. Does not modify the original buffer\n\t *  @param {Time} start The time to start the slice\n\t *  @param {Time=} end The end time to slice. If none is given\n\t *                     will default to the end of the buffer\n\t *  @return {Tone.Buffer} this\n\t */\n\tTone.Buffer.prototype.slice = function(start, end){\n\t\tend = Tone.defaultArg(end, this.duration);\n\t\tvar startSamples = Math.floor(this.context.sampleRate * this.toSeconds(start));\n\t\tvar endSamples = Math.floor(this.context.sampleRate * this.toSeconds(end));\n\t\tvar replacement = [];\n\t\tfor (var i = 0; i < this.numberOfChannels; i++){\n\t\t\treplacement[i] = this.toArray(i).slice(startSamples, endSamples);\n\t\t}\n\t\tvar retBuffer = new Tone.Buffer().fromArray(replacement);\n\t\treturn retBuffer;\n\t};\n\n\t/**\n\t *  Reverse the buffer.\n\t *  @private\n\t *  @return {Tone.Buffer} this\n\t */\n\tTone.Buffer.prototype._reverse = function(){\n\t\tif (this.loaded){\n\t\t\tfor (var i = 0; i < this.numberOfChannels; i++){\n\t\t\t\tArray.prototype.reverse.call(this.getChannelData(i));\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Reverse the buffer.\n\t * @memberOf Tone.Buffer#\n\t * @type {Boolean}\n\t * @name reverse\n\t */\n\tObject.defineProperty(Tone.Buffer.prototype, \"reverse\", {\n\t\t\"get\" : function(){\n\t\t\treturn this._reversed;\n\t\t},\n\t\t\"set\" : function(rev){\n\t\t\tif (this._reversed !== rev){\n\t\t\t\tthis._reversed = rev;\n\t\t\t\tthis._reverse();\n\t\t\t}\n\t\t},\n\t});\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// STATIC METHODS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t//statically inherits Emitter methods\n\tTone.Emitter.mixin(Tone.Buffer);\n\n\t/**\n\t *  the static queue for all of the xhr requests\n\t *  @type {Array}\n\t *  @private\n\t */\n\tTone.Buffer._downloadQueue = [];\n\n\t/**\n\t *  A path which is prefixed before every url.\n\t *  @type  {String}\n\t *  @static\n\t */\n\tTone.Buffer.baseUrl = \"\";\n\n\t/**\n\t *  Create a Tone.Buffer from the array. To create a multichannel AudioBuffer,\n\t *  pass in a multidimensional array.\n\t *  @param {Float32Array} array The array to fill the audio buffer\n\t *  @return {Tone.Buffer} A Tone.Buffer created from the array\n\t */\n\tTone.Buffer.fromArray = function(array){\n\t\treturn (new Tone.Buffer()).fromArray(array);\n\t};\n\n\t/**\n\t * Creates a Tone.Buffer from a URL, returns a promise\n\t * which resolves to a Tone.Buffer\n\t * @param  {String} url The url to load.\n\t * @return {Promise<Tone.Buffer>}     A promise which resolves to a Tone.Buffer\n\t */\n\tTone.Buffer.fromUrl = function(url){\n\t\tvar buffer = new Tone.Buffer();\n\t\treturn buffer.load(url).then(function(){\n\t\t\treturn buffer;\n\t\t});\n\t};\n\n\t/**\n\t * Remove an xhr request from the download queue\n\t * @private\n\t */\n\tTone.Buffer._removeFromDownloadQueue = function(request){\n\t\tvar index = Tone.Buffer._downloadQueue.indexOf(request);\n\t\tif (index !== -1){\n\t\t\tTone.Buffer._downloadQueue.splice(index, 1);\n\t\t}\n\t};\n\n\t/**\n\t *  Loads a url using XMLHttpRequest.\n\t *  @param {String} url\n\t *  @param {Function} onload\n\t *  @param {Function} onerror\n\t *  @param {Function} onprogress\n\t *  @return {XMLHttpRequest}\n\t */\n\tTone.Buffer.load = function(url, onload, onerror){\n\t\t//default\n\t\tonload = Tone.defaultArg(onload, Tone.noOp);\n\n\t\t// test if the url contains multiple extensions\n\t\tvar matches = url.match(/\\[(.+\\|?)+\\]$/);\n\t\tif (matches){\n\t\t\tvar extensions = matches[1].split(\"|\");\n\t\t\tvar extension = extensions[0];\n\t\t\tfor (var i = 0; i < extensions.length; i++){\n\t\t\t\tif (Tone.Buffer.supportsType(extensions[i])){\n\t\t\t\t\textension = extensions[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\turl = url.replace(matches[0], extension);\n\t\t}\n\n\t\tfunction onError(e){\n\t\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\t\tTone.Buffer.emit(\"error\", e);\n\t\t\tif (onerror){\n\t\t\t\tonerror(e);\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\n\t\tfunction onProgress(){\n\t\t\t//calculate the progress\n\t\t\tvar totalProgress = 0;\n\t\t\tfor (var i = 0; i < Tone.Buffer._downloadQueue.length; i++){\n\t\t\t\ttotalProgress += Tone.Buffer._downloadQueue[i].progress;\n\t\t\t}\n\t\t\tTone.Buffer.emit(\"progress\", totalProgress / Tone.Buffer._downloadQueue.length);\n\t\t}\n\n\t\tvar request = new XMLHttpRequest();\n\t\trequest.open(\"GET\", Tone.Buffer.baseUrl + url, true);\n\t\trequest.responseType = \"arraybuffer\";\n\t\t//start out as 0\n\t\trequest.progress = 0;\n\n\t\tTone.Buffer._downloadQueue.push(request);\n\n\t\trequest.addEventListener(\"load\", function(){\n\n\t\t\tif (request.status === 200){\n\t\t\t\tTone.context.decodeAudioData(request.response).then(function(buff){\n\n\t\t\t\t\trequest.progress = 1;\n\t\t\t\t\tonProgress();\n\t\t\t\t\tonload(buff);\n\n\t\t\t\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\t\t\t\tif (Tone.Buffer._downloadQueue.length === 0){\n\t\t\t\t\t\t//emit the event at the end\n\t\t\t\t\t\tTone.Buffer.emit(\"load\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(function(){\n\t\t\t\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\t\t\t\tonError(\"Tone.Buffer: could not decode audio data: \"+url);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tonError(\"Tone.Buffer: could not locate file: \"+url);\n\t\t\t}\n\t\t});\n\t\trequest.addEventListener(\"error\", onError);\n\n\t\trequest.addEventListener(\"progress\", function(event){\n\t\t\tif (event.lengthComputable){\n\t\t\t\t//only go to 95%, the last 5% is when the audio is decoded\n\t\t\t\trequest.progress = (event.loaded / event.total) * 0.95;\n\t\t\t\tonProgress();\n\t\t\t}\n\t\t});\n\n\t\trequest.send();\n\n\t\treturn request;\n\t};\n\n\t/**\n\t *  Stop all of the downloads in progress\n\t *  @return {Tone.Buffer}\n\t *  @static\n\t */\n\tTone.Buffer.cancelDownloads = function(){\n\t\tTone.Buffer._downloadQueue.slice().forEach(function(request){\n\t\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\t\trequest.abort();\n\t\t});\n\t\treturn Tone.Buffer;\n\t};\n\n\t/**\n\t *  Checks a url's extension to see if the current browser can play that file type.\n\t *  @param {String} url The url/extension to test\n\t *  @return {Boolean} If the file extension can be played\n\t *  @static\n\t *  @example\n\t * Tone.Buffer.supportsType(\"wav\"); //returns true\n\t * Tone.Buffer.supportsType(\"path/to/file.wav\"); //returns true\n\t */\n\tTone.Buffer.supportsType = function(url){\n\t\tvar extension = url.split(\".\");\n\t\textension = extension[extension.length - 1];\n\t\tvar response = document.createElement(\"audio\").canPlayType(\"audio/\"+extension);\n\t\treturn response !== \"\";\n\t};\n\n\t/**\n\t *  Returns a Promise which resolves when all of the buffers have loaded\n\t *  @return {Promise}\n\t */\n\tTone.loaded = function(){\n\t\tvar onload, onerror;\n\t\tfunction removeEvents(){\n\t\t\t//remove the events when it's resolved\n\t\t\tTone.Buffer.off(\"load\", onload);\n\t\t\tTone.Buffer.off(\"error\", onerror);\n\t\t}\n\t\treturn new Promise(function(success, fail){\n\t\t\tonload = function(){\n\t\t\t\tsuccess();\n\t\t\t};\n\t\t\tonerror = function(){\n\t\t\t\tfail();\n\t\t\t};\n\t\t\t//add the event listeners\n\t\t\tTone.Buffer.on(\"load\", onload);\n\t\t\tTone.Buffer.on(\"error\", onerror);\n\t\t}).then(removeEvents).catch(function(e){\n\t\t\tremoveEvents();\n\t\t\tthrow new Error(e);\n\t\t});\n\t};\n\n\treturn Tone.Buffer;\n});\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","define([\"../core/Tone\", \"../source/Source\", \"../source/Oscillator\", \"../signal/Multiply\",\n\t\"../core/Gain\", \"../signal/AudioToGain\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.AMOscillator\n\t *\n\t *  @extends {Tone.Oscillator}\n\t *  @constructor\n\t *  @param {Frequency} frequency The starting frequency of the oscillator.\n\t *  @param {String} type The type of the carrier oscillator.\n\t *  @param {String} modulationType The type of the modulator oscillator.\n\t *  @example\n\t * //a sine oscillator frequency-modulated by a square wave\n\t * var fmOsc = new Tone.AMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t */\n\tTone.AMOscillator = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"modulationType\"], Tone.AMOscillator);\n\t\tTone.Source.call(this, options);\n\n\t\t/**\n\t\t *  The carrier oscillator\n\t\t *  @type {Tone.Oscillator}\n\t\t *  @private\n\t\t */\n\t\tthis._carrier = new Tone.Oscillator(options.frequency, options.type);\n\n\t\t/**\n\t\t *  The oscillator's frequency\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = this._carrier.frequency;\n\n\t\t/**\n\t\t *  The detune control signal.\n\t\t *  @type {Cents}\n\t\t *  @signal\n\t\t */\n\t\tthis.detune = this._carrier.detune;\n\t\tthis.detune.value = options.detune;\n\n\t\t/**\n\t\t *  The modulating oscillator\n\t\t *  @type  {Tone.Oscillator}\n\t\t *  @private\n\t\t */\n\t\tthis._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\n\t\t/**\n\t\t *  convert the -1,1 output to 0,1\n\t\t *  @type {Tone.AudioToGain}\n\t\t *  @private\n\t\t */\n\t\tthis._modulationScale = new Tone.AudioToGain();\n\n\t\t/**\n\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t\t *  A harmonicity of 1 gives both oscillators the same frequency.\n\t\t *  Harmonicity = 2 means a change of an octave.\n\t\t *  @type {Positive}\n\t\t *  @signal\n\t\t *  @example\n\t\t * //pitch the modulator an octave below carrier\n\t\t * synth.harmonicity.value = 0.5;\n\t\t */\n\t\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\t\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t\t/**\n\t\t *  the node where the modulation happens\n\t\t *  @type {Tone.Gain}\n\t\t *  @private\n\t\t */\n\t\tthis._modulationNode = new Tone.Gain(0);\n\n\t\t//connections\n\t\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\tthis.detune.connect(this._modulator.detune);\n\t\tthis._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t\tthis._carrier.chain(this._modulationNode, this.output);\n\n\t\tthis.phase = options.phase;\n\n\t\tthis._readOnly([\"frequency\", \"detune\", \"harmonicity\"]);\n\t};\n\n\tTone.extend(Tone.AMOscillator, Tone.Oscillator);\n\n\t/**\n\t *  default values\n\t *  @static\n\t *  @type {Object}\n\t *  @const\n\t */\n\tTone.AMOscillator.defaults = {\n\t\t\"frequency\" : 440,\n\t\t\"detune\" : 0,\n\t\t\"phase\" : 0,\n\t\t\"type\" : \"sine\",\n\t\t\"modulationType\" : \"square\",\n\t\t\"harmonicity\" : 1\n\t};\n\n\t/**\n\t *  start the oscillator\n\t *  @param  {Time} [time=now]\n\t *  @private\n\t */\n\tTone.AMOscillator.prototype._start = function(time){\n\t\tthis._modulator.start(time);\n\t\tthis._carrier.start(time);\n\t};\n\n\t/**\n\t *  stop the oscillator\n\t *  @param  {Time} time (optional) timing parameter\n\t *  @private\n\t */\n\tTone.AMOscillator.prototype._stop = function(time){\n\t\tthis._modulator.stop(time);\n\t\tthis._carrier.stop(time);\n\t};\n\n\t/**\n\t *  restart the oscillator\n\t *  @param  {Time} time (optional) timing parameter\n\t *  @private\n\t */\n\tTone.AMOscillator.prototype.restart = function(time){\n\t\tthis._modulator.restart(time);\n\t\tthis._carrier.restart(time);\n\t};\n\n\t/**\n\t * The type of the carrier oscillator\n\t * @memberOf Tone.AMOscillator#\n\t * @type {string}\n\t * @name type\n\t */\n\tObject.defineProperty(Tone.AMOscillator.prototype, \"type\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.type;\n\t\t},\n\t\tset : function(type){\n\t\t\tthis._carrier.type = type;\n\t\t}\n\t});\n\n\t/**\n\t * The oscillator type without the partialsCount appended to the end\n\t * @memberOf Tone.AMOscillator#\n\t * @type {string}\n\t * @name baseType\n\t * @example\n\t * osc.type = 'sine2'\n\t * osc.baseType //'sine'\n\t * osc.partialCount = 2\n\t */\n\tObject.defineProperty(Tone.AMOscillator.prototype, \"baseType\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.baseType;\n\t\t},\n\t\tset : function(baseType){\n\t\t\tthis._carrier.baseType = baseType;\n\t\t}\n\t});\n\n\t/**\n\t * 'partialCount' offers an alternative way to set the number of used partials. \n\t * When partialCount is 0, the maximum number of partials are used when representing\n\t * the waveform using the periodicWave. When 'partials' is set, this value is \n\t * not settable, but equals the length of the partials array.\n\t * @memberOf Tone.AMOscillator#\n\t * @type {Number}\n\t * @name partialCount\n\t */\n\tObject.defineProperty(Tone.AMOscillator.prototype, \"partialCount\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.partialCount;\n\t\t},\n\t\tset : function(partialCount){\n\t\t\tthis._carrier.partialCount = partialCount;\n\t\t}\n\t});\n\n\t/**\n\t * The type of the modulator oscillator\n\t * @memberOf Tone.AMOscillator#\n\t * @type {string}\n\t * @name modulationType\n\t */\n\tObject.defineProperty(Tone.AMOscillator.prototype, \"modulationType\", {\n\t\tget : function(){\n\t\t\treturn this._modulator.type;\n\t\t},\n\t\tset : function(type){\n\t\t\tthis._modulator.type = type;\n\t\t}\n\t});\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t * @memberOf Tone.AMOscillator#\n\t * @type {number}\n\t * @name phase\n\t */\n\tObject.defineProperty(Tone.AMOscillator.prototype, \"phase\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.phase;\n\t\t},\n\t\tset : function(phase){\n\t\t\tthis._carrier.phase = phase;\n\t\t\tthis._modulator.phase = phase;\n\t\t}\n\t});\n\n\t/**\n\t * The partials of the carrier waveform. A partial represents\n\t * the amplitude at a harmonic. The first harmonic is the\n\t * fundamental frequency, the second is the octave and so on\n\t * following the harmonic series.\n\t * Setting this value will automatically set the type to \"custom\".\n\t * The value is an empty array when the type is not \"custom\".\n\t * @memberOf Tone.AMOscillator#\n\t * @type {Array}\n\t * @name partials\n\t * @example\n\t * osc.partials = [1, 0.2, 0.01];\n\t */\n\tObject.defineProperty(Tone.AMOscillator.prototype, \"partials\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.partials;\n\t\t},\n\t\tset : function(partials){\n\t\t\tthis._carrier.partials = partials;\n\t\t}\n\t});\n\n\t/**\n\t *  Clean up.\n\t *  @return {Tone.AMOscillator} this\n\t */\n\tTone.AMOscillator.prototype.dispose = function(){\n\t\tTone.Source.prototype.dispose.call(this);\n\t\tthis._writable([\"frequency\", \"detune\", \"harmonicity\"]);\n\t\tthis.frequency = null;\n\t\tthis.detune = null;\n\t\tthis.harmonicity.dispose();\n\t\tthis.harmonicity = null;\n\t\tthis._carrier.dispose();\n\t\tthis._carrier = null;\n\t\tthis._modulator.dispose();\n\t\tthis._modulator = null;\n\t\tthis._modulationNode.dispose();\n\t\tthis._modulationNode = null;\n\t\tthis._modulationScale.dispose();\n\t\tthis._modulationScale = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.AMOscillator;\n});\n","define([\"../core/Tone\", \"../source/Source\", \"../source/PulseOscillator\",\n\t\"../source/Oscillator\", \"../signal/Multiply\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.PWMOscillator modulates the width of a Tone.PulseOscillator\n\t *         at the modulationFrequency. This has the effect of continuously\n\t *         changing the timbre of the oscillator by altering the harmonics\n\t *         generated.\n\t *\n\t *  @extends {Tone.Source}\n\t *  @constructor\n\t *  @param {Frequency} frequency The starting frequency of the oscillator.\n\t *  @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse.\n\t *  @example\n\t *  var pwm = new Tone.PWMOscillator(\"Ab3\", 0.3).toMaster().start();\n\t */\n\tTone.PWMOscillator = function(){\n\t\tvar options = Tone.defaults(arguments, [\"frequency\", \"modulationFrequency\"], Tone.PWMOscillator);\n\t\tTone.Source.call(this, options);\n\n\t\t/**\n\t\t *  the pulse oscillator\n\t\t *  @type {Tone.PulseOscillator}\n\t\t *  @private\n\t\t */\n\t\tthis._pulse = new Tone.PulseOscillator(options.modulationFrequency);\n\t\t//change the pulse oscillator type\n\t\tthis._pulse._sawtooth.type = \"sine\";\n\n\t\t/**\n\t\t *  the modulator\n\t\t *  @type {Tone.Oscillator}\n\t\t *  @private\n\t\t */\n\t\tthis._modulator = new Tone.Oscillator({\n\t\t\t\"frequency\" : options.frequency,\n\t\t\t\"detune\" : options.detune,\n\t\t\t\"phase\" : options.phase\n\t\t});\n\n\t\t/**\n\t\t *  Scale the oscillator so it doesn't go silent\n\t\t *  at the extreme values.\n\t\t *  @type {Tone.Multiply}\n\t\t *  @private\n\t\t */\n\t\tthis._scale = new Tone.Multiply(2);\n\n\t\t/**\n\t\t *  The frequency control.\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = this._modulator.frequency;\n\n\t\t/**\n\t\t *  The detune of the oscillator.\n\t\t *  @type {Cents}\n\t\t *  @signal\n\t\t */\n\t\tthis.detune = this._modulator.detune;\n\n\t\t/**\n\t\t *  The modulation rate of the oscillator.\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.modulationFrequency = this._pulse.frequency;\n\n\t\t//connections\n\t\tthis._modulator.chain(this._scale, this._pulse.width);\n\t\tthis._pulse.connect(this.output);\n\t\tthis._readOnly([\"modulationFrequency\", \"frequency\", \"detune\"]);\n\t};\n\n\tTone.extend(Tone.PWMOscillator, Tone.Source);\n\n\t/**\n\t *  default values\n\t *  @static\n\t *  @type {Object}\n\t *  @const\n\t */\n\tTone.PWMOscillator.defaults = {\n\t\t\"frequency\" : 440,\n\t\t\"detune\" : 0,\n\t\t\"phase\" : 0,\n\t\t\"modulationFrequency\" : 0.4,\n\t};\n\n\t/**\n\t *  start the oscillator\n\t *  @param  {Time} [time=now]\n\t *  @private\n\t */\n\tTone.PWMOscillator.prototype._start = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._modulator.start(time);\n\t\tthis._pulse.start(time);\n\t};\n\n\t/**\n\t *  stop the oscillator\n\t *  @param  {Time} time (optional) timing parameter\n\t *  @private\n\t */\n\tTone.PWMOscillator.prototype._stop = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._modulator.stop(time);\n\t\tthis._pulse.stop(time);\n\t};\n\n\t/**\n\t *  restart the oscillator\n\t *  @param  {Time} time (optional) timing parameter\n\t *  @private\n\t */\n\tTone.PWMOscillator.prototype.restart = function(time){\n\t\tthis._modulator.restart(time);\n\t\tthis._pulse.restart(time);\n\t};\n\n\t/**\n\t * The type of the oscillator. Always returns \"pwm\".\n\t * @readOnly\n\t * @memberOf Tone.PWMOscillator#\n\t * @type {string}\n\t * @name type\n\t */\n\tObject.defineProperty(Tone.PWMOscillator.prototype, \"type\", {\n\t\tget : function(){\n\t\t\treturn \"pwm\";\n\t\t}\n\t});\n\n\t/**\n\t * The baseType of the oscillator. Always returns \"pwm\".\n\t * @readOnly\n\t * @memberOf Tone.PWMOscillator#\n\t * @type {string}\n\t * @name baseType\n\t */\n\tObject.defineProperty(Tone.PWMOscillator.prototype, \"baseType\", {\n\t\tget : function(){\n\t\t\treturn \"pwm\";\n\t\t}\n\t});\n\n\t/**\n\t * The partials of the waveform. Cannot set partials for this waveform type\n\t * @memberOf Tone.PWMOscillator#\n\t * @type {Array}\n\t * @name partials\n\t * @private\n\t */\n\tObject.defineProperty(Tone.PWMOscillator.prototype, \"partials\", {\n\t\tget : function(){\n\t\t\treturn [];\n\t\t}\n\t});\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t * @memberOf Tone.PWMOscillator#\n\t * @type {number}\n\t * @name phase\n\t */\n\tObject.defineProperty(Tone.PWMOscillator.prototype, \"phase\", {\n\t\tget : function(){\n\t\t\treturn this._modulator.phase;\n\t\t},\n\t\tset : function(phase){\n\t\t\tthis._modulator.phase = phase;\n\t\t}\n\t});\n\n\t/**\n\t *  Clean up.\n\t *  @return {Tone.PWMOscillator} this\n\t */\n\tTone.PWMOscillator.prototype.dispose = function(){\n\t\tTone.Source.prototype.dispose.call(this);\n\t\tthis._pulse.dispose();\n\t\tthis._pulse = null;\n\t\tthis._scale.dispose();\n\t\tthis._scale = null;\n\t\tthis._modulator.dispose();\n\t\tthis._modulator = null;\n\t\tthis._writable([\"modulationFrequency\", \"frequency\", \"detune\"]);\n\t\tthis.frequency = null;\n\t\tthis.detune = null;\n\t\tthis.modulationFrequency = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.PWMOscillator;\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._m(0),_c('form',{staticClass:\"d-flex flex-column\",on:{\"submit\":function($event){$event.preventDefault();return _vm.submitForm($event)}}},[_c('div',{staticClass:\"row order-3\"},[_c('div',{staticClass:\"col-12 description small\"},[_vm._v(\"\\n        Example searches:\\n        \"),_c('ul',{staticClass:\"inline-list\"},[_c('li',[_c('example-link',{attrs:{\"query\":\"piracy\"}}),_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\" / \")])],1),_c('li',[_c('example-link',{attrs:{\"query\":\"he said, she said\"}}),_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\" / \")])],1),_c('li',[_c('example-link',{attrs:{\"query\":\"ride a *\"}}),_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\" / \")])],1),_c('li',[_c('example-link',{attrs:{\"query\":\"me: lobster, cal: gold, tex: cowboy\"}}),_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\" / \")])],1),_c('li',[_c('example-link',{attrs:{\"query\":\"*: gold\"}}),_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\" / \")])],1),_c('li',[_c('a',{attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.clickHelpButton($event)}}},[_vm._v(\"more ...\")])])])])]),_c('div',{staticClass:\"form-row query-row\"},[_c('div',{staticClass:\"col-sm pr-0\"},[_c('input',{ref:\"textToGraph\",staticClass:\"text-to-graph\",attrs:{\"aria-label\":\"terms to graph\"},domProps:{\"value\":_vm.textToGraph}})]),_c('loading-button',{staticClass:\"col-auto pl-sm-0 ml-auto\",attrs:{\"showLoading\":_vm.showLoading}},[_vm._v(\"Search\")]),_c('div',{staticClass:\"col-auto\"},[_c('panelset-button',{attrs:{\"panel-id\":\"help\",\"current-panel\":_vm.currentPanel,\"title\":\"Advanced search tips\",\"aria-label\":\"advanced search tips\"}},[_vm._v(\"\\n          ADVANCED\\n        \")])],1)],1),_c('panelset-panel',{attrs:{\"panel-id\":\"help\",\"current-panel\":_vm.currentPanel}},[_c('div',{on:{\"click\":_vm.helpLinkClicked}},[_c('h5',[_vm._v(\"Search tips\")]),_c('p',[_vm._v(\"\\n          Search for phrases of one to three words. Multiple phrases can be separated by commas. Do not use quotes.\\n          All searches are case-insensitive. Examples:\\n        \")]),_c('ul',{staticClass:\"bullets\"},[_c('li',[_c('example-link',{attrs:{\"query\":\"piracy\"}}),_vm._v(\" (history of the term \\\"piracy\\\")\")],1),_c('li',[_c('example-link',{attrs:{\"query\":\"his or her\"}}),_vm._v(\" (history of the term \\\"his or her\\\")\")],1),_c('li',[_c('example-link',{attrs:{\"query\":\"apple, banana, orange, pear\"}}),_vm._v(\" (compare \\\"apple\\\" to \\\"banana\\\" to \\\"orange\\\" to \\\"pear\\\")\")],1),_c('li',[_c('example-link',{attrs:{\"query\":\"he said, she said\"}}),_vm._v(\" (compare \\\"he said\\\" to \\\"she said\\\")\")],1)]),_c('h5',{staticClass:\"card-title\"},[_vm._v(\"Wildcard search\")]),_c('p',[_vm._v(\"\\n          Replace the final word of a phrase with \\\"*\\\" to perform a wildcard search. This will return the top ten\\n          phrases beginning with your first one or two words. Wildcards are currently allowed only as the final\\n          word in a phrase. Examples:\\n        \")]),_c('ul',{staticClass:\"bullets\"},[_c('li',[_c('example-link',{attrs:{\"query\":\"constitutional *\"}}),_vm._v(\" (top ten two-word phrases beginning with \\\"constitutional\\\")\")],1),_c('li',[_c('example-link',{attrs:{\"query\":\"ride a *\"}}),_vm._v(\" (top ten three-word phrases beginning with \\\"ride a\\\")\")],1),_c('li',[_vm._v(\"* amendment (not currently supported)\")])]),_c('h5',{staticClass:\"card-title\"},[_vm._v(\"Jurisdiction search\")]),_c('p',[_vm._v(\"\\n          Limit a term to a particular jurisdiction (US state or state-level political division) by starting the term with\\n          that jurisdiction's code. Available jurisdiction codes are listed below. Examples:\\n        \")]),_c('ul',{staticClass:\"bullets\"},[_c('li',[_c('example-link',{attrs:{\"query\":\"cal: gold mine\"}}),_vm._v(\" (history of the term \\\"gold mine\\\" in California)\")],1),_c('li',[_c('example-link',{attrs:{\"query\":\"me: lobster, cal: gold, tex: cowboy\"}}),_vm._v(\" (compare \\\"lobster\\\" in Maine, \\\"gold\\\" in California, and \\\"cowboy\\\" in Texas)\")],1)]),_c('p',[_vm._v(\"\\n          Show all jurisdictions separately by using the special jurisdiction code \\\"*\\\". Examples:\\n        \")]),_c('ul',{staticClass:\"bullets\"},[_c('li',[_c('example-link',{attrs:{\"query\":\"*: gold\"}}),_vm._v(\" (compare \\\"gold\\\" in all jurisdictions separately)\")],1)]),_c('h5',{staticClass:\"card-title\"},[_vm._v(\"Jurisdiction codes\")]),_c('div',{staticClass:\"row\"},_vm._l((_vm.jurisdictions),function(jurisdiction){return _c('div',{key:jurisdiction[0],staticClass:\"col-4\"},[_c('p',[_vm._v(\"\\n            \"+_vm._s(jurisdiction[1])+\": \\\"\"),_c('a',{attrs:{\"href\":(\"?q=\" + (jurisdiction[0]) + \"}: \")},on:{\"click\":function($event){$event.preventDefault();return _vm.appendJurisdictionCode(jurisdiction[0])}}},[_vm._v(\"\\n            \"+_vm._s(jurisdiction[0])+\":\")]),_vm._v(\"\\\"\\n          \")])])}),0)])])],1),(_vm.errors.length)?_c('div',{staticClass:\"row\"},[_c('ul',{staticClass:\"small alert-danger\"},_vm._l((_vm.errors),function(error){return _c('li',[_vm._v(_vm._s(error))])}),0)]):_vm._e(),(_vm.chartData.datasets.length > 0)?_c('div',{staticClass:\"row graph-menu\"},[_c('div',{staticClass:\"col-auto ml-auto\"},[_c('panelset-button',{attrs:{\"panel-id\":\"options\",\"current-panel\":_vm.currentPanel,\"title\":\"Customize\"}},[_c('img',{attrs:{\"src\":((_vm.urls.static) + \"img/icons/settings.svg\")}}),_c('span',[_vm._v(\"Customize graph\")])]),_c('panelset-button',{attrs:{\"panel-id\":\"keyboard\",\"current-panel\":_vm.currentPanel,\"title\":\"Keyboard commands\"}},[_c('img',{attrs:{\"src\":((_vm.urls.static) + \"img/icons/keyboard.svg\")}}),_c('span',[_vm._v(\"Keyboard commands\")])]),_c('panelset-button',{attrs:{\"panel-id\":\"table\",\"current-panel\":_vm.currentPanel,\"title\":\"Table view\"}},[_c('img',{attrs:{\"src\":((_vm.urls.static) + \"img/icons/view_list.svg\")}}),_c('span',[_vm._v(\"Table view\")])]),_c('panelset-button',{attrs:{\"panel-id\":\"cite\",\"current-panel\":_vm.currentPanel,\"title\":\"Cite\"}},[_c('img',{attrs:{\"src\":((_vm.urls.static) + \"img/icons/school.svg\")}}),_c('span',[_vm._v(\"Cite graph\")])]),_c('panelset-button',{attrs:{\"panel-id\":\"download\",\"current-panel\":_vm.currentPanel,\"title\":\"Download\"}},[_c('img',{attrs:{\"src\":((_vm.urls.static) + \"img/icons/download.svg\")}}),_c('span',[_vm._v(\"Download\")])])],1)]):_vm._e(),_c('div',{attrs:{\"id\":\"collapsePanels\"}},[_c('panelset-panel',{attrs:{\"panel-id\":\"options\",\"current-panel\":_vm.currentPanel}},[_c('h5',[_vm._v(\"Customize graph display\")]),_c('fieldset',{staticClass:\"form-group\",attrs:{\"aria-describedby\":\"percentOrAbsHelpText\"}},[_c('p',{staticClass:\"form-text\",attrs:{\"id\":\"percentOrAbsHelpText\"}},[_vm._v(\"\\n          Show count as a percentage of all grams for the year, or an absolute number?\\n        \")]),_c('div',{staticClass:\"form-check form-check-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.percentOrAbs),expression:\"percentOrAbs\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"radio\",\"name\":\"percentOrAbs\",\"id\":\"percentOrAbs1\",\"value\":\"percent\"},domProps:{\"checked\":_vm._q(_vm.percentOrAbs,\"percent\")},on:{\"change\":function($event){_vm.percentOrAbs=\"percent\"}}}),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"percentOrAbs1\"}},[_vm._v(\"Percentage\")])]),_c('div',{staticClass:\"form-check form-check-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.percentOrAbs),expression:\"percentOrAbs\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"radio\",\"name\":\"percentOrAbs\",\"id\":\"percentOrAbs2\",\"value\":\"absolute\"},domProps:{\"checked\":_vm._q(_vm.percentOrAbs,\"absolute\")},on:{\"change\":function($event){_vm.percentOrAbs=\"absolute\"}}}),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"percentOrAbs2\"}},[_vm._v(\"Absolute number\")])])]),_c('fieldset',{staticClass:\"form-group\",attrs:{\"aria-describedby\":\"countTypeHelpText\"}},[_c('p',{staticClass:\"form-text\",attrs:{\"id\":\"countTypeHelpText\"}},[_vm._v(\"\\n          Show count of cases containing your term, or count of individual instances of your term?\\n        \")]),_c('div',{staticClass:\"form-check form-check-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.countType),expression:\"countType\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"radio\",\"name\":\"countType\",\"id\":\"countType1\",\"value\":\"doc_count\"},domProps:{\"checked\":_vm._q(_vm.countType,\"doc_count\")},on:{\"change\":function($event){_vm.countType=\"doc_count\"}}}),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"countType1\"}},[_vm._v(\"Case count\")])]),_c('div',{staticClass:\"form-check form-check-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.countType),expression:\"countType\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"radio\",\"name\":\"countType\",\"id\":\"countType2\",\"value\":\"count\"},domProps:{\"checked\":_vm._q(_vm.countType,\"count\")},on:{\"change\":function($event){_vm.countType=\"count\"}}}),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"countType2\"}},[_vm._v(\"Instance count\")])])]),_c('fieldset',{staticClass:\"form-group\",attrs:{\"aria-describedby\":\"sameYAxisHelpText\"}},[_c('p',{staticClass:\"form-text\",attrs:{\"id\":\"sameYAxisHelpText\"}},[_vm._v(\"\\n          Show all terms on the same Y axis (for comparing frequency) or scale each term to fill the Y axis (for\\n          comparing correlation)?\\n        \")]),_c('div',{staticClass:\"form-check form-check-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sameYAxis),expression:\"sameYAxis\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"radio\",\"name\":\"sameYAxis\",\"id\":\"sameYAxis1\"},domProps:{\"value\":true,\"checked\":_vm._q(_vm.sameYAxis,true)},on:{\"change\":function($event){_vm.sameYAxis=true}}}),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"sameYAxis1\"}},[_vm._v(\"Terms on the same Y axis\")])]),_c('div',{staticClass:\"form-check form-check-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sameYAxis),expression:\"sameYAxis\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"radio\",\"name\":\"sameYAxis\",\"id\":\"sameYAxis2\"},domProps:{\"value\":false,\"checked\":_vm._q(_vm.sameYAxis,false)},on:{\"change\":function($event){_vm.sameYAxis=false}}}),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"sameYAxis2\"}},[_vm._v(\"Terms scaled to fill Y axis\")])])]),_c('div',{staticClass:\"form-group\"},[_c('label',{attrs:{\"for\":\"formControlRange\"}},[_vm._v(\"Smoothing\")]),_c('p',{staticClass:\"form-text\",attrs:{\"id\":\"smoothingFactorHelpText\"}},[(_vm.smoothingFactor > 0)?_c('span',[_vm._v(\"\\n            Data points will be averaged with the nearest \"+_vm._s(_vm.smoothingFactor)+\"% of other points.\\n          \")]):_c('span',[_vm._v(\"\\n            No smoothing will be applied.\\n          \")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model.lazy\",value:(_vm.smoothingFactor),expression:\"smoothingFactor\",modifiers:{\"lazy\":true}}],staticClass:\"form-control-range\",attrs:{\"type\":\"range\",\"min\":\"0\",\"max\":\"10\",\"id\":\"formControlRange\"},domProps:{\"value\":(_vm.smoothingFactor)},on:{\"change\":function($event){_vm.smoothingFactor=$event.target.value}}})])]),_c('panelset-panel',{attrs:{\"panel-id\":\"keyboard\",\"current-panel\":_vm.currentPanel}},[_c('h5',[_vm._v(\"Keyboard Commands\")]),_c('p',[_vm._v(\"The graph is keyboard accessible. With the graph selected, press:\")]),_c('ul',{staticClass:\"bullets\"},[_c('li',[_vm._v(\"up and down arrows: select terms\")]),_c('li',[_vm._v(\"left and right arrows: select points\")]),_c('li',[_vm._v(\"space bar: enable or disable selected trend line\")]),_c('li',[_vm._v(\"enter key: search for example cases\")]),_c('li',[_vm._v(\"\\n          Sounds:\\n          \"),_c('ul',{staticClass:\"bullets\"},[_c('li',[_vm._v(\"\\\"s\\\" key: audio tones on/off\")]),_c('li',[_vm._v(\"\\\"p\\\" key: auto play audio tones\")]),_c('li',[_vm._v(\"\\\"b\\\" key: blues mode\")])])])])]),_c('panelset-panel',{attrs:{\"panel-id\":\"table\",\"current-panel\":_vm.currentPanel}},[_c('h5',[_vm._v(\"Table View\")]),_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-sm\"},[_c('thead',[_c('tr',[_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Year\")]),_vm._l((_vm.chartData.datasets),function(dataset){return _c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(_vm._s(dataset.label))])})],2)]),_c('tbody',_vm._l((_vm.chartData.labels),function(year,i){return _c('tr',[_c('th',{attrs:{\"scope\":\"row\"}},[_vm._v(_vm._s(year))]),_vm._l((_vm.chartData.datasets),function(dataset,j){return _c('td',[_c('a',{attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.searchForPoint(j, i)}}},[_vm._v(_vm._s(_vm.formatValue(dataset.data[i])))])])})],2)}),0)])])]),_c('panelset-panel',{attrs:{\"panel-id\":\"cite\",\"current-panel\":_vm.currentPanel}},[_c('h5',[_vm._v(\"Scholarly Citation and Reuse\")]),_c('p',[_vm._v(\"\\n        Version: Historical Trends dataset version \"+_vm._s(_vm.datasetVersion)+\", published \"+_vm._s(_vm.datasetDate)+\".\\n      \")]),_c('p',[_vm._v(\"Graphs on this page may be freely reproduced with credit. Suggested citation formats:\")]),_c('dl',{staticClass:\"row\"},[_c('dt',{staticClass:\"col-sm-3\"},[_vm._v(\"APA\")]),_c('dd',{staticClass:\"col-sm-9\"},[_vm._v(\"\\n          \\\"Graph of '\"+_vm._s(_vm.textToGraph)+\",'\\\"\\n          by \"+_vm._s(_vm.author)+\", \"+_vm._s(_vm.datasetYear)+\", \"+_vm._s(_vm.publication)+\" v.\"+_vm._s(_vm.datasetVersion)+\".\\n          Retrieved [date], from \"+_vm._s(_vm.currentUrl)+\".\\n        \")]),_c('dt',{staticClass:\"col-sm-3\"},[_vm._v(\"MLA\")]),_c('dd',{staticClass:\"col-sm-9\"},[_vm._v(\"\\\"Graph of '\"+_vm._s(_vm.textToGraph)+\".'\\\"\\n          \"),_c('i',[_vm._v(_vm._s(_vm.publication)+\" v.\"+_vm._s(_vm.datasetVersion))]),_vm._v(\",\\n          \"),_vm._v(_vm._s(_vm.author)+\".\\n          \"),_vm._v(_vm._s(_vm.datasetDate)+\",\\n          \"),_vm._v(_vm._s(_vm.currentUrl)+\".\\n          \"),_vm._v(\"Accessed [date].\\n        \")]),_c('dt',{staticClass:\"col-sm-3\"},[_vm._v(\"Chicago / Turabian\")]),_c('dd',{staticClass:\"col-sm-9\"},[_vm._v(\"\\n          Graph of \\\"\"+_vm._s(_vm.textToGraph)+\".\\\"\\n          \"+_vm._s(_vm.datasetYear)+\". \"+_vm._s(_vm.publication)+\" v.\"+_vm._s(_vm.datasetVersion)+\", \"+_vm._s(_vm.author)+\", Cambridge, MA.\\n          \"+_vm._s(_vm.currentUrl)+\".\\n        \")]),_c('dt',{staticClass:\"col-sm-3\"},[_vm._v(\"Bluebook\")]),_c('dd',{staticClass:\"col-sm-9\"},[_vm._v(_vm._s(_vm.author)+\", \"),_c('i',[_vm._v(_vm._s(_vm.publication)+\" v.\"+_vm._s(_vm.datasetVersion))]),_vm._v(\", Graph of \\\"\"+_vm._s(_vm.textToGraph)+\",\\\" \"+_vm._s(_vm.currentUrl)+\" (last visited [date]).\")])])]),_c('panelset-panel',{attrs:{\"panel-id\":\"download\",\"current-panel\":_vm.currentPanel}},[_c('h5',[_vm._v(\"Download\")]),_c('ul',{staticClass:\"bullets\"},[_c('li',[_c('strong',[_c('a',{attrs:{\"href\":\"#\",\"download\":\"trends.png\"},on:{\"click\":_vm.imageDownloadClicked,\"contextmenu\":_vm.imageDownloadClicked}},[_vm._v(\"Download as an image\")])])]),_c('li',[_c('a',{attrs:{\"href\":\"#\",\"download\":\"trends.csv\"},on:{\"click\":_vm.csvDownloadClicked,\"contextmenu\":_vm.csvDownloadClicked}},[_vm._v(\"Download CSV\")]),_vm._v(\" (best for analyzing in Excel)\")]),_c('li',[_c('a',{attrs:{\"href\":\"#\",\"download\":\"trends.json\"},on:{\"click\":_vm.jsonDownloadClicked,\"contextmenu\":_vm.jsonDownloadClicked}},[_vm._v(\"Download JSON\")]),_vm._v(\" (best for analyzing from a program)\")])]),_c('div',[_c('p',{staticClass:\"d-inline\"},[_vm._v(\"View the API queries that generated this graph: \")]),_c('ul',{staticClass:\"inline-list\"},_vm._l((_vm.currentApiQueries),function(query,index){return _c('li',[_c('a',{attrs:{\"href\":query[1],\"target\":\"_blank\"}},[_vm._v(_vm._s(query[0]))]),(index !== _vm.currentApiQueries.length - 1)?_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\" / \")]):_vm._e()])}),0)])])],1),_c('div',{staticClass:\"graph\"},[_c('div',{staticClass:\"container graph-container\",attrs:{\"tabindex\":\"0\"},on:{\"keydown\":_vm.chartKeyDown}},[_c('line-example',{ref:\"chart\",attrs:{\"chartData\":_vm.chartData,\"options\":_vm.chartOptions,\"styles\":_vm.chartStyles,\"aria-label\":(\"Graph of '\" + _vm.textToGraph + \"' between \" + _vm.minYear + \" and \" + _vm.maxYear + \". See table view for details.\"),\"aria-describedby\":\"tablePanelButton\",\"role\":\"img\"}}),_c('div',{staticClass:\"sr-only\",attrs:{\"aria-live\":\"assertive\",\"aria-atomic\":\"true\"}},[_vm._v(_vm._s(_vm.canvasStatus))])],1),(_vm.chartData.datasets.length > 0)?_c('div',{staticClass:\"row zoom-row\"},[_c('div',{staticClass:\"col-auto mr-2\"},[_vm._v(\"years\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model.lazy.number\",value:(_vm.minYear),expression:\"minYear\",modifiers:{\"lazy\":true,\"number\":true}}],staticClass:\"col-auto\",attrs:{\"id\":\"min-year\",\"aria-label\":\"start year\",\"type\":\"number\",\"min\":\"1640\",\"max\":\"2018\"},domProps:{\"value\":(_vm.minYear)},on:{\"change\":function($event){_vm.minYear=_vm._n($event.target.value)},\"blur\":function($event){return _vm.$forceUpdate()}}}),_c('vue-slider',{staticClass:\"col mr-3\",attrs:{\"enable-cross\":false,\"min\":_vm.minPossible,\"max\":_vm.maxPossible},model:{value:(_vm.yearSlider),callback:function ($$v) {_vm.yearSlider=$$v},expression:\"yearSlider\"}}),_c('input',{directives:[{name:\"model\",rawName:\"v-model.lazy.number\",value:(_vm.maxYear),expression:\"maxYear\",modifiers:{\"lazy\":true,\"number\":true}}],staticClass:\"col-auto\",attrs:{\"id\":\"max-year\",\"aria-label\":\"end year\",\"type\":\"number\",\"min\":\"1640\",\"max\":\"2018\"},domProps:{\"value\":(_vm.maxYear)},on:{\"change\":function($event){_vm.maxYear=_vm._n($event.target.value)},\"blur\":function($event){return _vm.$forceUpdate()}}})],1):_vm._e()]),_c('search-results',{ref:\"searchResults\",attrs:{\"urls\":_vm.urls}}),(_vm.screenshotReady)?_c('div',{attrs:{\"id\":\"screenshot-ready\"}}):_vm._e()],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page-title\"},[_c('h1',[_vm._v(\"Historical Trends\")]),_c('p',[_vm._v(\"\\n      The \"),_c('a',{attrs:{\"href\":\"/\"}},[_vm._v(\"Caselaw Access Project\")]),_vm._v(\" includes over 6 million U.S. legal cases from the Harvard Law\\n      School Library — about 12 billion words in all. Our Historical Trends tool graphs the frequency\\n      of words and phrases through time, similar to the Google Ngram Viewer.\\n    \")])])}]\n\nexport { render, staticRenderFns }","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();\n}","function dataHandler(newData, oldData) {\n  if (oldData) {\n    var chart = this.$data._chart;\n    var newDatasetLabels = newData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldDatasetLabels = oldData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldLabels = JSON.stringify(oldDatasetLabels);\n    var newLabels = JSON.stringify(newDatasetLabels);\n\n    if (newLabels === oldLabels && oldData.datasets.length === newData.datasets.length) {\n      newData.datasets.forEach(function (dataset, i) {\n        var oldDatasetKeys = Object.keys(oldData.datasets[i]);\n        var newDatasetKeys = Object.keys(dataset);\n        var deletionKeys = oldDatasetKeys.filter(function (key) {\n          return key !== '_meta' && newDatasetKeys.indexOf(key) === -1;\n        });\n        deletionKeys.forEach(function (deletionKey) {\n          delete chart.data.datasets[i][deletionKey];\n        });\n\n        for (var attribute in dataset) {\n          if (dataset.hasOwnProperty(attribute)) {\n            chart.data.datasets[i][attribute] = dataset[attribute];\n          }\n        }\n      });\n\n      if (newData.hasOwnProperty('labels')) {\n        chart.data.labels = newData.labels;\n        this.$emit('labels:update');\n      }\n\n      if (newData.hasOwnProperty('xLabels')) {\n        chart.data.xLabels = newData.xLabels;\n        this.$emit('xlabels:update');\n      }\n\n      if (newData.hasOwnProperty('yLabels')) {\n        chart.data.yLabels = newData.yLabels;\n        this.$emit('ylabels:update');\n      }\n\n      chart.update();\n      this.$emit('chart:update');\n    } else {\n      if (chart) {\n        chart.destroy();\n        this.$emit('chart:destroy');\n      }\n\n      this.renderChart(this.chartData, this.options);\n      this.$emit('chart:render');\n    }\n  } else {\n    if (this.$data._chart) {\n      this.$data._chart.destroy();\n\n      this.$emit('chart:destroy');\n    }\n\n    this.renderChart(this.chartData, this.options);\n    this.$emit('chart:render');\n  }\n}\n\nexport var reactiveData = {\n  data: function data() {\n    return {\n      chartData: null\n    };\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport var reactiveProp = {\n  props: {\n    chartData: {\n      type: Object,\n      required: true,\n      default: function _default() {}\n    }\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport default {\n  reactiveData: reactiveData,\n  reactiveProp: reactiveProp\n};","import Chart from 'chart.js';\nexport function generateChart(chartId, chartType) {\n  return {\n    render: function render(createElement) {\n      return createElement('div', {\n        style: this.styles,\n        class: this.cssClasses\n      }, [createElement('canvas', {\n        attrs: {\n          id: this.chartId,\n          width: this.width,\n          height: this.height\n        },\n        ref: 'canvas'\n      })]);\n    },\n    props: {\n      chartId: {\n        default: chartId,\n        type: String\n      },\n      width: {\n        default: 400,\n        type: Number\n      },\n      height: {\n        default: 400,\n        type: Number\n      },\n      cssClasses: {\n        type: String,\n        default: ''\n      },\n      styles: {\n        type: Object\n      },\n      plugins: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      }\n    },\n    data: function data() {\n      return {\n        _chart: null,\n        _plugins: this.plugins\n      };\n    },\n    methods: {\n      addPlugin: function addPlugin(plugin) {\n        this.$data._plugins.push(plugin);\n      },\n      generateLegend: function generateLegend() {\n        if (this.$data._chart) {\n          return this.$data._chart.generateLegend();\n        }\n      },\n      renderChart: function renderChart(data, options) {\n        if (this.$data._chart) this.$data._chart.destroy();\n        this.$data._chart = new Chart(this.$refs.canvas.getContext('2d'), {\n          type: chartType,\n          data: data,\n          options: options,\n          plugins: this.$data._plugins\n        });\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      if (this.$data._chart) {\n        this.$data._chart.destroy();\n      }\n    }\n  };\n}\nexport var Bar = generateChart('bar-chart', 'bar');\nexport var HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');\nexport var Doughnut = generateChart('doughnut-chart', 'doughnut');\nexport var Line = generateChart('line-chart', 'line');\nexport var Pie = generateChart('pie-chart', 'pie');\nexport var PolarArea = generateChart('polar-chart', 'polarArea');\nexport var Radar = generateChart('radar-chart', 'radar');\nexport var Bubble = generateChart('bubble-chart', 'bubble');\nexport var Scatter = generateChart('scatter-chart', 'scatter');\nexport default {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter\n};","var render, staticRenderFns\nimport script from \"./LineChart.vue?vue&type=script&lang=js&\"\nexport * from \"./LineChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render, staticRenderFns\nimport script from \"./panelset.vue?vue&type=script&lang=js&\"\nexport * from \"./panelset.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\n  import {Line, mixins} from 'vue-chartjs'\n\n  export default {\n    extends: Line,\n    mixins: [mixins.reactiveProp],\n    props: [\"options\"],\n  }\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LineChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LineChart.vue?vue&type=script&lang=js&\"","<script>\n  import Vue from 'vue';\n\n  /*\n    This Panelset mixin creates a set of panels that can each be hidden or shown with a set of buttons. Clicking one\n    button shows that panel and hides any existing panels. Example:\n    <template>\n      <panelset-button panel-id=\"options\" :current-panel=\"currentPanel\" additional-button-attrs...>\n        button contents\n      </panelset-button>\n      <panelset-panel panel-id=\"options\" :current-panel=\"currentPanel\">\n        panel contents\n      </panelset-panel>\n    </template>\n    <script>\n      export default {\n        mixins: [Panelset]\n      }\n    <//script>\n  */\n  export default {\n    components: {\n      PanelsetButton: Vue.component('panelset-button', {\n        props: ['panelId', 'currentPanel', 'title'],\n        template: `\n          <button class=\"btn-secondary\"\n                  :id=\"\\`\\${panelId}PanelButton\\`\"\n                  type=\"button\"\n                  @click=\"onClick\"\n                  @blur=\"onBlur\"\n                  :aria-expanded=\"currentPanel === panelId\"\n                  :aria-controls=\"currentPanel === panelId ? \\`\\${panelId}Panel\\` : false\">\n            <slot></slot>\n          </button>\n        `,\n        methods: {\n          onClick() {\n            if (this.currentPanel === this.panelId) {\n              this.$parent.currentPanel = null;\n            } else {\n              this.$parent.currentPanel = this.panelId;\n              this.focusInPanel();\n            }\n          },\n          onBlur() {\n            if (this.currentPanel === this.panelId) {\n              this.focusInPanel();\n            }\n          },\n          focusInPanel(){\n            /* focus on first element inside panel */\n            Vue.nextTick().then(() => {\n              const firstFocus = document.getElementById(\n                `${this.panelId}Panel`\n              ).querySelectorAll(\n                'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n              )[0];\n              firstFocus.focus();\n            });\n          },\n        }\n      }),\n      PanelsetPanel: Vue.component('panelset-panel', {\n        props: ['panelId', 'currentPanel'],\n        template: `\n          <div class=\"card panelset-panel\"\n               :id=\"\\`\\${panelId}Panel\\`\"\n               v-if=\"currentPanel === panelId\"\n               tabindex=\"-1\"\n               @keydown.esc=\"closeButtonClick\">\n            <div class=\"card-body\">\n              <slot></slot>\n              <button type=\"button\"\n                      @click=\"closeButtonClick\"\n                      class=\"close\"\n                      @blur.prevent=\"closeButtonBlur\"\n                      :aria-controls=\"\\`\\${panelId}Panel\\`\"\n                      :aria-label=\"\\`close \\${panelId} panel\\`\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n          </div>\n        `,\n        methods: {\n          focusOnButton() {\n            document.getElementById(`${this.panelId}PanelButton`).focus();\n          },\n          closeButtonClick() {\n            this.$parent.currentPanel = null;\n            this.focusOnButton();\n          },\n          closeButtonBlur() {\n            this.focusOnButton();\n          },\n        }\n      }),\n    },\n    data: function () {\n      return {\n        currentPanel: null,\n      }\n    },\n  }\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./panelset.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./panelset.vue?vue&type=script&lang=js&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.showLoading)?_c('div',{ref:\"loadingMessage\",staticClass:\"results-list-container d-flex align-items-center\",attrs:{\"tabindex\":\"-1\"}},[_c('span',{staticClass:\"spinner-border spinner-border-sm mr-2\",attrs:{\"role\":\"status\",\"aria-hidden\":\"true\"}}),_vm._v(\"\\n  Loading example cases ...\\n\")]):(_vm.error)?_c('div',{staticClass:\"results-list-container\"},[_vm._v(\"\\n  \"+_vm._s(_vm.error)+\"\\n\")]):(_vm.results)?_c('div',{staticClass:\"results-list-container\"},[_c('h2',{ref:\"casesHeader\",attrs:{\"tabindex\":\"-1\"}},[_vm._v(\"Example cases\")]),_c('p',[_vm._v(\"Cases matching \\\"\"+_vm._s(_vm.term)+\"\\\" in \"+_vm._s(_vm.startYear)),(_vm.startYear !== _vm.endYear)?_c('span',[_vm._v(\"-\"+_vm._s(_vm.endYear))]):_vm._e(),_vm._v(\":\")]),(_vm.results.length)?_c('ul',{staticClass:\"results-list\"},_vm._l((_vm.results),function(result){return _c('case-result',{key:result.id,attrs:{\"result\":result}})}),1):_c('p',[_vm._v(\"No results found.\")]),_c('div',{staticClass:\"text-right\"},[_c('a',{attrs:{\"href\":_vm.searchPageUrl()}},[(_vm.results.length >= 5)?_c('span',[_vm._v(\"\\n        View more\\n      \")]):_c('span',[_vm._v(\"\\n        View search page\\n      \")]),_vm._v(\"\\n      >>\\n    \")])]),_c('p',{staticClass:\"text-muted font-italic\"},[_vm._v(\"\\n    Note: because of differences in tokenization, search results may not exactly match graph counts.\\n  \")])]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div v-if=\"showLoading\" ref=\"loadingMessage\" tabindex=\"-1\" class=\"results-list-container d-flex align-items-center\">\n    <span class=\"spinner-border spinner-border-sm mr-2\"\n          role=\"status\"\n          aria-hidden=\"true\"></span>\n    Loading example cases ...\n  </div>\n  <div v-else-if=\"error\" class=\"results-list-container\">\n    {{error}}\n  </div>\n  <div v-else-if=\"results\" class=\"results-list-container\">\n    <h2 ref=\"casesHeader\" tabindex=\"-1\">Example cases</h2>\n    <p>Cases matching \"{{term}}\" in {{startYear}}<span v-if=\"startYear !== endYear\">-{{endYear}}</span>:</p>\n    <ul v-if=\"results.length\" class=\"results-list\">\n      <case-result v-for=\"result in results\"\n                   :result=\"result\"\n                   :key=\"result.id\">\n      </case-result>\n    </ul>\n    <p v-else>No results found.</p>\n    <div class=\"text-right\">\n      <a :href=\"searchPageUrl()\">\n        <span v-if=\"results.length >= 5\">\n          View more\n        </span>\n        <span v-else>\n          View search page\n        </span>\n        >>\n      </a>\n    </div>\n    <p class=\"text-muted font-italic\">\n      Note: because of differences in tokenization, search results may not exactly match graph counts.\n    </p>\n  </div>\n</template>\n\n<script>\n  import CaseResult from '../search/case-result.vue';\n  import {getApiUrl, apiQuery} from '../api';\n  import {encodeQueryData} from '../utils';\n  import Vue from 'vue';\n\n  export default {\n    components: {\n      CaseResult,\n    },\n    props: [\n      'urls'\n    ],\n    data() {\n      return {\n        showLoading: false,\n        error: null,\n        results: null,\n        params: null,\n        term: null,\n        startYear: null,\n        endYear: null,\n      }\n    },\n    methods: {\n      search(term, params, startYear, endYear) {\n        const searchParams = this.params = {\n          search: `\"${params.q}\"`,\n          decision_date_min: `${startYear}-01-01`,\n          decision_date_max: `${endYear}-12-31`,\n          page_size: 5,\n        };\n        if (params.jurisdiction)\n          searchParams.jurisdiction = params.jurisdiction;\n        this.showLoading = true;\n        Vue.nextTick().then(() => { this.$refs.loadingMessage.focus() });\n        this.error = null;\n        apiQuery(getApiUrl(\"cases\", searchParams)).then((resp)=>{\n          this.results = resp.results;\n          this.term = term;\n          this.startYear = startYear;\n          this.endYear = endYear;\n          this.showLoading = false;\n          Vue.nextTick().then(() => { this.$refs.casesHeader.focus() });\n        }).catch(() => {\n          // error handling\n          this.showLoading = false;\n          this.error = \"Error loading examples.\"\n        });\n      },\n      searchPageUrl() {\n        return `${this.urls.search_page}?${encodeQueryData(this.params)}`\n      },\n      reset() {\n        this.showLoading = false;\n        this.error = null;\n        this.results = null;\n      },\n    }\n  }\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-results.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-results.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./search-results.vue?vue&type=template&id=5f705c6f&\"\nimport script from \"./search-results.vue?vue&type=script&lang=js&\"\nexport * from \"./search-results.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div>\n    <div class=\"page-title\">\n      <h1>Historical Trends</h1>\n      <p>\n        The <a href=\"/\">Caselaw Access Project</a> includes over 6 million U.S. legal cases from the Harvard Law\n        School Library — about 12 billion words in all. Our Historical Trends tool graphs the frequency\n        of words and phrases through time, similar to the Google Ngram Viewer.\n      </p>\n    </div>\n    <form @submit.prevent=\"submitForm\" class=\"d-flex flex-column\">\n\n      <!-- example links -- visually moved to end so dom order makes more sense for screen readers -->\n      <div class=\"row order-3\">\n        <div class=\"col-12 description small\">\n          Example searches:\n          <ul class=\"inline-list\">\n            <li><example-link query=\"piracy\"/> <span aria-hidden=\"true\"> / </span> </li>\n            <li><example-link query=\"he said, she said\"/> <span aria-hidden=\"true\"> / </span> </li>\n            <li><example-link query=\"ride a *\"/> <span aria-hidden=\"true\"> / </span> </li>\n            <li><example-link query=\"me: lobster, cal: gold, tex: cowboy\"/> <span aria-hidden=\"true\"> / </span> </li>\n            <li><example-link query=\"*: gold\"/> <span aria-hidden=\"true\"> / </span> </li>\n            <li><a href=\"#\" @click.prevent=\"clickHelpButton\">more ...</a></li>\n          </ul>\n        </div>\n      </div>\n\n      <div class=\"form-row query-row\">\n        <div class=\"col-sm pr-0\">\n          <input class=\"text-to-graph\"\n                 :value=\"textToGraph\"\n                 ref=\"textToGraph\"\n                 aria-label=\"terms to graph\">\n        </div>\n        <loading-button :showLoading=\"showLoading\" class=\"col-auto pl-sm-0 ml-auto\">Search</loading-button>\n        <div class=\"col-auto\">\n          <panelset-button panel-id=\"help\"\n                           :current-panel=\"currentPanel\"\n                           title=\"Advanced search tips\"\n                           aria-label=\"advanced search tips\">\n            ADVANCED\n          </panelset-button>\n        </div>\n      </div>\n      <panelset-panel panel-id=\"help\"\n                      :current-panel=\"currentPanel\">\n        <div @click=\"helpLinkClicked\">\n          <h5>Search tips</h5>\n          <p>\n            Search for phrases of one to three words. Multiple phrases can be separated by commas. Do not use quotes.\n            All searches are case-insensitive. Examples:\n          </p>\n          <ul class=\"bullets\">\n            <li><example-link query=\"piracy\"/> (history of the term \"piracy\")</li>\n            <li><example-link query=\"his or her\"/> (history of the term \"his or her\")</li>\n            <li><example-link query=\"apple, banana, orange, pear\"/> (compare \"apple\" to \"banana\" to \"orange\" to \"pear\")</li>\n            <li><example-link query=\"he said, she said\"/> (compare \"he said\" to \"she said\")</li>\n          </ul>\n\n          <h5 class=\"card-title\">Wildcard search</h5>\n          <p>\n            Replace the final word of a phrase with \"*\" to perform a wildcard search. This will return the top ten\n            phrases beginning with your first one or two words. Wildcards are currently allowed only as the final\n            word in a phrase. Examples:\n          </p>\n          <ul class=\"bullets\">\n            <li><example-link query=\"constitutional *\"/> (top ten two-word phrases beginning with \"constitutional\")</li>\n            <li><example-link query=\"ride a *\"/> (top ten three-word phrases beginning with \"ride a\")</li>\n            <li>* amendment (not currently supported)</li>\n          </ul>\n\n          <h5 class=\"card-title\">Jurisdiction search</h5>\n          <p>\n            Limit a term to a particular jurisdiction (US state or state-level political division) by starting the term with\n            that jurisdiction's code. Available jurisdiction codes are listed below. Examples:\n          </p>\n          <ul class=\"bullets\">\n            <li><example-link query=\"cal: gold mine\"/> (history of the term \"gold mine\" in California)</li>\n            <li><example-link query=\"me: lobster, cal: gold, tex: cowboy\"/> (compare \"lobster\" in Maine, \"gold\" in California, and \"cowboy\" in Texas)</li>\n          </ul>\n          <p>\n            Show all jurisdictions separately by using the special jurisdiction code \"*\". Examples:\n          </p>\n          <ul class=\"bullets\">\n            <li><example-link query=\"*: gold\"/> (compare \"gold\" in all jurisdictions separately)</li>\n          </ul>\n\n          <h5 class=\"card-title\">Jurisdiction codes</h5>\n          <div class=\"row\">\n          <div class=\"col-4\"\n               v-for=\"jurisdiction in jurisdictions\" :key=\"jurisdiction[0]\">\n            <p>\n              {{jurisdiction[1]}}: \"<a\n                    :href=\"`?q=${jurisdiction[0]}}: `\"\n                    @click.prevent=\"appendJurisdictionCode(jurisdiction[0])\">\n              {{jurisdiction[0]}}:</a>\"\n            </p>\n          </div>\n        </div>\n        </div>\n      </panelset-panel>\n    </form>\n\n    <div class=\"row\" v-if=\"errors.length\">\n      <ul class=\"small alert-danger\">\n        <li v-for=\"error in errors\">{{error}}</li>  <!-- eslint-disable-line vue/require-v-for-key -->\n      </ul>\n    </div>\n\n    <div v-if=\"chartData.datasets.length > 0\" class=\"row graph-menu\">\n      <div class=\"col-auto ml-auto\">\n        <panelset-button panel-id=\"options\" :current-panel=\"currentPanel\" title=\"Customize\">\n          <img :src=\"`${urls.static}img/icons/settings.svg`\">\n          <span>Customize graph</span>\n        </panelset-button>\n        <panelset-button panel-id=\"keyboard\" :current-panel=\"currentPanel\" title=\"Keyboard commands\">\n          <img :src=\"`${urls.static}img/icons/keyboard.svg`\">\n          <span>Keyboard commands</span>\n        </panelset-button>\n        <panelset-button panel-id=\"table\" :current-panel=\"currentPanel\" title=\"Table view\">\n          <img :src=\"`${urls.static}img/icons/view_list.svg`\">\n          <span>Table view</span>\n        </panelset-button>\n        <panelset-button panel-id=\"cite\" :current-panel=\"currentPanel\" title=\"Cite\">\n          <img :src=\"`${urls.static}img/icons/school.svg`\">\n          <span>Cite graph</span>\n        </panelset-button>\n        <panelset-button panel-id=\"download\" :current-panel=\"currentPanel\" title=\"Download\">\n          <img :src=\"`${urls.static}img/icons/download.svg`\">\n          <span>Download</span>\n        </panelset-button>\n      </div>\n    </div>\n\n    <div id=\"collapsePanels\">\n\n      <!-- customize panel -->\n      <panelset-panel panel-id=\"options\" :current-panel=\"currentPanel\">\n        <h5>Customize graph display</h5>\n        <fieldset class=\"form-group\" aria-describedby=\"percentOrAbsHelpText\">\n          <p id=\"percentOrAbsHelpText\" class=\"form-text\">\n            Show count as a percentage of all grams for the year, or an absolute number?\n          </p>\n          <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\"\n                   type=\"radio\"\n                   name=\"percentOrAbs\"\n                   id=\"percentOrAbs1\"\n                   value=\"percent\"\n                   v-model=\"percentOrAbs\">\n            <label class=\"form-check-label\" for=\"percentOrAbs1\">Percentage</label>\n          </div>\n          <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\"\n                   type=\"radio\"\n                   name=\"percentOrAbs\"\n                   id=\"percentOrAbs2\"\n                   value=\"absolute\"\n                   v-model=\"percentOrAbs\">\n            <label class=\"form-check-label\" for=\"percentOrAbs2\">Absolute number</label>\n          </div>\n        </fieldset>\n        <fieldset class=\"form-group\" aria-describedby=\"countTypeHelpText\">\n          <p id=\"countTypeHelpText\" class=\"form-text\">\n            Show count of cases containing your term, or count of individual instances of your term?\n          </p>\n          <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\"\n                   type=\"radio\"\n                   name=\"countType\"\n                   id=\"countType1\"\n                   value=\"doc_count\"\n                   v-model=\"countType\">\n            <label class=\"form-check-label\" for=\"countType1\">Case count</label>\n          </div>\n          <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\"\n                   type=\"radio\"\n                   name=\"countType\"\n                   id=\"countType2\"\n                   value=\"count\"\n                   v-model=\"countType\">\n            <label class=\"form-check-label\" for=\"countType2\">Instance count</label>\n          </div>\n        </fieldset>\n        <fieldset class=\"form-group\" aria-describedby=\"sameYAxisHelpText\">\n          <p id=\"sameYAxisHelpText\" class=\"form-text\">\n            Show all terms on the same Y axis (for comparing frequency) or scale each term to fill the Y axis (for\n            comparing correlation)?\n          </p>\n          <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\"\n                   type=\"radio\"\n                   name=\"sameYAxis\"\n                   id=\"sameYAxis1\"\n                   :value=\"true\"\n                   v-model=\"sameYAxis\">\n            <label class=\"form-check-label\" for=\"sameYAxis1\">Terms on the same Y axis</label>\n          </div>\n          <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\"\n                   type=\"radio\"\n                   name=\"sameYAxis\"\n                   id=\"sameYAxis2\"\n                   :value=\"false\"\n                   v-model=\"sameYAxis\">\n            <label class=\"form-check-label\" for=\"sameYAxis2\">Terms scaled to fill Y axis</label>\n          </div>\n        </fieldset>\n        <div class=\"form-group\">\n          <label for=\"formControlRange\">Smoothing</label>\n          <p id=\"smoothingFactorHelpText\" class=\"form-text\">\n            <span v-if=\"smoothingFactor > 0\">\n              Data points will be averaged with the nearest {{smoothingFactor}}% of other points.\n            </span>\n            <span v-else>\n              No smoothing will be applied.\n            </span>\n          </p>\n          <input type=\"range\"\n                 class=\"form-control-range\"\n                 min=\"0\" max=\"10\"\n                 v-model.lazy=\"smoothingFactor\"\n                 id=\"formControlRange\">\n        </div>\n      </panelset-panel>\n\n      <!-- keyboard commands -->\n      <panelset-panel panel-id=\"keyboard\" :current-panel=\"currentPanel\">\n        <h5>Keyboard Commands</h5>\n        <p>The graph is keyboard accessible. With the graph selected, press:</p>\n        <ul class=\"bullets\">\n          <li>up and down arrows: select terms</li>\n          <li>left and right arrows: select points</li>\n          <li>space bar: enable or disable selected trend line</li>\n          <li>enter key: search for example cases</li>\n          <li>\n            Sounds:\n            <ul class=\"bullets\">\n              <li>\"s\" key: audio tones on/off</li>\n              <li>\"p\" key: auto play audio tones</li>\n              <li>\"b\" key: blues mode</li>\n            </ul>\n          </li>\n        </ul>\n      </panelset-panel>\n\n      <!-- table panel -->\n      <panelset-panel panel-id=\"table\" :current-panel=\"currentPanel\">\n        <h5>Table View</h5>\n        <div class=\"table-responsive\">\n          <table class=\"table table-sm\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Year</th>\n                <th v-for=\"dataset in chartData.datasets\" scope=\"col\">{{dataset.label}}</th> <!-- eslint-disable-line vue/require-v-for-key -->\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(year, i) in chartData.labels\"> <!-- eslint-disable-line vue/require-v-for-key -->\n                <th scope=\"row\">{{year}}</th>\n                <td v-for=\"(dataset, j) in chartData.datasets\"> <!-- eslint-disable-line vue/require-v-for-key -->\n                  <a href=\"#\" @click.prevent=\"searchForPoint(j, i)\">{{formatValue(dataset.data[i])}}</a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </panelset-panel>\n\n      <!-- cite panel -->\n      <panelset-panel panel-id=\"cite\" :current-panel=\"currentPanel\">\n        <h5>Scholarly Citation and Reuse</h5>\n        <p>\n          Version: Historical Trends dataset version {{datasetVersion}}, published {{datasetDate}}.\n        </p>\n        <p>Graphs on this page may be freely reproduced with credit. Suggested citation formats:</p>\n        <dl class=\"row\">\n          <dt class=\"col-sm-3\">APA</dt>\n          <dd class=\"col-sm-9\">\n            <!-- via https://columbiacollege-ca.libguides.com/apa/images -->\n            \"Graph of '{{textToGraph}},'\"\n            by {{author}}, {{datasetYear}}, {{publication}} v.{{datasetVersion}}.\n            Retrieved [date], from {{currentUrl}}.\n          </dd>\n          <dt class=\"col-sm-3\">MLA</dt>\n          <dd class=\"col-sm-9\">\n            <!-- via image cited on the web only example from https://owl.purdue.edu/owl/research_and_citation/mla_style/mla_formatting_and_style_guide/mla_works_cited_electronic_sources.html -->\n            <!-- title -->\"Graph of '{{textToGraph}}.'\"\n            <!-- publication --><i>{{publication}} v.{{datasetVersion}}</i>,\n            <!-- author -->{{author}}.\n            <!-- publication date -->{{datasetDate}},\n            <!-- url -->{{currentUrl}}.\n            <!-- accessed date -->Accessed [date].\n          </dd>\n          <dt class=\"col-sm-3\">Chicago / Turabian</dt>\n          <dd class=\"col-sm-9\">\n            <!-- via http://www.easybib.com/guides/citation-guides/chicago-turabian/how-to-cite-a-photo-digital-image-chicago-turabian/ -->\n            Graph of \"{{textToGraph}}.\"\n            {{datasetYear}}. {{publication}} v.{{datasetVersion}}, {{author}}, Cambridge, MA.\n            {{currentUrl}}.\n          </dd>\n          <dt class=\"col-sm-3\">Bluebook</dt>\n          <dd class=\"col-sm-9\">{{author}}, <i>{{publication}} v.{{datasetVersion}}</i>, Graph of \"{{textToGraph}},\" {{currentUrl}} (last visited [date]).</dd>\n        </dl>\n      </panelset-panel>\n\n      <!-- download panel -->\n      <panelset-panel panel-id=\"download\" :current-panel=\"currentPanel\">\n        <h5>Download</h5>\n        <ul class=\"bullets\">\n          <li><strong><a href=\"#\" download=\"trends.png\" @click=\"imageDownloadClicked\" @contextmenu=\"imageDownloadClicked\">Download as an image</a></strong></li>\n          <li><a href=\"#\" download=\"trends.csv\" @click=\"csvDownloadClicked\" @contextmenu=\"csvDownloadClicked\">Download CSV</a> (best for analyzing in Excel)</li>\n          <li><a href=\"#\" download=\"trends.json\" @click=\"jsonDownloadClicked\" @contextmenu=\"jsonDownloadClicked\">Download JSON</a> (best for analyzing from a program)</li>\n        </ul>\n        <div>\n          <p class=\"d-inline\">View the API queries that generated this graph:&nbsp;</p>\n          <ul class=\"inline-list\">\n            <li v-for=\"(query, index) in currentApiQueries\"> <!-- eslint-disable-line vue/require-v-for-key -->\n              <a :href=\"query[1]\" target=\"_blank\">{{query[0]}}</a>\n              <span v-if=\"index !== currentApiQueries.length - 1\" aria-hidden=\"true\"> / </span>\n            </li>\n          </ul>\n        </div>\n      </panelset-panel>\n    </div> <!-- /collapsePanels -->\n\n    <div class=\"graph\">\n      <div class=\"container graph-container\"\n           @keydown=\"chartKeyDown\"\n           tabindex=\"0\">\n        <line-example :chartData=\"chartData\"\n                      :options=\"chartOptions\"\n                      :styles=\"chartStyles\"\n                      :aria-label=\"`Graph of '${textToGraph}' between ${minYear} and ${maxYear}. See table view for details.`\"\n                      aria-describedby=\"tablePanelButton\"\n                      role=\"img\"\n                      ref=\"chart\">\n        </line-example>\n        <div class=\"sr-only\" aria-live=\"assertive\" aria-atomic=\"true\">{{canvasStatus}}</div>\n      </div>\n      <div v-if=\"chartData.datasets.length > 0\" class=\"row zoom-row\">\n        <div class=\"col-auto mr-2\">years</div>\n        <input id=\"min-year\"\n               class=\"col-auto\"\n               aria-label=\"start year\"\n               v-model.lazy.number=\"minYear\"\n               type=\"number\"\n               min=\"1640\" max=\"2018\"/>\n        <vue-slider v-model=\"yearSlider\"\n                    class=\"col mr-3\"\n                    :enable-cross=\"false\"\n                    :min=\"minPossible\"\n                    :max=\"maxPossible\"\n        />\n        <input id=\"max-year\"\n               class=\"col-auto\"\n               aria-label=\"end year\"\n               v-model.lazy.number=\"maxYear\"\n               type=\"number\"\n               min=\"1640\" max=\"2018\"/>\n      </div>\n    </div>\n    <search-results ref=\"searchResults\" :urls=\"urls\"></search-results>\n    <div v-if=\"screenshotReady\" id=\"screenshot-ready\"></div> <!-- empty div to be detected when taking screenshot -->\n  </div>\n</template>\n\n<script>\n  import Chart from 'chart.js';\n  import csvStringify from 'csv-stringify/lib/sync';\n  import debounce from 'lodash.debounce';\n  import Tone from 'tone/Tone/core/Tone';\n  import Synth from 'tone/Tone/instrument/Synth';\n  import Vue from 'vue';\n  import VueSlider from 'vue-slider-component';\n  import 'vue-slider-component/theme/default.css';\n\n  import LineExample from './LineChart.vue';\n  import LoadingButton from '../vue-shared/loading-button.vue';\n  import Panelset from '../vue-shared/panelset';\n  import SearchResults from './search-results.vue';\n  import {getApiUrl, apiQuery} from '../api'\n\n  // math helpers\n  const mod = (n, m) => ((n % m) + m) % m;  // mod function that works correctly with negative numbers\n  const max = Math.max;\n  const min = Math.min;\n  const average = (items) => items.reduce((a, b) => a + b) / items.length;\n  const deepCopy = (value) => JSON.parse(JSON.stringify(value));\n\n  export default {\n    name: 'Main',\n    mixins: [Panelset],\n    components: {\n      LineExample,\n      LoadingButton,\n      VueSlider,\n      SearchResults,\n      ExampleLink: Vue.component('example-link', {\n        template: `<router-link class=\"example-link\" :to=\"\\`?q=\\${query}\\`\">{{query}}</router-link>`,\n        props: ['query'],\n      }),\n    },\n    beforeMount() {\n      this.jurisdictions = [[\"*\", \"Wildcard\"]].concat(snippets.jurisdictions);  // eslint-disable-line\n      for (const[k, v] of this.jurisdictions)\n        this.jurisdictionLookup[k] = v;\n      this.urls = urls;  // eslint-disable-line\n      Chart.pluginService.register({\n        beforeDraw: this.beforeDraw,\n        afterLayout: this.afterLayout,\n        afterRender: this.afterRender,\n      });\n    },\n    mounted: function () {\n      /* Read url state when first loaded. */\n      const route = this.$route;\n      this.initialQuery = deepCopy(route.query);\n      this.handleRouteUpdate(route);\n      // render default search manually if rendering won't be prompted by URL value\n      if (!route.query.q)\n        this.textToGraphUpdated();\n      window.addEventListener('resize', ()=>{ this.handleWindowResize() });\n      this.handleWindowResize();\n    },\n    watch: {\n      /* Read url state on change. */\n      '$route': function (route, oldRoute) {\n        this.handleRouteUpdate(route, oldRoute);\n      },\n      textToGraph() {\n        this.setUrlParam(\"textToGraph\");\n        this.textToGraphUpdated();\n      },\n      percentOrAbs: function () {\n        this.setUrlParam(\"percentOrAbs\");\n        this.graphResults();\n      },\n      countType: function () {\n        this.setUrlParam(\"countType\");\n        this.graphResults();\n      },\n      sameYAxis: function () {\n        this.setUrlParam(\"sameYAxis\");\n        this.graphResults();\n      },\n      minYear: function () {\n        this.clampYears();\n        this.yearSlider = [this.minYear, this.maxYear];\n        this.setUrlParam(\"minYear\");\n        this.graphResults();\n      },\n      maxYear: function () {\n        this.clampYears();\n        this.yearSlider = [this.minYear, this.maxYear];\n        this.setUrlParam(\"maxYear\");\n        this.graphResults();\n      },\n      yearSlider(newval) {\n        [this.minYear, this.maxYear] = newval;\n      },\n      smoothingFactor: function() {\n        this.setUrlParam(\"smoothingFactor\");\n        this.graphResults();\n      },\n      deselectedTerms: function() {\n        this.setUrlParam(\"deselectedTerms\");\n        this.graphResults();\n      },\n      currentLine() {\n        this.selectLine();\n      },\n      currentPoint() {\n        this.selectPoint();\n      },\n      totalChartHeight(newVal) {\n        this.chartStyles.height = `${newVal}px`;\n      },\n    },\n    data: function () {\n      const chartHeight = 400;\n      // configure all the data values that have their state stored in the URL\n      const urlValues = {\n        textToGraph: {param: \"q\", default: \"apple pie, baseball\"},\n        smoothingFactor: {param: \"sf\", default: 2},\n        maxYear: {\n          param: \"xy\",\n          default: 2018,\n          toValue: this.clampYear,\n          isDefault: (value) => this.rawData && value === this.rawData.maxYear,\n        },\n        minYear: {\n          param: \"ny\",\n          default: 1800,\n          toValue: this.clampYear,\n          isDefault: (value) => this.rawData && value === this.rawData.minYear,\n        },\n        sameYAxis: {param: \"sy\", default: true},\n        countType: {param: \"ct\", default: \"doc_count\"},\n        percentOrAbs: {param: \"pa\", default: \"percent\"},\n        deselectedTerms: {\n          param: \"dt\",\n          default: [],\n          toValue: (value) => value.split(\",\"),\n          toParam: (value) => value.join(\",\"),\n        },\n      };\n      const out = {\n        // citation stuff\n        baseUrl: window.location.origin + this.$router.options.base,\n        currentYear: new Date().getFullYear(),\n        datasetVersion: \"1.0\",\n        datasetDate: \"June 6, 2019\",\n        datasetYear: \"2019\",\n        author: \"Harvard University\",\n        publication: \"Caselaw Access Project Historical Trends\",\n\n        urlValues,\n        yearSlider: [urlValues.minYear.default, urlValues.maxYear.default],\n\n        currentTab: null,\n        currentLine: null,\n        currentPoint: null,\n        currentHelpPanel: null,\n        currentApiQueries: [],\n        chartHeight: chartHeight,\n        chartLegendHeight: 32,\n        chartData: {datasets: []},\n        canvasStatus: \"\",\n        rawData: null,\n        textToGraph: \"apple pie, baseball\",\n        minPossible: urlValues.minYear.default,\n        maxPossible: urlValues.maxYear.default,\n        smoothingWindow: 0,\n        previousSameYAxis: true,\n        jurisdictions: [],\n        jurisdictionLookup: {},\n        screenshotReady: false,  // whether page has rendered sufficiently to take screenshot\n        urls: {},\n        // colors via http://mkweb.bcgsc.ca/biovis2012/ and https://contrast-ratio.com/:\n        // these colors work for color-blindness, and have contrast against white that is WCAG AA large or better\n        colors: [\n          \"rgb(0,0,0)\", \"rgb(73,0,146)\", \"rgb(146,0,0)\",\n          \"rgb(0,73,73)\", \"rgb(0,109,219)\", \"rgb(146,73,0)\",\n          \"rgb(0,146,146)\", \"rgb(182,109,255)\", \"rgb(219,109,0)\",\n        ],\n        pointStyles: ['circle', 'cross', 'crossRot', 'rect', 'rectRounded', 'rectRot', 'star', 'triangle'],\n        soundsOn: false,\n        soundAutoplay: false,\n        soundPlaySpeed: 50,\n        useScales: false,\n        soundScales: [\n          // [0,1,2,3,4,5,6,7,8,9,10,11],  // half steps\n          // 0,2,4,7,9  // pentatonic scale\n          [0, 3, 5, 6, 7, 10],  // blues scale\n        ],\n        currentSoundScale: 0,\n        synth: null,\n        synthStopTime: null,\n        errors: [],\n        showLoading: false,\n        initialQuery: null,\n        chartOptions: {\n          responsive: true,\n          maintainAspectRatio: false,\n          onClick: this.chartOnClick,\n          legend: {\n            labels: {\n              boxWidth: 20,\n              usePointStyle: true,\n            },\n            onClick: this.legendItemOnClick,\n          },\n          layout: {\n            padding: {\n              bottom: 10,\n            }\n          },\n          scales: {\n            yAxes: [{\n              id: '0',\n              type: 'linear',\n              gridLines: {\n                color: \"rgba(0, 0, 0, 0)\",\n              },\n              ticks: {\n                beginAtZero: true,\n              },\n              scaleLabel: {\n                display: true,\n              },\n            }],\n            xAxes: [{\n              gridLines: {\n                color: \"rgba(0, 0, 0, 0)\",\n              },\n            }]\n          },\n          tooltips: {\n            callbacks: {\n              title: (tooltipItem) => {\n                /* format tooltip title to include date range when smoothing is on */\n                return this.formatYearRange(tooltipItem[0].label);\n              },\n              label: (tooltipItem, data) => {\n                return data.datasets[tooltipItem.datasetIndex].label + ': ' + this.formatValue(tooltipItem.yLabel);\n              }\n            }\n          }\n        },\n        chartStyles: {\n          height: `${chartHeight}px`,\n        }\n      };\n      // add each urlValues entry to data\n      for (const [k, v] of Object.entries(urlValues))\n        out[k] = deepCopy(v['default']);\n      return out;\n    },\n    computed: {\n      currentUrl: function () {\n        return this.baseUrl.slice(0, -1) + this.$route.fullPath;\n      },\n      totalChartHeight() {\n        return this.chartHeight + this.chartLegendHeight;\n      },\n      yScaleLabel() {\n        const countType = this.countType === \"count\" ? \"instances\" : \"cases\";\n        if (this.percentOrAbs === \"percent\") {\n          return `% of ${countType}`;\n        } else if (this.smoothingWindow) {\n          return `${countType} per year`;\n        } else {\n          return countType;\n        }\n      },\n    },\n    methods: {\n      formatYearRange(year) {\n        /* return range of years given a year and this.smoothingWindow */\n        if (!this.smoothingWindow)\n          return year;\n        const labels = this.chartData.labels;\n        const startRange = max(labels[0], Number(year)-this.smoothingWindow);\n        const endRange = min(labels[labels.length-1], Number(year)+this.smoothingWindow);\n        return `${startRange}-${endRange}`;\n      },\n      formatValue(value) {\n        /*\n          format numeric datapoint based on percentOrAbs, countType, and smoothingWindow\n        */\n        if (this.percentOrAbs === \"percent\") {\n          return `${!value ? 0 : value === 100 ? 100 : value.toPrecision(2)}${this.yScaleLabel}`;\n        } else if (this.smoothingWindow) {\n          return `about ${value < 10 ? value.toPrecision(2) : Math.round(value)} ${this.yScaleLabel}`;\n        } else {\n          return `${value} ${this.yScaleLabel}`;\n        }\n      },\n      clampYear(year) {\n        return max(min(Number(year), this.maxPossible), this.minPossible);\n      },\n      clampYears() {\n        /* clamp minYear and maxYear to acceptable values */\n        this.minYear = this.clampYear(this.minYear);\n        this.maxYear = this.clampYear(this.maxYear);\n        if (this.minYear > this.maxYear)\n          [this.minYear, this.maxYear] = [this.maxYear, this.minYear];\n      },\n      range(start, stop, step = 1) {\n        start = Number(start);\n        stop = Number(stop);\n        return Array(Math.ceil((stop - start) / step)).fill(start).map((x, y) => x + y * step)\n      },\n      getTerms(text) {\n        let terms = text.split(\",\");\n        return terms.map(term => term.trim());\n      },\n      submitForm() {\n        this.textToGraph = this.$refs.textToGraph.value;\n      },\n      handleRouteUpdate(route) {\n        /* set data values based on query params */\n        const query = route.query;\n        for (const [attr, config] of Object.entries(this.urlValues)) {\n          let value = query[config.param];\n          if (value) {\n            if (config.toValue)\n              value = config.toValue(value);\n            this[attr] = value;\n          }\n        }\n      },\n      setUrlParam(attr) {\n        /* set query params based on data value */\n        const config = this.urlValues[attr];\n        let value = this[attr];\n        const query = deepCopy(this.$route.query);\n        const toParam = config.toParam || ((v) => v);\n        const isDefault = config.isDefault ? config.isDefault(value) : toParam(config.default) === toParam(value);\n        if (isDefault)\n          delete query[config.param];\n        else\n          query[config.param] = toParam(value);\n        this.$router.replace({query});\n      },\n      textToGraphUpdated() {\n        /* handle update to this.textToGraph */\n\n        // clear existing errors, but don't clear existing graph yet in case we can't draw anything new\n        this.errors = [];\n\n        // validate input\n        let q = this.textToGraph;\n        if (!q.trim()){\n          this.errors.push(\"Please enter text\");\n          return;\n        }\n        const terms = this.getTerms(q);\n        this.showLoading = true;\n        this.currentApiQueries = [];\n\n        Promise.all(\n\n          // send request for each term, in parallel\n          terms.map((term)=> {\n            if (term === \"\")\n              return null;\n            const [firstWord, ...restWords] = term.split(/\\s/);\n\n            // parse jurisdiction prefix\n            const params = {};\n            if (firstWord.endsWith(':')) {\n              const jur = firstWord.slice(0, -1);\n              if (!this.jurisdictionLookup[jur]){\n                this.errors.push(`Unknown jurisdiction \"${jur}\". Options are: ${Object.keys(this.jurisdictionLookup)}`);\n                return null;\n              }\n              if (!restWords.length) {\n                this.errors.push(`Jurisdiction ${jur} should be followed by a search term.`);\n                return null;\n              }\n              params.jurisdiction = jur;\n              params.q = restWords.join(' ');\n            } else {\n              params.q = term;\n            }\n\n            // fetch results\n            const url = getApiUrl(\"ngrams\", params);\n            this.currentApiQueries.push([term, url]);\n            return apiQuery(url).then((resp)=>{\n              // filter out responses with no results\n              if (Object.keys(resp.results).length === 0) {\n                this.errors.push(`\"${term}\" does not appear in our corpus.`);\n                return null;\n              }\n              return {results: resp.results, params};\n            });\n          })\n        ).then((results) => {\n          // display results\n          this.showLoading = false;\n          const rawData = this.parseResponse(results);\n          if (Object.keys(rawData.results).length === 0)\n            return;  // no search term found results\n          this.rawData = rawData;\n\n          // reset (some) graph settings when a new search is run.\n          // we *don't* reset graph settings if this is the first query, and they were set in the URL,\n          // because we want to preserve settings in shared links\n          if (!this.initialQuery || !this.initialQuery[this.urlValues.minYear.param])\n            this.minYear = this.rawData.minYear;\n          if (!this.initialQuery || !this.initialQuery[this.urlValues.maxYear.param])\n            this.maxYear = this.rawData.maxYear;\n          if (!this.initialQuery || !this.initialQuery[this.urlValues.deselectedTerms.param])\n            this.deselectedTerms = [];\n          this.$refs.searchResults.reset();\n          this.initialQuery = null;\n\n          this.graphResults();\n        }).catch(response => {\n          // error handling\n          this.showLoading = false;\n          this.errors.push(\"Connection error: failed to load results\");\n          console.log(\"Connection error:\", response);  // eslint-disable-line\n        });\n\n      },\n      // graphResults is debounced so we don't redraw the graph too often when settings are changed\n      graphResults: debounce(function(){\n\n        // validate input from display options\n        this.clampYears();\n        if (!this.rawData)\n          return;\n        const newDatasets = [];\n        const dataMinYear = this.rawData.minYear;\n        const dataMaxYear = this.rawData.maxYear;\n        const minYear = this.minYear;\n        const maxYear = this.maxYear;\n        let colorIndex = this.rawData.colorOffset;\n        let fullChartReset = false;\n        const years = this.range(minYear, maxYear+1);\n\n        // prepare each dataset\n        for (const [term, rawData] of Object.entries(this.rawData.results)) {\n\n          // apply percentOrAbs and countType settings\n          let data = rawData.data.map((year) => {\n            if (year === null) return 0;\n            if (this.percentOrAbs === \"absolute\") return year[this.countType][0];\n            return year[this.countType][0]/year[this.countType][1]*100;\n          });\n\n          // apply smoothingFactor setting\n          data = this.movingAverage(data, dataMaxYear-dataMinYear);\n\n          // apply minYear and maxYear settings\n          // the zero arrays and min/max functions handle the case where we are zoomed out or in from the actual data\n          data = Array(max(dataMinYear-minYear, 0)).fill(0).concat(\n            data.slice(max(minYear-dataMinYear, 0), min(maxYear-dataMinYear+1, data.length)),\n            Array(max(maxYear-dataMaxYear, 0)).fill(0),\n          );\n\n          // rotate colors\n          const color = this.colors[colorIndex++ % this.colors.length];\n\n          // show individual points if we have fewer than 50 total\n          const pointRadius = maxYear-minYear < 50 ? 3 : 0;\n\n          newDatasets.push({\n            label: term,\n            borderColor: color,\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\n            borderWidth: 2,\n            borderRadius: 100,\n            data: data,\n            pointStyle: this.pointStyles[colorIndex % this.pointStyles.length],\n            pointRadius: pointRadius,\n            pointHitRadius: 5,\n            yAxisID: this.sameYAxis ? '0' : newDatasets.length.toString(),\n            hidden: this.deselectedTerms.includes(term),\n          });\n        }\n\n        // handle this.sameYAxis\n        const yAxes = this.chartOptions.scales.yAxes;\n        if (!this.sameYAxis) {\n          yAxes[0].display = false;\n          if (yAxes.length < newDatasets.length) {\n            fullChartReset = true;\n            for (let i=yAxes.length;i<newDatasets.length;i++) {\n              yAxes.push(Object.assign({}, yAxes[0], {'id': i.toString()}));\n            }\n          }\n        } else {\n          yAxes[0].display = true;\n          if (yAxes[0].scaleLabel.labelString !== this.yScaleLabel) {\n            yAxes[0].scaleLabel.labelString = this.yScaleLabel;\n            fullChartReset = true;\n          }\n        }\n        if (this.sameYAxis !== this.previousSameYAxis) {\n          this.previousSameYAxis = this.sameYAxis;\n          fullChartReset = true;\n        }\n\n        // show chart\n        this.chartData = {\n          labels: years,\n          datasets: newDatasets,\n        };\n\n        // fullChartReset is a workaround for the yAxisID property not being reactive --\n        // see https://github.com/apertureless/vue-chartjs/issues/177\n        if (fullChartReset)\n          this.$refs.chart.renderChart(this.chartData, this.chartOptions);\n      }, 50),\n      parseResponse(apiResults) {\n        const results = {};\n        let minYear = null, maxYear = null;\n        for (const result of apiResults) {\n          if (result === null)\n            continue;\n          for (const [gram, jurs] of Object.entries(result.results)) {\n            for (const [jurName, jurData] of Object.entries(jurs)) {\n              const years = new Array(this.maxPossible + 1).fill(null);\n              for (const yearData of jurData) {\n                let year = yearData['year'];\n                if (year === \"total\")\n                  continue;\n                year = parseInt(year, 10);\n                if (minYear === null || minYear > year)\n                  minYear = year;\n                if (maxYear === null || maxYear < year)\n                  maxYear = year;\n                years[year] = yearData;\n              }\n              results[(jurName === \"total\" ? \"\" : this.jurisdictionLookup[jurName] + \": \") + gram] = {\n                data: years,\n                params: result.params,\n              };\n            }\n          }\n        }\n        minYear = max(minYear, this.minPossible);\n        maxYear = min(maxYear, this.maxPossible);\n        for (const key of Object.keys(results)){\n          results[key].data = results[key].data.slice(minYear, maxYear+1);\n        }\n        // set a random colorOffset for this response, so colors change on each request\n        const colorOffset = Math.floor(Math.random() * this.colors.length);\n        return {colorOffset, minYear, maxYear, results};\n      },\n      movingAverage(items, totalRange) {\n        /* average each item in items along with smoothingFactor % of adjacent items */\n        const window = Math.floor(totalRange * (this.smoothingFactor/100));\n        this.smoothingWindow = window;\n        if (window < 1)\n          return items;\n        return items.map((_, i) => average(items.slice(max(i-window, 0), min(i+window, items.length))));\n      },\n      appendJurisdictionCode(code) {\n        if (this.textToGraph)\n          this.textToGraph += \", \";\n        this.textToGraph += code + \": \";\n        this.$refs.textToGraph.focus();\n      },\n      imageDownloadClicked(event) {\n        /* when the Download url is clicked/right-clicked/touched, intercept the event and fill in the correct data for download */\n        const payload = this.$refs.chart.$refs.canvas.toDataURL('image/png');\n        event.currentTarget.href = payload;\n      },\n      jsonDownloadClicked(event) {\n        /* when the Download url is clicked/right-clicked/touched, intercept the event and fill in the correct data for download */\n        let payload = deepCopy(this.rawData);\n        delete payload.colorOffset;\n        payload = \"data:application/json;base64,\" + btoa(JSON.stringify(payload, null, 2));\n        event.currentTarget.href = payload;\n      },\n      csvDownloadClicked(event) {\n        /* when the Download url is clicked/right-clicked/touched, intercept the event and fill in the correct data for download */\n        const results = this.rawData.results;\n        const terms = Object.keys(results);\n        let payload = [];\n        payload.push([\"Year\", ...terms.flatMap((term)=>[\n          `\"${term}\" Case Count`,\n          `\"${term}\" Case Denominator`,\n          `\"${term}\" Instance Count`,\n          `\"${term}\" Instance Denominator`,\n        ])]);\n        for (const [i, year] of this.chartData.labels.entries()) {\n          payload.push([year, ...terms.flatMap((key)=>{\n            const data = results[key].data[i];\n            if (data === null)\n              return [\"\", \"\", \"\", \"\"];\n            else\n              return [data.doc_count[0], data.doc_count[1], data.count[0], data.count[1]];\n          })]);\n        }\n        payload = \"data:text/csv;base64,\" + btoa(csvStringify(payload));\n        event.currentTarget.href = payload;\n      },\n      chartKeyDown(event) {\n        /* handle keyboard events on chart */\n        switch (event.key) {\n          case \"ArrowDown\":\n            this.currentLine = mod(this.currentLine === null ? 0 : this.currentLine + 1, this.chartData.datasets.length);\n            break;\n          case \"ArrowUp\":\n            this.currentLine = mod(this.currentLine === null ? 0 : this.currentLine - 1, this.chartData.datasets.length);\n            break;\n          case \"ArrowRight\":\n            this.currentPoint = mod(this.currentPoint === null ? 0 : this.currentPoint + 1, this.chartData.labels.length);\n            break;\n          case \"ArrowLeft\":\n            this.currentPoint = mod(this.currentPoint === null ? 0 : this.currentPoint - 1, this.chartData.labels.length);\n            break;\n          case \" \":\n            if (this.currentLine !== null)\n              this.clickLegendItem(this.currentLine);\n            break;\n          case \"Enter\":\n            this.currentLine |= 0;\n            this.currentPoint |= 0;\n            this.searchForPoint(this.currentLine, this.currentPoint);\n            break;\n          case \"s\":\n            this.toggleSoundsOn();\n            break;\n          case \"p\":\n            this.soundAutoplay = !this.soundAutoplay;\n            if (this.soundAutoplay) {\n              if (!this.soundsOn) this.toggleSoundsOn();\n              this.currentLine |= 0;\n              this.currentPoint |= 0;\n              this.autoplaySound();\n            }\n            break;\n          case \"b\":\n            this.useScales = !this.useScales;\n            this.setCanvasStatus(`blues mode ${this.useScales?\"on\":\"off\"}`);\n            if (!this.soundsOn) this.toggleSoundsOn();\n            break;\n          default:\n            return;\n        }\n        event.preventDefault();\n      },\n      toggleSoundsOn() {\n        this.soundsOn = !this.soundsOn;\n        this.setCanvasStatus(`audio tones ${this.soundsOn?\"on\":\"off\"}`);\n        if (this.soundsOn)\n          this.synth = new Synth({envelope: {attack: this.soundPlaySpeed/1000}}).toMaster();\n      },\n      autoplaySound() {\n        setTimeout(()=>{\n          if (this.soundAutoplay) {\n            if (this.currentPoint < this.chartData.labels.length - 1) {\n              this.currentPoint += 1;\n              this.autoplaySound();\n            } else\n              this.soundAutoplay = false;\n          }\n        }, this.soundPlaySpeed);\n      },\n      selectLine() {\n        /* handle update to this.currentLine */\n        const datasets = this.chartData.datasets;\n        const index = this.currentLine;\n        for (const [i, dataset] of datasets.entries()) {\n          if (index === i) {\n            dataset.borderWidth = 4;\n          } else {\n            dataset.borderWidth = 2;\n          }\n        }\n        this.chartOptions.animation = {duration: 0};\n        this.$refs.chart.renderChart(this.chartData, this.chartOptions);\n        delete this.chartOptions.animation;\n        if (this.currentPoint !== null)\n          this.selectPoint();\n        this.setCanvasStatus(datasets[index].label + \" trend line\");\n      },\n      selectPoint() {\n        /* handle update to this.currentPoint */\n        if (this.currentLine === null)\n          this.currentLine = 0;\n        const chart = this.$refs.chart.$data._chart;\n        const meta = chart.getDatasetMeta(this.currentLine);\n        const rect = chart.canvas.getBoundingClientRect();\n        const point = meta.data[this.currentPoint].getCenterPoint();\n        chart.canvas.dispatchEvent(new MouseEvent('mousemove', {\n          clientX: rect.left + point.x,\n          clientY: rect.top + point.y\n        }));\n        const dataset = this.chartData.datasets[this.currentLine];\n        const value = dataset.data[this.currentPoint];\n        this.setCanvasStatus(`${dataset.label} ${this.formatYearRange(this.chartData.labels[this.currentPoint])} ${this.formatValue(value)}`);\n\n        // play sound when point selected\n        if (this.soundsOn) {\n          const halfStep = 2**(1/12);\n          const scaledValue = value / meta.dataset._scale.max;\n          let note;\n          if (this.useScales) {\n            // musical scale version\n            const baseNote = 110;  // start two octaves below middle A\n            const scale = this.soundScales[this.currentSoundScale];\n            const octaves = 4;  // total octaves of notes we have to work with\n            const granularity = octaves * scale.length;  // total notes we have to work with\n            let quantizedValue = Math.floor(scaledValue * granularity);\n            quantizedValue += this.currentLine % 12;  // each line gets its own key\n            const halfSteps = Math.floor(quantizedValue / scale.length) * 12 + scale[quantizedValue % scale.length];\n            note = baseNote * halfStep ** halfSteps;\n          } else {\n            // continuous frequency version\n            const baseNote = 220;\n            const octaves = 3;\n            const halfSteps = scaledValue * 12 * octaves;\n            note = baseNote * halfStep ** halfSteps;\n          }\n          if (this.synthStopTime === null)\n            this.synth.triggerAttack(note);\n          else\n            this.synth.setNote(note);\n          this.synthStopTime = Tone.now() + this.soundPlaySpeed/1000;\n          setTimeout(this.endSounds, this.soundPlaySpeed);\n        }\n      },\n      endSounds() {\n        if (this.synthStopTime === null || this.synthStopTime <= Tone.now()) {\n          this.synth.triggerRelease();\n          this.synthStopTime = null;\n        } else {\n          setTimeout(this.endSounds, this.soundPlaySpeed);\n        }\n      },\n      setCanvasStatus: debounce(function(status){\n        this.canvasStatus = status;\n      }, 500),\n      clickLegendItem(datasetIndex) {\n        /* trigger a click event on legend item for given dataset index */\n        const chart = this.$refs.chart.$data._chart;\n        const legend = chart.legend;\n        legend.options.onClick.call(legend, null, legend.legendItems[datasetIndex]);\n      },\n      legendItemOnClick(e, legendItem) {\n        /* handle click on legend item */\n        const term = this.chartData.datasets[legendItem.datasetIndex].label;\n        const index = this.deselectedTerms.indexOf(term);\n        if (index === -1)\n          this.deselectedTerms.push(term);\n        else\n          this.deselectedTerms.splice(index, 1);\n      },\n      chartOnClick(e, targets) {\n        if (!targets.length)\n          return;\n        const chart = this.$refs.chart.$data._chart;\n        const point = chart.getElementAtEvent(e)[0];\n        this.currentPoint = point._index;\n        this.currentLine = point._datasetIndex;\n        this.searchForPoint(point._datasetIndex, point._index);\n      },\n      searchForPoint(termIndex, pointIndex) {\n        const year = this.chartData.labels[pointIndex];\n        const term = this.chartData.datasets[termIndex].label;\n        const params = this.rawData.results[term].params;\n        this.$refs.searchResults.search(term, params, year-this.smoothingWindow, year+this.smoothingWindow);\n      },\n      beforeDraw(chart) {\n        /*\n          Runs before each chart.js animation frame.\n          Draw the chart background (white background and credit line).\n        */\n        const ctx = chart.chart.ctx;\n        const canvas = ctx.canvas;\n        const w = canvas.clientWidth;\n        const h = canvas.clientHeight;\n        ctx.save();\n        // white background for PNG download\n        ctx.fillStyle = \"#FFF\";\n        ctx.fillRect(0, 0, w, h);\n        // credit text\n        ctx.fillStyle = \"#888\";\n        ctx.font = \"10px Arial\";\n        ctx.textAlign = \"right\";\n        ctx.fillText(`Caselaw Access Project${w>400?' at Harvard Law School':''}. ${this.baseUrl}`, w-5, h-11);\n        ctx.restore();\n      },\n      handleWindowResize() {\n        /* try to set chart height to 400, but allow it to shrink down to 200 if window height is too small */\n        const availableHeight = window.innerHeight - document.getElementById('main-nav').offsetHeight;\n        this.chartHeight = max(200, min(availableHeight, 400));\n      },\n      afterLayout(chart) {\n        /*\n          Runs after chart.js calculates layout.\n          Resize chart when legend height changes, so legend doesn't squeeze out the chart itself.\n        */\n        this.chartLegendHeight = chart.legend.height;\n      },\n      afterRender() {\n        /* Runs after chart.js finishes animating an update. */\n        this.screenshotReady = true;  // let screenshot tool know that page is ready\n      },\n      clickHelpButton() {\n        document.getElementById('helpPanelButton').click();\n      },\n      helpLinkClicked(event) {\n        /* hide the help panel when a link inside is clicked */\n        if (event.target.tagName === \"A\")\n          this.clickHelpButton();\n      }\n    },\n  }\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./main.vue?vue&type=template&id=81120aca&\"\nimport script from \"./main.vue?vue&type=script&lang=js&\"\nexport * from \"./main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport Main from './main.vue'\n\nVue.config.devtools = true;\nVue.config.productionTip = false;\n\nVue.use(VueRouter);\nconst router = new VueRouter({\n  mode: 'history',\n  base: '/trends/',\n  routes: [\n    {path: '/', component: Main, name: 'main'},\n    {path: '*', redirect: '/'},\n  ]\n});\nnew Vue({\n  el: '#app',\n  components: { Main },\n  template: '<Main/>',\n  router\n});","define([\"../core/Tone\", \"../shim/AudioContext\", \"../shim/BufferSourceNode\",\n\t\"../core/Context\", \"../core/Gain\"], function(Tone){\n\n\tif (Tone.supported && !Tone.global.AudioContext.prototype.createConstantSource){\n\n\t\tvar ConstantSourceNode = function(context){\n\t\t\tthis.context = context;\n\n\t\t\tvar buffer = context.createBuffer(1, 128, context.sampleRate);\n\t\t\tvar arr = buffer.getChannelData(0);\n\t\t\tfor (var i = 0; i < arr.length; i++){\n\t\t\t\tarr[i] = 1;\n\t\t\t}\n\n\t\t\tthis._bufferSource = context.createBufferSource();\n\t\t\tthis._bufferSource.channelCount = 1;\n\t\t\tthis._bufferSource.channelCountMode = \"explicit\";\n\t\t\tthis._bufferSource.buffer = buffer;\n\t\t\tthis._bufferSource.loop = true;\n\n\t\t\tvar gainNode = this._output = context.createGain();\n\t\t\tthis.offset = gainNode.gain;\n\n\t\t\tthis._bufferSource.connect(gainNode);\n\t\t};\n\n\t\tConstantSourceNode.prototype.start = function(time){\n\t\t\tthis._bufferSource.start(time);\n\t\t\treturn this;\n\t\t};\n\n\t\tConstantSourceNode.prototype.stop = function(time){\n\t\t\tthis._bufferSource.stop(time);\n\t\t\treturn this;\n\t\t};\n\n\t\tConstantSourceNode.prototype.connect = function(){\n\t\t\tthis._output.connect.apply(this._output, arguments);\n\t\t\treturn this;\n\t\t};\n\n\t\tConstantSourceNode.prototype.disconnect = function(){\n\t\t\tthis._output.disconnect.apply(this._output, arguments);\n\t\t\treturn this;\n\t\t};\n\n\t\tAudioContext.prototype.createConstantSource = function(){\n\t\t\treturn new ConstantSourceNode(this);\n\t\t};\n\n\t\tTone.Context.prototype.createConstantSource = function(){\n\t\t\treturn new ConstantSourceNode(this);\n\t\t};\n\t}\n});\n","define([\"../core/Tone\"], function(Tone){\n\tif (Tone.supported){\n\n\t\tif (!Tone.global.hasOwnProperty(\"OfflineAudioContext\") && Tone.global.hasOwnProperty(\"webkitOfflineAudioContext\")){\n\t\t\tTone.global.OfflineAudioContext = Tone.global.webkitOfflineAudioContext;\n\t\t}\n\n\t\t//returns promise?\n\t\tvar context = new OfflineAudioContext(1, 1, 44100);\n\t\tvar ret = context.startRendering();\n\t\tif (!(ret && Tone.isFunction(ret.then))){\n\t\t\tOfflineAudioContext.prototype._native_startRendering = OfflineAudioContext.prototype.startRendering;\n\t\t\tOfflineAudioContext.prototype.startRendering = function(){\n\t\t\t\treturn new Promise(function(done){\n\t\t\t\t\tthis.oncomplete = function(e){\n\t\t\t\t\t\tdone(e.renderedBuffer);\n\t\t\t\t\t};\n\t\t\t\t\tthis._native_startRendering();\n\t\t\t\t}.bind(this));\n\t\t\t};\n\t\t}\n\t}\n});\n","define([\"../core/Tone\", \"../type/Type\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Similar to Tone.Timeline, but all events represent\n\t *         intervals with both \"time\" and \"duration\" times. The\n\t *         events are placed in a tree structure optimized\n\t *         for querying an intersection point with the timeline\n\t *         events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n\t *         to represent the data.\n\t *  @extends {Tone}\n\t */\n\tTone.IntervalTimeline = function(){\n\n\t\tTone.call(this);\n\n\t\t/**\n\t\t *  The root node of the inteval tree\n\t\t *  @type  {IntervalNode}\n\t\t *  @private\n\t\t */\n\t\tthis._root = null;\n\n\t\t/**\n\t\t *  Keep track of the length of the timeline.\n\t\t *  @type  {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._length = 0;\n\t};\n\n\tTone.extend(Tone.IntervalTimeline);\n\n\t/**\n\t *  The event to add to the timeline. All events must\n\t *  have a time and duration value\n\t *  @param  {Object}  event  The event to add to the timeline\n\t *  @return  {Tone.IntervalTimeline}  this\n\t */\n\tTone.IntervalTimeline.prototype.add = function(event){\n\t\tif (Tone.isUndef(event.time) || Tone.isUndef(event.duration)){\n\t\t\tthrow new Error(\"Tone.IntervalTimeline: events must have time and duration parameters\");\n\t\t}\n\t\tevent.time = event.time.valueOf();\n\t\tvar node = new IntervalNode(event.time, event.time + event.duration, event);\n\t\tif (this._root === null){\n\t\t\tthis._root = node;\n\t\t} else {\n\t\t\tthis._root.insert(node);\n\t\t}\n\t\tthis._length++;\n\t\t// Restructure tree to be balanced\n\t\twhile (node !== null){\n\t\t\tnode.updateHeight();\n\t\t\tnode.updateMax();\n\t\t\tthis._rebalance(node);\n\t\t\tnode = node.parent;\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Remove an event from the timeline.\n\t *  @param  {Object}  event  The event to remove from the timeline\n\t *  @return  {Tone.IntervalTimeline}  this\n\t */\n\tTone.IntervalTimeline.prototype.remove = function(event){\n\t\tif (this._root !== null){\n\t\t\tvar results = [];\n\t\t\tthis._root.search(event.time, results);\n\t\t\tfor (var i = 0; i < results.length; i++){\n\t\t\t\tvar node = results[i];\n\t\t\t\tif (node.event === event){\n\t\t\t\t\tthis._removeNode(node);\n\t\t\t\t\tthis._length--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  The number of items in the timeline.\n\t *  @type {Number}\n\t *  @memberOf Tone.IntervalTimeline#\n\t *  @name length\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.IntervalTimeline.prototype, \"length\", {\n\t\tget : function(){\n\t\t\treturn this._length;\n\t\t}\n\t});\n\n\t/**\n\t *  Remove events whose time time is after the given time\n\t *  @param  {Number}  time  The time to query.\n\t *  @returns {Tone.IntervalTimeline} this\n\t */\n\tTone.IntervalTimeline.prototype.cancel = function(after){\n\t\tthis.forEachFrom(after, function(event){\n\t\t\tthis.remove(event);\n\t\t}.bind(this));\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Set the root node as the given node\n\t *  @param {IntervalNode} node\n\t *  @private\n\t */\n\tTone.IntervalTimeline.prototype._setRoot = function(node){\n\t\tthis._root = node;\n\t\tif (this._root !== null){\n\t\t\tthis._root.parent = null;\n\t\t}\n\t};\n\n\t/**\n\t *  Replace the references to the node in the node's parent\n\t *  with the replacement node.\n\t *  @param  {IntervalNode}  node\n\t *  @param  {IntervalNode}  replacement\n\t *  @private\n\t */\n\tTone.IntervalTimeline.prototype._replaceNodeInParent = function(node, replacement){\n\t\tif (node.parent !== null){\n\t\t\tif (node.isLeftChild()){\n\t\t\t\tnode.parent.left = replacement;\n\t\t\t} else {\n\t\t\t\tnode.parent.right = replacement;\n\t\t\t}\n\t\t\tthis._rebalance(node.parent);\n\t\t} else {\n\t\t\tthis._setRoot(replacement);\n\t\t}\n\t};\n\n\t/**\n\t *  Remove the node from the tree and replace it with\n\t *  a successor which follows the schema.\n\t *  @param  {IntervalNode}  node\n\t *  @private\n\t */\n\tTone.IntervalTimeline.prototype._removeNode = function(node){\n\t\tif (node.left === null && node.right === null){\n\t\t\tthis._replaceNodeInParent(node, null);\n\t\t} else if (node.right === null){\n\t\t\tthis._replaceNodeInParent(node, node.left);\n\t\t} else if (node.left === null){\n\t\t\tthis._replaceNodeInParent(node, node.right);\n\t\t} else {\n\t\t\tvar balance = node.getBalance();\n\t\t\tvar replacement, temp;\n\t\t\tif (balance > 0){\n\t\t\t\tif (node.left.right === null){\n\t\t\t\t\treplacement = node.left;\n\t\t\t\t\treplacement.right = node.right;\n\t\t\t\t\ttemp = replacement;\n\t\t\t\t} else {\n\t\t\t\t\treplacement = node.left.right;\n\t\t\t\t\twhile (replacement.right !== null){\n\t\t\t\t\t\treplacement = replacement.right;\n\t\t\t\t\t}\n\t\t\t\t\treplacement.parent.right = replacement.left;\n\t\t\t\t\ttemp = replacement.parent;\n\t\t\t\t\treplacement.left = node.left;\n\t\t\t\t\treplacement.right = node.right;\n\t\t\t\t}\n\t\t\t} else if (node.right.left === null){\n\t\t\t\treplacement = node.right;\n\t\t\t\treplacement.left = node.left;\n\t\t\t\ttemp = replacement;\n\t\t\t} else {\n\t\t\t\treplacement = node.right.left;\n\t\t\t\twhile (replacement.left !== null){\n\t\t\t\t\treplacement = replacement.left;\n\t\t\t\t}\n\t\t\t\treplacement.parent = replacement.parent;\n\t\t\t\treplacement.parent.left = replacement.right;\n\t\t\t\ttemp = replacement.parent;\n\t\t\t\treplacement.left = node.left;\n\t\t\t\treplacement.right = node.right;\n\t\t\t}\n\t\t\tif (node.parent !== null){\n\t\t\t\tif (node.isLeftChild()){\n\t\t\t\t\tnode.parent.left = replacement;\n\t\t\t\t} else {\n\t\t\t\t\tnode.parent.right = replacement;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._setRoot(replacement);\n\t\t\t}\n\t\t\t// this._replaceNodeInParent(node, replacement);\n\t\t\tthis._rebalance(temp);\n\t\t}\n\t\tnode.dispose();\n\t};\n\n\t/**\n\t *  Rotate the tree to the left\n\t *  @param  {IntervalNode}  node\n\t *  @private\n\t */\n\tTone.IntervalTimeline.prototype._rotateLeft = function(node){\n\t\tvar parent = node.parent;\n\t\tvar isLeftChild = node.isLeftChild();\n\n\t\t// Make node.right the new root of this sub tree (instead of node)\n\t\tvar pivotNode = node.right;\n\t\tnode.right = pivotNode.left;\n\t\tpivotNode.left = node;\n\n\t\tif (parent !== null){\n\t\t\tif (isLeftChild){\n\t\t\t\tparent.left = pivotNode;\n\t\t\t} else {\n\t\t\t\tparent.right = pivotNode;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._setRoot(pivotNode);\n\t\t}\n\t};\n\n\t/**\n\t *  Rotate the tree to the right\n\t *  @param  {IntervalNode}  node\n\t *  @private\n\t */\n\tTone.IntervalTimeline.prototype._rotateRight = function(node){\n\t\tvar parent = node.parent;\n\t\tvar isLeftChild = node.isLeftChild();\n\n\t\t// Make node.left the new root of this sub tree (instead of node)\n\t\tvar pivotNode = node.left;\n\t\tnode.left = pivotNode.right;\n\t\tpivotNode.right = node;\n\n\t\tif (parent !== null){\n\t\t\tif (isLeftChild){\n\t\t\t\tparent.left = pivotNode;\n\t\t\t} else {\n\t\t\t\tparent.right = pivotNode;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._setRoot(pivotNode);\n\t\t}\n\t};\n\n\t/**\n\t *  Balance the BST\n\t *  @param  {IntervalNode}  node\n\t *  @private\n\t */\n\tTone.IntervalTimeline.prototype._rebalance = function(node){\n\t\tvar balance = node.getBalance();\n\t\tif (balance > 1){\n\t\t\tif (node.left.getBalance() < 0){\n\t\t\t\tthis._rotateLeft(node.left);\n\t\t\t} else {\n\t\t\t\tthis._rotateRight(node);\n\t\t\t}\n\t\t} else if (balance < -1){\n\t\t\tif (node.right.getBalance() > 0){\n\t\t\t\tthis._rotateRight(node.right);\n\t\t\t} else {\n\t\t\t\tthis._rotateLeft(node);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t *  Get an event whose time and duration span the give time. Will\n\t *  return the match whose \"time\" value is closest to the given time.\n\t *  @param  {Object}  event  The event to add to the timeline\n\t *  @return  {Object}  The event which spans the desired time\n\t */\n\tTone.IntervalTimeline.prototype.get = function(time){\n\t\tif (this._root !== null){\n\t\t\tvar results = [];\n\t\t\tthis._root.search(time, results);\n\t\t\tif (results.length > 0){\n\t\t\t\tvar max = results[0];\n\t\t\t\tfor (var i = 1; i < results.length; i++){\n\t\t\t\t\tif (results[i].low > max.low){\n\t\t\t\t\t\tmax = results[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn max.event;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\t/**\n\t *  Iterate over everything in the timeline.\n\t *  @param  {Function}  callback The callback to invoke with every item\n\t *  @returns {Tone.IntervalTimeline} this\n\t */\n\tTone.IntervalTimeline.prototype.forEach = function(callback){\n\t\tif (this._root !== null){\n\t\t\tvar allNodes = [];\n\t\t\tthis._root.traverse(function(node){\n\t\t\t\tallNodes.push(node);\n\t\t\t});\n\t\t\tfor (var i = 0; i < allNodes.length; i++){\n\t\t\t\tvar ev = allNodes[i].event;\n\t\t\t\tif (ev){\n\t\t\t\t\tcallback(ev);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Iterate over everything in the array in which the given time\n\t *  overlaps with the time and duration time of the event.\n\t *  @param  {Number}  time The time to check if items are overlapping\n\t *  @param  {Function}  callback The callback to invoke with every item\n\t *  @returns {Tone.IntervalTimeline} this\n\t */\n\tTone.IntervalTimeline.prototype.forEachAtTime = function(time, callback){\n\t\tif (this._root !== null){\n\t\t\tvar results = [];\n\t\t\tthis._root.search(time, results);\n\t\t\tfor (var i = results.length - 1; i >= 0; i--){\n\t\t\t\tvar ev = results[i].event;\n\t\t\t\tif (ev){\n\t\t\t\t\tcallback(ev);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Iterate over everything in the array in which the time is greater\n\t *  than or equal to the given time.\n\t *  @param  {Number}  time The time to check if items are before\n\t *  @param  {Function}  callback The callback to invoke with every item\n\t *  @returns {Tone.IntervalTimeline} this\n\t */\n\tTone.IntervalTimeline.prototype.forEachFrom = function(time, callback){\n\t\tif (this._root !== null){\n\t\t\tvar results = [];\n\t\t\tthis._root.searchAfter(time, results);\n\t\t\tfor (var i = results.length - 1; i >= 0; i--){\n\t\t\t\tvar ev = results[i].event;\n\t\t\t\tcallback(ev);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Clean up\n\t *  @return  {Tone.IntervalTimeline}  this\n\t */\n\tTone.IntervalTimeline.prototype.dispose = function(){\n\t\tvar allNodes = [];\n\t\tif (this._root !== null){\n\t\t\tthis._root.traverse(function(node){\n\t\t\t\tallNodes.push(node);\n\t\t\t});\n\t\t}\n\t\tfor (var i = 0; i < allNodes.length; i++){\n\t\t\tallNodes[i].dispose();\n\t\t}\n\t\tallNodes = null;\n\t\tthis._root = null;\n\t\treturn this;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tINTERVAL NODE HELPER\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Represents a node in the binary search tree, with the addition\n\t *  of a \"high\" value which keeps track of the highest value of\n\t *  its children.\n\t *  References:\n\t *  https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n\t *  http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n\t *  @param {Number} low\n\t *  @param {Number} high\n\t *  @private\n\t */\n\tvar IntervalNode = function(low, high, event){\n\t\t//the event container\n\t\tthis.event = event;\n\t\t//the low value\n\t\tthis.low = low;\n\t\t//the high value\n\t\tthis.high = high;\n\t\t//the high value for this and all child nodes\n\t\tthis.max = this.high;\n\t\t//the nodes to the left\n\t\tthis._left = null;\n\t\t//the nodes to the right\n\t\tthis._right = null;\n\t\t//the parent node\n\t\tthis.parent = null;\n\t\t//the number of child nodes\n\t\tthis.height = 0;\n\t};\n\n\t/**\n\t *  Insert a node into the correct spot in the tree\n\t *  @param  {IntervalNode}  node\n\t */\n\tIntervalNode.prototype.insert = function(node){\n\t\tif (node.low <= this.low){\n\t\t\tif (this.left === null){\n\t\t\t\tthis.left = node;\n\t\t\t} else {\n\t\t\t\tthis.left.insert(node);\n\t\t\t}\n\t\t} else if (this.right === null){\n\t\t\tthis.right = node;\n\t\t} else {\n\t\t\tthis.right.insert(node);\n\t\t}\n\t};\n\n\t/**\n\t *  Search the tree for nodes which overlap\n\t *  with the given point\n\t *  @param  {Number}  point  The point to query\n\t *  @param  {Array}  results  The array to put the results\n\t */\n\tIntervalNode.prototype.search = function(point, results){\n\t\t// If p is to the right of the rightmost point of any interval\n\t\t// in this node and all children, there won't be any matches.\n\t\tif (point > this.max){\n\t\t\treturn;\n\t\t}\n\t\t// Search left children\n\t\tif (this.left !== null){\n\t\t\tthis.left.search(point, results);\n\t\t}\n\t\t// Check this node\n\t\tif (this.low <= point && this.high > point){\n\t\t\tresults.push(this);\n\t\t}\n\t\t// If p is to the left of the time of this interval,\n\t\t// then it can't be in any child to the right.\n\t\tif (this.low > point){\n\t\t\treturn;\n\t\t}\n\t\t// Search right children\n\t\tif (this.right !== null){\n\t\t\tthis.right.search(point, results);\n\t\t}\n\t};\n\n\t/**\n\t *  Search the tree for nodes which are less\n\t *  than the given point\n\t *  @param  {Number}  point  The point to query\n\t *  @param  {Array}  results  The array to put the results\n\t */\n\tIntervalNode.prototype.searchAfter = function(point, results){\n\t\t// Check this node\n\t\tif (this.low >= point){\n\t\t\tresults.push(this);\n\t\t\tif (this.left !== null){\n\t\t\t\tthis.left.searchAfter(point, results);\n\t\t\t}\n\t\t}\n\t\t// search the right side\n\t\tif (this.right !== null){\n\t\t\tthis.right.searchAfter(point, results);\n\t\t}\n\t};\n\n\t/**\n\t *  Invoke the callback on this element and both it's branches\n\t *  @param  {Function}  callback\n\t */\n\tIntervalNode.prototype.traverse = function(callback){\n\t\tcallback(this);\n\t\tif (this.left !== null){\n\t\t\tthis.left.traverse(callback);\n\t\t}\n\t\tif (this.right !== null){\n\t\t\tthis.right.traverse(callback);\n\t\t}\n\t};\n\n\t/**\n\t *  Update the height of the node\n\t */\n\tIntervalNode.prototype.updateHeight = function(){\n\t\tif (this.left !== null && this.right !== null){\n\t\t\tthis.height = Math.max(this.left.height, this.right.height) + 1;\n\t\t} else if (this.right !== null){\n\t\t\tthis.height = this.right.height + 1;\n\t\t} else if (this.left !== null){\n\t\t\tthis.height = this.left.height + 1;\n\t\t} else {\n\t\t\tthis.height = 0;\n\t\t}\n\t};\n\n\t/**\n\t *  Update the height of the node\n\t */\n\tIntervalNode.prototype.updateMax = function(){\n\t\tthis.max = this.high;\n\t\tif (this.left !== null){\n\t\t\tthis.max = Math.max(this.max, this.left.max);\n\t\t}\n\t\tif (this.right !== null){\n\t\t\tthis.max = Math.max(this.max, this.right.max);\n\t\t}\n\t};\n\n\t/**\n\t *  The balance is how the leafs are distributed on the node\n\t *  @return  {Number}  Negative numbers are balanced to the right\n\t */\n\tIntervalNode.prototype.getBalance = function(){\n\t\tvar balance = 0;\n\t\tif (this.left !== null && this.right !== null){\n\t\t\tbalance = this.left.height - this.right.height;\n\t\t} else if (this.left !== null){\n\t\t\tbalance = this.left.height + 1;\n\t\t} else if (this.right !== null){\n\t\t\tbalance = -(this.right.height + 1);\n\t\t}\n\t\treturn balance;\n\t};\n\n\t/**\n\t *  @returns {Boolean} true if this node is the left child\n\t *  of its parent\n\t */\n\tIntervalNode.prototype.isLeftChild = function(){\n\t\treturn this.parent !== null && this.parent.left === this;\n\t};\n\n\t/**\n\t *  get/set the left node\n\t *  @type {IntervalNode}\n\t */\n\tObject.defineProperty(IntervalNode.prototype, \"left\", {\n\t\tget : function(){\n\t\t\treturn this._left;\n\t\t},\n\t\tset : function(node){\n\t\t\tthis._left = node;\n\t\t\tif (node !== null){\n\t\t\t\tnode.parent = this;\n\t\t\t}\n\t\t\tthis.updateHeight();\n\t\t\tthis.updateMax();\n\t\t}\n\t});\n\n\t/**\n\t *  get/set the right node\n\t *  @type {IntervalNode}\n\t */\n\tObject.defineProperty(IntervalNode.prototype, \"right\", {\n\t\tget : function(){\n\t\t\treturn this._right;\n\t\t},\n\t\tset : function(node){\n\t\t\tthis._right = node;\n\t\t\tif (node !== null){\n\t\t\t\tnode.parent = this;\n\t\t\t}\n\t\t\tthis.updateHeight();\n\t\t\tthis.updateMax();\n\t\t}\n\t});\n\n\t/**\n\t *  null out references.\n\t */\n\tIntervalNode.prototype.dispose = function(){\n\t\tthis.parent = null;\n\t\tthis._left = null;\n\t\tthis._right = null;\n\t\tthis.event = null;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tEND INTERVAL NODE HELPER\n\t///////////////////////////////////////////////////////////////////////////\n\n\treturn Tone.IntervalTimeline;\n});\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","define([\"../core/Tone\", \"../instrument/Instrument\", \"../signal/Signal\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  This is an abstract base class for other monophonic instruments to \n\t *          extend. IMPORTANT: It does not make any sound on its own and\n\t *          shouldn't be directly instantiated.\n\t *\n\t *  @constructor\n\t *  @abstract\n\t *  @extends {Tone.Instrument}\n\t */\n\tTone.Monophonic = function(options){\n\n\t\t//get the defaults\n\t\toptions = Tone.defaultArg(options, Tone.Monophonic.defaults);\n\t\tTone.Instrument.call(this, options);\n\n\t\t/**\n\t\t *  The glide time between notes. \n\t\t *  @type {Time}\n\t\t */\n\t\tthis.portamento = options.portamento;\n\t};\n\n\tTone.extend(Tone.Monophonic, Tone.Instrument);\n\n\t/**\n\t *  @static\n\t *  @const\n\t *  @type {Object}\n\t */\n\tTone.Monophonic.defaults = {\n\t\t\"portamento\" : 0\n\t};\n\n\t/**\n\t *  Trigger the attack of the note optionally with a given velocity. \n\t *  \n\t *  \n\t *  @param  {Frequency} note     The note to trigger.\n\t *  @param  {Time} [time=now]     When the note should start.\n\t *  @param  {number} [velocity=1] velocity The velocity scaler \n\t *                                determines how \"loud\" the note \n\t *                                will be triggered.\n\t *  @returns {Tone.Monophonic} this\n\t *  @example\n\t * synth.triggerAttack(\"C4\");\n\t *  @example\n\t * //trigger the note a half second from now at half velocity\n\t * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n\t */\n\tTone.Monophonic.prototype.triggerAttack = function(note, time, velocity){\n\t\tthis.log(\"triggerAttack\", note, time, velocity);\n\t\ttime = this.toSeconds(time);\n\t\tthis._triggerEnvelopeAttack(time, velocity);\n\t\tthis.setNote(note, time);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Trigger the release portion of the envelope\n\t *  @param  {Time} [time=now] If no time is given, the release happens immediatly\n\t *  @returns {Tone.Monophonic} this\n\t *  @example\n\t * synth.triggerRelease();\n\t */\n\tTone.Monophonic.prototype.triggerRelease = function(time){\n\t\tthis.log(\"triggerRelease\", time);\n\t\ttime = this.toSeconds(time);\n\t\tthis._triggerEnvelopeRelease(time);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  override this method with the actual method\n\t *  @abstract\n\t *  @private\n\t */\t\n\tTone.Monophonic.prototype._triggerEnvelopeAttack = function(){};\n\n\t/**\n\t *  override this method with the actual method\n\t *  @abstract\n\t *  @private\n\t */\t\n\tTone.Monophonic.prototype._triggerEnvelopeRelease = function(){};\n\n\t/**\n\t *  Get the level of the output at the given time. Measures\n\t *  the envelope(s) value at the time. \n\t *  @param {Time} time The time to query the envelope value\n\t *  @return {NormalRange} The output level between 0-1\n\t */\n\tTone.Monophonic.prototype.getLevelAtTime = function(time){\n\t\ttime = this.toSeconds(time);\n\t\treturn this.envelope.getValueAtTime(time);\n\t};\n\n\t/**\n\t *  Set the note at the given time. If no time is given, the note\n\t *  will set immediately. \n\t *  @param {Frequency} note The note to change to.\n\t *  @param  {Time} [time=now] The time when the note should be set. \n\t *  @returns {Tone.Monophonic} this\n\t * @example\n\t * //change to F#6 in one quarter note from now.\n\t * synth.setNote(\"F#6\", \"+4n\");\n\t * @example\n\t * //change to Bb4 right now\n\t * synth.setNote(\"Bb4\");\n\t */\n\tTone.Monophonic.prototype.setNote = function(note, time){\n\t\ttime = this.toSeconds(time);\n\t\tif (this.portamento > 0 && this.getLevelAtTime(time) > 0.05){\n\t\t\tvar portTime = this.toSeconds(this.portamento);\n\t\t\tthis.frequency.exponentialRampTo(note, portTime, time);\n\t\t} else {\n\t\t\tthis.frequency.setValueAtTime(note, time);\n\t\t}\n\t\treturn this;\n\t};\n\n\treturn Tone.Monophonic;\n});\n","define([\"../core/Tone\", \"../shim/OfflineAudioContext\"], function(Tone){\n\n\tif (Tone.supported){\n\t\tif (!Tone.global.hasOwnProperty(\"AudioContext\") && Tone.global.hasOwnProperty(\"webkitAudioContext\")){\n\t\t\tTone.global.AudioContext = Tone.global.webkitAudioContext;\n\t\t}\n\n\t\t//not functionally equivalent, but only an API placeholder\n\t\tif (!AudioContext.prototype.close){\n\t\t\tAudioContext.prototype.close = function(){\n\t\t\t\tif (Tone.isFunction(this.suspend)){\n\t\t\t\t\tthis.suspend();\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve();\n\t\t\t};\n\t\t}\n\n\t\t//not functionally equivalent\n\t\tif (!AudioContext.prototype.resume){\n\t\t\tAudioContext.prototype.resume = function(){\n\t\t\t\t//play some silent audio to jumpstart the context\n\t\t\t\tvar buffer = this.createBuffer(1, 1, this.sampleRate);\n\t\t\t\tvar source = this.createBufferSource();\n\t\t\t\tsource.buffer = buffer;\n\t\t\t\tsource.connect(this.destination);\n\t\t\t\tsource.start(0);\n\t\t\t\treturn Promise.resolve();\n\t\t\t};\n\t\t}\n\n\t\t//createGain\n\t\tif (!AudioContext.prototype.createGain && AudioContext.prototype.createGainNode){\n\t\t\tAudioContext.prototype.createGain = AudioContext.prototype.createGainNode;\n\t\t}\n\n\t\t//createDelay\n\t\tif (!AudioContext.prototype.createDelay && AudioContext.prototype.createDelayNode){\n\t\t\tAudioContext.prototype.createDelay = AudioContext.prototype.createDelayNode;\n\t\t}\n\n\t\t//test decodeAudioData returns a promise\n\t\t// https://github.com/mohayonao/web-audio-api-shim/blob/master/src/AudioContext.js\n\t\t// MIT License (c) 2015 @mohayonao\n\t\tvar decodeAudioDataPromise = false;\n\t\tvar offlineContext = new OfflineAudioContext(1, 1, 44100);\n\t\tvar audioData = new Uint32Array([1179011410, 48, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 8, 0, 0, 0, 0]).buffer;\n\t\ttry {\n\t\t\tvar ret = offlineContext.decodeAudioData(audioData);\n\t\t\tif (ret && Tone.isFunction(ret.then)){\n\t\t\t\tdecodeAudioDataPromise = true;\n\t\t\t}\n\t\t} catch (e){\n\t\t\tdecodeAudioDataPromise = false;\n\t\t}\n\n\t\tif (!decodeAudioDataPromise){\n\t\t\tAudioContext.prototype._native_decodeAudioData = AudioContext.prototype.decodeAudioData;\n\t\t\tAudioContext.prototype.decodeAudioData = function(audioData){\n\t\t\t\treturn new Promise(function(success, error){\n\t\t\t\t\tthis._native_decodeAudioData(audioData, success, error);\n\t\t\t\t}.bind(this));\n\t\t\t};\n\t\t}\n\t}\n});\n","define([\"../core/Tone\", \"../signal/WaveShaper\", \"../type/Type\", \"../core/Param\",\n\t\"../shim/ConstantSourceNode\", \"../core/Gain\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  A signal is an audio-rate value. Tone.Signal is a core component of the library.\n\t *          Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n\t *          has all of the methods available to native Web Audio\n\t *          [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n\t *          as well as additional conveniences. Read more about working with signals\n\t *          [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n\t *\n\t *  @constructor\n\t *  @extends {Tone.Param}\n\t *  @param {Number|AudioParam} [value] Initial value of the signal. If an AudioParam\n\t *                                     is passed in, that parameter will be wrapped\n\t *                                     and controlled by the Signal.\n\t *  @param {string} [units=Number] unit The units the signal is in.\n\t *  @example\n\t * var signal = new Tone.Signal(10);\n\t */\n\tTone.Signal = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"value\", \"units\"], Tone.Signal);\n\t\tTone.Param.call(this, options);\n\n\t\t/**\n\t\t * The constant source node which generates the signal\n\t\t * @type {ConstantSourceNode}\n\t\t * @private\n\t\t */\n\t\tthis._constantSource = this.context.createConstantSource();\n\t\tthis._constantSource.start(0);\n\t\tthis._param = this._constantSource.offset;\n\t\tthis.value = options.value;\n\n\t\t/**\n\t\t * The node where the constant signal value is scaled.\n\t\t * @type {GainNode}\n\t\t * @private\n\t\t */\n\t\tthis.output = this._constantSource;\n\n\t\t/**\n\t\t * The node where the value is set.\n\t\t * @type {Tone.Param}\n\t\t * @private\n\t\t */\n\t\tthis.input = this._param = this.output.offset;\n\t};\n\n\tTone.extend(Tone.Signal, Tone.Param);\n\n\t/**\n\t *  The default values\n\t *  @type  {Object}\n\t *  @static\n\t *  @const\n\t */\n\tTone.Signal.defaults = {\n\t\t\"value\" : 0,\n\t\t\"units\" : Tone.Type.Default,\n\t\t\"convert\" : true,\n\t};\n\n\t//use SignalBase's connect/disconnect methods\n\tTone.Signal.prototype.connect = Tone.SignalBase.prototype.connect;\n\tTone.Signal.prototype.disconnect = Tone.SignalBase.prototype.disconnect;\n\n\t/**\n\t * Return the current signal value at the given time.\n\t * @param  {Time} time When to get the signal value\n\t * @return {Number}\n\t */\n\tTone.Signal.prototype.getValueAtTime = function(time){\n\t\tif (this._param.getValueAtTime){\n\t\t\treturn this._param.getValueAtTime(time);\n\t\t} else {\n\t\t\treturn Tone.Param.prototype.getValueAtTime.call(this, time);\n\t\t}\n\t};\n\n\t/**\n\t *  dispose and disconnect\n\t *  @returns {Tone.Signal} this\n\t */\n\tTone.Signal.prototype.dispose = function(){\n\t\tTone.Param.prototype.dispose.call(this);\n\t\tthis._constantSource.disconnect();\n\t\tthis._constantSource = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Signal;\n});\n","define([\"../core/Tone\", \"../type/TimeBase\", \"../type/Frequency\"], function(Tone){\n\n\t/**\n\t *  @class Tone.Time is a primitive type for encoding Time values.\n\t *         Tone.Time can be constructed with or without the `new` keyword. Tone.Time can be passed\n\t *         into the parameter of any method which takes time as an argument.\n\t *  @constructor\n\t *  @extends {Tone.TimeBase}\n\t *  @param  {String|Number|Object}  val    The time value.\n\t *  @param  {String=}  units  The units of the value.\n\t *  @example\n\t * var t = Tone.Time(\"4n\");//a quarter note\n\t */\n\tTone.Time = function(val, units){\n\t\tif (this instanceof Tone.Time){\n\n\t\t\tTone.TimeBase.call(this, val, units);\n\n\t\t} else {\n\t\t\treturn new Tone.Time(val, units);\n\t\t}\n\t};\n\n\tTone.extend(Tone.Time, Tone.TimeBase);\n\n\t/**\n\t * Extend the base expressions\n\t */\n\tTone.Time.prototype._expressions = Object.assign({}, Tone.TimeBase.prototype._expressions, {\n\t\t\"quantize\" : {\n\t\t\tregexp : /^@(.+)/,\n\t\t\tmethod : function(capture){\n\t\t\t\tif (Tone.Transport){\n\t\t\t\t\tvar quantTo = new this.constructor(capture);\n\t\t\t\t\treturn this._secondsToUnits(Tone.Transport.nextSubdivision(quantTo));\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"now\" : {\n\t\t\tregexp : /^\\+(.+)/,\n\t\t\tmethod : function(capture){\n\t\t\t\treturn this._now() + (new this.constructor(capture));\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  Quantize the time by the given subdivision. Optionally add a\n\t *  percentage which will move the time value towards the ideal\n\t *  quantized value by that percentage.\n\t *  @param  {Number|Time}  val    The subdivision to quantize to\n\t *  @param  {NormalRange}  [percent=1]  Move the time value\n\t *                                   towards the quantized value by\n\t *                                   a percentage.\n\t *  @return  {Number}  this\n\t *  @example\n\t * Tone.Time(21).quantize(2) //returns 22\n\t * Tone.Time(0.6).quantize(\"4n\", 0.5) //returns 0.55\n\t */\n\tTone.Time.prototype.quantize = function(subdiv, percent){\n\t\tpercent = Tone.defaultArg(percent, 1);\n\t\tvar subdivision = new this.constructor(subdiv);\n\t\tvar value = this.valueOf();\n\t\tvar multiple = Math.round(value / subdivision);\n\t\tvar ideal = multiple * subdivision;\n\t\tvar diff = ideal - value;\n\t\treturn value + diff * percent;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// CONVERSIONS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Convert a Time to Notation. The notation values are will be the\n\t *  closest representation between 1m to 128th note.\n\t *  @return {Notation}\n\t *  @example\n\t * //if the Transport is at 120bpm:\n\t * Tone.Time(2).toNotation();//returns \"1m\"\n\t */\n\tTone.Time.prototype.toNotation = function(){\n\t\tvar time = this.toSeconds();\n\t\tvar testNotations = [\"1m\"];\n\t\tfor (var power = 1; power < 8; power++){\n\t\t\tvar subdiv = Math.pow(2, power);\n\t\t\ttestNotations.push(subdiv + \"n.\");\n\t\t\ttestNotations.push(subdiv + \"n\");\n\t\t\ttestNotations.push(subdiv + \"t\");\n\t\t}\n\t\ttestNotations.push(\"0\");\n\t\t//find the closets notation representation\n\t\tvar closest = testNotations[0];\n\t\tvar closestSeconds = Tone.Time(testNotations[0]).toSeconds();\n\t\ttestNotations.forEach(function(notation){\n\t\t\tvar notationSeconds = Tone.Time(notation).toSeconds();\n\t\t\tif (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)){\n\t\t\t\tclosest = notation;\n\t\t\t\tclosestSeconds = notationSeconds;\n\t\t\t}\n\t\t});\n\t\treturn closest;\n\t};\n\n\t/**\n\t *  Return the time encoded as Bars:Beats:Sixteenths.\n\t *  @return  {BarsBeatsSixteenths}\n\t */\n\tTone.Time.prototype.toBarsBeatsSixteenths = function(){\n\t\tvar quarterTime = this._beatsToUnits(1);\n\t\tvar quarters = this.valueOf() / quarterTime;\n\t\tquarters = parseFloat(quarters.toFixed(4));\n\t\tvar measures = Math.floor(quarters / this._getTimeSignature());\n\t\tvar sixteenths = (quarters % 1) * 4;\n\t\tquarters = Math.floor(quarters) % this._getTimeSignature();\n\t\tsixteenths = sixteenths.toString();\n\t\tif (sixteenths.length > 3){\n\t\t\t// the additional parseFloat removes insignificant trailing zeroes\n\t\t\tsixteenths = parseFloat(parseFloat(sixteenths).toFixed(3));\n\t\t}\n\t\tvar progress = [measures, quarters, sixteenths];\n\t\treturn progress.join(\":\");\n\t};\n\n\t/**\n\t *  Return the time in ticks.\n\t *  @return  {Ticks}\n\t */\n\tTone.Time.prototype.toTicks = function(){\n\t\tvar quarterTime = this._beatsToUnits(1);\n\t\tvar quarters = this.valueOf() / quarterTime;\n\t\treturn Math.round(quarters * this._getPPQ());\n\t};\n\n\t/**\n\t *  Return the time in seconds.\n\t *  @return  {Seconds}\n\t */\n\tTone.Time.prototype.toSeconds = function(){\n\t\treturn this.valueOf();\n\t};\n\n\t/**\n\t *  Return the value as a midi note.\n\t *  @return  {Midi}\n\t */\n\tTone.Time.prototype.toMidi = function(){\n\t\treturn Tone.Frequency.ftom(this.toFrequency());\n\t};\n\n\treturn Tone.Time;\n});\n","define([\"../core/Tone\", \"../type/Time\", \"../type/Frequency\", \"../type/TransportTime\", \"../core/Context\"], function(Tone){\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tTYPES\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t * Units which a value can take on.\n\t * @enum {String}\n\t */\n\tTone.Type = {\n\t\t/**\n\t\t *  Default units\n\t\t *  @typedef {Default}\n\t\t */\n\t\tDefault : \"number\",\n\t\t/**\n\t\t *  Time can be described in a number of ways. Read more [Time](https://github.com/Tonejs/Tone.js/wiki/Time).\n\t\t *\n\t\t *  * Numbers, which will be taken literally as the time (in seconds).\n\t\t *  * Notation, (\"4n\", \"8t\") describes time in BPM and time signature relative values.\n\t\t *  * TransportTime, (\"4:3:2\") will also provide tempo and time signature relative times\n\t\t *  in the form BARS:QUARTERS:SIXTEENTHS.\n\t\t *  * Frequency, (\"8hz\") is converted to the length of the cycle in seconds.\n\t\t *  * Now-Relative, (\"+1\") prefix any of the above with \"+\" and it will be interpreted as\n\t\t *  \"the current time plus whatever expression follows\".\n\t\t *  * Object, ({\"4n\" : 3, \"8t\" : -1}). The resulting time is equal to the sum of all of the keys multiplied by the values in the object. \n\t\t *  * No Argument, for methods which accept time, no argument will be interpreted as\n\t\t *  \"now\" (i.e. the currentTime).\n\t\t *\n\t\t *  @typedef {Time}\n\t\t */\n\t\tTime : \"time\",\n\t\t/**\n\t\t *  Frequency can be described similar to time, except ultimately the\n\t\t *  values are converted to frequency instead of seconds. A number\n\t\t *  is taken literally as the value in hertz. Additionally any of the\n\t\t *  Time encodings can be used. Note names in the form\n\t\t *  of NOTE OCTAVE (i.e. C4) are also accepted and converted to their\n\t\t *  frequency value.\n\t\t *  @typedef {Frequency}\n\t\t */\n\t\tFrequency : \"frequency\",\n\t\t/**\n\t\t *  TransportTime describes a position along the Transport's timeline. It is\n\t\t *  similar to Time in that it uses all the same encodings, but TransportTime specifically\n\t\t *  pertains to the Transport's timeline, which is startable, stoppable, loopable, and seekable.\n\t\t *  [Read more](https://github.com/Tonejs/Tone.js/wiki/TransportTime)\n\t\t *  @typedef {TransportTime}\n\t\t */\n\t\tTransportTime : \"transportTime\",\n\t\t/**\n\t\t *  Ticks are the basic subunit of the Transport. They are\n\t\t *  the smallest unit of time that the Transport supports.\n\t\t *  @typedef {Ticks}\n\t\t */\n\t\tTicks : \"ticks\",\n\t\t/**\n\t\t *  Normal values are within the range [0, 1].\n\t\t *  @typedef {NormalRange}\n\t\t */\n\t\tNormalRange : \"normalRange\",\n\t\t/**\n\t\t *  AudioRange values are between [-1, 1].\n\t\t *  @typedef {AudioRange}\n\t\t */\n\t\tAudioRange : \"audioRange\",\n\t\t/**\n\t\t *  Decibels are a logarithmic unit of measurement which is useful for volume\n\t\t *  because of the logarithmic way that we perceive loudness. 0 decibels\n\t\t *  means no change in volume. -10db is approximately half as loud and 10db\n\t\t *  is twice is loud.\n\t\t *  @typedef {Decibels}\n\t\t */\n\t\tDecibels : \"db\",\n\t\t/**\n\t\t *  Half-step note increments, i.e. 12 is an octave above the root. and 1 is a half-step up.\n\t\t *  @typedef {Interval}\n\t\t */\n\t\tInterval : \"interval\",\n\t\t/**\n\t\t *  Beats per minute.\n\t\t *  @typedef {BPM}\n\t\t */\n\t\tBPM : \"bpm\",\n\t\t/**\n\t\t *  The value must be greater than or equal to 0.\n\t\t *  @typedef {Positive}\n\t\t */\n\t\tPositive : \"positive\",\n\t\t/**\n\t\t *  Gain is the ratio between input and output of a signal.\n\t\t *  A gain of 0 is the same as silencing the signal. A gain of\n\t\t *  1, causes no change to the incoming signal.\n\t\t *  @typedef {Gain}\n\t\t */\n\t\tGain : \"gain\",\n\t\t/**\n\t\t *  A cent is a hundredth of a semitone.\n\t\t *  @typedef {Cents}\n\t\t */\n\t\tCents : \"cents\",\n\t\t/**\n\t\t *  Angle between 0 and 360.\n\t\t *  @typedef {Degrees}\n\t\t */\n\t\tDegrees : \"degrees\",\n\t\t/**\n\t\t *  A number representing a midi note.\n\t\t *  @typedef {MIDI}\n\t\t */\n\t\tMIDI : \"midi\",\n\t\t/**\n\t\t *  A colon-separated representation of time in the form of\n\t\t *  Bars:Beats:Sixteenths.\n\t\t *  @typedef {BarsBeatsSixteenths}\n\t\t */\n\t\tBarsBeatsSixteenths : \"barsBeatsSixteenths\",\n\t\t/**\n\t\t *  Sampling is the reduction of a continuous signal to a discrete signal.\n\t\t *  Audio is typically sampled 44100 times per second.\n\t\t *  @typedef {Samples}\n\t\t */\n\t\tSamples : \"samples\",\n\t\t/**\n\t\t *  Hertz are a frequency representation defined as one cycle per second.\n\t\t *  @typedef {Hertz}\n\t\t */\n\t\tHertz : \"hertz\",\n\t\t/**\n\t\t *  A frequency represented by a letter name,\n\t\t *  accidental and octave. This system is known as\n\t\t *  [Scientific Pitch Notation](https://en.wikipedia.org/wiki/Scientific_pitch_notation).\n\t\t *  @typedef {Note}\n\t\t */\n\t\tNote : \"note\",\n\t\t/**\n\t\t *  One millisecond is a thousandth of a second.\n\t\t *  @typedef {Milliseconds}\n\t\t */\n\t\tMilliseconds : \"milliseconds\",\n\t\t/**\n\t\t *  Seconds are the time unit of the AudioContext. In the end,\n\t\t *  all values need to be evaluated to seconds.\n\t\t *  @typedef {Seconds}\n\t\t */\n\t\tSeconds : \"seconds\",\n\t\t/**\n\t\t *  A string representing a duration relative to a measure.\n\t\t *  * \"4n\" = quarter note\n\t\t *  * \"2m\" = two measures\n\t\t *  * \"8t\" = eighth-note triplet\n\t\t *  @typedef {Notation}\n\t\t */\n\t\tNotation : \"notation\",\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// AUGMENT TONE's PROTOTYPE\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Convert Time into seconds.\n\t *\n\t *  Unlike the method which it overrides, this takes into account\n\t *  transporttime and musical notation.\n\t *\n\t *  Time : 1.40\n\t *  Notation: 4n or 1m or 2t\n\t *  Now Relative: +3n\n\t *\n\t *  @param  {Time} time\n\t *  @return {Seconds}\n\t */\n\tTone.prototype.toSeconds = function(time){\n\t\tif (Tone.isNumber(time)){\n\t\t\treturn time;\n\t\t} else if (Tone.isUndef(time)){\n\t\t\treturn this.now();\n\t\t} else if (Tone.isString(time) || Tone.isObject(time)){\n\t\t\treturn (new Tone.Time(time)).toSeconds();\n\t\t} else if (time instanceof Tone.TimeBase){\n\t\t\treturn time.toSeconds();\n\t\t}\n\t};\n\n\t/**\n\t *  Convert a frequency representation into a number.\n\t *  @param  {Frequency} freq\n\t *  @return {Hertz}      the frequency in hertz\n\t */\n\tTone.prototype.toFrequency = function(freq){\n\t\tif (Tone.isNumber(freq)){\n\t\t\treturn freq;\n\t\t} else if (Tone.isString(freq) || Tone.isUndef(freq) || Tone.isObject(freq)){\n\t\t\treturn (new Tone.Frequency(freq)).valueOf();\n\t\t} else if (freq instanceof Tone.TimeBase){\n\t\t\treturn freq.toFrequency();\n\t\t}\n\t};\n\n\t/**\n\t *  Convert a time representation into ticks.\n\t *  @param  {Time} time\n\t *  @return {Ticks}  the time in ticks\n\t */\n\tTone.prototype.toTicks = function(time){\n\t\tif (Tone.isNumber(time) || Tone.isString(time) || Tone.isObject(time)){\n\t\t\treturn (new Tone.TransportTime(time)).toTicks();\n\t\t} else if (Tone.isUndef(time)){\n\t\t\treturn Tone.Transport.ticks;\n\t\t} else if (time instanceof Tone.TimeBase){\n\t\t\treturn time.toTicks();\n\t\t}\n\t};\n\n\treturn Tone;\n});\n","define([\"../core/Tone\", \"../signal/Signal\", \"../core/Gain\", \"../core/AudioNode\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.Volume is a simple volume node, useful for creating a volume fader.\n\t *\n\t *  @extends {Tone.AudioNode}\n\t *  @constructor\n\t *  @param {Decibels} [volume=0] the initial volume\n\t *  @example\n\t * var vol = new Tone.Volume(-12);\n\t * instrument.chain(vol, Tone.Master);\n\t */\n\tTone.Volume = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"volume\"], Tone.Volume);\n\t\tTone.AudioNode.call(this, options);\n\n\t\t/**\n\t\t * the output node\n\t\t * @type {GainNode}\n\t\t * @private\n\t\t */\n\t\tthis.output = this.input = new Tone.Gain(options.volume, Tone.Type.Decibels);\n\n\t\t/**\n\t\t * The unmuted volume\n\t\t * @type {Decibels}\n\t\t * @private\n\t\t */\n\t\tthis._unmutedVolume = options.volume;\n\n\t\t/**\n\t\t *  The volume control in decibels.\n\t\t *  @type {Decibels}\n\t\t *  @signal\n\t\t */\n\t\tthis.volume = this.output.gain;\n\n\t\tthis._readOnly(\"volume\");\n\n\t\t//set the mute initially\n\t\tthis.mute = options.mute;\n\t};\n\n\tTone.extend(Tone.Volume, Tone.AudioNode);\n\n\t/**\n\t *  Defaults\n\t *  @type  {Object}\n\t *  @const\n\t *  @static\n\t */\n\tTone.Volume.defaults = {\n\t\t\"volume\" : 0,\n\t\t\"mute\" : false\n\t};\n\n\t/**\n\t * Mute the output.\n\t * @memberOf Tone.Volume#\n\t * @type {boolean}\n\t * @name mute\n\t * @example\n\t * //mute the output\n\t * volume.mute = true;\n\t */\n\tObject.defineProperty(Tone.Volume.prototype, \"mute\", {\n\t\tget : function(){\n\t\t\treturn this.volume.value === -Infinity;\n\t\t},\n\t\tset : function(mute){\n\t\t\tif (!this.mute && mute){\n\t\t\t\tthis._unmutedVolume = this.volume.value;\n\t\t\t\t//maybe it should ramp here?\n\t\t\t\tthis.volume.value = -Infinity;\n\t\t\t} else if (this.mute && !mute){\n\t\t\t\tthis.volume.value = this._unmutedVolume;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  clean up\n\t *  @returns {Tone.Volume} this\n\t */\n\tTone.Volume.prototype.dispose = function(){\n\t\tthis.input.dispose();\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis._writable(\"volume\");\n\t\tthis.volume.dispose();\n\t\tthis.volume = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Volume;\n});\n","define([\"../core/Tone\", \"../core/Timeline\", \"../type/Type\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  A Timeline State. Provides the methods: <code>setStateAtTime(\"state\", time)</code>\n\t *          and <code>getValueAtTime(time)</code>.\n\t *\n\t *  @extends {Tone.Timeline}\n\t *  @param {String} initial The initial state of the TimelineState. \n\t *                          Defaults to <code>undefined</code>\n\t */\n\tTone.TimelineState = function(initial){\n\n\t\tTone.Timeline.call(this);\n\n\t\t/**\n\t\t *  The initial state\n\t\t *  @private\n\t\t *  @type {String}\n\t\t */\n\t\tthis._initial = initial;\n\t};\n\n\tTone.extend(Tone.TimelineState, Tone.Timeline);\n\n\t/**\n\t *  Returns the scheduled state scheduled before or at\n\t *  the given time.\n\t *  @param  {Number}  time  The time to query.\n\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t */\n\tTone.TimelineState.prototype.getValueAtTime = function(time){\n\t\tvar event = this.get(time);\n\t\tif (event !== null){\n\t\t\treturn event.state;\n\t\t} else {\n\t\t\treturn this._initial;\n\t\t}\n\t};\n\n\t/**\n\t *  Add a state to the timeline.\n\t *  @param  {String}  state The name of the state to set.\n\t *  @param  {Number}  time  The time to query.\n\t *  @returns {Tone.TimelineState} this\n\t */\n\tTone.TimelineState.prototype.setStateAtTime = function(state, time){\n\t\t//all state changes need to be >= the previous state time\n\t\t//TODO throw error if time < the previous event time\n\t\tthis.add({\n\t\t\t\"state\" : state,\n\t\t\t\"time\" : time\n\t\t});\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Return the event before the time with the given state\n\t *  @param {Tone.State} state The state to look for\n\t *  @param  {Time}  time  When to check before\t\t\t\n\t *  @return  {Object}  The event with the given state before the time\n\t */\n\tTone.TimelineState.prototype.getLastState = function(state, time){\n\t\ttime = this.toSeconds(time);\n\t\tvar index = this._search(time);\n\t\tfor (var i = index; i >= 0; i--){\n\t\t\tvar event = this._timeline[i];\n\t\t\tif (event.state === state){\n\t\t\t\treturn event;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t *  Return the event after the time with the given state\n\t *  @param {Tone.State} state The state to look for\n\t *  @param  {Time}  time  When to check from\n\t *  @return  {Object}  The event with the given state after the time\n\t */\n\tTone.TimelineState.prototype.getNextState = function(state, time){\n\t\ttime = this.toSeconds(time);\n\t\tvar index = this._search(time);\n\t\tif (index !== -1){\n\t\t\tfor (var i = index; i < this._timeline.length; i++){\n\t\t\t\tvar event = this._timeline[i];\n\t\t\t\tif (event.state === state){\n\t\t\t\t\treturn event;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn Tone.TimelineState;\n});\n","define([\"../core/Tone\", \"../source/Source\", \"../source/Oscillator\",\n\t\"../signal/Multiply\", \"../core/Gain\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.FMOscillator\n\t *\n\t *  @extends {Tone.Source}\n\t *  @constructor\n\t *  @param {Frequency} frequency The starting frequency of the oscillator.\n\t *  @param {String} type The type of the carrier oscillator.\n\t *  @param {String} modulationType The type of the modulator oscillator.\n\t *  @example\n\t * //a sine oscillator frequency-modulated by a square wave\n\t * var fmOsc = new Tone.FMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t */\n\tTone.FMOscillator = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"modulationType\"], Tone.FMOscillator);\n\t\tTone.Source.call(this, options);\n\n\t\t/**\n\t\t *  The carrier oscillator\n\t\t *  @type {Tone.Oscillator}\n\t\t *  @private\n\t\t */\n\t\tthis._carrier = new Tone.Oscillator(options.frequency, options.type);\n\n\t\t/**\n\t\t *  The oscillator's frequency\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t\t/**\n\t\t *  The detune control signal.\n\t\t *  @type {Cents}\n\t\t *  @signal\n\t\t */\n\t\tthis.detune = this._carrier.detune;\n\t\tthis.detune.value = options.detune;\n\n\t\t/**\n\t\t *  The modulation index which is in essence the depth or amount of the modulation. In other terms it is the\n\t\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t\t *  modulating signal (ma) -- as in ma/mf.\n\t\t *\t@type {Positive}\n\t\t *\t@signal\n\t\t */\n\t\tthis.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\t\tthis.modulationIndex.units = Tone.Type.Positive;\n\n\t\t/**\n\t\t *  The modulating oscillator\n\t\t *  @type  {Tone.Oscillator}\n\t\t *  @private\n\t\t */\n\t\tthis._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\n\t\t/**\n\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t\t *  A harmonicity of 1 gives both oscillators the same frequency.\n\t\t *  Harmonicity = 2 means a change of an octave.\n\t\t *  @type {Positive}\n\t\t *  @signal\n\t\t *  @example\n\t\t * //pitch the modulator an octave below carrier\n\t\t * synth.harmonicity.value = 0.5;\n\t\t */\n\t\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\t\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t\t/**\n\t\t *  the node where the modulation happens\n\t\t *  @type {Tone.Gain}\n\t\t *  @private\n\t\t */\n\t\tthis._modulationNode = new Tone.Gain(0);\n\n\t\t//connections\n\t\tthis.frequency.connect(this._carrier.frequency);\n\t\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\tthis.frequency.chain(this.modulationIndex, this._modulationNode);\n\t\tthis._modulator.connect(this._modulationNode.gain);\n\t\tthis._modulationNode.connect(this._carrier.frequency);\n\t\tthis._carrier.connect(this.output);\n\t\tthis.detune.connect(this._modulator.detune);\n\n\t\tthis.phase = options.phase;\n\n\t\tthis._readOnly([\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n\t};\n\n\tTone.extend(Tone.FMOscillator, Tone.Source);\n\n\t/**\n\t *  default values\n\t *  @static\n\t *  @type {Object}\n\t *  @const\n\t */\n\tTone.FMOscillator.defaults = {\n\t\t\"frequency\" : 440,\n\t\t\"detune\" : 0,\n\t\t\"phase\" : 0,\n\t\t\"type\" : \"sine\",\n\t\t\"modulationIndex\" : 2,\n\t\t\"modulationType\" : \"square\",\n\t\t\"harmonicity\" : 1\n\t};\n\n\t/**\n\t *  start the oscillator\n\t *  @param  {Time} [time=now]\n\t *  @private\n\t */\n\tTone.FMOscillator.prototype._start = function(time){\n\t\tthis._modulator.start(time);\n\t\tthis._carrier.start(time);\n\t};\n\n\t/**\n\t *  stop the oscillator\n\t *  @param  {Time} time (optional) timing parameter\n\t *  @private\n\t */\n\tTone.FMOscillator.prototype._stop = function(time){\n\t\tthis._modulator.stop(time);\n\t\tthis._carrier.stop(time);\n\t};\n\n\t/**\n\t *  stop the oscillator\n\t *  @param  {Time} time (optional) timing parameter\n\t *  @private\n\t */\n\tTone.FMOscillator.prototype.restart = function(time){\n\t\tthis._modulator.restart(time);\n\t\tthis._carrier.restart(time);\n\t};\n\n\t/**\n\t * The type of the carrier oscillator\n\t * @memberOf Tone.FMOscillator#\n\t * @type {string}\n\t * @name type\n\t */\n\tObject.defineProperty(Tone.FMOscillator.prototype, \"type\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.type;\n\t\t},\n\t\tset : function(type){\n\t\t\tthis._carrier.type = type;\n\t\t}\n\t});\n\n\t/**\n\t * The oscillator type without the partialsCount appended to the end\n\t * @memberOf Tone.FMOscillator#\n\t * @type {string}\n\t * @name baseType\n\t * @example\n\t * osc.type = 'sine2'\n\t * osc.baseType //'sine'\n\t * osc.partialCount = 2\n\t */\n\tObject.defineProperty(Tone.FMOscillator.prototype, \"baseType\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.baseType;\n\t\t},\n\t\tset : function(baseType){\n\t\t\tthis._carrier.baseType = baseType;\n\t\t}\n\t});\n\n\t/**\n\t * 'partialCount' offers an alternative way to set the number of used partials. \n\t * When partialCount is 0, the maximum number of partials are used when representing\n\t * the waveform using the periodicWave. When 'partials' is set, this value is \n\t * not settable, but equals the length of the partials array.\n\t * @memberOf Tone.FMOscillator#\n\t * @type {Number}\n\t * @name partialCount\n\t */\n\tObject.defineProperty(Tone.FMOscillator.prototype, \"partialCount\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.partialCount;\n\t\t},\n\t\tset : function(partialCount){\n\t\t\tthis._carrier.partialCount = partialCount;\n\t\t}\n\t});\n\n\t/**\n\t * The type of the modulator oscillator\n\t * @memberOf Tone.FMOscillator#\n\t * @type {String}\n\t * @name modulationType\n\t */\n\tObject.defineProperty(Tone.FMOscillator.prototype, \"modulationType\", {\n\t\tget : function(){\n\t\t\treturn this._modulator.type;\n\t\t},\n\t\tset : function(type){\n\t\t\tthis._modulator.type = type;\n\t\t}\n\t});\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t * @memberOf Tone.FMOscillator#\n\t * @type {number}\n\t * @name phase\n\t */\n\tObject.defineProperty(Tone.FMOscillator.prototype, \"phase\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.phase;\n\t\t},\n\t\tset : function(phase){\n\t\t\tthis._carrier.phase = phase;\n\t\t\tthis._modulator.phase = phase;\n\t\t}\n\t});\n\n\t/**\n\t * The partials of the carrier waveform. A partial represents\n\t * the amplitude at a harmonic. The first harmonic is the\n\t * fundamental frequency, the second is the octave and so on\n\t * following the harmonic series.\n\t * Setting this value will automatically set the type to \"custom\".\n\t * The value is an empty array when the type is not \"custom\".\n\t * @memberOf Tone.FMOscillator#\n\t * @type {Array}\n\t * @name partials\n\t * @example\n\t * osc.partials = [1, 0.2, 0.01];\n\t */\n\tObject.defineProperty(Tone.FMOscillator.prototype, \"partials\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.partials;\n\t\t},\n\t\tset : function(partials){\n\t\t\tthis._carrier.partials = partials;\n\t\t}\n\t});\n\n\t/**\n\t *  Clean up.\n\t *  @return {Tone.FMOscillator} this\n\t */\n\tTone.FMOscillator.prototype.dispose = function(){\n\t\tTone.Source.prototype.dispose.call(this);\n\t\tthis._writable([\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n\t\tthis.frequency.dispose();\n\t\tthis.frequency = null;\n\t\tthis.detune = null;\n\t\tthis.harmonicity.dispose();\n\t\tthis.harmonicity = null;\n\t\tthis._carrier.dispose();\n\t\tthis._carrier = null;\n\t\tthis._modulator.dispose();\n\t\tthis._modulator = null;\n\t\tthis._modulationNode.dispose();\n\t\tthis._modulationNode = null;\n\t\tthis.modulationIndex.dispose();\n\t\tthis.modulationIndex = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.FMOscillator;\n});\n","define([\"../core/Tone\", \"../core/Buffer\", \"../source/Source\", \"../core/Gain\",\n\t\"../core/AudioNode\"], function(Tone){\n\n\t/**\n\t *  @class Wrapper around the native fire-and-forget OscillatorNode. Adds the\n\t *     ability to reschedule the stop method. ***[Tone.Oscillator](Oscillator) is better \n\t *     for most use-cases***\n\t *  @extends {Tone.AudioNode}\n\t *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n\t *  @param  {Function}  onload  The callback to invoke when the\n\t *                               buffer is done playing.\n\t */\n\tTone.OscillatorNode = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\"], Tone.OscillatorNode);\n\t\tTone.AudioNode.call(this, options);\n\n\t\t/**\n\t\t *  The callback to invoke after the\n\t\t *  buffer source is done playing.\n\t\t *  @type  {Function}\n\t\t */\n\t\tthis.onended = options.onended;\n\n\t\t/**\n\t\t *  The oscillator start time\n\t\t *  @type  {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._startTime = -1;\n\n\t\t/**\n\t\t *  The oscillator stop time\n\t\t *  @type  {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._stopTime = -1;\n\n\t\t/**\n\t\t *  The gain node which envelopes the OscillatorNode\n\t\t *  @type  {Tone.Gain}\n\t\t *  @private\n\t\t */\n\t\tthis._gainNode = this.output = new Tone.Gain(0);\n\n\t\t/**\n\t\t *  The oscillator\n\t\t *  @type  {OscillatorNode}\n\t\t *  @private\n\t\t */\n\t\tthis._oscillator = this.context.createOscillator();\n\t\tthis._oscillator.connect(this._gainNode);\n\t\tthis.type = options.type;\n\n\t\t/**\n\t\t *  The frequency of the oscillator\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = new Tone.Param({\n\t\t\tparam : this._oscillator.frequency, \n\t\t\tunits : Tone.Type.Frequency,\n\t\t\tvalue : options.frequency\n\t\t});\n\n\t\t/**\n\t\t *  The detune of the oscillator\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.detune = new Tone.Param({\n\t\t\tparam : this._oscillator.detune,\n\t\t\tunits : Tone.Type.Cents,\n\t\t\tvalue : options.detune\n\t\t});\n\n\t\t/**\n\t\t *  The value that the buffer ramps to\n\t\t *  @type {Gain}\n\t\t *  @private\n\t\t */\n\t\tthis._gain = 1;\n\t};\n\n\tTone.extend(Tone.OscillatorNode, Tone.AudioNode);\n\n\t/**\n\t *  The defaults\n\t *  @const\n\t *  @type  {Object}\n\t */\n\tTone.OscillatorNode.defaults = {\n\t\t\"frequency\" : 440,\n\t\t\"detune\" : 0,\n\t\t\"type\" : \"sine\",\n\t\t\"onended\" : Tone.noOp\n\t};\n\n\t/**\n\t *  Returns the playback state of the oscillator, either \"started\" or \"stopped\".\n\t *  @type {Tone.State}\n\t *  @readOnly\n\t *  @memberOf Tone.OscillatorNode#\n\t *  @name state\n\t */\n\tObject.defineProperty(Tone.OscillatorNode.prototype, \"state\", {\n\t\tget : function(){\n\t\t\treturn this.getStateAtTime(this.now());\n\t\t}\n\t});\n\n\t/**\n\t *  Get the playback state at the given time\n\t *  @param  {Time}  time  The time to test the state at\n\t *  @return  {Tone.State}  The playback state. \n\t */\n\tTone.OscillatorNode.prototype.getStateAtTime = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tif (this._startTime !== -1 && time >= this._startTime && (this._stopTime === -1 || time <= this._stopTime)){\n\t\t\treturn Tone.State.Started;\n\t\t} else {\n\t\t\treturn Tone.State.Stopped;\n\t\t}\n\t};\n\n\t/**\n     * Start the oscillator node at the given time\n     * @param  {Time=} time When to start the oscillator\n     * @return {OscillatorNode}      this\n     */\n\tTone.OscillatorNode.prototype.start = function(time){\n\t\tthis.log(\"start\", time);\n\t\tif (this._startTime === -1){\n\t\t\tthis._startTime = this.toSeconds(time);\n\t\t\tthis._oscillator.start(this._startTime);\n\t\t\tthis._gainNode.gain.setValueAtTime(1, this._startTime);\n\t\t} else {\n\t\t\tthrow new Error(\"cannot call OscillatorNode.start more than once\");\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n     * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n     * @param  {PeriodicWave} periodicWave PeriodicWave should be created with context.createPeriodicWave\n     * @return {OscillatorNode} this\n     */\n\tTone.OscillatorNode.prototype.setPeriodicWave = function(periodicWave){\n\t\tthis._oscillator.setPeriodicWave(periodicWave);\n\t\treturn this;\n\t};\n\n\t/**\n     * Stop the oscillator node at the given time\n     * @param  {Time=} time When to stop the oscillator\n     * @return {OscillatorNode}      this\n     */\n\tTone.OscillatorNode.prototype.stop = function(time){\n\t\tthis.log(\"stop\", time);\n\t\tthis.assert(this._startTime !== -1, \"'start' must be called before 'stop'\");\n\t\t//cancel the previous stop\n\t\tthis.cancelStop();\n\t\t//reschedule it\n\t\tthis._stopTime = this.toSeconds(time);\n\t\tif (this._stopTime > this._startTime){\n\t\t\tthis._gainNode.gain.setValueAtTime(0, this._stopTime);\n\t\t\tthis.context.clearTimeout(this._timeout);\n\t\t\tthis._timeout = this.context.setTimeout(function(){\n\t\t\t\tthis._oscillator.stop(this.now());\n\t\t\t\tthis.onended();\n\t\t\t}.bind(this), this._stopTime - this.context.currentTime);\n\t\t} else {\n\t\t\t//cancel the stop envelope\n\t\t\tthis._gainNode.gain.cancelScheduledValues(this._startTime);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Cancel a scheduled stop event\n\t *  @return  {Tone.OscillatorNode}  this\n\t */\n\tTone.OscillatorNode.prototype.cancelStop = function(){\n\t\tif (this._startTime !== -1){\n\t\t\t//cancel the stop envelope\n\t\t\tthis._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime);\n\t\t\tthis.context.clearTimeout(this._timeout);\n\t\t\tthis._stopTime = -1;\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n\t * @memberOf Tone.OscillatorNode#\n\t * @type {Time}\n\t * @name type\n\t */\n\tObject.defineProperty(Tone.OscillatorNode.prototype, \"type\", {\n\t\tget : function(){\n\t\t\treturn this._oscillator.type;\n\t\t},\n\t\tset : function(type){\n\t\t\tthis._oscillator.type = type;\n\t\t}\n\t});\n\n\t/**\n\t *  Clean up.\n\t *  @return  {Tone.OscillatorNode}  this\n\t */\n\tTone.OscillatorNode.prototype.dispose = function(){\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis.onended = null;\n\t\tthis._oscillator.disconnect();\n\t\tthis._oscillator = null;\n\t\tthis._gainNode.dispose();\n\t\tthis._gainNode = null;\n\t\tthis.frequency.dispose();\n\t\tthis.frequency = null;\n\t\tthis.detune.dispose();\n\t\tthis.detune = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.OscillatorNode;\n});\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar ENDS_WITH = 'endsWith';\nvar $endsWith = ''[ENDS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = context(this, searchString, ENDS_WITH);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);\n    var search = String(searchString);\n    return $endsWith\n      ? $endsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n","define([\"../core/Tone\", \"../core/Param\", \"../core/Gain\", \"../signal/SignalBase\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Multiply two incoming signals. Or, if a number is given in the constructor,\n\t *          multiplies the incoming signal by that value.\n\t *\n\t *  @constructor\n\t *  @extends {Tone.Signal}\n\t *  @param {number=} value Constant value to multiple. If no value is provided,\n\t *                         it will return the product of the first and second inputs\n\t *  @example\n\t * var mult = new Tone.Multiply();\n\t * var sigA = new Tone.Signal(3);\n\t * var sigB = new Tone.Signal(4);\n\t * sigA.connect(mult, 0, 0);\n\t * sigB.connect(mult, 0, 1);\n\t * //output of mult is 12.\n\t *  @example\n\t * var mult = new Tone.Multiply(10);\n\t * var sig = new Tone.Signal(2).connect(mult);\n\t * //the output of mult is 20.\n\t */\n\tTone.Multiply = function(value){\n\n\t\tTone.Signal.call(this);\n\t\tthis.createInsOuts(2, 0);\n\n\t\t/**\n\t\t *  the input node is the same as the output node\n\t\t *  it is also the GainNode which handles the scaling of incoming signal\n\t\t *\n\t\t *  @type {GainNode}\n\t\t *  @private\n\t\t */\n\t\tthis._mult = this.input[0] = this.output = new Tone.Gain();\n\n\t\t/**\n\t\t *  the scaling parameter\n\t\t *  @type {AudioParam}\n\t\t *  @private\n\t\t */\n\t\tthis._param = this.input[1] = this.output.gain;\n\t\tthis.value = Tone.defaultArg(value, 0);\n\t\tthis.proxy = false;\n\t};\n\n\tTone.extend(Tone.Multiply, Tone.Signal);\n\n\t/**\n\t *  clean up\n\t *  @returns {Tone.Multiply} this\n\t */\n\tTone.Multiply.prototype.dispose = function(){\n\t\tTone.Signal.prototype.dispose.call(this);\n\t\tthis._mult.dispose();\n\t\tthis._mult = null;\n\t\tthis._param = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Multiply;\n});\n","define([\"../core/Tone\", \"../type/TransportTime\"], function(Tone){\n\n\t/**\n\t *  @class Tone.Ticks is a primitive type for encoding Time values.\n\t *         Tone.Ticks can be constructed with or without the `new` keyword. Tone.Ticks can be passed\n\t *         into the parameter of any method which takes time as an argument.\n\t *  @constructor\n\t *  @extends {Tone.TransportTime}\n\t *  @param  {String|Number}  val    The time value.\n\t *  @param  {String=}  units  The units of the value.\n\t *  @example\n\t * var t = Tone.Ticks(\"4n\");//a quarter note\n\t */\n\tTone.Ticks = function(val, units){\n\t\tif (this instanceof Tone.Ticks){\n\n\t\t\tTone.TransportTime.call(this, val, units);\n\n\t\t} else {\n\t\t\treturn new Tone.Ticks(val, units);\n\t\t}\n\t};\n\n\tTone.extend(Tone.Ticks, Tone.TransportTime);\n\n\t/**\n\t *  The default units if none are given.\n\t *  @type {String}\n\t *  @private\n\t */\n\tTone.Ticks.prototype._defaultUnits = \"i\";\n\n\t/**\n\t * Get the current time in the given units\n\t * @return {Ticks}\n\t * @private\n\t */\n\tTone.Ticks.prototype._now = function(){\n\t\treturn Tone.Transport.ticks;\n\t};\n\n\t/**\n\t *  Return the value of the beats in the current units\n\t *  @param {Number} beats\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.Ticks.prototype._beatsToUnits = function(beats){\n\t\treturn this._getPPQ() * beats;\n\t};\n\n\t/**\n\t *  Returns the value of a second in the current units\n\t *  @param {Seconds} seconds\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.Ticks.prototype._secondsToUnits = function(seconds){\n\t\treturn Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n\t};\n\n\t/**\n\t *  Returns the value of a tick in the current time units\n\t *  @param {Ticks} ticks\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.Ticks.prototype._ticksToUnits = function(ticks){\n\t\treturn ticks;\n\t};\n\n\t/**\n\t *  Return the time in ticks\n\t *  @return  {Ticks}\n\t */\n\tTone.Ticks.prototype.toTicks = function(){\n\t\treturn this.valueOf();\n\t};\n\n\t/**\n\t *  Return the time in ticks\n\t *  @return  {Ticks}\n\t */\n\tTone.Ticks.prototype.toSeconds = function(){\n\t\treturn (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());\n\t};\n\n\treturn Tone.Ticks;\n});\n","define([\"../core/Tone\", \"../signal/Signal\", \"../source/Source\",\n\t\"../core/Transport\", \"../source/OscillatorNode\"],\nfunction(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.Oscillator supports a number of features including\n\t *         phase rotation, multiple oscillator types (see Tone.Oscillator.type),\n\t *         and Transport syncing (see Tone.Oscillator.syncFrequency).\n\t *\n\t *  @constructor\n\t *  @extends {Tone.Source}\n\t *  @param {Frequency} [frequency] Starting frequency\n\t *  @param {string} [type] The oscillator type. Read more about type below.\n\t *  @example\n\t * //make and start a 440hz sine tone\n\t * var osc = new Tone.Oscillator(440, \"sine\").toMaster().start();\n\t */\n\tTone.Oscillator = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\"], Tone.Oscillator);\n\t\tTone.Source.call(this, options);\n\n\t\t/**\n\t\t *  the main oscillator\n\t\t *  @type {OscillatorNode}\n\t\t *  @private\n\t\t */\n\t\tthis._oscillator = null;\n\n\t\t/**\n\t\t *  The frequency control.\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t\t/**\n\t\t *  The detune control signal.\n\t\t *  @type {Cents}\n\t\t *  @signal\n\t\t */\n\t\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t\t/**\n\t\t *  the periodic wave\n\t\t *  @type {PeriodicWave}\n\t\t *  @private\n\t\t */\n\t\tthis._wave = null;\n\n\t\t/**\n\t\t *  The partials of the oscillator\n\t\t *  @type {Array}\n\t\t *  @private\n\t\t */\n\t\tthis._partials = options.partials;\n\n\t\t/**\n\t\t *  The number of partials to limit or extend the periodic wave by\n\t\t *  @type {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._partialCount = options.partialCount;\n\n\t\t/**\n\t\t *  the phase of the oscillator\n\t\t *  between 0 - 360\n\t\t *  @type {number}\n\t\t *  @private\n\t\t */\n\t\tthis._phase = options.phase;\n\n\t\t/**\n\t\t *  the type of the oscillator\n\t\t *  @type {string}\n\t\t *  @private\n\t\t */\n\t\tthis._type = options.type;\n\n\t\t//setup\n\t\tif (options.partialCount && options.type !== Tone.Oscillator.Type.Custom){\n\t\t\tthis._type = this.baseType + options.partialCount.toString();\n\t\t}\n\t\tthis.phase = this._phase;\n\t\tthis._readOnly([\"frequency\", \"detune\"]);\n\t};\n\n\tTone.extend(Tone.Oscillator, Tone.Source);\n\n\t/**\n\t *  the default parameters\n\t *  @type {Object}\n\t */\n\tTone.Oscillator.defaults = {\n\t\t\"type\" : \"sine\",\n\t\t\"frequency\" : 440,\n\t\t\"detune\" : 0,\n\t\t\"phase\" : 0,\n\t\t\"partials\" : [],\n\t\t\"partialCount\" : 0\n\t};\n\n\t/**\n\t *  The Oscillator types\n\t *  @enum {String}\n\t */\n\tTone.Oscillator.Type = {\n\t\tSine : \"sine\",\n\t\tTriangle : \"triangle\",\n\t\tSawtooth : \"sawtooth\",\n\t\tSquare : \"square\",\n\t\tCustom : \"custom\"\n\t};\n\n\t/**\n\t *  start the oscillator\n\t *  @param  {Time} [time=now]\n\t *  @private\n\t */\n\tTone.Oscillator.prototype._start = function(time){\n\t\tthis.log(\"start\", time);\n\t\t//new oscillator with previous values\n\t\tthis._oscillator = new Tone.OscillatorNode();\n\t\tif (this._wave){\n\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t} else {\n\t\t\tthis._oscillator.type = this._type;\n\t\t}\n\t\t//connect the control signal to the oscillator frequency & detune\n\t\tthis._oscillator.connect(this.output);\n\t\tthis.frequency.connect(this._oscillator.frequency);\n\t\tthis.detune.connect(this._oscillator.detune);\n\t\t//start the oscillator\n\t\ttime = this.toSeconds(time);\n\t\tthis._oscillator.start(time);\n\t};\n\n\t/**\n\t *  stop the oscillator\n\t *  @private\n\t *  @param  {Time} [time=now] (optional) timing parameter\n\t *  @returns {Tone.Oscillator} this\n\t */\n\tTone.Oscillator.prototype._stop = function(time){\n\t\tthis.log(\"stop\", time);\n\t\tif (this._oscillator){\n\t\t\ttime = this.toSeconds(time);\n\t\t\tthis._oscillator.stop(time);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Restart the oscillator. Does not stop the oscillator, but instead\n\t * just cancels any scheduled 'stop' from being invoked.\n\t * @param  {Time=} time\n\t * @return {Tone.Oscillator}      this\n\t */\n\tTone.Oscillator.prototype.restart = function(time){\n\t\tif (this._oscillator){\n\t\t\tthis._oscillator.cancelStop();\n\t\t}\n\t\tthis._state.cancel(this.toSeconds(time));\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n\t *  will also affect the oscillators frequency.\n\t *  @returns {Tone.Oscillator} this\n\t *  @example\n\t * Tone.Transport.bpm.value = 120;\n\t * osc.frequency.value = 440;\n\t * //the ration between the bpm and the frequency will be maintained\n\t * osc.syncFrequency();\n\t * Tone.Transport.bpm.value = 240;\n\t * // the frequency of the oscillator is doubled to 880\n\t */\n\tTone.Oscillator.prototype.syncFrequency = function(){\n\t\tTone.Transport.syncSignal(this.frequency);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Unsync the oscillator's frequency from the Transport.\n\t *  See Tone.Oscillator.syncFrequency\n\t *  @returns {Tone.Oscillator} this\n\t */\n\tTone.Oscillator.prototype.unsyncFrequency = function(){\n\t\tTone.Transport.unsyncSignal(this.frequency);\n\t\treturn this;\n\t};\n\n\t/**\n\t * The type of the oscillator: either sine, square, triangle, or sawtooth. Also capable of\n\t * setting the first x number of partials of the oscillator. For example: \"sine4\" would\n\t * set be the first 4 partials of the sine wave and \"triangle8\" would set the first\n\t * 8 partials of the triangle wave.\n\t * <br><br>\n\t * Uses PeriodicWave internally even for native types so that it can set the phase.\n\t * PeriodicWave equations are from the\n\t * [Webkit Web Audio implementation](https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/modules/webaudio/PeriodicWave.cpp&sq=package:chromium).\n\t *\n\t * @memberOf Tone.Oscillator#\n\t * @type {string}\n\t * @name type\n\t * @example\n\t * //set it to a square wave\n\t * osc.type = \"square\";\n\t * @example\n\t * //set the first 6 partials of a sawtooth wave\n\t * osc.type = \"sawtooth6\";\n\t */\n\tObject.defineProperty(Tone.Oscillator.prototype, \"type\", {\n\t\tget : function(){\n\t\t\treturn this._type;\n\t\t},\n\t\tset : function(type){\n\t\t\tvar coefs = this._getRealImaginary(type, this._phase);\n\t\t\tvar periodicWave = this.context.createPeriodicWave(coefs[0], coefs[1]);\n\t\t\tthis._wave = periodicWave;\n\t\t\tif (this._oscillator !== null){\n\t\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t\t}\n\t\t\tthis._type = type;\n\t\t}\n\t});\n\n\t/**\n\t * The oscillator type without the partialsCount appended to the end\n\t * @memberOf Tone.Oscillator#\n\t * @type {string}\n\t * @name baseType\n\t * @example\n\t * osc.type = 'sine2'\n\t * osc.baseType //'sine'\n\t * osc.partialCount = 2\n\t */\n\tObject.defineProperty(Tone.Oscillator.prototype, \"baseType\", {\n\t\tget : function(){\n\t\t\treturn this._type.replace(this.partialCount, \"\");\n\t\t},\n\t\tset : function(baseType){\n\t\t\tif (this.partialCount && this._type !== Tone.Oscillator.Type.Custom && baseType !== Tone.Oscillator.Type.Custom){\n\t\t\t\tthis.type = baseType + this.partialCount;\n\t\t\t} else {\n\t\t\t\tthis.type = baseType;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * 'partialCount' offers an alternative way to set the number of used partials. \n\t * When partialCount is 0, the maximum number of partials are used when representing\n\t * the waveform using the periodicWave. When 'partials' is set, this value is \n\t * not settable, but equals the length of the partials array.\n\t * @example\n\t * osc.type = 'sine'\n\t * osc.partialCount = 3\n\t * //is equivalent to\n\t * osc.type = 'sine3'\n\t * @memberOf Tone.Oscillator#\n\t * @type {Number}\n\t * @name partialCount\n\t */\n\tObject.defineProperty(Tone.Oscillator.prototype, \"partialCount\", {\n\t\tget : function(){\n\t\t\treturn this._partialCount;\n\t\t},\n\t\tset : function(p){\n\t\t\tvar type = this._type;\n\t\t\tvar partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n\t\t\tif (partial){\n\t\t\t\ttype = partial[1];\n\t\t\t}\n\t\t\tif (this._type !== Tone.Oscillator.Type.Custom){\n\t\t\t\tif (p === 0){\n\t\t\t\t\tthis.type = type;\n\t\t\t\t} else {\n\t\t\t\t\tthis.type = type + p.toString();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  Get the object's attributes. Given no arguments get\n\t *  will return all available object properties and their corresponding\n\t *  values. \n\t *  @memberOf Tone.Oscillator#\n\t *  @returns {Object}\n\t */\n\tTone.Oscillator.prototype.get = function(){\n\t\tconst values = Tone.prototype.get.apply(this, arguments);\n\t\tif (values.type !== Tone.Oscillator.Type.Custom){\n\t\t\tdelete values.partials;\n\t\t}\n\t\treturn values;\n\t};\n\n\t/**\n\t *  Returns the real and imaginary components based\n\t *  on the oscillator type.\n\t *  @returns {Array} [real, imaginary]\n\t *  @private\n\t */\n\tTone.Oscillator.prototype._getRealImaginary = function(type, phase){\n\t\tvar fftSize = 4096;\n\t\tvar periodicWaveSize = fftSize / 2;\n\n\t\tvar real = new Float32Array(periodicWaveSize);\n\t\tvar imag = new Float32Array(periodicWaveSize);\n\n\t\tvar partialCount = 1;\n\t\tif (type === Tone.Oscillator.Type.Custom){\n\t\t\tpartialCount = this._partials.length + 1;\n\t\t\tthis._partialCount = this._partials.length;\n\t\t\tperiodicWaveSize = partialCount;\n\t\t} else {\n\t\t\tvar partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\t\t\tif (partial){\n\t\t\t\tpartialCount = parseInt(partial[2]) + 1;\n\t\t\t\tthis._partialCount = parseInt(partial[2]);\n\t\t\t\ttype = partial[1];\n\t\t\t\tpartialCount = Math.max(partialCount, 2);\n\t\t\t\tperiodicWaveSize = partialCount;\n\t\t\t} else {\n\t\t\t\tthis._partialCount = 0;\n\t\t\t}\n\t\t\tthis._partials = [];\n\t\t}\n\n\t\tfor (var n = 1; n < periodicWaveSize; ++n){\n\t\t\tvar piFactor = 2 / (n * Math.PI);\n\t\t\tvar b;\n\t\t\tswitch (type){\n\t\t\t\tcase Tone.Oscillator.Type.Sine:\n\t\t\t\t\tb = (n <= partialCount) ? 1 : 0;\n\t\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tone.Oscillator.Type.Square:\n\t\t\t\t\tb = (n & 1) ? 2 * piFactor : 0;\n\t\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tone.Oscillator.Type.Sawtooth:\n\t\t\t\t\tb = piFactor * ((n & 1) ? 1 : -1);\n\t\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tone.Oscillator.Type.Triangle:\n\t\t\t\t\tif (n & 1){\n\t\t\t\t\t\tb = 2 * (piFactor * piFactor) * ((((n - 1) >> 1) & 1) ? -1 : 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tb = 0;\n\t\t\t\t\t}\n\t\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tone.Oscillator.Type.Custom:\n\t\t\t\t\tb = this._partials[n - 1];\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new TypeError(\"Tone.Oscillator: invalid type: \"+type);\n\t\t\t}\n\t\t\tif (b !== 0){\n\t\t\t\treal[n] = -b * Math.sin(phase * n);\n\t\t\t\timag[n] = b * Math.cos(phase * n);\n\t\t\t} else {\n\t\t\t\treal[n] = 0;\n\t\t\t\timag[n] = 0;\n\t\t\t}\n\t\t}\n\t\treturn [real, imag];\n\t};\n\n\t/**\n\t *  Compute the inverse FFT for a given phase.\n\t *  @param  {Float32Array}  real\n\t *  @param  {Float32Array}  imag\n\t *  @param  {NormalRange}  phase\n\t *  @return  {AudioRange}\n\t *  @private\n\t */\n\tTone.Oscillator.prototype._inverseFFT = function(real, imag, phase){\n\t\tvar sum = 0;\n\t\tvar len = real.length;\n\t\tfor (var i = 0; i < len; i++){\n\t\t\tsum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n\t\t}\n\t\treturn sum;\n\t};\n\n\t/**\n\t *  Returns the initial value of the oscillator.\n\t *  @return  {AudioRange}\n\t *  @private\n\t */\n\tTone.Oscillator.prototype._getInitialValue = function(){\n\t\tvar coefs = this._getRealImaginary(this._type, 0);\n\t\tvar real = coefs[0];\n\t\tvar imag = coefs[1];\n\t\tvar maxValue = 0;\n\t\tvar twoPi = Math.PI * 2;\n\t\t//check for peaks in 8 places\n\t\tfor (var i = 0; i < 8; i++){\n\t\t\tmaxValue = Math.max(this._inverseFFT(real, imag, (i / 8) * twoPi), maxValue);\n\t\t}\n\t\treturn -this._inverseFFT(real, imag, this._phase) / maxValue;\n\t};\n\n\t/**\n\t * The partials of the waveform. A partial represents\n\t * the amplitude at a harmonic. The first harmonic is the\n\t * fundamental frequency, the second is the octave and so on\n\t * following the harmonic series.\n\t * Setting this value will automatically set the type to \"custom\".\n\t * The value is an empty array when the type is not \"custom\".\n\t * @memberOf Tone.Oscillator#\n\t * @type {Array}\n\t * @name partials\n\t * @example\n\t * osc.partials = [1, 0.2, 0.01];\n\t */\n\tObject.defineProperty(Tone.Oscillator.prototype, \"partials\", {\n\t\tget : function(){\n\t\t\treturn this._partials;\n\t\t},\n\t\tset : function(partials){\n\t\t\tthis._partials = partials;\n\t\t\tthis.type = Tone.Oscillator.Type.Custom;\n\t\t}\n\t});\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t * @memberOf Tone.Oscillator#\n\t * @type {Degrees}\n\t * @name phase\n\t * @example\n\t * osc.phase = 180; //flips the phase of the oscillator\n\t */\n\tObject.defineProperty(Tone.Oscillator.prototype, \"phase\", {\n\t\tget : function(){\n\t\t\treturn this._phase * (180 / Math.PI);\n\t\t},\n\t\tset : function(phase){\n\t\t\tthis._phase = phase * Math.PI / 180;\n\t\t\t//reset the type\n\t\t\tthis.type = this._type;\n\t\t}\n\t});\n\n\t/**\n\t *  Dispose and disconnect.\n\t *  @return {Tone.Oscillator} this\n\t */\n\tTone.Oscillator.prototype.dispose = function(){\n\t\tTone.Source.prototype.dispose.call(this);\n\t\tif (this._oscillator !== null){\n\t\t\tthis._oscillator.dispose();\n\t\t\tthis._oscillator = null;\n\t\t}\n\t\tthis._wave = null;\n\t\tthis._writable([\"frequency\", \"detune\"]);\n\t\tthis.frequency.dispose();\n\t\tthis.frequency = null;\n\t\tthis.detune.dispose();\n\t\tthis.detune = null;\n\t\tthis._partials = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Oscillator;\n});\n","if(typeof moment === 'undefined') {var e = new Error(\"Cannot find module 'moment'\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = moment;","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","define([\"../core/Tone\", \"../signal/Signal\"], function(Tone){\n\n\t/**\n\t * @class Tone.TickSignal extends Tone.Signal, but adds the capability\n\t *        to calculate the number of elapsed ticks. exponential and target curves\n\t *        are approximated with multiple linear ramps.\n\t *\n\t *        Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos, for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n\t *        describing integrating timing functions for tempo calculations.\n\t *\n\t * @param {Number} value The initial value of the signal\n\t * @extends {Tone.Signal}\n\t */\n\tTone.TickSignal = function(value){\n\n\t\tvalue = Tone.defaultArg(value, 1);\n\n\t\tTone.Signal.call(this, {\n\t\t\t\"units\" : Tone.Type.Ticks,\n\t\t\t\"value\" : value\n\t\t});\n\n\t\t//extend the memory\n\t\tthis._events.memory = Infinity;\n\n\t\t//clear the clock from the beginning\n\t\tthis.cancelScheduledValues(0);\n\t\t//set an initial event\n\t\tthis._events.add({\n\t\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\t\"time\" : 0,\n\t\t\t\"value\" : value\n\t\t});\n\t};\n\n\tTone.extend(Tone.TickSignal, Tone.Signal);\n\t\n\t/**\n\t * Wraps Tone.Signal methods so that they also\n\t * record the ticks.\n\t * @param  {Function} method\n\t * @return {Function}\n\t * @private\n\t */\n\tfunction _wrapScheduleMethods(method){\n\t\treturn function(value, time){\n\t\t\ttime = this.toSeconds(time);\n\t\t\tmethod.apply(this, arguments);\n\t\t\tvar event = this._events.get(time);\n\t\t\tvar previousEvent = this._events.previousEvent(event);\n\t\t\tvar ticksUntilTime = this._getTicksUntilEvent(previousEvent, time);\n\t\t\tevent.ticks = Math.max(ticksUntilTime, 0);\n\t\t\treturn this;\n\t\t};\n\t}\n\n\tTone.TickSignal.prototype.setValueAtTime = _wrapScheduleMethods(Tone.Signal.prototype.setValueAtTime);\n\tTone.TickSignal.prototype.linearRampToValueAtTime = _wrapScheduleMethods(Tone.Signal.prototype.linearRampToValueAtTime);\n\n\t/**\n\t *  Start exponentially approaching the target value at the given time with\n\t *  a rate having the given time constant.\n\t *  @param {number} value\n\t *  @param {Time} startTime\n\t *  @param {number} timeConstant\n\t *  @returns {Tone.TickSignal} this\n\t */\n\tTone.TickSignal.prototype.setTargetAtTime = function(value, time, constant){\n\t\t//aproximate it with multiple linear ramps\n\t\ttime = this.toSeconds(time);\n\t\tthis.setRampPoint(time);\n\t\tvalue = this._fromUnits(value);\n\n\t\t//start from previously scheduled value\n\t\tvar prevEvent = this._events.get(time);\n\t\tvar segments = Math.round(Math.max(1 / constant, 1));\n\t\tfor (var i = 0; i <= segments; i++){\n\t\t\tvar segTime = constant * i + time;\n\t\t\tvar rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, value, constant, segTime);\n\t\t\tthis.linearRampToValueAtTime(this._toUnits(rampVal), segTime);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Schedules an exponential continuous change in parameter value from\n\t *  the previous scheduled parameter value to the given value.\n\t *  @param  {number} value\n\t *  @param  {Time} endTime\n\t *  @returns {Tone.TickSignal} this\n\t */\n\tTone.TickSignal.prototype.exponentialRampToValueAtTime = function(value, time){\n\t\t//aproximate it with multiple linear ramps\n\t\ttime = this.toSeconds(time);\n\t\tvalue = this._fromUnits(value);\n\n\t\t//start from previously scheduled value\n\t\tvar prevEvent = this._events.get(time);\n\t\tif (prevEvent === null){\n\t\t\tprevEvent = {\n\t\t\t\t\"value\" : this._initialValue,\n\t\t\t\t\"time\" : 0\n\t\t\t};\n\t\t}\n\t\t//approx 10 segments per second\n\t\tvar segments = Math.round(Math.max((time - prevEvent.time)*10, 1));\n\t\tvar segmentDur = ((time - prevEvent.time)/segments);\n\t\tfor (var i = 0; i <= segments; i++){\n\t\t\tvar segTime = segmentDur * i + prevEvent.time;\n\t\t\tvar rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, value, segTime);\n\t\t\tthis.linearRampToValueAtTime(this._toUnits(rampVal), segTime);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns the tick value at the time. Takes into account\n\t * any automation curves scheduled on the signal.\n\t * @private\n\t * @param  {Time} time The time to get the tick count at\n\t * @return {Ticks}      The number of ticks which have elapsed at the time\n\t *                          given any automations.\n\t */\n\tTone.TickSignal.prototype._getTicksUntilEvent = function(event, time){\n\t\tif (event === null){\n\t\t\tevent = {\n\t\t\t\t\"ticks\" : 0,\n\t\t\t\t\"time\" : 0\n\t\t\t};\n\t\t} else if (Tone.isUndef(event.ticks)){\n\t\t\tvar previousEvent = this._events.previousEvent(event);\n\t\t\tevent.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n\t\t}\n\t\tvar val0 = this.getValueAtTime(event.time);\n\t\tvar val1 = this.getValueAtTime(time);\n\t\t//if it's right on the line, take the previous value\n\t\tif (this._events.get(time).time === time && this._events.get(time).type === Tone.Param.AutomationType.SetValue){\n\t\t\tval1 = this.getValueAtTime(time - this.sampleTime);\n\t\t}\n\t\treturn 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n\t};\n\n\t/**\n\t * Returns the tick value at the time. Takes into account\n\t * any automation curves scheduled on the signal.\n\t * @param  {Time} time The time to get the tick count at\n\t * @return {Ticks}      The number of ticks which have elapsed at the time\n\t *                          given any automations.\n\t */\n\tTone.TickSignal.prototype.getTicksAtTime = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tvar event = this._events.get(time);\n\t\treturn Math.max(this._getTicksUntilEvent(event, time), 0);\n\t};\n\n\t/**\n\t * Return the elapsed time of the number of ticks from the given time\n\t * @param {Ticks} ticks The number of ticks to calculate\n\t * @param  {Time} time The time to get the next tick from\n\t * @return {Seconds} The duration of the number of ticks from the given time in seconds\n\t */\n\tTone.TickSignal.prototype.getDurationOfTicks = function(ticks, time){\n\t\ttime = this.toSeconds(time);\n\t\tvar currentTick = this.getTicksAtTime(time);\n\t\treturn this.getTimeOfTick(currentTick + ticks) - time;\n\t};\n\n\t/**\n\t * Given a tick, returns the time that tick occurs at.\n\t * @param  {Ticks} tick\n\t * @return {Time}      The time that the tick occurs.\n\t */\n\tTone.TickSignal.prototype.getTimeOfTick = function(tick){\n\t\tvar before = this._events.get(tick, \"ticks\");\n\t\tvar after = this._events.getAfter(tick, \"ticks\");\n\t\tif (before && before.ticks === tick){\n\t\t\treturn before.time;\n\t\t} else if (before && after &&\n\t\t\tafter.type === Tone.Param.AutomationType.Linear &&\n\t\t\tbefore.value !== after.value){\n\t\t\tvar val0 = this.getValueAtTime(before.time);\n\t\t\tvar val1 = this.getValueAtTime(after.time);\n\t\t\tvar delta = (val1 - val0) / (after.time - before.time);\n\t\t\tvar k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n\t\t\tvar sol1 = (-val0 + k) / delta;\n\t\t\tvar sol2 = (-val0 - k) / delta;\n\t\t\treturn (sol1 > 0 ? sol1 : sol2) + before.time;\n\t\t} else if (before){\n\t\t\tif (before.value === 0){\n\t\t\t\treturn Infinity;\n\t\t\t} else {\n\t\t\t\treturn before.time + (tick - before.ticks) / before.value;\n\t\t\t}\n\t\t} else {\n\t\t\treturn tick / this._initialValue;\n\t\t}\n\t};\n\n\t/**\n\t * Convert some number of ticks their the duration in seconds accounting\n\t * for any automation curves starting at the given time.\n\t * @param  {Ticks} ticks The number of ticks to convert to seconds.\n\t * @param  {Time} [when=now]  When along the automation timeline to convert the ticks.\n\t * @return {Tone.Time}       The duration in seconds of the ticks.\n\t */\n\tTone.TickSignal.prototype.ticksToTime = function(ticks, when){\n\t\twhen = this.toSeconds(when);\n\t\treturn new Tone.Time(this.getDurationOfTicks(ticks, when));\n\t};\n\n\t/**\n\t * The inverse of [ticksToTime](#tickstotime). Convert a duration in\n\t * seconds to the corresponding number of ticks accounting for any\n\t * automation curves starting at the given time.\n\t * @param  {Time} duration The time interval to convert to ticks.\n\t * @param  {Time} [when=now]     When along the automation timeline to convert the ticks.\n\t * @return {Tone.Ticks}          The duration in ticks.\n\t */\n\tTone.TickSignal.prototype.timeToTicks = function(duration, when){\n\t\twhen = this.toSeconds(when);\n\t\tduration = this.toSeconds(duration);\n\t\tvar startTicks = this.getTicksAtTime(when);\n\t\tvar endTicks = this.getTicksAtTime(when + duration);\n\t\treturn new Tone.Ticks(endTicks - startTicks);\n\t};\n\n\treturn Tone.TickSignal;\n});\n","define([\"../core/Tone\", \"../source/Source\", \"../source/Oscillator\", \"../source/PulseOscillator\", \"../source/PWMOscillator\",\n\t\"../source/FMOscillator\", \"../source/AMOscillator\", \"../source/FatOscillator\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,\n\t *         Tone.PWMOscillator, Tone.FMOscillator, Tone.AMOscillator, and Tone.FatOscillator\n\t *         into one class. The oscillator class can be changed by setting the `type`.\n\t *         `omniOsc.type = \"pwm\"` will set it to the Tone.PWMOscillator. Prefixing\n\t *         any of the basic types (\"sine\", \"square4\", etc.) with \"fm\", \"am\", or \"fat\"\n\t *         will use the FMOscillator, AMOscillator or FatOscillator respectively.\n\t *         For example: `omniOsc.type = \"fatsawtooth\"` will create set the oscillator\n\t *         to a FatOscillator of type \"sawtooth\".\n\t *\n\t *  @extends {Tone.Source}\n\t *  @constructor\n\t *  @param {Frequency} frequency The initial frequency of the oscillator.\n\t *  @param {String} type The type of the oscillator.\n\t *  @example\n\t *  var omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\");\n\t */\n\tTone.OmniOscillator = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\"], Tone.OmniOscillator);\n\t\tTone.Source.call(this, options);\n\n\t\t/**\n\t\t *  The frequency control.\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t\t/**\n\t\t *  The detune control\n\t\t *  @type {Cents}\n\t\t *  @signal\n\t\t */\n\t\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t\t/**\n\t\t *  the type of the oscillator source\n\t\t *  @type {String}\n\t\t *  @private\n\t\t */\n\t\tthis._sourceType = undefined;\n\n\t\t/**\n\t\t *  the oscillator\n\t\t *  @type {Tone.Oscillator}\n\t\t *  @private\n\t\t */\n\t\tthis._oscillator = null;\n\n\t\t//set the oscillator\n\t\tthis.type = options.type;\n\t\tthis._readOnly([\"frequency\", \"detune\"]);\n\t\t//set the options\n\t\tthis.set(options);\n\t};\n\n\tTone.extend(Tone.OmniOscillator, Tone.Source);\n\n\t/**\n\t *  default values\n\t *  @static\n\t *  @type {Object}\n\t *  @const\n\t */\n\tTone.OmniOscillator.defaults = {\n\t\t\"frequency\" : 440,\n\t\t\"detune\" : 0,\n\t\t\"type\" : \"sine\",\n\t\t\"phase\" : 0\n\t};\n\n\t/**\n\t *  @enum {String}\n\t *  @private\n\t */\n\tvar OmniOscType = {\n\t\tPulse : \"PulseOscillator\",\n\t\tPWM : \"PWMOscillator\",\n\t\tOsc : \"Oscillator\",\n\t\tFM : \"FMOscillator\",\n\t\tAM : \"AMOscillator\",\n\t\tFat : \"FatOscillator\"\n\t};\n\n\t/**\n\t *  start the oscillator\n\t *  @param {Time} [time=now] the time to start the oscillator\n\t *  @private\n\t */\n\tTone.OmniOscillator.prototype._start = function(time){\n\t\tthis._oscillator.start(time);\n\t};\n\n\t/**\n\t *  start the oscillator\n\t *  @param {Time} [time=now] the time to start the oscillator\n\t *  @private\n\t */\n\tTone.OmniOscillator.prototype._stop = function(time){\n\t\tthis._oscillator.stop(time);\n\t};\n\n\tTone.OmniOscillator.prototype.restart = function(time){\n\t\tthis._oscillator.restart(time);\n\t};\n\n\t/**\n\t * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n\t * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n\t * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n\t * oscillator's class are accessible when the oscillator is set to that type, but throws an error\n\t * when it's not.\n\t *\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {String}\n\t * @name type\n\t * @example\n\t * omniOsc.type = \"pwm\";\n\t * //modulationFrequency is parameter which is available\n\t * //only when the type is \"pwm\".\n\t * omniOsc.modulationFrequency.value = 0.5;\n\t * @example\n\t * //an square wave frequency modulated by a sawtooth\n\t * omniOsc.type = \"fmsquare\";\n\t * omniOsc.modulationType = \"sawtooth\";\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"type\", {\n\t\tget : function(){\n\t\t\tvar prefix = \"\";\n\t\t\tif (this._sourceType === OmniOscType.FM){\n\t\t\t\tprefix = \"fm\";\n\t\t\t} else if (this._sourceType === OmniOscType.AM){\n\t\t\t\tprefix = \"am\";\n\t\t\t} else if (this._sourceType === OmniOscType.Fat){\n\t\t\t\tprefix = \"fat\";\n\t\t\t}\n\t\t\treturn prefix + this._oscillator.type;\n\t\t},\n\t\tset : function(type){\n\t\t\tif (type.substr(0, 2) === \"fm\"){\n\t\t\t\tthis._createNewOscillator(OmniOscType.FM);\n\t\t\t\tthis._oscillator.type = type.substr(2);\n\t\t\t} else if (type.substr(0, 2) === \"am\"){\n\t\t\t\tthis._createNewOscillator(OmniOscType.AM);\n\t\t\t\tthis._oscillator.type = type.substr(2);\n\t\t\t} else if (type.substr(0, 3) === \"fat\"){\n\t\t\t\tthis._createNewOscillator(OmniOscType.Fat);\n\t\t\t\tthis._oscillator.type = type.substr(3);\n\t\t\t} else if (type === \"pwm\"){\n\t\t\t\tthis._createNewOscillator(OmniOscType.PWM);\n\t\t\t} else if (type === \"pulse\"){\n\t\t\t\tthis._createNewOscillator(OmniOscType.Pulse);\n\t\t\t} else {\n\t\t\t\tthis._createNewOscillator(OmniOscType.Osc);\n\t\t\t\tthis._oscillator.type = type;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The partials of the waveform. A partial represents\n\t * the amplitude at a harmonic. The first harmonic is the\n\t * fundamental frequency, the second is the octave and so on\n\t * following the harmonic series.\n\t * Setting this value will automatically set the type to \"custom\".\n\t * The value is an empty array when the type is not \"custom\".\n\t * This is not available on \"pwm\" and \"pulse\" oscillator types.\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {Array}\n\t * @name partials\n\t * @example\n\t * osc.partials = [1, 0.2, 0.01];\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"partials\", {\n\t\tget : function(){\n\t\t\treturn this._oscillator.partials;\n\t\t},\n\t\tset : function(partials){\n\t\t\tthis._oscillator.partials = partials;\n\t\t}\n\t});\n\n\t/**\n\t * The partial count of the oscillator. This is not available on \"pwm\" and \"pulse\" oscillator types.\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {Number}\n\t * @name partialCount\n\t * @example\n\t * //set the maximum number of partials\n\t * osc.partialCount = 0;\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"partialCount\", {\n\t\tget : function(){\n\t\t\treturn this._oscillator.partialCount;\n\t\t},\n\t\tset : function(partialCount){\n\t\t\tthis._oscillator.partialCount = partialCount;\n\t\t}\n\t});\n\n\t/**\n\t *  Set a member/attribute of the oscillator.\n\t *  @param {Object|String} params\n\t *  @param {number=} value\n\t *  @param {Time=} rampTime\n\t *  @returns {Tone.OmniOscillator} this\n\t */\n\tTone.OmniOscillator.prototype.set = function(params, value){\n\t\t//make sure the type is set first\n\t\tif (params === \"type\"){\n\t\t\tthis.type = value;\n\t\t} else if (Tone.isObject(params) && params.hasOwnProperty(\"type\")){\n\t\t\tthis.type = params.type;\n\t\t}\n\t\t//then set the rest\n\t\tTone.prototype.set.apply(this, arguments);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Get the object's attributes. Given no arguments get\n\t *  will return all available object properties and their corresponding\n\t *  values. Pass in a single attribute to retrieve or an array\n\t *  of attributes. The attribute strings can also include a \".\"\n\t *  to access deeper properties.\n\t *  @param {Array=|string|undefined} params the parameters to get, otherwise will return\n\t *  \t\t\t\t\t                  all available.\n\t *  @returns {Object}\n\t */\n\tTone.OmniOscillator.prototype.get = function(params){\n\t\tvar options = this._oscillator.get(params);\n\t\toptions.type = this.type;\n\t\treturn options;\n\t};\n\n\t/**\n\t *  connect the oscillator to the frequency and detune signals\n\t *  @private\n\t */\n\tTone.OmniOscillator.prototype._createNewOscillator = function(oscType){\n\t\tif (oscType !== this._sourceType){\n\t\t\tthis._sourceType = oscType;\n\t\t\tvar OscillatorConstructor = Tone[oscType];\n\t\t\t//short delay to avoid clicks on the change\n\t\t\tvar now = this.now();\n\t\t\tif (this._oscillator !== null){\n\t\t\t\tvar oldOsc = this._oscillator;\n\t\t\t\toldOsc.stop(now);\n\t\t\t\t//dispose the old one\n\t\t\t\tthis.context.setTimeout(function(){\n\t\t\t\t\toldOsc.dispose();\n\t\t\t\t\toldOsc = null;\n\t\t\t\t}, this.blockTime);\n\t\t\t}\n\t\t\tthis._oscillator = new OscillatorConstructor();\n\t\t\tthis.frequency.connect(this._oscillator.frequency);\n\t\t\tthis.detune.connect(this._oscillator.detune);\n\t\t\tthis._oscillator.connect(this.output);\n\t\t\tif (this.state === Tone.State.Started){\n\t\t\t\tthis._oscillator.start(now);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {Degrees}\n\t * @name phase\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"phase\", {\n\t\tget : function(){\n\t\t\treturn this._oscillator.phase;\n\t\t},\n\t\tset : function(phase){\n\t\t\tthis._oscillator.phase = phase;\n\t\t}\n\t});\n\n\t/**\n\t * The source type names\n\t * @private\n\t * @type {Object}\n\t */\n\tvar SourceTypeNames = {\n\t\tPulseOscillator : \"pulse\",\n\t\tPWMOscillator : \"pwm\",\n\t\tOscillator : \"oscillator\",\n\t\tFMOscillator : \"fm\",\n\t\tAMOscillator : \"am\",\n\t\tFatOscillator : \"fat\"\n\t};\n\n\t/**\n\t * The source type of the oscillator. \n\t * @memberOf Tone.OmniOscillator#\n\t * @type {String}\n\t * @name sourceType\n\t * @example\n\t * var omniOsc = new Tone.OmniOscillator(440, \"fmsquare\");\n\t * omniOsc.sourceType // 'fm'\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"sourceType\", {\n\t\tget : function(){\n\t\t\treturn SourceTypeNames[this._sourceType];\n\t\t},\n\t\tset : function(sType){\n\t\t\t//the basetype defaults to sine\n\t\t\tvar baseType = \"sine\";\n\t\t\tif (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\"){\n\t\t\t\tbaseType = this._oscillator.type;\n\t\t\t} \n\n\t\t\t//set the type\n\t\t\tif (sType === SourceTypeNames.FMOscillator){\n\t\t\t\tthis.type = \"fm\" + baseType;\n\t\t\t} else if (sType === SourceTypeNames.AMOscillator){\n\t\t\t\tthis.type = \"am\" + baseType;\n\t\t\t} else if (sType === SourceTypeNames.FatOscillator){\n\t\t\t\tthis.type = \"fat\" + baseType;\n\t\t\t} else if (sType === SourceTypeNames.Oscillator){\n\t\t\t\tthis.type = baseType;\n\t\t\t} else if (sType === SourceTypeNames.PulseOscillator){\n\t\t\t\tthis.type = \"pulse\";\n\t\t\t} else if (sType === SourceTypeNames.PWMOscillator){\n\t\t\t\tthis.type = \"pwm\";\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The base type of the oscillator.\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {String}\n\t * @name baseType\n\t * @example\n\t * var omniOsc = new Tone.OmniOscillator(440, \"fmsquare4\");\n\t * omniOsc.sourceType // 'fm'\n\t * omniOsc.baseType //'square'\n\t * omniOsc.partialCount //4\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"baseType\", {\n\t\tget : function(){\n\t\t\treturn this._oscillator.baseType;\n\t\t},\n\t\tset : function(baseType){\n\t\t\tif (this.sourceType !== SourceTypeNames.PulseOscillator && this.sourceType !== SourceTypeNames.PWMOscillator){\n\t\t\t\tthis._oscillator.baseType = baseType;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The width of the oscillator (only if the oscillator is set to \"pulse\")\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {NormalRange}\n\t * @signal\n\t * @name width\n\t * @example\n\t * var omniOsc = new Tone.OmniOscillator(440, \"pulse\");\n\t * //can access the width attribute only if type === \"pulse\"\n\t * omniOsc.width.value = 0.2;\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"width\", {\n\t\tget : function(){\n\t\t\tif (this._sourceType === OmniOscType.Pulse){\n\t\t\t\treturn this._oscillator.width;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The number of detuned oscillators\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {Number}\n\t * @name count\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"count\", {\n\t\tget : function(){\n\t\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\t\treturn this._oscillator.count;\n\t\t\t}\n\t\t},\n\t\tset : function(count){\n\t\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\t\tthis._oscillator.count = count;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The detune spread between the oscillators. If \"count\" is\n\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t * for a total detune spread of 40 cents. See Tone.FatOscillator\n\t * for more info.\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {Cents}\n\t * @name spread\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"spread\", {\n\t\tget : function(){\n\t\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\t\treturn this._oscillator.spread;\n\t\t\t}\n\t\t},\n\t\tset : function(spread){\n\t\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\t\tthis._oscillator.spread = spread;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The type of the modulator oscillator. Only if the oscillator\n\t * is set to \"am\" or \"fm\" types. see. Tone.AMOscillator or Tone.FMOscillator\n\t * for more info.\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {String}\n\t * @name modulationType\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"modulationType\", {\n\t\tget : function(){\n\t\t\tif (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM){\n\t\t\t\treturn this._oscillator.modulationType;\n\t\t\t}\n\t\t},\n\t\tset : function(mType){\n\t\t\tif (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM){\n\t\t\t\tthis._oscillator.modulationType = mType;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the\n\t * ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t * modulating signal (ma) -- as in ma/mf.\n\t * See Tone.FMOscillator for more info.\n\t * @type {Positive}\n\t * @signal\n\t * @name modulationIndex\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"modulationIndex\", {\n\t\tget : function(){\n\t\t\tif (this._sourceType === OmniOscType.FM){\n\t\t\t\treturn this._oscillator.modulationIndex;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t *  A harmonicity of 1 gives both oscillators the same frequency.\n\t *  Harmonicity = 2 means a change of an octave. See Tone.AMOscillator or Tone.FMOscillator\n\t *  for more info.\n\t *  @memberOf Tone.OmniOscillator#\n\t *  @signal\n\t *  @type {Positive}\n\t *  @name harmonicity\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"harmonicity\", {\n\t\tget : function(){\n\t\t\tif (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM){\n\t\t\t\treturn this._oscillator.harmonicity;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The modulationFrequency Signal of the oscillator\n\t * (only if the oscillator type is set to pwm). See\n\t * Tone.PWMOscillator for more info.\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {Frequency}\n\t * @signal\n\t * @name modulationFrequency\n\t * @example\n\t * var omniOsc = new Tone.OmniOscillator(440, \"pwm\");\n\t * //can access the modulationFrequency attribute only if type === \"pwm\"\n\t * omniOsc.modulationFrequency.value = 0.2;\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"modulationFrequency\", {\n\t\tget : function(){\n\t\t\tif (this._sourceType === OmniOscType.PWM){\n\t\t\t\treturn this._oscillator.modulationFrequency;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  Clean up.\n\t *  @return {Tone.OmniOscillator} this\n\t */\n\tTone.OmniOscillator.prototype.dispose = function(){\n\t\tTone.Source.prototype.dispose.call(this);\n\t\tthis._writable([\"frequency\", \"detune\"]);\n\t\tthis.detune.dispose();\n\t\tthis.detune = null;\n\t\tthis.frequency.dispose();\n\t\tthis.frequency = null;\n\t\tthis._oscillator.dispose();\n\t\tthis._oscillator = null;\n\t\tthis._sourceType = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.OmniOscillator;\n});\n","define([\"../core/Tone\", \"../component/Envelope\", \"../core/Gain\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Tone.AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n\t *          Unlike Tone.Envelope, which outputs the envelope's value, Tone.AmplitudeEnvelope accepts\n\t *          an audio signal as the input and will apply the envelope to the amplitude\n\t *          of the signal. Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n\t *\n\t *  @constructor\n\t *  @extends {Tone.Envelope}\n\t *  @param {Time|Object} [attack] The amount of time it takes for the envelope to go from\n\t *                               0 to it's maximum value.\n\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t *                       \tto fall to the sustain value.\n\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t *                                \tthe release is triggered.\n\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0.\n\t *  @example\n\t * var ampEnv = new Tone.AmplitudeEnvelope({\n\t * \t\"attack\": 0.1,\n\t * \t\"decay\": 0.2,\n\t * \t\"sustain\": 1.0,\n\t * \t\"release\": 0.8\n\t * }).toMaster();\n\t * //create an oscillator and connect it\n\t * var osc = new Tone.Oscillator().connect(ampEnv).start();\n\t * //trigger the envelopes attack and release \"8t\" apart\n\t * ampEnv.triggerAttackRelease(\"8t\");\n\t */\n\tTone.AmplitudeEnvelope = function(){\n\n\t\tTone.Envelope.apply(this, arguments);\n\n\t\t/**\n\t\t *  the input node\n\t\t *  @type {GainNode}\n\t\t *  @private\n\t\t */\n\t\tthis.input = this.output = new Tone.Gain();\n\n\t\tthis._sig.connect(this.output.gain);\n\t};\n\n\tTone.extend(Tone.AmplitudeEnvelope, Tone.Envelope);\n\n\t/**\n\t *  Clean up\n\t *  @return  {Tone.AmplitudeEnvelope}  this\n\t */\n\tTone.AmplitudeEnvelope.prototype.dispose = function(){\n\t\tTone.Envelope.prototype.dispose.call(this);\n\t\treturn this;\n\t};\n\n\treturn Tone.AmplitudeEnvelope;\n});\n","define([\"../core/Tone\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.Emitter gives classes which extend it\n\t *         the ability to listen for and emit events.\n\t *         Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n\t *         MIT (c) 2011 Jerome Etienne.\n\t *\n\t *  @extends {Tone}\n\t */\n\tTone.Emitter = function(){\n\t\tTone.call(this);\n\t\t/**\n\t\t *  Contains all of the events.\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t\tthis._events = {};\n\t};\n\n\tTone.extend(Tone.Emitter);\n\n\t/**\n\t *  Bind a callback to a specific event.\n\t *  @param  {String}    event     The name of the event to listen for.\n\t *  @param  {Function}  callback  The callback to invoke when the\n\t *                                event is emitted\n\t *  @return  {Tone.Emitter}    this\n\t */\n\tTone.Emitter.prototype.on = function(event, callback){\n\t\t//split the event\n\t\tvar events = event.split(/\\W+/);\n\t\tfor (var i = 0; i < events.length; i++){\n\t\t\tvar eventName = events[i];\n\t\t\tif (!this._events.hasOwnProperty(eventName)){\n\t\t\t\tthis._events[eventName] = [];\n\t\t\t}\n\t\t\tthis._events[eventName].push(callback);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Bind a callback which is only invoked once\n\t *  @param  {String}    event     The name of the event to listen for.\n\t *  @param  {Function}  callback  The callback to invoke when the\n\t *                                event is emitted\n\t *  @return  {Tone.Emitter}    this\n\t */\n\tTone.Emitter.prototype.once = function(event, callback){\n\t\tvar boundCallback = function(){\n\t\t\t//invoke the callback\n\t\t\tcallback.apply(this, arguments);\n\t\t\tthis.off(event, boundCallback);\n\t\t}.bind(this);\n\t\tthis.on(event, boundCallback);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Remove the event listener.\n\t *  @param  {String}    event     The event to stop listening to.\n\t *  @param  {Function=}  callback  The callback which was bound to\n\t *                                the event with Tone.Emitter.on.\n\t *                                If no callback is given, all callbacks\n\t *                                events are removed.\n\t *  @return  {Tone.Emitter}    this\n\t */\n\tTone.Emitter.prototype.off = function(event, callback){\n\t\tvar events = event.split(/\\W+/);\n\t\tfor (var ev = 0; ev < events.length; ev++){\n\t\t\tevent = events[ev];\n\t\t\tif (this._events.hasOwnProperty(event)){\n\t\t\t\tif (Tone.isUndef(callback)){\n\t\t\t\t\tthis._events[event] = [];\n\t\t\t\t} else {\n\t\t\t\t\tvar eventList = this._events[event];\n\t\t\t\t\tfor (var i = 0; i < eventList.length; i++){\n\t\t\t\t\t\tif (eventList[i] === callback){\n\t\t\t\t\t\t\teventList.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Invoke all of the callbacks bound to the event\n\t *  with any arguments passed in.\n\t *  @param  {String}  event  The name of the event.\n\t *  @param {*} args... The arguments to pass to the functions listening.\n\t *  @return  {Tone.Emitter}  this\n\t */\n\tTone.Emitter.prototype.emit = function(event){\n\t\tif (this._events){\n\t\t\tvar args = Array.apply(null, arguments).slice(1);\n\t\t\tif (this._events.hasOwnProperty(event)){\n\t\t\t\tvar eventList = this._events[event].slice(0);\n\t\t\t\tfor (var i = 0, len = eventList.length; i < len; i++){\n\t\t\t\t\teventList[i].apply(this, args);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Add Emitter functions (on/off/emit) to the object\n\t *  @param  {Object|Function}  object  The object or class to extend.\n\t *  @returns {Tone.Emitter}\n\t */\n\tTone.Emitter.mixin = function(object){\n\t\tvar functions = [\"on\", \"once\", \"off\", \"emit\"];\n\t\tobject._events = {};\n\t\tfor (var i = 0; i < functions.length; i++){\n\t\t\tvar func = functions[i];\n\t\t\tvar emitterFunc = Tone.Emitter.prototype[func];\n\t\t\tobject[func] = emitterFunc;\n\t\t}\n\t\treturn Tone.Emitter;\n\t};\n\n\t/**\n\t *  Clean up\n\t *  @return  {Tone.Emitter}  this\n\t */\n\tTone.Emitter.prototype.dispose = function(){\n\t\tTone.prototype.dispose.call(this);\n\t\tthis._events = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Emitter;\n});\n","define([\"../core/Tone\", \"../type/Time\"], function(Tone){\n\n\t/**\n\t *  @class Tone.TransportTime is a the time along the Transport's\n\t *         timeline. It is similar to Tone.Time, but instead of evaluating\n\t *         against the AudioContext's clock, it is evaluated against\n\t *         the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n\t *  @constructor\n\t *  @param  {Time}  val    The time value as a number or string\n\t *  @param  {String=}  units  Unit values\n\t *  @extends {Tone.Time}\n\t */\n\tTone.TransportTime = function(val, units){\n\t\tif (this instanceof Tone.TransportTime){\n\n\t\t\tTone.Time.call(this, val, units);\n\n\t\t} else {\n\t\t\treturn new Tone.TransportTime(val, units);\n\t\t}\n\t};\n\n\tTone.extend(Tone.TransportTime, Tone.Time);\n\n\t/**\n\t * Return the current time in whichever context is relevant\n\t * @type {Number}\n\t * @private\n\t */\n\tTone.TransportTime.prototype._now = function(){\n\t\treturn Tone.Transport.seconds;\n\t};\n\n\treturn Tone.TransportTime;\n});\n","module.exports = \"13.4.9\";\n","define([\"../core/Tone\", \"../signal/Signal\",\n\t\"../signal/Pow\", \"../type/Type\", \"../core/AudioNode\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Tone.Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n\t *          envelope generator. Tone.Envelope outputs a signal which\n\t *          can be connected to an AudioParam or Tone.Signal.\n\t *          <img src=\"https://upload.wikimedia.org/wikipedia/commons/e/ea/ADSR_parameter.svg\">\n\t *\n\t *  @constructor\n\t *  @extends {Tone.AudioNode}\n\t *  @param {Time} [attack] The amount of time it takes for the envelope to go from\n\t *                         0 to it's maximum value.\n\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t *                       \tto fall to the sustain value. Value must be greater than 0.\n\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t *                                \tthe release is triggered.\n\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0.\n\t *                         \tValue must be greater than 0.\n\t *  @example\n\t * //an amplitude envelope\n\t * var gainNode = Tone.context.createGain();\n\t * var env = new Tone.Envelope({\n\t * \t\"attack\" : 0.1,\n\t * \t\"decay\" : 0.2,\n\t * \t\"sustain\" : 1,\n\t * \t\"release\" : 0.8,\n\t * });\n\t * env.connect(gainNode.gain);\n\t */\n\tTone.Envelope = function(){\n\n\t\t//get all of the defaults\n\t\tvar options = Tone.defaults(arguments, [\"attack\", \"decay\", \"sustain\", \"release\"], Tone.Envelope);\n\t\tTone.AudioNode.call(this);\n\n\t\t/**\n\t\t *  When triggerAttack is called, the attack time is the amount of\n\t\t *  time it takes for the envelope to reach it's maximum value.\n\t\t *  @type {Time}\n\t\t */\n\t\tthis.attack = options.attack;\n\n\t\t/**\n\t\t *  After the attack portion of the envelope, the value will fall\n\t\t *  over the duration of the decay time to it's sustain value.\n\t\t *  @type {Time}\n\t\t */\n\t\tthis.decay = options.decay;\n\n\t\t/**\n\t\t * \tThe sustain value is the value\n\t\t * \twhich the envelope rests at after triggerAttack is\n\t\t * \tcalled, but before triggerRelease is invoked.\n\t\t *  @type {NormalRange}\n\t\t */\n\t\tthis.sustain = options.sustain;\n\n\t\t/**\n\t\t *  After triggerRelease is called, the envelope's\n\t\t *  value will fall to it's miminum value over the\n\t\t *  duration of the release time.\n\t\t *  @type {Time}\n\t\t */\n\t\tthis.release = options.release;\n\n\t\t/**\n\t\t *  the next time the envelope is at standby\n\t\t *  @type {number}\n\t\t *  @private\n\t\t */\n\t\tthis._attackCurve = \"linear\";\n\n\t\t/**\n\t\t *  the next time the envelope is at standby\n\t\t *  @type {number}\n\t\t *  @private\n\t\t */\n\t\tthis._releaseCurve = \"exponential\";\n\n\t\t/**\n\t\t *  the signal\n\t\t *  @type {Tone.Signal}\n\t\t *  @private\n\t\t */\n\t\tthis._sig = this.output = new Tone.Signal(0);\n\n\t\t//set the attackCurve initially\n\t\tthis.attackCurve = options.attackCurve;\n\t\tthis.releaseCurve = options.releaseCurve;\n\t\tthis.decayCurve = options.decayCurve;\n\t};\n\n\tTone.extend(Tone.Envelope, Tone.AudioNode);\n\n\t/**\n\t *  the default parameters\n\t *  @static\n\t *  @const\n\t */\n\tTone.Envelope.defaults = {\n\t\t\"attack\" : 0.01,\n\t\t\"decay\" : 0.1,\n\t\t\"sustain\" : 0.5,\n\t\t\"release\" : 1,\n\t\t\"attackCurve\" : \"linear\",\n\t\t\"decayCurve\" : \"exponential\",\n\t\t\"releaseCurve\" : \"exponential\",\n\t};\n\n\t/**\n\t * Read the current value of the envelope. Useful for\n\t * syncronizing visual output to the envelope.\n\t * @memberOf Tone.Envelope#\n\t * @type {Number}\n\t * @name value\n\t * @readOnly\n\t */\n\tObject.defineProperty(Tone.Envelope.prototype, \"value\", {\n\t\tget : function(){\n\t\t\treturn this.getValueAtTime(this.now());\n\t\t}\n\t});\n\n\t/**\n\t *  Get the curve\n\t *  @param  {Array|String}  curve\n\t *  @param  {String}  direction  In/Out\n\t *  @return  {String}  The curve name\n\t *  @private\n\t */\n\tTone.Envelope.prototype._getCurve = function(curve, direction){\n\t\tif (Tone.isString(curve)){\n\t\t\treturn curve;\n\t\t} else if (Tone.isArray(curve)){\n\t\t\t//look up the name in the curves array\n\t\t\tfor (var t in Tone.Envelope.Type){\n\t\t\t\tif (Tone.Envelope.Type[t][direction] === curve){\n\t\t\t\t\treturn t;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//otherwise just return the array\n\t\t\treturn curve;\n\t\t}\n\t};\n\n\t/**\n\t *  Assign a the curve to the given name using the direction\n\t *  @param  {String}  name\n\t *  @param  {String}  direction In/Out\n\t *  @param  {Array}  curve\n\t *  @private\n\t */\n\tTone.Envelope.prototype._setCurve = function(name, direction, curve){\n\t\t//check if it's a valid type\n\t\tif (Tone.Envelope.Type.hasOwnProperty(curve)){\n\t\t\tvar curveDef = Tone.Envelope.Type[curve];\n\t\t\tif (Tone.isObject(curveDef)){\n\t\t\t\tthis[name] = curveDef[direction];\n\t\t\t} else {\n\t\t\t\tthis[name] = curveDef;\n\t\t\t}\n\t\t} else if (Tone.isArray(curve)){\n\t\t\tthis[name] = curve;\n\t\t} else {\n\t\t\tthrow new Error(\"Tone.Envelope: invalid curve: \" + curve);\n\t\t}\n\t};\n\n\t/**\n\t * The shape of the attack.\n\t * Can be any of these strings:\n\t * <ul>\n\t *   <li>linear</li>\n\t *   <li>exponential</li>\n\t *   <li>sine</li>\n\t *   <li>cosine</li>\n\t *   <li>bounce</li>\n\t *   <li>ripple</li>\n\t *   <li>step</li>\n\t * </ul>\n\t * Can also be an array which describes the curve. Values\n\t * in the array are evenly subdivided and linearly\n\t * interpolated over the duration of the attack.\n\t * @memberOf Tone.Envelope#\n\t * @type {String|Array}\n\t * @name attackCurve\n\t * @example\n\t * env.attackCurve = \"linear\";\n\t * @example\n\t * //can also be an array\n\t * env.attackCurve = [0, 0.2, 0.3, 0.4, 1]\n\t */\n\tObject.defineProperty(Tone.Envelope.prototype, \"attackCurve\", {\n\t\tget : function(){\n\t\t\treturn this._getCurve(this._attackCurve, \"In\");\n\t\t},\n\t\tset : function(curve){\n\t\t\tthis._setCurve(\"_attackCurve\", \"In\", curve);\n\t\t}\n\t});\n\n\t/**\n\t * The shape of the release. See the attack curve types.\n\t * @memberOf Tone.Envelope#\n\t * @type {String|Array}\n\t * @name releaseCurve\n\t * @example\n\t * env.releaseCurve = \"linear\";\n\t */\n\tObject.defineProperty(Tone.Envelope.prototype, \"releaseCurve\", {\n\t\tget : function(){\n\t\t\treturn this._getCurve(this._releaseCurve, \"Out\");\n\t\t},\n\t\tset : function(curve){\n\t\t\tthis._setCurve(\"_releaseCurve\", \"Out\", curve);\n\t\t}\n\t});\n\n\t/**\n\t * The shape of the decay either \"linear\" or \"exponential\"\n\t * @memberOf Tone.Envelope#\n\t * @type {String}\n\t * @name decayCurve\n\t * @example\n\t * env.decayCurve = \"linear\";\n\t */\n\tObject.defineProperty(Tone.Envelope.prototype, \"decayCurve\", {\n\t\tget : function(){\n\t\t\treturn this._decayCurve;\n\t\t},\n\t\tset : function(curve){\n\t\t\tvar curves = [\"linear\", \"exponential\"];\n\t\t\tif (!curves.includes(curve)){\n\t\t\t\tthrow new Error(\"Tone.Envelope: invalid curve: \" + curve);\n\t\t\t} else {\n\t\t\t\tthis._decayCurve = curve;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  Trigger the attack/decay portion of the ADSR envelope.\n\t *  @param  {Time} [time=now] When the attack should start.\n\t *  @param {NormalRange} [velocity=1] The velocity of the envelope scales the vales.\n\t *                               number between 0-1\n\t *  @returns {Tone.Envelope} this\n\t *  @example\n\t *  //trigger the attack 0.5 seconds from now with a velocity of 0.2\n\t *  env.triggerAttack(\"+0.5\", 0.2);\n\t */\n\tTone.Envelope.prototype.triggerAttack = function(time, velocity){\n\t\tthis.log(\"triggerAttack\", time, velocity);\n\t\ttime = this.toSeconds(time);\n\t\tvar originalAttack = this.toSeconds(this.attack);\n\t\tvar attack = originalAttack;\n\t\tvar decay = this.toSeconds(this.decay);\n\t\tvelocity = Tone.defaultArg(velocity, 1);\n\t\t//check if it's not a complete attack\n\t\tvar currentValue = this.getValueAtTime(time);\n\t\tif (currentValue > 0){\n\t\t\t//subtract the current value from the attack time\n\t\t\tvar attackRate = 1 / attack;\n\t\t\tvar remainingDistance = 1 - currentValue;\n\t\t\t//the attack is now the remaining time\n\t\t\tattack = remainingDistance / attackRate;\n\t\t}\n\t\t//attack\n\t\tif (this._attackCurve === \"linear\"){\n\t\t\tthis._sig.linearRampTo(velocity, attack, time);\n\t\t} else if (this._attackCurve === \"exponential\"){\n\t\t\tthis._sig.targetRampTo(velocity, attack, time);\n\t\t} else if (attack > 0){\n\t\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\t\tvar curve = this._attackCurve;\n\t\t\t//find the starting position in the curve\n\t\t\tfor (var i = 1; i < curve.length; i++){\n\t\t\t\t//the starting index is between the two values\n\t\t\t\tif (curve[i-1] <= currentValue && currentValue <= curve[i]){\n\t\t\t\t\tcurve = this._attackCurve.slice(i);\n\t\t\t\t\t//the first index is the current value\n\t\t\t\t\tcurve[0] = currentValue;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._sig.setValueCurveAtTime(curve, time, attack, velocity);\n\t\t}\n\t\t//decay\n\t\tif (decay){\n\t\t\tvar decayValue = velocity * this.sustain;\n\t\t\tvar decayStart = time + attack;\n\t\t\tthis.log(\"decay\", decayStart);\n\t\t\tif (this._decayCurve === \"linear\"){\n\t\t\t\tthis._sig.linearRampTo(decayValue, decay, decayStart+this.sampleTime);\n\t\t\t} else if (this._decayCurve === \"exponential\"){\n\t\t\t\tthis._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Triggers the release of the envelope.\n\t *  @param  {Time} [time=now] When the release portion of the envelope should start.\n\t *  @returns {Tone.Envelope} this\n\t *  @example\n\t *  //trigger release immediately\n\t *  env.triggerRelease();\n\t */\n\tTone.Envelope.prototype.triggerRelease = function(time){\n\t\tthis.log(\"triggerRelease\", time);\n\t\ttime = this.toSeconds(time);\n\t\tvar currentValue = this.getValueAtTime(time);\n\t\tif (currentValue > 0){\n\t\t\tvar release = this.toSeconds(this.release);\n\t\t\tif (this._releaseCurve === \"linear\"){\n\t\t\t\tthis._sig.linearRampTo(0, release, time);\n\t\t\t} else if (this._releaseCurve === \"exponential\"){\n\t\t\t\tthis._sig.targetRampTo(0, release, time);\n\t\t\t} else {\n\t\t\t\tvar curve = this._releaseCurve;\n\t\t\t\tif (Tone.isArray(curve)){\n\t\t\t\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\t\t\t\tthis._sig.setValueCurveAtTime(curve, time, release, currentValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Get the scheduled value at the given time. This will\n\t *  return the unconverted (raw) value.\n\t *  @param  {Number}  time  The time in seconds.\n\t *  @return  {Number}  The scheduled value at the given time.\n\t */\n\tTone.Envelope.prototype.getValueAtTime = function(time){\n\t\treturn this._sig.getValueAtTime(time);\n\t};\n\n\t/**\n\t *  triggerAttackRelease is shorthand for triggerAttack, then waiting\n\t *  some duration, then triggerRelease.\n\t *  @param {Time} duration The duration of the sustain.\n\t *  @param {Time} [time=now] When the attack should be triggered.\n\t *  @param {number} [velocity=1] The velocity of the envelope.\n\t *  @returns {Tone.Envelope} this\n\t *  @example\n\t * //trigger the attack and then the release after 0.6 seconds.\n\t * env.triggerAttackRelease(0.6);\n\t */\n\tTone.Envelope.prototype.triggerAttackRelease = function(duration, time, velocity){\n\t\ttime = this.toSeconds(time);\n\t\tthis.triggerAttack(time, velocity);\n\t\tthis.triggerRelease(time + this.toSeconds(duration));\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Cancels all scheduled envelope changes after the given time.\n\t *  @param  {Time} after\n\t *  @returns {Tone.Envelope} this\n\t */\n\tTone.Envelope.prototype.cancel = function(after){\n\t\tthis._sig.cancelScheduledValues(after);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Borrows the connect method from Tone.Signal.\n\t *  @function\n\t *  @private\n\t */\n\tTone.Envelope.prototype.connect = Tone.SignalBase.prototype.connect;\n\n\t/**\n \t *  Generate some complex envelope curves.\n \t */\n\t(function _createCurves(){\n\n\t\tvar curveLen = 128;\n\n\t\tvar i, k;\n\n\t\t//cosine curve\n\t\tvar cosineCurve = [];\n\t\tfor (i = 0; i < curveLen; i++){\n\t\t\tcosineCurve[i] = Math.sin((i / (curveLen - 1)) * (Math.PI / 2));\n\t\t}\n\n\t\t//ripple curve\n\t\tvar rippleCurve = [];\n\t\tvar rippleCurveFreq = 6.4;\n\t\tfor (i = 0; i < curveLen - 1; i++){\n\t\t\tk = (i / (curveLen - 1));\n\t\t\tvar sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n\t\t\trippleCurve[i] = sineWave/10 + k * 0.83;\n\t\t}\n\t\trippleCurve[curveLen - 1] = 1;\n\n\t\t//stairs curve\n\t\tvar stairsCurve = [];\n\t\tvar steps = 5;\n\t\tfor (i = 0; i < curveLen; i++){\n\t\t\tstairsCurve[i] = Math.ceil((i / (curveLen - 1)) * steps) / steps;\n\t\t}\n\n\t\t//in-out easing curve\n\t\tvar sineCurve = [];\n\t\tfor (i = 0; i < curveLen; i++){\n\t\t\tk = i / (curveLen - 1);\n\t\t\tsineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n\t\t}\n\n\t\t//a bounce curve\n\t\tvar bounceCurve = [];\n\t\tfor (i = 0; i < curveLen; i++){\n\t\t\tk = i / (curveLen - 1);\n\t\t\tvar freq = Math.pow(k, 3) * 4 + 0.2;\n\t\t\tvar val = Math.cos(freq * Math.PI * 2 * k);\n\t\t\tbounceCurve[i] = Math.abs(val * (1 - k));\n\t\t}\n\n\t\t/**\n\t\t *  Invert a value curve to make it work for the release\n\t\t *  @private\n\t\t */\n\t\tfunction invertCurve(curve){\n\t\t\tvar out = new Array(curve.length);\n\t\t\tfor (var j = 0; j < curve.length; j++){\n\t\t\t\tout[j] = 1 - curve[j];\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\n\t\t/**\n\t\t *  reverse the curve\n\t\t *  @private\n\t\t */\n\t\tfunction reverseCurve(curve){\n\t\t\treturn curve.slice(0).reverse();\n\t\t}\n\n\t\t/**\n\t\t *  attack and release curve arrays\n\t\t *  @type  {Object}\n\t\t *  @private\n\t\t */\n\t\tTone.Envelope.Type = {\n\t\t\t\"linear\" : \"linear\",\n\t\t\t\"exponential\" : \"exponential\",\n\t\t\t\"bounce\" : {\n\t\t\t\tIn : invertCurve(bounceCurve),\n\t\t\t\tOut : bounceCurve\n\t\t\t},\n\t\t\t\"cosine\" : {\n\t\t\t\tIn : cosineCurve,\n\t\t\t\tOut : reverseCurve(cosineCurve)\n\t\t\t},\n\t\t\t\"step\" : {\n\t\t\t\tIn : stairsCurve,\n\t\t\t\tOut : invertCurve(stairsCurve)\n\t\t\t},\n\t\t\t\"ripple\" : {\n\t\t\t\tIn : rippleCurve,\n\t\t\t\tOut : invertCurve(rippleCurve)\n\t\t\t},\n\t\t\t\"sine\" : {\n\t\t\t\tIn : sineCurve,\n\t\t\t\tOut : invertCurve(sineCurve)\n\t\t\t}\n\t\t};\n\n\t})();\n\n\t/**\n\t *  Disconnect and dispose.\n\t *  @returns {Tone.Envelope} this\n\t */\n\tTone.Envelope.prototype.dispose = function(){\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis._sig.dispose();\n\t\tthis._sig = null;\n\t\tthis._attackCurve = null;\n\t\tthis._releaseCurve = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Envelope;\n});\n","define([\"../core/Tone\", \"../component/AmplitudeEnvelope\", \"../source/OmniOscillator\",\n\t\"../signal/Signal\", \"../instrument/Monophonic\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Tone.Synth is composed simply of a Tone.OmniOscillator\n\t *          routed through a Tone.AmplitudeEnvelope.\n\t *          <img src=\"https://docs.google.com/drawings/d/1-1_0YW2Z1J2EPI36P8fNCMcZG7N1w1GZluPs4og4evo/pub?w=1163&h=231\">\n\t *\n\t *  @constructor\n\t *  @extends {Tone.Monophonic}\n\t *  @param {Object} [options] the options available for the synth\n\t *                          see defaults below\n\t *  @example\n\t * var synth = new Tone.Synth().toMaster();\n\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t */\n\tTone.Synth = function(options){\n\n\t\t//get the defaults\n\t\toptions = Tone.defaultArg(options, Tone.Synth.defaults);\n\t\tTone.Monophonic.call(this, options);\n\n\t\t/**\n\t\t *  The oscillator.\n\t\t *  @type {Tone.OmniOscillator}\n\t\t */\n\t\tthis.oscillator = new Tone.OmniOscillator(options.oscillator);\n\n\t\t/**\n\t\t *  The frequency control.\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = this.oscillator.frequency;\n\n\t\t/**\n\t\t *  The detune control.\n\t\t *  @type {Cents}\n\t\t *  @signal\n\t\t */\n\t\tthis.detune = this.oscillator.detune;\n\n\t\t/**\n\t\t *  The amplitude envelope.\n\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t */\n\t\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t\t//connect the oscillators to the output\n\t\tthis.oscillator.chain(this.envelope, this.output);\n\t\tthis._readOnly([\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n\t};\n\n\tTone.extend(Tone.Synth, Tone.Monophonic);\n\n\t/**\n\t *  @const\n\t *  @static\n\t *  @type {Object}\n\t */\n\tTone.Synth.defaults = {\n\t\t\"oscillator\" : {\n\t\t\t\"type\" : \"triangle\"\n\t\t},\n\t\t\"envelope\" : {\n\t\t\t\"attack\" : 0.005,\n\t\t\t\"decay\" : 0.1,\n\t\t\t\"sustain\" : 0.3,\n\t\t\t\"release\" : 1\n\t\t}\n\t};\n\n\t/**\n\t *  start the attack portion of the envelope\n\t *  @param {Time} [time=now] the time the attack should start\n\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t *  @returns {Tone.Synth} this\n\t *  @private\n\t */\n\tTone.Synth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\t\t//the envelopes\n\t\tthis.envelope.triggerAttack(time, velocity);\n\t\tthis.oscillator.start(time);\n\t\t//if there is no release portion, stop the oscillator\n\t\tif (this.envelope.sustain === 0){\n\t\t\tthis.oscillator.stop(time + this.envelope.attack + this.envelope.decay);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  start the release portion of the envelope\n\t *  @param {Time} [time=now] the time the release should start\n\t *  @returns {Tone.Synth} this\n\t *  @private\n\t */\n\tTone.Synth.prototype._triggerEnvelopeRelease = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis.envelope.triggerRelease(time);\n\t\tthis.oscillator.stop(time + this.envelope.release);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  clean up\n\t *  @returns {Tone.Synth} this\n\t */\n\tTone.Synth.prototype.dispose = function(){\n\t\tTone.Monophonic.prototype.dispose.call(this);\n\t\tthis._writable([\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n\t\tthis.oscillator.dispose();\n\t\tthis.oscillator = null;\n\t\tthis.envelope.dispose();\n\t\tthis.envelope = null;\n\t\tthis.frequency = null;\n\t\tthis.detune = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Synth;\n});\n","define([\"../core/Tone\", \"../source/TickSource\", \"../core/TimelineState\",\n\t\"../core/Emitter\", \"../core/Context\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  A sample accurate clock which provides a callback at the given rate.\n\t *          While the callback is not sample-accurate (it is still susceptible to\n\t *          loose JS timing), the time passed in as the argument to the callback\n\t *          is precise. For most applications, it is better to use Tone.Transport\n\t *          instead of the Clock by itself since you can synchronize multiple callbacks.\n\t *\n\t * \t@constructor\n\t *  @extends {Tone.Emitter}\n\t * \t@param {function} callback The callback to be invoked with the time of the audio event\n\t * \t@param {Frequency} frequency The rate of the callback\n\t * \t@example\n\t * //the callback will be invoked approximately once a second\n\t * //and will print the time exactly once a second apart.\n\t * var clock = new Tone.Clock(function(time){\n\t * \tconsole.log(time);\n\t * }, 1);\n\t */\n\tTone.Clock = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"callback\", \"frequency\"], Tone.Clock);\n\t\tTone.Emitter.call(this);\n\n\t\t/**\n\t\t *  The callback function to invoke at the scheduled tick.\n\t\t *  @type  {Function}\n\t\t */\n\t\tthis.callback = options.callback;\n\n\t\t/**\n\t\t *  The next time the callback is scheduled.\n\t\t *  @type {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._nextTick = 0;\n\n\t\t/**\n\t\t *  The tick counter\n\t\t *  @type  {Tone.TickSource}\n\t\t *  @private\n\t\t */\n\t\tthis._tickSource = new Tone.TickSource(options.frequency);\n\n\t\t/**\n\t\t *  The last time the loop callback was invoked\n\t\t *  @private\n\t\t *  @type {Number}\n\t\t */\n\t\tthis._lastUpdate = 0;\n\n\t\t/**\n\t\t *  The rate the callback function should be invoked.\n\t\t *  @type  {BPM}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = this._tickSource.frequency;\n\t\tthis._readOnly(\"frequency\");\n\n\t\t/**\n\t\t *  The state timeline\n\t\t *  @type {Tone.TimelineState}\n\t\t *  @private\n\t\t */\n\t\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\t\t//add an initial state\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, 0);\n\n\t\t/**\n\t\t *  The loop function bound to its context.\n\t\t *  This is necessary to remove the event in the end.\n\t\t *  @type {Function}\n\t\t *  @private\n\t\t */\n\t\tthis._boundLoop = this._loop.bind(this);\n\n\t\t//bind a callback to the worker thread\n\t\tthis.context.on(\"tick\", this._boundLoop);\n\t};\n\n\tTone.extend(Tone.Clock, Tone.Emitter);\n\n\t/**\n\t *  The defaults\n\t *  @const\n\t *  @type  {Object}\n\t */\n\tTone.Clock.defaults = {\n\t\t\"callback\" : Tone.noOp,\n\t\t\"frequency\" : 1,\n\t};\n\n\t/**\n\t *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t *  @type {Tone.State}\n\t *  @readOnly\n\t *  @memberOf Tone.Clock#\n\t *  @name state\n\t */\n\tObject.defineProperty(Tone.Clock.prototype, \"state\", {\n\t\tget : function(){\n\t\t\treturn this._state.getValueAtTime(this.now());\n\t\t}\n\t});\n\n\t/**\n\t *  Start the clock at the given time. Optionally pass in an offset\n\t *  of where to start the tick counter from.\n\t *  @param  {Time=}  time    The time the clock should start\n\t *  @param  {Ticks=}  offset  Where the tick counter starts counting from.\n\t *  @return  {Tone.Clock}  this\n\t */\n\tTone.Clock.prototype.start = function(time, offset){\n\t\t//make sure the context is started\n\t\tthis.context.resume();\n\t\t//start the loop\n\t\ttime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(time) !== Tone.State.Started){\n\t\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\t\tthis._tickSource.start(time, offset);\n\t\t\tif (time < this._lastUpdate){\n\t\t\t\tthis.emit(\"start\", time, offset);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Stop the clock. Stopping the clock resets the tick counter to 0.\n\t *  @param {Time} [time=now] The time when the clock should stop.\n\t *  @returns {Tone.Clock} this\n\t *  @example\n\t * clock.stop();\n\t */\n\tTone.Clock.prototype.stop = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._state.cancel(time);\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\t\tthis._tickSource.stop(time);\n\t\tif (time < this._lastUpdate){\n\t\t\tthis.emit(\"stop\", time);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Pause the clock. Pausing does not reset the tick counter.\n\t *  @param {Time} [time=now] The time when the clock should stop.\n\t *  @returns {Tone.Clock} this\n\t */\n\tTone.Clock.prototype.pause = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\t\tthis._state.setStateAtTime(Tone.State.Paused, time);\n\t\t\tthis._tickSource.pause(time);\n\t\t\tif (time < this._lastUpdate){\n\t\t\t\tthis.emit(\"pause\", time);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  The number of times the callback was invoked. Starts counting at 0\n\t *  and increments after the callback was invoked.\n\t *  @type {Ticks}\n\t */\n\tObject.defineProperty(Tone.Clock.prototype, \"ticks\", {\n\t\tget : function(){\n\t\t\treturn Math.ceil(this.getTicksAtTime(this.now()));\n\t\t},\n\t\tset : function(t){\n\t\t\tthis._tickSource.ticks = t;\n\t\t}\n\t});\n\n\t/**\n\t *  The time since ticks=0 that the Clock has been running. Accounts\n\t *  for tempo curves\n\t *  @type {Seconds}\n\t */\n\tObject.defineProperty(Tone.Clock.prototype, \"seconds\", {\n\t\tget : function(){\n\t\t\treturn this._tickSource.seconds;\n\t\t},\n\t\tset : function(s){\n\t\t\tthis._tickSource.seconds = s;\n\t\t}\n\t});\n\n\t/**\n\t *  Return the elapsed seconds at the given time.\n\t *  @param  {Time}  time  When to get the elapsed seconds\n\t *  @return  {Seconds}  The number of elapsed seconds\n\t */\n\tTone.Clock.prototype.getSecondsAtTime = function(time){\n\t\treturn this._tickSource.getSecondsAtTime(time);\n\t};\n\n\t/**\n\t * Set the clock's ticks at the given time.\n\t * @param  {Ticks} ticks The tick value to set\n\t * @param  {Time} time  When to set the tick value\n\t * @return {Tone.Clock}       this\n\t */\n\tTone.Clock.prototype.setTicksAtTime = function(ticks, time){\n\t\tthis._tickSource.setTicksAtTime(ticks, time);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Get the clock's ticks at the given time.\n\t * @param  {Time} time  When to get the tick value\n\t * @return {Ticks}       The tick value at the given time.\n\t */\n\tTone.Clock.prototype.getTicksAtTime = function(time){\n\t\treturn this._tickSource.getTicksAtTime(time);\n\t};\n\n\t/**\n\t * Get the time of the next tick\n\t * @param  {Ticks} ticks The tick number.\n\t * @param  {Time} before \n\t * @return {Tone.Clock}       this\n\t */\n\tTone.Clock.prototype.nextTickTime = function(offset, when){\n\t\twhen = this.toSeconds(when);\n\t\tvar currentTick = this.getTicksAtTime(when);\n\t\treturn this._tickSource.getTimeOfTick(currentTick+offset, when);\n\t};\n\n\t/**\n\t *  The scheduling loop.\n\t *  @private\n\t */\n\tTone.Clock.prototype._loop = function(){\n\n\t\tvar startTime = this._lastUpdate;\n\t\tvar endTime = this.now();\n\t\tthis._lastUpdate = endTime;\n\n\t\tif (startTime !== endTime){\n\t\t\t//the state change events\n\t\t\tthis._state.forEachBetween(startTime, endTime, function(e){\n\t\t\t\tswitch (e.state){\n\t\t\t\t\tcase Tone.State.Started : \n\t\t\t\t\t\tvar offset = this._tickSource.getTicksAtTime(e.time);\n\t\t\t\t\t\tthis.emit(\"start\", e.time, offset);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Tone.State.Stopped : \n\t\t\t\t\t\tif (e.time !== 0){\n\t\t\t\t\t\t\tthis.emit(\"stop\", e.time);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Tone.State.Paused :\n\t\t\t\t\t\tthis.emit(\"pause\", e.time); \n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t\t//the tick callbacks\n\t\t\tthis._tickSource.forEachTickBetween(startTime, endTime, function(time, ticks){\n\t\t\t\tthis.callback(time, ticks);\n\t\t\t}.bind(this));\n\t\t}\n\t};\n\n\t/**\n\t *  Returns the scheduled state at the given time.\n\t *  @param  {Time}  time  The time to query.\n\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t *  @example\n\t * clock.start(\"+0.1\");\n\t * clock.getStateAtTime(\"+0.1\"); //returns \"started\"\n\t */\n\tTone.Clock.prototype.getStateAtTime = function(time){\n\t\ttime = this.toSeconds(time);\n\t\treturn this._state.getValueAtTime(time);\n\t};\n\n\t/**\n\t *  Clean up\n\t *  @returns {Tone.Clock} this\n\t */\n\tTone.Clock.prototype.dispose = function(){\n\t\tTone.Emitter.prototype.dispose.call(this);\n\t\tthis.context.off(\"tick\", this._boundLoop);\n\t\tthis._writable(\"frequency\");\n\t\tthis._tickSource.dispose();\n\t\tthis._tickSource = null;\n\t\tthis.frequency = null;\n\t\tthis._boundLoop = null;\n\t\tthis._nextTick = Infinity;\n\t\tthis.callback = null;\n\t\tthis._state.dispose();\n\t\tthis._state = null;\n\t};\n\n\treturn Tone.Clock;\n});\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","define([\"../core/Tone\", \"../signal/TickSignal\", \"../core/TimelineState\",\n\t\"../core/Timeline\", \"../core/Param\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Uses [Tone.TickSignal](TickSignal) to track elapsed ticks with\n\t *  \t\tcomplex automation curves.\n\t *\n\t * \t@constructor\n     *  @param {Frequency} frequency The initial frequency that the signal ticks at\n     *  @param {Tone.Param=} param A parameter to control (such as playbackRate)\n\t *  @extends {Tone}\n\t */\n\tTone.TickSource = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"frequency\"], Tone.TickSource);\n\n\t\t/**\n\t\t *  The frequency the callback function should be invoked.\n\t\t *  @type  {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = new Tone.TickSignal(options.frequency);\n\t\tthis._readOnly(\"frequency\");\n\n\t\t/**\n\t\t *  The state timeline\n\t\t *  @type {Tone.TimelineState}\n\t\t *  @private\n\t\t */\n\t\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, 0);\n\n\t\t/**\n\t\t * The offset values of the ticks\n\t\t * @type {Tone.Timeline}\n\t\t * @private\n\t\t */\n\t\tthis._tickOffset = new Tone.Timeline();\n\t\t//add the first event\n\t\tthis.setTicksAtTime(0, 0);\n\t};\n\n\tTone.extend(Tone.TickSource);\n\n\t/**\n\t *  The defaults\n\t *  @const\n\t *  @type  {Object}\n\t */\n\tTone.TickSource.defaults = {\n\t\t\"frequency\" : 1,\n\t};\n\n\t/**\n\t *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t *  @type {Tone.State}\n\t *  @readOnly\n\t *  @memberOf Tone.TickSource#\n\t *  @name state\n\t */\n\tObject.defineProperty(Tone.TickSource.prototype, \"state\", {\n\t\tget : function(){\n\t\t\treturn this._state.getValueAtTime(this.now());\n\t\t}\n\t});\n\n\t/**\n\t *  Start the clock at the given time. Optionally pass in an offset\n\t *  of where to start the tick counter from.\n\t *  @param  {Time=}  time    The time the clock should start\n\t *  @param {Ticks} [offset=0] The number of ticks to start the source at\n\t *  @return  {Tone.TickSource}  this\n\t */\n\tTone.TickSource.prototype.start = function(time, offset){\n\t\ttime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(time) !== Tone.State.Started){\n\t\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\t\tif (Tone.isDefined(offset)){\n\t\t\t\tthis.setTicksAtTime(offset, time);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Stop the clock. Stopping the clock resets the tick counter to 0.\n\t *  @param {Time} [time=now] The time when the clock should stop.\n\t *  @returns {Tone.TickSource} this\n\t *  @example\n\t * clock.stop();\n\t */\n\tTone.TickSource.prototype.stop = function(time){\n\t\ttime = this.toSeconds(time);\n\t\t//cancel the previous stop\n\t\tif (this._state.getValueAtTime(time) === Tone.State.Stopped){\n\t\t\tvar event = this._state.get(time);\n\t\t\tif (event.time > 0){\n\t\t\t\tthis._tickOffset.cancel(event.time);\n\t\t\t\tthis._state.cancel(event.time);\n\t\t\t}\n\t\t}\n\t\tthis._state.cancel(time);\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\t\tthis.setTicksAtTime(0, time);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Pause the clock. Pausing does not reset the tick counter.\n\t *  @param {Time} [time=now] The time when the clock should stop.\n\t *  @returns {Tone.TickSource} this\n\t */\n\tTone.TickSource.prototype.pause = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\t\tthis._state.setStateAtTime(Tone.State.Paused, time);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n\t *  @param {Time} [time=now] When to clear the events after\n\t *  @returns {Tone.TickSource} this\n\t */\n\tTone.TickSource.prototype.cancel = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._state.cancel(time);\n\t\tthis._tickOffset.cancel(time);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Get the elapsed ticks at the given time\n\t * @param  {Time} time  When to get the tick value\n\t * @return {Ticks}     The number of ticks\n\t */\n\tTone.TickSource.prototype.getTicksAtTime = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tvar stopEvent = this._state.getLastState(Tone.State.Stopped, time);\n\t\t//this event allows forEachBetween to iterate until the current time\n\t\tvar tmpEvent = { state : Tone.State.Paused, time : time };\n\t\tthis._state.add(tmpEvent);\n\n\t\t//keep track of the previous offset event\n\t\tvar lastState = stopEvent;\n\t\tvar elapsedTicks = 0;\n\n\t\t//iterate through all the events since the last stop\n\t\tthis._state.forEachBetween(stopEvent.time, time + this.sampleTime, function(e){\n\t\t\tvar periodStartTime = lastState.time;\n\t\t\t//if there is an offset event in this period use that\n\t\t\tvar offsetEvent = this._tickOffset.get(e.time);\n\t\t\tif (offsetEvent.time >= lastState.time){\n\t\t\t\telapsedTicks = offsetEvent.ticks;\n\t\t\t\tperiodStartTime = offsetEvent.time;\n\t\t\t}\n\t\t\tif (lastState.state === Tone.State.Started && e.state !== Tone.State.Started){\n\t\t\t\telapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);\n\t\t\t} \n\t\t\tlastState = e;\n\t\t}.bind(this));\n\n\t\t//remove the temporary event\n\t\tthis._state.remove(tmpEvent);\n\n\t\t//return the ticks\n\t\treturn elapsedTicks;\n\t};\n\n\t/**\n\t *  The number of times the callback was invoked. Starts counting at 0\n\t *  and increments after the callback was invoked. Returns -1 when stopped.\n\t *  @memberOf Tone.TickSource#\n\t *  @name ticks\n\t *  @type {Ticks}\n\t */\n\tObject.defineProperty(Tone.TickSource.prototype, \"ticks\", {\n\t\tget : function(){\n\t\t\treturn this.getTicksAtTime(this.now());\n\t\t},\n\t\tset : function(t){\n\t\t\tthis.setTicksAtTime(t, this.now());\n\t\t}\n\t});\n\n\t/**\n\t *  The time since ticks=0 that the TickSource has been running. Accounts\n\t *  for tempo curves\n\t *  @memberOf Tone.TickSource#\n\t *  @name seconds\n\t *  @type {Seconds}\n\t */\n\tObject.defineProperty(Tone.TickSource.prototype, \"seconds\", {\n\t\tget : function(){\n\t\t\treturn this.getSecondsAtTime(this.now());\n\t\t},\n\t\tset : function(s){\n\t\t\tvar now = this.now();\n\t\t\tvar ticks = this.frequency.timeToTicks(s, now);\n\t\t\tthis.setTicksAtTime(ticks, now);\n\t\t}\n\t});\n\n\t/**\n\t *  Return the elapsed seconds at the given time.\n\t *  @param  {Time}  time  When to get the elapsed seconds\n\t *  @return  {Seconds}  The number of elapsed seconds\n\t */\n\tTone.TickSource.prototype.getSecondsAtTime = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tvar stopEvent = this._state.getLastState(Tone.State.Stopped, time);\n\t\t//this event allows forEachBetween to iterate until the current time\n\t\tvar tmpEvent = { state : Tone.State.Paused, time : time };\n\t\tthis._state.add(tmpEvent);\n\n\t\t//keep track of the previous offset event\n\t\tvar lastState = stopEvent;\n\t\tvar elapsedSeconds = 0;\n\n\t\t//iterate through all the events since the last stop\n\t\tthis._state.forEachBetween(stopEvent.time, time + this.sampleTime, function(e){\n\t\t\tvar periodStartTime = lastState.time;\n\t\t\t//if there is an offset event in this period use that\n\t\t\tvar offsetEvent = this._tickOffset.get(e.time);\n\t\t\tif (offsetEvent.time >= lastState.time){\n\t\t\t\telapsedSeconds = offsetEvent.seconds;\n\t\t\t\tperiodStartTime = offsetEvent.time;\n\t\t\t}\n\t\t\tif (lastState.state === Tone.State.Started && e.state !== Tone.State.Started){\n\t\t\t\telapsedSeconds += e.time - periodStartTime;\n\t\t\t} \n\t\t\tlastState = e;\n\t\t}.bind(this));\n\n\t\t//remove the temporary event\n\t\tthis._state.remove(tmpEvent);\n\n\t\t//return the ticks\n\t\treturn elapsedSeconds;\n\t};\n\n\t/**\n\t * Set the clock's ticks at the given time.\n\t * @param  {Ticks} ticks The tick value to set\n\t * @param  {Time} time  When to set the tick value\n\t * @return {Tone.TickSource}       this\n\t */\n\tTone.TickSource.prototype.setTicksAtTime = function(ticks, time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._tickOffset.cancel(time);\n\t\tthis._tickOffset.add({\n\t\t\t\"time\" : time,\n\t\t\t\"ticks\" : ticks,\n\t\t\t\"seconds\" : this.frequency.getDurationOfTicks(ticks, time)\n\t\t});\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Returns the scheduled state at the given time.\n\t *  @param  {Time}  time  The time to query.\n\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t *  @example\n\t * source.start(\"+0.1\");\n\t * source.getStateAtTime(\"+0.1\"); //returns \"started\"\n\t */\n\tTone.TickSource.prototype.getStateAtTime = function(time){\n\t\ttime = this.toSeconds(time);\n\t\treturn this._state.getValueAtTime(time);\n\t};\n\n\t/**\n\t * Get the time of the given tick. The second argument\n\t * is when to test before. Since ticks can be set (with setTicksAtTime)\n\t * there may be multiple times for a given tick value. \n\t * @param  {Ticks} ticks The tick number.\n\t * @param  {Time=} before When to measure the tick value from. \n\t * @return {Time}       The time of the tick\n\t */\n\tTone.TickSource.prototype.getTimeOfTick = function(tick, before){\n\t\tbefore = Tone.defaultArg(before, this.now());\n\t\tvar offset = this._tickOffset.get(before);\n\t\tvar event = this._state.get(before);\n\t\tvar startTime = Math.max(offset.time, event.time);\n\t\tvar absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n\t\treturn this.frequency.getTimeOfTick(absoluteTicks);\n\t};\n\n\t/**\n\t *  Invoke the callback event at all scheduled ticks between the \n\t *  start time and the end time\n\t *  @param  {Time}    startTime  The beginning of the search range\n\t *  @param  {Time}    endTime    The end of the search range\n\t *  @param  {Function<Time,Ticks>}  callback   The callback to invoke with each tick\n\t *  @return  {Tone.TickSource}    this\n\t */\n\tTone.TickSource.prototype.forEachTickBetween = function(startTime, endTime, callback){\n\n\t\t//only iterate through the sections where it is \"started\"\n\t\tvar lastStateEvent = this._state.get(startTime);\n\t\tthis._state.forEachBetween(startTime, endTime, function(event){\n\t\t\tif (lastStateEvent.state === Tone.State.Started && event.state !== Tone.State.Started){\n\t\t\t\tthis.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);\n\t\t\t}\n\t\t\tlastStateEvent = event;\n\t\t}.bind(this));\n\n\t\tstartTime = Math.max(lastStateEvent.time, startTime);\n\n\t\tif (lastStateEvent.state === Tone.State.Started && this._state){\n\t\t\t//figure out the difference between the frequency ticks and the \n\t\t\tvar startTicks = this.frequency.getTicksAtTime(startTime);\n\t\t\tvar ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n\t\t\tvar diff = startTicks - ticksAtStart;\n\t\t\tvar offset = diff % 1;\n\t\t\tif (offset !== 0){\n\t\t\t\toffset = 1 - offset;\n\t\t\t}\n\t\t\tvar nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n\t\t\tvar error = null;\n\t\t\twhile (nextTickTime < endTime && this._state){\n\t\t\t\ttry {\n\t\t\t\t\tcallback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n\t\t\t\t} catch (e){\n\t\t\t\t\terror = e;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._state){\n\t\t\t\t\tnextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\n\t\tif (error){\n\t\t\tthrow error;\n\t\t}\n\t\t\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Clean up\n\t *  @returns {Tone.TickSource} this\n\t */\n\tTone.TickSource.prototype.dispose = function(){\n\t\tTone.Param.prototype.dispose.call(this);\n\t\tthis._state.dispose();\n\t\tthis._state = null;\n\t\tthis._tickOffset.dispose();\n\t\tthis._tickOffset = null;\n\t\tthis._writable(\"frequency\");\n\t\tthis.frequency.dispose();\n\t\tthis.frequency = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.TickSource;\n});\n"],"sourceRoot":""}