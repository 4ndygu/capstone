{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////node_modules/tone/Tone/shim/ConstantSourceNode.js","webpack:////node_modules/tone/Tone/instrument/Monophonic.js","webpack:////node_modules/tone/Tone/source/Source.js","webpack:////node_modules/tone/Tone/component/Envelope.js","webpack:////node_modules/core-js/modules/es6.string.ends-with.js","webpack:////node_modules/tone/Tone/core/IntervalTimeline.js","webpack:////node_modules/tone/Tone/source/FatOscillator.js","webpack:////node_modules/tone/Tone/instrument/Synth.js","webpack:////node_modules/tone/Tone/signal/TickSignal.js","webpack:////node_modules/tone/Tone/core/Tone.js","webpack:////node_modules/tone/Tone/type/TransportTime.js","webpack:////node_modules/core-js/modules/es6.array.fill.js","webpack:////node_modules/tone/Tone/core/Timeline.js","webpack:////node_modules/vue-slider-component/dist/vue-slider-component.umd.min.js","webpack:////node_modules/core-js/modules/_array-fill.js","webpack:////node_modules/tone/Tone/core/Gain.js","webpack:////node_modules/tone/Tone/source/PulseOscillator.js","webpack:////node_modules/tone/Tone/core/Param.js","webpack:////node_modules/tone/Tone/type/Ticks.js","webpack:////node_modules/tone/Tone/signal/Signal.js","webpack:////node_modules/tone/Tone/component/AmplitudeEnvelope.js","webpack:////node_modules/core-js/modules/_string-ws.js","webpack:////node_modules/chart.js/dist/Chart.js","webpack:////node_modules/tone/Tone/type/Frequency.js","webpack:////node_modules/tone/Tone/shim/OfflineAudioContext.js","webpack:////node_modules/tone/Tone/source/AMOscillator.js","webpack:////node_modules/tone/Tone/core/Emitter.js","webpack:////node_modules/tone/Tone/version.js","webpack:////node_modules/tone/Tone/source/TickSource.js","webpack:////node_modules/tone/Tone/core/AudioNode.js","webpack:////node_modules/tone/Tone/signal/Multiply.js","webpack:////node_modules/tone/Tone/signal/Pow.js","webpack:////node_modules/tone/Tone/core/OfflineContext.js","webpack:///./static/js/trends/main.vue?81b4","webpack:////node_modules/@babel/runtime-corejs2/helpers/esm/toArray.js","webpack:////node_modules/vue-chartjs/es/mixins/index.js","webpack:////node_modules/vue-chartjs/es/BaseCharts.js","webpack:///./static/js/trends/LineChart.vue","webpack:///./static/js/vue-shared/panelset.vue","webpack:///static/js/trends/LineChart.vue","webpack:///./static/js/trends/LineChart.vue?62ce","webpack:///static/js/vue-shared/panelset.vue","webpack:///./static/js/vue-shared/panelset.vue?41ab","webpack:///./static/js/trends/search-results.vue?3cde","webpack:///static/js/trends/search-results.vue","webpack:///./static/js/trends/search-results.vue?d829","webpack:///./static/js/trends/search-results.vue","webpack:///static/js/trends/main.vue","webpack:///./static/js/trends/main.vue?d4ea","webpack:///./static/js/trends/main.vue","webpack:///./static/js/trends/main.js","webpack:////node_modules/core-js/modules/es6.number.constructor.js","webpack:////node_modules/tone/Tone/signal/SignalBase.js","webpack:////node_modules/tone/Tone/source/OmniOscillator.js","webpack:////node_modules/tone/Tone/signal/AudioToGain.js","webpack:////node_modules/tone/Tone/shim/BufferSourceNode.js","webpack:////node_modules/core-js/modules/_string-trim.js","webpack:////node_modules/tone/Tone/type/Type.js","webpack:////node_modules/tone/Tone/source/FMOscillator.js","webpack:////node_modules/core-js/modules/_inherit-if-required.js","webpack:////node_modules/tone/Tone/instrument/Instrument.js","webpack:////node_modules/core-js/modules/es6.string.iterator.js","webpack:////node_modules/tone/Tone/source/PWMOscillator.js","webpack:////node_modules/tone/Tone/shim/WaveShaperNode.js","webpack:////node_modules/tone/Tone/shim/AudioBuffer.js","webpack:////node_modules/tone/Tone/core/Buffer.js","webpack:////node_modules/tone/Tone/source/Oscillator.js","webpack:////node_modules/tone/Tone/core/TransportRepeatEvent.js","webpack:///external \"moment\"","webpack:////node_modules/tone/Tone/component/Volume.js","webpack:////node_modules/tone/Tone/source/OscillatorNode.js","webpack:////node_modules/tone/Tone/core/TransportEvent.js","webpack:////node_modules/tone/Tone/type/Time.js","webpack:////node_modules/tone/Tone/core/Clock.js","webpack:////node_modules/tone/Tone/core/Master.js","webpack:////node_modules/core-js/modules/_set-proto.js","webpack:////node_modules/tone/Tone/type/TimeBase.js","webpack:////node_modules/tone/Tone/core/TimelineState.js","webpack:////node_modules/tone/Tone/core/Transport.js","webpack:////node_modules/tone/Tone/shim/AudioContext.js","webpack:////node_modules/tone/Tone/core/Context.js","webpack:////node_modules/tone/Tone/signal/WaveShaper.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","trends","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","Tone","supported","global","AudioContext","createConstantSource","ConstantSourceNode","context","this","buffer","createBuffer","sampleRate","arr","getChannelData","_bufferSource","createBufferSource","channelCount","channelCountMode","loop","gainNode","_output","createGain","offset","gain","connect","start","time","stop","arguments","disconnect","Context","undefined","Monophonic","options","defaultArg","defaults","Instrument","portamento","extend","triggerAttack","note","velocity","log","toSeconds","_triggerEnvelopeAttack","setNote","triggerRelease","_triggerEnvelopeRelease","getLevelAtTime","envelope","getValueAtTime","portTime","frequency","exponentialRampTo","setValueAtTime","Source","AudioNode","_volume","output","Volume","volume","_readOnly","_state","TimelineState","State","Stopped","memory","_synced","_scheduled","mute","Transport","state","Started","seconds","now","set","_start","noOp","restart","_stop","duration","isUndef","cancel","setStateAtTime","event","sched","schedule","_syncedStart","sync","stateEvent","startOffset","_syncedStop","getSecondsAtTime","Math","max","sampleTime","on","unsync","off","id","clear","dispose","_writable","Envelope","attack","decay","sustain","release","_attackCurve","_releaseCurve","_sig","Signal","attackCurve","releaseCurve","decayCurve","_getCurve","curve","direction","isString","isArray","Type","_setCurve","curveDef","isObject","Error","_decayCurve","curves","includes","originalAttack","currentValue","attackRate","remainingDistance","linearRampTo","targetRampTo","cancelAndHoldAtTime","setValueCurveAtTime","decayValue","decayStart","exponentialApproachValueAtTime","triggerAttackRelease","after","cancelScheduledValues","SignalBase","k","curveLen","cosineCurve","sin","PI","rippleCurve","rippleCurveFreq","sineWave","stairsCurve","steps","ceil","sineCurve","cos","bounceCurve","freq","pow","val","abs","invertCurve","out","Array","reverseCurve","reverse","linear","exponential","bounce","In","Out","cosine","step","ripple","sine","$export","toLength","ENDS_WITH","$endsWith","P","F","endsWith","searchString","that","endPosition","len","end","min","search","String","IntervalTimeline","_root","_length","add","valueOf","node","IntervalNode","insert","updateHeight","updateMax","_rebalance","parent","remove","results","_removeNode","forEachFrom","_setRoot","_replaceNodeInParent","replacement","isLeftChild","left","right","temp","balance","getBalance","_rotateLeft","pivotNode","_rotateRight","low","forEach","callback","allNodes","traverse","ev","forEachAtTime","searchAfter","high","_left","_right","height","point","FatOscillator","Frequency","detune","Cents","_oscillators","_spread","spread","_type","type","_phase","phase","_partials","partials","_partialCount","partialCount","count","_forEach","osc","iterator","Oscillator","Custom","baseType","Synth","oscillator","OmniOscillator","AmplitudeEnvelope","chain","_wrapScheduleMethods","method","_events","previousEvent","ticksUntilTime","_getTicksUntilEvent","ticks","TickSignal","units","Ticks","Infinity","Param","AutomationType","SetValue","linearRampToValueAtTime","setTargetAtTime","constant","setRampPoint","_fromUnits","prevEvent","segments","round","segTime","rampVal","_exponentialApproach","_toUnits","exponentialRampToValueAtTime","_initialValue","segmentDur","_exponentialInterpolate","val0","val1","getTicksAtTime","getDurationOfTicks","currentTick","getTimeOfTick","tick","before","getAfter","Linear","delta","sqrt","sol1","sol2","ticksToTime","when","Time","timeToTicks","startTicks","endTicks","version","toString","className","isLetter","match","sameConstructor","constructor","isFunction","params","rampTime","tmpObj","paramLoop","attr","indexOf","attrSplit","split","innerParam","join","param","rampTo","AudioParam","TimeBase","_collectDefaults","ret","subRet","subAttr","isDefined","constr","keys","_super","superDefs","values","given","fallback","givenProp","fallbackProp","debug","TONE_DEBUG_CLASS","args","from","unshift","console","assert","statement","error","connectSeries","currentUnit","toUnit","isNumber","arg","isBoolean","isNote","test","writable","Paused","equalPowerScale","percent","piFactor","dbToGain","db","gainToDb","LN10","intervalToFrequencyRatio","interval","immediate","currentTime","child","TempConstructor","_audioContext","resume","isContext","emit","setContext","ctx","hasAudioContext","hasPromises","Boolean","getContext","resolve","initialized","resCallback","TransportTime","_now","fill","Timeline","_timeline","index","_search","diff","comparator","peek","getBefore","cancelBefore","beginning","midPoint","floor","nextEvent","testEvent","_iterate","lowerBound","upperBound","forEachBefore","forEachAfter","forEachBetween","startTime","endTime","e","self","2350","btoa","sources","map","sourceRoot","concat","unescape","encodeURIComponent","JSON","stringify","499e","a","u","css","media","sourceMap","parts","h","document","DEBUG","head","getElementsByTagName","f","navigator","userAgent","toLowerCase","y","refs","v","createElement","appendChild","querySelector","parentNode","removeChild","g","b","filter","styleSheet","cssText","createTextNode","childNodes","insertBefore","setAttribute","ssrId","firstChild","4abb","locals","default","shadowMode","4ed8","556c","65d9","Reflect","defineMetadata","getOwnMetadataKeys","getOwnPropertyNames","getOwnMetadata","__proto__","__decorators__","mixins","_init","$options","props","charAt","configurable","_componentTag","getOwnPropertyDescriptor","methods","computed","getPrototypeOf","registerHooks","createDecorator","8bbf","ae61","d5ac","df80","fb15","decorate","currentScript","src","model","prop","deep","watch","handler","TypeError","ReferenceError","setPrototypeOf","x","disabled","$emit","ref","class","dotClasses","mousedown","dragStart","touchstart","$slots","dot","handleClasses","style","dotStyle","tooltip","tooltipClasses","tooltipInnerClasses","tooltipStyle","tooltipValue","vue-slider-dot-disabled","vue-slider-dot-focus","focus","vue-slider-dot-handle-disabled","vue-slider-dot-handle-focus","tooltipPlacement","vue-slider-dot-tooltip-show","showTooltip","vue-slider-dot-tooltip-inner-disabled","vue-slider-dot-tooltip-inner-focus","tooltipFormatter","replace","validator","required","Function","w","O","S","E","R","D","A","V","_","stopPropagation","mark","pos","marksClasses","stepClasses","stepStyle","active","stepActiveStyle","activeStyle","hideLabel","label","labelClasses","labelStyle","labelActiveStyle","click","labelClickHandle","vue-slider-mark-active","vue-slider-mark-step-active","vue-slider-mark-label-active","M","C","N","T","documentElement","body","getBoundingClientRect","top","pageYOffset","scrollTop","clientTop","pageXOffset","scrollLeft","clientLeft","B","targetTouches","pageX","pageY","offsetWidth","offsetHeight","I","keyCode","UP","RIGHT","DOWN","LEFT","END","HOME","PAGE_UP","PAGE_DOWN","L","z","H","U","$","num","getDecimalLen","getExponent","safeRoundUp","decimal","W","getOwnPropertySymbols","nt","G","Y","K","X","next","done","q","Z","Q","J","tt","et","rt","ot","VALUE","INTERVAL","MIN","MAX","ORDER","it","dotsPos","dotsValue","order","marks","included","process","adsorb","dotOptions","onError","minRange","maxRange","enableCross","fixed","emitError","setValue","setDotsValue","syncDotsPos","sort","getValueByPos","parsePos","markList","parseValue","minus","divide","toNumber","total","multiply","plus","getValidPos","getFixedChangePosArr","getLimitRangeChangePosArr","setDotsPos","inRange","changePos","minRangeDir","maxRangeDir","isPos","valuePosRange","gap","getValueByIndex","processArray","some","isActiveByPos","getValues","getDotRange","getIndexByValue","st","at","ut","lt","states","has","delete","ct","dt","vt","ft","yt","ht","pt","mt","kt","gt","bt","xt","wt","Ot","Pt","St","Et","Rt","Dt","At","None","Drag","Focus","jt","Vt","scale","focusDotIndex","isNotSync","control","initControl","bindEvent","unbindEvent","addEventListener","dragMove","passive","dragEnd","blurHandle","keydownHandle","removeEventListener","isHorizontal","$el","$watch","every","dots","isDiff","silent","setScale","preventDefault","getPosByEvent","isCrossDot","setDotPos","lazy","syncValueByPos","canSort","dragRange","setTimeout","useKeyboard","$refs","container","contains","target","clickable","setValueByPos","dotsIndex","getRecentDot","isDisabledByDotIndex","isReverse","$createElement","$scopedSlots","slot","containerClasses","containerStyles","attrs","aria-hidden","clickHandle","railStyle","renderSlot","tailSize","mainDirection","pressLabel","dot-style","disabledStyle","focusStyle","tooltip-style","tooltipDisabledStyle","tooltipFocusStyle","tooltip-formatter","tooltip-placement","tooltipDirections","dotBaseStyle","animateTime","drag-start","domProps","width","vue-slider-disabled","dotSize","padding","contained","processStyle","transform","WebkitTransform","Number","components","VueSliderDot","VueSliderMark","inheritAttrs","_t","Mt","toObject","toAbsoluteIndex","aLen","endPos","Gain","input","_gainNode","convert","PulseOscillator","NormalRange","_widthGate","_sawtooth","_thresh","WaveShaper","_param","overridden","Default","Positive","BPM","AudioRange","Decibels","minValue","maxValue","toFrequency","_minOutput","Exponential","Target","Cancel","initialValue","defaultValue","previousVal","previous","_linearInterpolate","currentVal","timeConstant","scaling","valueAtTime","t0","v0","v1","exp","t1","_defaultUnits","_beatsToUnits","beats","_getPPQ","_secondsToUnits","_getBpm","_ticksToUnits","toTicks","_constantSource","factory","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","hsl2rgb","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lab2lch","lch2lab","lch2xyz","lch2rgb","rgb","reverseKeywords","xyz","hsl","t2","t3","sv","hsv","hi","sl","hwb","wh","bl","ratio","cmyk","lab","y2","hr","atan2","lch","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Converter","func","pair","exec","to","convs","routeSpace","space","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","getHsl","getHwb","getAlpha","hexString","rgbString","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","string","abbr","hex","rgba","per","hexAlpha","parseInt","parseFloat","alpha","isNaN","hsla","hexDouble","reverseNames","str","toUpperCase","Color","obj","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","toJSON","clone","source","spaces","maxes","capped","chans","sname","svalues","chartjsColor","helpers","noop","uid","isNullOrUndef","substr","isFinite","valueOrDefault","valueAtIndexOrDefault","fn","thisArg","each","loopable","arrayEquals","a0","a1","ilen","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","merger","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","clearRect","roundedRect","radius","bottom","moveTo","arc","closePath","rect","drawPoint","rotation","xOffset","yOffset","size","cornerRadius","rad","drawImage","beginPath","lineTo","SQRT1_2","stroke","_isPointInArea","area","epsilon","clipArea","save","clip","unclipArea","restore","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","toFontString","font","family","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","fontSize","fontFamily","lineHeight","fontStyle","inputs","helpers$1","easing","canvas","interpolate","view","ease","actual","origin","c0","c1","Element","configuration","initialize","hidden","pivot","_view","_model","transition","tooltipPosition","hasValue","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","animation","onProgress","onComplete","core_animations","animations","request","addAnimation","Date","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","base","res","unlistenArrayEvents","stub","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","hitRadius","yRange","mouseY","pointStyle","element_point","inXRange","inYRange","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderSkipped","edge","borderSkipped","horizontal","parseBorderWidth","maxW","maxH","boundingRects","bounds","border","outer","inner","skipX","skipY","rectangle","element_rectangle","rects","fillRect","Arc","Line","Point","Rectangle","resolve$1","computeMinSampleSize","pixels","prev","curr","getTicks","getPixelForTick","computeFitCategoryTraits","ruler","thickness","barThickness","stackCount","categoryPercentage","barPercentage","chunk","computeFlexCategoryTraits","hover","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","getPixelForValue","imeta","ivalue","getRightValue","minBarLength","controller","range","stackIndex","maxBarThickness","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","legend","generateLabels","ds","arcOpts","bw","onClick","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controller_scatter","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","findMaxPadding","boxes","box","getPadding","boxPadding","addSizeByPosition","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getMinimumBoxSize","fitBox","finalFitVerticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBoxSize","findNextWhere","minBox","scaleMargin","platform_basic","acquireContext","platform_dom","platform_dom$1","freeze","getCjsExportFromNamespace","stylesheet","EXPANDO_KEY","CSS_PREFIX","CSS_SIZE_MONITOR","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","initCanvas","config","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","supportsEventListenerOptions","supports","eventListenerOptions","addListener","removeListener","createEvent","nativeEvent","fromNativeEvent","throttled","ticking","createDiv","cls","el","createResizer","maxSize","resizer","expand","shrink","_reset","onScroll","watchForRender","expando","proxy","renderProxy","animationName","reflow","offsetParent","classList","unwatchForRender","addResizeListener","maintainAspectRatio","clientWidth","removeResizeListener","injectCSS","platform","_style","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","getElementById","releaseContext","removeAttribute","proxies","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getTooltipSize","combinedBodyLength","reduce","bodyItem","lines","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","changed","existingModel","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","initConfig","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","initToolTip","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","Controller","types","configMerge","scaleMerge","core_helpers","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","almostWhole","rounded","NEGATIVE_INFINITY","sign","log10","exponent","LOG10E","powerOf10","isPowerOf10","toRadians","toDegrees","radians","_decimalPlaces","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","niceNum","niceFraction","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","evt","originalEvent","srcElement","boundingRect","touches","clientX","clientY","paddingLeft","paddingTop","paddingRight","paddingBottom","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","longestText","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","color","CanvasGradient","colorValue","CanvasPattern","abstract","DateAdapter","formats","parse","format","startOf","endOf","_create","override","members","_date","core_adapters","core_ticks","formatters","tickValue","logDelta","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","getPixelForGridLine","lineValue","computeTextSize","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","sinRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","finalVal","innerHeight","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","defaultConfig","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","generateTicks","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","MIN_SPACING","stepSize","unit","maxNumSpaces","precision","rmin","rmax","spacing","scale_linearbase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","fixedStepSize","ticksAsNumbers","defaultConfig$1","scale_linear","DEFAULT_MIN","DEFAULT_MAX","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","generateTicks$1","significand","tickVal","endExp","endSignificand","minNotZero","lastTick","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","textSize","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","drawingArea","getIndexAngle","hLimits","vLimits","setReductions","getTextAlignForAngle","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawRadiusLine","numberOrZero","scale_radialLinear","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","yCenterOffset","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","buildLookupTable","timestamps","distribution","table","lookup","mid","i0","i1","lo","interpolate$1","skey","tkey","span","toTimestamp","adapter","_adapter","parser","determineStepSize","capacity","milliseconds","determineUnitForAutoTicks","minUnit","determineUnitForFormatting","determineMajorUnit","generate","timeOpts","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","computeOffsets","ticksFromTimestamps","majorUnit","defaultConfig$4","adapters","displayFormat","displayFormats","scale_time","date","warn","timestamp","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","_majorUnit","_offsets","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","category","radialLinear","FORMATS","_id","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","doFill","mapper","p0","p1","d0","d1","plugin_filler","afterDatasetsUpdate","$filler","beforeDatasetDraw","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","drawLegendBox","SQRT2","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","plugin_title","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Tooltip","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","_expressions","assign","midi","regexp","mtof","pitch","octave","noteToScaleIndex","noteNumber","tr","_getTimeSignature","transpose","harmonize","intervals","toMidi","ftom","toNote","log2","A4","noteName","scaleIndexToNote","quarterTime","quarters","PPQ","_noArg","_frequencyToUnits","bpm","cbb","cb","c#","cx","dbb","d#","dx","ebb","eb","e#","ex","fbb","f#","fx","gbb","gb","g#","gx","abb","ab","a#","ax","bbb","bb","b#","bx","OfflineAudioContext","webkitOfflineAudioContext","startRendering","then","_native_startRendering","Promise","oncomplete","renderedBuffer","AMOscillator","_carrier","_modulator","modulationType","_modulationScale","AudioToGain","harmonicity","Multiply","_modulationNode","Emitter","eventName","once","boundCallback","eventList","mixin","functions","emitterFunc","TickSource","_tickOffset","setTicksAtTime","pause","stopEvent","getLastState","tmpEvent","lastState","elapsedTicks","periodStartTime","offsetEvent","elapsedSeconds","getStateAtTime","absoluteTicks","forEachTickBetween","lastStateEvent","ticksAtStart","nextTickTime","_context","createInsOuts","outputs","channelInterpretation","outputNum","inputNum","destination","fan","_mult","Pow","_exp","_expScaler","_expFunc","setMap","OfflineContext","channels","offlineContext","clockSource","lookAhead","updateInterval","_duration","_currentTime","blockTime","close","_vm","_h","_c","_self","_m","staticClass","submit","$event","submitForm","_v","query","href","clickHelpButton","aria-label","textToGraph","showLoading","panel-id","current-panel","currentPanel","helpLinkClicked","_l","jurisdiction","_s","appendJurisdictionCode","errors","_e","chartData","urls","aria-describedby","directives","rawName","expression","checked","_q","percentOrAbs","change","for","countType","sameYAxis","smoothingFactor","modifiers","searchForPoint","formatValue","datasetVersion","datasetDate","author","datasetYear","publication","currentUrl","download","imageDownloadClicked","contextmenu","csvDownloadClicked","jsonDownloadClicked","currentApiQueries","tabindex","keydown","chartKeyDown","chartOptions","styles","chartStyles","minYear","maxYear","role","aria-live","aria-atomic","canvasStatus","number","_n","blur","$forceUpdate","enable-cross","minPossible","maxPossible","$$v","yearSlider","staticRenderFns","_toArray","arrayWithHoles","iterableToArray","nonIterableRest","dataHandler","newData","oldData","$data","newDatasetLabels","oldDatasetLabels","oldLabels","newLabels","oldDatasetKeys","newDatasetKeys","deletionKeys","attribute","deletionKey","renderChart","reactiveData","reactiveProp","generateChart","chartId","chartType","cssClasses","addPlugin","Chart_default","beforeDestroy","LineChart_render","LineChart_staticRenderFns","panelset_render","panelset_staticRenderFns","LineChartvue_type_script_lang_js_","extends","trends_LineChartvue_type_script_lang_js_","component","componentNormalizer","LineChart","panelsetvue_type_script_lang_js_","PanelsetButton","vue_esm","template","panelId","$parent","focusInPanel","onBlur","_this","nextTick","firstFocus","querySelectorAll","PanelsetPanel","focusOnButton","closeButtonClick","closeButtonBlur","vue_shared_panelsetvue_type_script_lang_js_","panelset_component","panelset","search_resultsvue_type_template_id_f5652008_render","term","startYear","endYear","searchPageUrl","search_resultsvue_type_template_id_f5652008_staticRenderFns","search_resultsvue_type_script_lang_js_","CaseResult","case_result","searchParams","decision_date_min","decision_date_max","page_size","loadingMessage","url","api","api_root","resp","casesHeader","catch","search_page","utils","trends_search_resultsvue_type_script_lang_js_","search_results_component","search_results","mod","deepCopy","mainvue_type_script_lang_js_","LineExample","LoadingButton","loading_button","VueSlider","vue_slider_component_umd_min_default","SearchResults","ExampleLink","beforeMount","jurisdictions","snippets","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_step$value","slicedToArray","jurisdictionLookup","err","return","beforeDraw","afterLayout","afterRender","mounted","route","$route","initialQuery","handleRouteUpdate","textToGraphUpdated","handleWindowResize","oldRoute","setUrlParam","graphResults","clampYears","newval","_newval","deselectedTerms","currentLine","selectLine","currentPoint","selectPoint","totalChartHeight","newVal","_this2","urlValues","toValue","clampYear","rawData","toParam","baseUrl","location","$router","currentYear","getFullYear","currentTab","currentHelpPanel","chartLegendHeight","smoothingWindow","previousSameYAxis","screenshotReady","colors","pointStyles","soundsOn","soundAutoplay","soundPlaySpeed","useScales","soundScales","currentSoundScale","synth","synthStopTime","chartOnClick","legendItemOnClick","formatYearRange","_i","_Object$entries","entries","_Object$entries$_i","fullPath","yScaleLabel","startRange","endRange","toPrecision","_ref","getTerms","terms","trim","_i2","_Object$entries2","_Object$entries2$_i","_this3","all","_term$split","_term$split2","firstWord","restWords","jur","parseResponse","searchResults","response","lodash_debounce_default","_this4","newDatasets","dataMinYear","dataMaxYear","colorIndex","colorOffset","fullChartReset","years","_i3","_Object$entries3","_Object$entries3$_i","movingAverage","pointRadius","borderRadius","pointHitRadius","apiResults","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_i5","_Object$entries4","_Object$entries4$_i","gram","jurs","_i6","_Object$entries5","_Object$entries5$_i","jurName","jurData","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","yearData","_i4","_Object$keys","random","totalRange","code","payload","currentTarget","toConsumableArray","flatMap","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_step4$value","doc_count","_iterator4","sync_default","clickLegendItem","toggleSoundsOn","autoplaySound","setCanvasStatus","Synth_default","toMaster","_this5","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_step5$value","dispatchEvent","MouseEvent","halfStep","scaledValue","baseNote","octaves","granularity","quantizedValue","halfSteps","_baseNote","_octaves","_halfSteps","Tone_default","endSounds","status","targets","termIndex","pointIndex","tagName","trends_mainvue_type_script_lang_js_","main_component","main","Vue","devtools","productionTip","use","VueRouter","router","routes","path","Main","redirect","cof","inheritIfRequired","toPrimitive","fails","gOPN","gOPD","dP","$trim","NUMBER","$Number","Base","proto","BROKEN_COF","TRIM","argument","third","radix","maxCode","charCodeAt","digits","outputNumber","inputNumber","_sourceType","_oscillator","OmniOscType","Pulse","PWM","Osc","FM","AM","Fat","prefix","_createNewOscillator","oscType","OscillatorConstructor","oldOsc","SourceTypeNames","PWMOscillator","FMOscillator","sType","sourceType","mType","modulationIndex","modulationFrequency","_norm","ua","isMobileSafari","bufferSource","_native_start","defined","non","ltrim","RegExp","rtrim","exporter","KEY","ALIAS","FORCE","TYPE","Interval","Degrees","MIDI","BarsBeatsSixteenths","Samples","Hertz","Note","Milliseconds","Seconds","Notation","_scheduledEvents","_syncMethod","timePosition","originalMethod","_original_triggerAttack","_original_triggerRelease","$at","iterated","_pulse","_native_createWaveShaper","isSafari","WaveShaperNode","_internalNode","_curve","_defineProperty","Float32Array","createWaveShaper","AudioBuffer","copyToChannel","chanNum","channel","copyFromChannel","dest","Buffer","_buffer","_reversed","_xhr","onload","loaded","load","onerror","promise","buff","_removeFromDownloadQueue","abort","numberOfChannels","fromArray","isMultidimensional","toMono","toArray","outputArray","numChannels","channelArray","sample","startSamples","endSamples","retBuffer","_reverse","rev","_downloadQueue","fromUrl","extension","supportsType","totalProgress","progress","XMLHttpRequest","open","responseType","decodeAudioData","lengthComputable","send","cancelDownloads","canPlayType","removeEvents","success","fail","_wave","Sine","Triangle","Sawtooth","Square","OscillatorNode","setPeriodicWave","cancelStop","syncFrequency","syncSignal","unsyncFrequency","unsyncSignal","coefs","_getRealImaginary","periodicWave","createPeriodicWave","partial","fftSize","periodicWaveSize","real","imag","_inverseFFT","sum","_getInitialValue","twoPi","TransportRepeatEvent","TransportEvent","_interval","_currentId","_nextId","_nextTick","_boundRestart","_restart","invoke","_createEvents","scheduleOnce","_boundCreateEvents","_unmutedVolume","onended","_startTime","_stopTime","createOscillator","_gain","clearTimeout","_timeout","_eventId","_once","quantize","capture","quantTo","nextSubdivision","subdiv","subdivision","multiple","ideal","toNotation","testNotations","power","closest","closestSeconds","notation","notationSeconds","toBarsBeatsSixteenths","measures","sixteenths","Clock","_tickSource","_lastUpdate","_boundLoop","Master","master","isMaster","MasterConstructor","anObject","check","buggy","_val","_units","scalar","hz","samples","timeSignature","typeName","quantity","expr","matching","toSamples","toMilliseconds","_initial","getNextState","_loopStart","_loopEnd","_ppq","TransportConstructor","_clock","_processTick","_bindClockEvents","_timeSignature","_repeatedEvents","_syncedSignals","_swingTicks","_swingAmount","transport","swing","swingSubdivision","loopStart","loopEnd","isTransport","tickTime","_addEvent","scheduleRepeat","eventId","timeline","toggle","timeSig","startPosition","setLoopPoints","ppq","transportPos","remainingTicks","signal","ratioSignal","syncedSignal","webkitAudioContext","suspend","createGainNode","createDelay","createDelayNode","decodeAudioDataPromise","audioData","Uint32Array","_native_decodeAudioData","rawContext","_latencyHint","latencyHint","_constants","_computedUpdateInterval","_ticker","Ticker","_timeouts","_timeoutIds","_timeoutLoop","onstatechange","closePromise","TONE_AUDIO_CONTEXT","getConstant","timeout","hint","con","_updateInterval","_callback","_createClock","Worker","Timeout","Offline","_createWorker","URL","webkitURL","blob","Blob","blobUrl","createObjectURL","worker","onmessage","_worker","_createTimeout","postMessage","_disposeClock","terminate","nativeConnect","nativeDisconnect","toneConnect","outNum","inNum","toneDisconnect","TONE_SILENCE_VERSION_LOGGING","printString","mapping","bufferLen","_shaper","normalized","oversample","oversampling","RangeError"],"mappings":"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","file":"js/trends.43aba5f5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"trends\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/dist/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([5,\"chunk-common\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","define([\"../core/Tone\", \"../shim/AudioContext\", \"../shim/BufferSourceNode\",\n\t\"../core/Context\", \"../core/Gain\"], function(Tone){\n\n\tif (Tone.supported && !Tone.global.AudioContext.prototype.createConstantSource){\n\n\t\tvar ConstantSourceNode = function(context){\n\t\t\tthis.context = context;\n\n\t\t\tvar buffer = context.createBuffer(1, 128, context.sampleRate);\n\t\t\tvar arr = buffer.getChannelData(0);\n\t\t\tfor (var i = 0; i < arr.length; i++){\n\t\t\t\tarr[i] = 1;\n\t\t\t}\n\n\t\t\tthis._bufferSource = context.createBufferSource();\n\t\t\tthis._bufferSource.channelCount = 1;\n\t\t\tthis._bufferSource.channelCountMode = \"explicit\";\n\t\t\tthis._bufferSource.buffer = buffer;\n\t\t\tthis._bufferSource.loop = true;\n\n\t\t\tvar gainNode = this._output = context.createGain();\n\t\t\tthis.offset = gainNode.gain;\n\n\t\t\tthis._bufferSource.connect(gainNode);\n\t\t};\n\n\t\tConstantSourceNode.prototype.start = function(time){\n\t\t\tthis._bufferSource.start(time);\n\t\t\treturn this;\n\t\t};\n\n\t\tConstantSourceNode.prototype.stop = function(time){\n\t\t\tthis._bufferSource.stop(time);\n\t\t\treturn this;\n\t\t};\n\n\t\tConstantSourceNode.prototype.connect = function(){\n\t\t\tthis._output.connect.apply(this._output, arguments);\n\t\t\treturn this;\n\t\t};\n\n\t\tConstantSourceNode.prototype.disconnect = function(){\n\t\t\tthis._output.disconnect.apply(this._output, arguments);\n\t\t\treturn this;\n\t\t};\n\n\t\tAudioContext.prototype.createConstantSource = function(){\n\t\t\treturn new ConstantSourceNode(this);\n\t\t};\n\n\t\tTone.Context.prototype.createConstantSource = function(){\n\t\t\treturn new ConstantSourceNode(this);\n\t\t};\n\t}\n});\n","define([\"../core/Tone\", \"../instrument/Instrument\", \"../signal/Signal\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  This is an abstract base class for other monophonic instruments to \n\t *          extend. IMPORTANT: It does not make any sound on its own and\n\t *          shouldn't be directly instantiated.\n\t *\n\t *  @constructor\n\t *  @abstract\n\t *  @extends {Tone.Instrument}\n\t */\n\tTone.Monophonic = function(options){\n\n\t\t//get the defaults\n\t\toptions = Tone.defaultArg(options, Tone.Monophonic.defaults);\n\t\tTone.Instrument.call(this, options);\n\n\t\t/**\n\t\t *  The glide time between notes. \n\t\t *  @type {Time}\n\t\t */\n\t\tthis.portamento = options.portamento;\n\t};\n\n\tTone.extend(Tone.Monophonic, Tone.Instrument);\n\n\t/**\n\t *  @static\n\t *  @const\n\t *  @type {Object}\n\t */\n\tTone.Monophonic.defaults = {\n\t\t\"portamento\" : 0\n\t};\n\n\t/**\n\t *  Trigger the attack of the note optionally with a given velocity. \n\t *  \n\t *  \n\t *  @param  {Frequency} note     The note to trigger.\n\t *  @param  {Time} [time=now]     When the note should start.\n\t *  @param  {number} [velocity=1] velocity The velocity scaler \n\t *                                determines how \"loud\" the note \n\t *                                will be triggered.\n\t *  @returns {Tone.Monophonic} this\n\t *  @example\n\t * synth.triggerAttack(\"C4\");\n\t *  @example\n\t * //trigger the note a half second from now at half velocity\n\t * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n\t */\n\tTone.Monophonic.prototype.triggerAttack = function(note, time, velocity){\n\t\tthis.log(\"triggerAttack\", note, time, velocity);\n\t\ttime = this.toSeconds(time);\n\t\tthis._triggerEnvelopeAttack(time, velocity);\n\t\tthis.setNote(note, time);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Trigger the release portion of the envelope\n\t *  @param  {Time} [time=now] If no time is given, the release happens immediatly\n\t *  @returns {Tone.Monophonic} this\n\t *  @example\n\t * synth.triggerRelease();\n\t */\n\tTone.Monophonic.prototype.triggerRelease = function(time){\n\t\tthis.log(\"triggerRelease\", time);\n\t\ttime = this.toSeconds(time);\n\t\tthis._triggerEnvelopeRelease(time);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  override this method with the actual method\n\t *  @abstract\n\t *  @private\n\t */\t\n\tTone.Monophonic.prototype._triggerEnvelopeAttack = function(){};\n\n\t/**\n\t *  override this method with the actual method\n\t *  @abstract\n\t *  @private\n\t */\t\n\tTone.Monophonic.prototype._triggerEnvelopeRelease = function(){};\n\n\t/**\n\t *  Get the level of the output at the given time. Measures\n\t *  the envelope(s) value at the time. \n\t *  @param {Time} time The time to query the envelope value\n\t *  @return {NormalRange} The output level between 0-1\n\t */\n\tTone.Monophonic.prototype.getLevelAtTime = function(time){\n\t\ttime = this.toSeconds(time);\n\t\treturn this.envelope.getValueAtTime(time);\n\t};\n\n\t/**\n\t *  Set the note at the given time. If no time is given, the note\n\t *  will set immediately. \n\t *  @param {Frequency} note The note to change to.\n\t *  @param  {Time} [time=now] The time when the note should be set. \n\t *  @returns {Tone.Monophonic} this\n\t * @example\n\t * //change to F#6 in one quarter note from now.\n\t * synth.setNote(\"F#6\", \"+4n\");\n\t * @example\n\t * //change to Bb4 right now\n\t * synth.setNote(\"Bb4\");\n\t */\n\tTone.Monophonic.prototype.setNote = function(note, time){\n\t\ttime = this.toSeconds(time);\n\t\tif (this.portamento > 0 && this.getLevelAtTime(time) > 0.05){\n\t\t\tvar portTime = this.toSeconds(this.portamento);\n\t\t\tthis.frequency.exponentialRampTo(note, portTime, time);\n\t\t} else {\n\t\t\tthis.frequency.setValueAtTime(note, time);\n\t\t}\n\t\treturn this;\n\t};\n\n\treturn Tone.Monophonic;\n});\n","define([\"../core/Tone\", \"../core/Transport\", \"../component/Volume\", \"../core/Master\", \"../type/Type\",\n\t\"../core/TimelineState\", \"../signal/Signal\", \"../core/AudioNode\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Base class for sources. Sources have start/stop methods\n\t *          and the ability to be synced to the\n\t *          start/stop of Tone.Transport.\n\t *\n\t *  @constructor\n\t *  @extends {Tone.AudioNode}\n\t *  @example\n\t * //Multiple state change events can be chained together,\n\t * //but must be set in the correct order and with ascending times\n\t *\n\t * // OK\n\t * state.start().stop(\"+0.2\");\n\t * // AND\n\t * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n\t *\n\t * // BAD\n\t * state.stop(\"+0.2\").start();\n\t * // OR\n\t * state.start(\"+0.3\").stop(\"+0.2\");\n\t *\n\t */\n\tTone.Source = function(options){\n\n\t\toptions = Tone.defaultArg(options, Tone.Source.defaults);\n\t\tTone.AudioNode.call(this);\n\n\t\t/**\n\t\t *  The output volume node\n\t\t *  @type  {Tone.Volume}\n\t\t *  @private\n\t\t */\n\t\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t\t/**\n\t\t * The volume of the output in decibels.\n\t\t * @type {Decibels}\n\t\t * @signal\n\t\t * @example\n\t\t * source.volume.value = -6;\n\t\t */\n\t\tthis.volume = this._volume.volume;\n\t\tthis._readOnly(\"volume\");\n\n\t\t/**\n\t\t * \tKeep track of the scheduled state.\n\t\t *  @type {Tone.TimelineState}\n\t\t *  @private\n\t\t */\n\t\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\t\tthis._state.memory = 100;\n\n\t\t/**\n\t\t *  The synced `start` callback function from the transport\n\t\t *  @type {Function}\n\t\t *  @private\n\t\t */\n\t\tthis._synced = false;\n\n\t\t/**\n\t\t *  Keep track of all of the scheduled event ids\n\t\t *  @type  {Array}\n\t\t *  @private\n\t\t */\n\t\tthis._scheduled = [];\n\n\t\t//make the output explicitly stereo\n\t\tthis._volume.output.output.channelCount = 2;\n\t\tthis._volume.output.output.channelCountMode = \"explicit\";\n\t\t//mute initially\n\t\tthis.mute = options.mute;\n\t};\n\n\tTone.extend(Tone.Source, Tone.AudioNode);\n\n\t/**\n\t *  The default parameters\n\t *  @static\n\t *  @const\n\t *  @type {Object}\n\t */\n\tTone.Source.defaults = {\n\t\t\"volume\" : 0,\n\t\t\"mute\" : false\n\t};\n\n\t/**\n\t *  Returns the playback state of the source, either \"started\" or \"stopped\".\n\t *  @type {Tone.State}\n\t *  @readOnly\n\t *  @memberOf Tone.Source#\n\t *  @name state\n\t */\n\tObject.defineProperty(Tone.Source.prototype, \"state\", {\n\t\tget : function(){\n\t\t\tif (this._synced){\n\t\t\t\tif (Tone.Transport.state === Tone.State.Started){\n\t\t\t\t\treturn this._state.getValueAtTime(Tone.Transport.seconds);\n\t\t\t\t} else {\n\t\t\t\t\treturn Tone.State.Stopped;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn this._state.getValueAtTime(this.now());\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * Mute the output.\n\t * @memberOf Tone.Source#\n\t * @type {boolean}\n\t * @name mute\n\t * @example\n\t * //mute the output\n\t * source.mute = true;\n\t */\n\tObject.defineProperty(Tone.Source.prototype, \"mute\", {\n\t\tget : function(){\n\t\t\treturn this._volume.mute;\n\t\t},\n\t\tset : function(mute){\n\t\t\tthis._volume.mute = mute;\n\t\t}\n\t});\n\n\t//overwrite these functions\n\tTone.Source.prototype._start = Tone.noOp;\n\tTone.Source.prototype.restart = Tone.noOp;\n\tTone.Source.prototype._stop = Tone.noOp;\n\n\t/**\n\t *  Start the source at the specified time. If no time is given,\n\t *  start the source now.\n\t *  @param  {Time} [time=now] When the source should be started.\n\t *  @returns {Tone.Source} this\n\t *  @example\n\t * source.start(\"+0.5\"); //starts the source 0.5 seconds from now\n\t */\n\tTone.Source.prototype.start = function(time, offset, duration){\n\t\tif (Tone.isUndef(time) && this._synced){\n\t\t\ttime = Tone.Transport.seconds;\n\t\t} else {\n\t\t\ttime = this.toSeconds(time);\n\t\t}\n\t\t//if it's started, stop it and restart it\n\t\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\t\tthis._state.cancel(time);\n\t\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\t\tthis.restart(time, offset, duration);\n\t\t} else {\n\t\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\t\tif (this._synced){\n\t\t\t\t// add the offset time to the event\n\t\t\t\tvar event = this._state.get(time);\n\t\t\t\tevent.offset = Tone.defaultArg(offset, 0);\n\t\t\t\tevent.duration = duration;\n\t\t\t\tvar sched = Tone.Transport.schedule(function(t){\n\t\t\t\t\tthis._start(t, offset, duration);\n\t\t\t\t}.bind(this), time);\n\t\t\t\tthis._scheduled.push(sched);\n\n\t\t\t\t//if it's already started\n\t\t\t\tif (Tone.Transport.state === Tone.State.Started){\n\t\t\t\t\tthis._syncedStart(this.now(), Tone.Transport.seconds);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._start.apply(this, arguments);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Stop the source at the specified time. If no time is given,\n\t *  stop the source now.\n\t *  @param  {Time} [time=now] When the source should be stopped.\n\t *  @returns {Tone.Source} this\n\t *  @example\n\t * source.stop(); // stops the source immediately\n\t */\n\tTone.Source.prototype.stop = function(time){\n\t\tif (Tone.isUndef(time) && this._synced){\n\t\t\ttime = Tone.Transport.seconds;\n\t\t} else {\n\t\t\ttime = this.toSeconds(time);\n\t\t}\n\t\tif (!this._synced){\n\t\t\tthis._stop.apply(this, arguments);\n\t\t} else {\n\t\t\tvar sched = Tone.Transport.schedule(this._stop.bind(this), time);\n\t\t\tthis._scheduled.push(sched);\n\t\t}\n\t\tthis._state.cancel(time);\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Sync the source to the Transport so that all subsequent\n\t *  calls to `start` and `stop` are synced to the TransportTime\n\t *  instead of the AudioContext time.\n\t *\n\t *  @returns {Tone.Source} this\n\t *  @example\n\t * //sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n\t * source.sync().start(0).stop(0.3);\n\t * //start the transport.\n\t * Tone.Transport.start();\n\t *\n\t *  @example\n\t * //start the transport with an offset and the sync'ed sources\n\t * //will start in the correct position\n\t * source.sync().start(0.1);\n\t * //the source will be invoked with an offset of 0.4\n\t * Tone.Transport.start(\"+0.5\", 0.5);\n\t */\n\tTone.Source.prototype.sync = function(){\n\t\tthis._synced = true;\n\t\tthis._syncedStart = function(time, offset){\n\t\t\tif (offset > 0){\n\t\t\t\t// get the playback state at that time\n\t\t\t\tvar stateEvent = this._state.get(offset);\n\t\t\t\t// listen for start events which may occur in the middle of the sync'ed time\n\t\t\t\tif (stateEvent && stateEvent.state === Tone.State.Started && stateEvent.time !== offset){\n\t\t\t\t\t// get the offset\n\t\t\t\t\tvar startOffset = offset - this.toSeconds(stateEvent.time);\n\t\t\t\t\tvar duration;\n\t\t\t\t\tif (stateEvent.duration){\n\t\t\t\t\t\tduration = this.toSeconds(stateEvent.duration) - startOffset;\n\t\t\t\t\t}\n\t\t\t\t\tthis._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n\t\t\t\t}\n\t\t\t}\n\t\t}.bind(this);\n\t\tthis._syncedStop = function(time){\n\t\t\tvar seconds = Tone.Transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));\n\t\t\tif (this._state.getValueAtTime(seconds) === Tone.State.Started){\n\t\t\t\tthis._stop(time);\n\t\t\t}\n\t\t}.bind(this);\n\t\tTone.Transport.on(\"start loopStart\", this._syncedStart);\n\t\tTone.Transport.on(\"stop pause loopEnd\", this._syncedStop);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Unsync the source to the Transport. See Tone.Source.sync\n\t *  @returns {Tone.Source} this\n\t */\n\tTone.Source.prototype.unsync = function(){\n\t\tif (this._synced){\n\t\t\tTone.Transport.off(\"stop pause loopEnd\", this._syncedStop);\n\t\t\tTone.Transport.off(\"start loopStart\", this._syncedStart);\n\t\t}\n\t\tthis._synced = false;\n\t\t// clear all of the scheduled ids\n\t\tfor (var i = 0; i < this._scheduled.length; i++){\n\t\t\tvar id = this._scheduled[i];\n\t\t\tTone.Transport.clear(id);\n\t\t}\n\t\tthis._scheduled = [];\n\t\tthis._state.cancel(0);\n\t\treturn this;\n\t};\n\n\t/**\n\t *\tClean up.\n\t *  @return {Tone.Source} this\n\t */\n\tTone.Source.prototype.dispose = function(){\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis.unsync();\n\t\tthis._scheduled = null;\n\t\tthis._writable(\"volume\");\n\t\tthis._volume.dispose();\n\t\tthis._volume = null;\n\t\tthis.volume = null;\n\t\tthis._state.dispose();\n\t\tthis._state = null;\n\t};\n\n\treturn Tone.Source;\n});\n","define([\"../core/Tone\", \"../signal/Signal\",\n\t\"../signal/Pow\", \"../type/Type\", \"../core/AudioNode\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Tone.Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n\t *          envelope generator. Tone.Envelope outputs a signal which\n\t *          can be connected to an AudioParam or Tone.Signal.\n\t *          <img src=\"https://upload.wikimedia.org/wikipedia/commons/e/ea/ADSR_parameter.svg\">\n\t *\n\t *  @constructor\n\t *  @extends {Tone.AudioNode}\n\t *  @param {Time} [attack] The amount of time it takes for the envelope to go from\n\t *                         0 to it's maximum value.\n\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t *                       \tto fall to the sustain value. Value must be greater than 0.\n\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t *                                \tthe release is triggered.\n\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0.\n\t *                         \tValue must be greater than 0.\n\t *  @example\n\t * //an amplitude envelope\n\t * var gainNode = Tone.context.createGain();\n\t * var env = new Tone.Envelope({\n\t * \t\"attack\" : 0.1,\n\t * \t\"decay\" : 0.2,\n\t * \t\"sustain\" : 1,\n\t * \t\"release\" : 0.8,\n\t * });\n\t * env.connect(gainNode.gain);\n\t */\n\tTone.Envelope = function(){\n\n\t\t//get all of the defaults\n\t\tvar options = Tone.defaults(arguments, [\"attack\", \"decay\", \"sustain\", \"release\"], Tone.Envelope);\n\t\tTone.AudioNode.call(this);\n\n\t\t/**\n\t\t *  When triggerAttack is called, the attack time is the amount of\n\t\t *  time it takes for the envelope to reach it's maximum value.\n\t\t *  @type {Time}\n\t\t */\n\t\tthis.attack = options.attack;\n\n\t\t/**\n\t\t *  After the attack portion of the envelope, the value will fall\n\t\t *  over the duration of the decay time to it's sustain value.\n\t\t *  @type {Time}\n\t\t */\n\t\tthis.decay = options.decay;\n\n\t\t/**\n\t\t * \tThe sustain value is the value\n\t\t * \twhich the envelope rests at after triggerAttack is\n\t\t * \tcalled, but before triggerRelease is invoked.\n\t\t *  @type {NormalRange}\n\t\t */\n\t\tthis.sustain = options.sustain;\n\n\t\t/**\n\t\t *  After triggerRelease is called, the envelope's\n\t\t *  value will fall to it's miminum value over the\n\t\t *  duration of the release time.\n\t\t *  @type {Time}\n\t\t */\n\t\tthis.release = options.release;\n\n\t\t/**\n\t\t *  the next time the envelope is at standby\n\t\t *  @type {number}\n\t\t *  @private\n\t\t */\n\t\tthis._attackCurve = \"linear\";\n\n\t\t/**\n\t\t *  the next time the envelope is at standby\n\t\t *  @type {number}\n\t\t *  @private\n\t\t */\n\t\tthis._releaseCurve = \"exponential\";\n\n\t\t/**\n\t\t *  the signal\n\t\t *  @type {Tone.Signal}\n\t\t *  @private\n\t\t */\n\t\tthis._sig = this.output = new Tone.Signal(0);\n\n\t\t//set the attackCurve initially\n\t\tthis.attackCurve = options.attackCurve;\n\t\tthis.releaseCurve = options.releaseCurve;\n\t\tthis.decayCurve = options.decayCurve;\n\t};\n\n\tTone.extend(Tone.Envelope, Tone.AudioNode);\n\n\t/**\n\t *  the default parameters\n\t *  @static\n\t *  @const\n\t */\n\tTone.Envelope.defaults = {\n\t\t\"attack\" : 0.01,\n\t\t\"decay\" : 0.1,\n\t\t\"sustain\" : 0.5,\n\t\t\"release\" : 1,\n\t\t\"attackCurve\" : \"linear\",\n\t\t\"decayCurve\" : \"exponential\",\n\t\t\"releaseCurve\" : \"exponential\",\n\t};\n\n\t/**\n\t * Read the current value of the envelope. Useful for\n\t * syncronizing visual output to the envelope.\n\t * @memberOf Tone.Envelope#\n\t * @type {Number}\n\t * @name value\n\t * @readOnly\n\t */\n\tObject.defineProperty(Tone.Envelope.prototype, \"value\", {\n\t\tget : function(){\n\t\t\treturn this.getValueAtTime(this.now());\n\t\t}\n\t});\n\n\t/**\n\t *  Get the curve\n\t *  @param  {Array|String}  curve\n\t *  @param  {String}  direction  In/Out\n\t *  @return  {String}  The curve name\n\t *  @private\n\t */\n\tTone.Envelope.prototype._getCurve = function(curve, direction){\n\t\tif (Tone.isString(curve)){\n\t\t\treturn curve;\n\t\t} else if (Tone.isArray(curve)){\n\t\t\t//look up the name in the curves array\n\t\t\tfor (var t in Tone.Envelope.Type){\n\t\t\t\tif (Tone.Envelope.Type[t][direction] === curve){\n\t\t\t\t\treturn t;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//otherwise just return the array\n\t\t\treturn curve;\n\t\t}\n\t};\n\n\t/**\n\t *  Assign a the curve to the given name using the direction\n\t *  @param  {String}  name\n\t *  @param  {String}  direction In/Out\n\t *  @param  {Array}  curve\n\t *  @private\n\t */\n\tTone.Envelope.prototype._setCurve = function(name, direction, curve){\n\t\t//check if it's a valid type\n\t\tif (Tone.Envelope.Type.hasOwnProperty(curve)){\n\t\t\tvar curveDef = Tone.Envelope.Type[curve];\n\t\t\tif (Tone.isObject(curveDef)){\n\t\t\t\tthis[name] = curveDef[direction];\n\t\t\t} else {\n\t\t\t\tthis[name] = curveDef;\n\t\t\t}\n\t\t} else if (Tone.isArray(curve)){\n\t\t\tthis[name] = curve;\n\t\t} else {\n\t\t\tthrow new Error(\"Tone.Envelope: invalid curve: \" + curve);\n\t\t}\n\t};\n\n\t/**\n\t * The shape of the attack.\n\t * Can be any of these strings:\n\t * <ul>\n\t *   <li>linear</li>\n\t *   <li>exponential</li>\n\t *   <li>sine</li>\n\t *   <li>cosine</li>\n\t *   <li>bounce</li>\n\t *   <li>ripple</li>\n\t *   <li>step</li>\n\t * </ul>\n\t * Can also be an array which describes the curve. Values\n\t * in the array are evenly subdivided and linearly\n\t * interpolated over the duration of the attack.\n\t * @memberOf Tone.Envelope#\n\t * @type {String|Array}\n\t * @name attackCurve\n\t * @example\n\t * env.attackCurve = \"linear\";\n\t * @example\n\t * //can also be an array\n\t * env.attackCurve = [0, 0.2, 0.3, 0.4, 1]\n\t */\n\tObject.defineProperty(Tone.Envelope.prototype, \"attackCurve\", {\n\t\tget : function(){\n\t\t\treturn this._getCurve(this._attackCurve, \"In\");\n\t\t},\n\t\tset : function(curve){\n\t\t\tthis._setCurve(\"_attackCurve\", \"In\", curve);\n\t\t}\n\t});\n\n\t/**\n\t * The shape of the release. See the attack curve types.\n\t * @memberOf Tone.Envelope#\n\t * @type {String|Array}\n\t * @name releaseCurve\n\t * @example\n\t * env.releaseCurve = \"linear\";\n\t */\n\tObject.defineProperty(Tone.Envelope.prototype, \"releaseCurve\", {\n\t\tget : function(){\n\t\t\treturn this._getCurve(this._releaseCurve, \"Out\");\n\t\t},\n\t\tset : function(curve){\n\t\t\tthis._setCurve(\"_releaseCurve\", \"Out\", curve);\n\t\t}\n\t});\n\n\t/**\n\t * The shape of the decay either \"linear\" or \"exponential\"\n\t * @memberOf Tone.Envelope#\n\t * @type {String}\n\t * @name decayCurve\n\t * @example\n\t * env.decayCurve = \"linear\";\n\t */\n\tObject.defineProperty(Tone.Envelope.prototype, \"decayCurve\", {\n\t\tget : function(){\n\t\t\treturn this._decayCurve;\n\t\t},\n\t\tset : function(curve){\n\t\t\tvar curves = [\"linear\", \"exponential\"];\n\t\t\tif (!curves.includes(curve)){\n\t\t\t\tthrow new Error(\"Tone.Envelope: invalid curve: \" + curve);\n\t\t\t} else {\n\t\t\t\tthis._decayCurve = curve;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  Trigger the attack/decay portion of the ADSR envelope.\n\t *  @param  {Time} [time=now] When the attack should start.\n\t *  @param {NormalRange} [velocity=1] The velocity of the envelope scales the vales.\n\t *                               number between 0-1\n\t *  @returns {Tone.Envelope} this\n\t *  @example\n\t *  //trigger the attack 0.5 seconds from now with a velocity of 0.2\n\t *  env.triggerAttack(\"+0.5\", 0.2);\n\t */\n\tTone.Envelope.prototype.triggerAttack = function(time, velocity){\n\t\tthis.log(\"triggerAttack\", time, velocity);\n\t\ttime = this.toSeconds(time);\n\t\tvar originalAttack = this.toSeconds(this.attack);\n\t\tvar attack = originalAttack;\n\t\tvar decay = this.toSeconds(this.decay);\n\t\tvelocity = Tone.defaultArg(velocity, 1);\n\t\t//check if it's not a complete attack\n\t\tvar currentValue = this.getValueAtTime(time);\n\t\tif (currentValue > 0){\n\t\t\t//subtract the current value from the attack time\n\t\t\tvar attackRate = 1 / attack;\n\t\t\tvar remainingDistance = 1 - currentValue;\n\t\t\t//the attack is now the remaining time\n\t\t\tattack = remainingDistance / attackRate;\n\t\t}\n\t\t//attack\n\t\tif (this._attackCurve === \"linear\"){\n\t\t\tthis._sig.linearRampTo(velocity, attack, time);\n\t\t} else if (this._attackCurve === \"exponential\"){\n\t\t\tthis._sig.targetRampTo(velocity, attack, time);\n\t\t} else if (attack > 0){\n\t\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\t\tvar curve = this._attackCurve;\n\t\t\t//find the starting position in the curve\n\t\t\tfor (var i = 1; i < curve.length; i++){\n\t\t\t\t//the starting index is between the two values\n\t\t\t\tif (curve[i-1] <= currentValue && currentValue <= curve[i]){\n\t\t\t\t\tcurve = this._attackCurve.slice(i);\n\t\t\t\t\t//the first index is the current value\n\t\t\t\t\tcurve[0] = currentValue;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._sig.setValueCurveAtTime(curve, time, attack, velocity);\n\t\t}\n\t\t//decay\n\t\tif (decay){\n\t\t\tvar decayValue = velocity * this.sustain;\n\t\t\tvar decayStart = time + attack;\n\t\t\tthis.log(\"decay\", decayStart);\n\t\t\tif (this._decayCurve === \"linear\"){\n\t\t\t\tthis._sig.linearRampTo(decayValue, decay, decayStart+this.sampleTime);\n\t\t\t} else if (this._decayCurve === \"exponential\"){\n\t\t\t\tthis._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Triggers the release of the envelope.\n\t *  @param  {Time} [time=now] When the release portion of the envelope should start.\n\t *  @returns {Tone.Envelope} this\n\t *  @example\n\t *  //trigger release immediately\n\t *  env.triggerRelease();\n\t */\n\tTone.Envelope.prototype.triggerRelease = function(time){\n\t\tthis.log(\"triggerRelease\", time);\n\t\ttime = this.toSeconds(time);\n\t\tvar currentValue = this.getValueAtTime(time);\n\t\tif (currentValue > 0){\n\t\t\tvar release = this.toSeconds(this.release);\n\t\t\tif (this._releaseCurve === \"linear\"){\n\t\t\t\tthis._sig.linearRampTo(0, release, time);\n\t\t\t} else if (this._releaseCurve === \"exponential\"){\n\t\t\t\tthis._sig.targetRampTo(0, release, time);\n\t\t\t} else {\n\t\t\t\tvar curve = this._releaseCurve;\n\t\t\t\tif (Tone.isArray(curve)){\n\t\t\t\t\tthis._sig.cancelAndHoldAtTime(time);\n\t\t\t\t\tthis._sig.setValueCurveAtTime(curve, time, release, currentValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Get the scheduled value at the given time. This will\n\t *  return the unconverted (raw) value.\n\t *  @param  {Number}  time  The time in seconds.\n\t *  @return  {Number}  The scheduled value at the given time.\n\t */\n\tTone.Envelope.prototype.getValueAtTime = function(time){\n\t\treturn this._sig.getValueAtTime(time);\n\t};\n\n\t/**\n\t *  triggerAttackRelease is shorthand for triggerAttack, then waiting\n\t *  some duration, then triggerRelease.\n\t *  @param {Time} duration The duration of the sustain.\n\t *  @param {Time} [time=now] When the attack should be triggered.\n\t *  @param {number} [velocity=1] The velocity of the envelope.\n\t *  @returns {Tone.Envelope} this\n\t *  @example\n\t * //trigger the attack and then the release after 0.6 seconds.\n\t * env.triggerAttackRelease(0.6);\n\t */\n\tTone.Envelope.prototype.triggerAttackRelease = function(duration, time, velocity){\n\t\ttime = this.toSeconds(time);\n\t\tthis.triggerAttack(time, velocity);\n\t\tthis.triggerRelease(time + this.toSeconds(duration));\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Cancels all scheduled envelope changes after the given time.\n\t *  @param  {Time} after\n\t *  @returns {Tone.Envelope} this\n\t */\n\tTone.Envelope.prototype.cancel = function(after){\n\t\tthis._sig.cancelScheduledValues(after);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Borrows the connect method from Tone.Signal.\n\t *  @function\n\t *  @private\n\t */\n\tTone.Envelope.prototype.connect = Tone.SignalBase.prototype.connect;\n\n\t/**\n \t *  Generate some complex envelope curves.\n \t */\n\t(function _createCurves(){\n\n\t\tvar curveLen = 128;\n\n\t\tvar i, k;\n\n\t\t//cosine curve\n\t\tvar cosineCurve = [];\n\t\tfor (i = 0; i < curveLen; i++){\n\t\t\tcosineCurve[i] = Math.sin((i / (curveLen - 1)) * (Math.PI / 2));\n\t\t}\n\n\t\t//ripple curve\n\t\tvar rippleCurve = [];\n\t\tvar rippleCurveFreq = 6.4;\n\t\tfor (i = 0; i < curveLen - 1; i++){\n\t\t\tk = (i / (curveLen - 1));\n\t\t\tvar sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n\t\t\trippleCurve[i] = sineWave/10 + k * 0.83;\n\t\t}\n\t\trippleCurve[curveLen - 1] = 1;\n\n\t\t//stairs curve\n\t\tvar stairsCurve = [];\n\t\tvar steps = 5;\n\t\tfor (i = 0; i < curveLen; i++){\n\t\t\tstairsCurve[i] = Math.ceil((i / (curveLen - 1)) * steps) / steps;\n\t\t}\n\n\t\t//in-out easing curve\n\t\tvar sineCurve = [];\n\t\tfor (i = 0; i < curveLen; i++){\n\t\t\tk = i / (curveLen - 1);\n\t\t\tsineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n\t\t}\n\n\t\t//a bounce curve\n\t\tvar bounceCurve = [];\n\t\tfor (i = 0; i < curveLen; i++){\n\t\t\tk = i / (curveLen - 1);\n\t\t\tvar freq = Math.pow(k, 3) * 4 + 0.2;\n\t\t\tvar val = Math.cos(freq * Math.PI * 2 * k);\n\t\t\tbounceCurve[i] = Math.abs(val * (1 - k));\n\t\t}\n\n\t\t/**\n\t\t *  Invert a value curve to make it work for the release\n\t\t *  @private\n\t\t */\n\t\tfunction invertCurve(curve){\n\t\t\tvar out = new Array(curve.length);\n\t\t\tfor (var j = 0; j < curve.length; j++){\n\t\t\t\tout[j] = 1 - curve[j];\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\n\t\t/**\n\t\t *  reverse the curve\n\t\t *  @private\n\t\t */\n\t\tfunction reverseCurve(curve){\n\t\t\treturn curve.slice(0).reverse();\n\t\t}\n\n\t\t/**\n\t\t *  attack and release curve arrays\n\t\t *  @type  {Object}\n\t\t *  @private\n\t\t */\n\t\tTone.Envelope.Type = {\n\t\t\t\"linear\" : \"linear\",\n\t\t\t\"exponential\" : \"exponential\",\n\t\t\t\"bounce\" : {\n\t\t\t\tIn : invertCurve(bounceCurve),\n\t\t\t\tOut : bounceCurve\n\t\t\t},\n\t\t\t\"cosine\" : {\n\t\t\t\tIn : cosineCurve,\n\t\t\t\tOut : reverseCurve(cosineCurve)\n\t\t\t},\n\t\t\t\"step\" : {\n\t\t\t\tIn : stairsCurve,\n\t\t\t\tOut : invertCurve(stairsCurve)\n\t\t\t},\n\t\t\t\"ripple\" : {\n\t\t\t\tIn : rippleCurve,\n\t\t\t\tOut : invertCurve(rippleCurve)\n\t\t\t},\n\t\t\t\"sine\" : {\n\t\t\t\tIn : sineCurve,\n\t\t\t\tOut : invertCurve(sineCurve)\n\t\t\t}\n\t\t};\n\n\t})();\n\n\t/**\n\t *  Disconnect and dispose.\n\t *  @returns {Tone.Envelope} this\n\t */\n\tTone.Envelope.prototype.dispose = function(){\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis._sig.dispose();\n\t\tthis._sig = null;\n\t\tthis._attackCurve = null;\n\t\tthis._releaseCurve = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Envelope;\n});\n","// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar ENDS_WITH = 'endsWith';\nvar $endsWith = ''[ENDS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = context(this, searchString, ENDS_WITH);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);\n    var search = String(searchString);\n    return $endsWith\n      ? $endsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n","define([\"../core/Tone\", \"../type/Type\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Similar to Tone.Timeline, but all events represent\n\t *         intervals with both \"time\" and \"duration\" times. The\n\t *         events are placed in a tree structure optimized\n\t *         for querying an intersection point with the timeline\n\t *         events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n\t *         to represent the data.\n\t *  @extends {Tone}\n\t */\n\tTone.IntervalTimeline = function(){\n\n\t\tTone.call(this);\n\n\t\t/**\n\t\t *  The root node of the inteval tree\n\t\t *  @type  {IntervalNode}\n\t\t *  @private\n\t\t */\n\t\tthis._root = null;\n\n\t\t/**\n\t\t *  Keep track of the length of the timeline.\n\t\t *  @type  {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._length = 0;\n\t};\n\n\tTone.extend(Tone.IntervalTimeline);\n\n\t/**\n\t *  The event to add to the timeline. All events must\n\t *  have a time and duration value\n\t *  @param  {Object}  event  The event to add to the timeline\n\t *  @return  {Tone.IntervalTimeline}  this\n\t */\n\tTone.IntervalTimeline.prototype.add = function(event){\n\t\tif (Tone.isUndef(event.time) || Tone.isUndef(event.duration)){\n\t\t\tthrow new Error(\"Tone.IntervalTimeline: events must have time and duration parameters\");\n\t\t}\n\t\tevent.time = event.time.valueOf();\n\t\tvar node = new IntervalNode(event.time, event.time + event.duration, event);\n\t\tif (this._root === null){\n\t\t\tthis._root = node;\n\t\t} else {\n\t\t\tthis._root.insert(node);\n\t\t}\n\t\tthis._length++;\n\t\t// Restructure tree to be balanced\n\t\twhile (node !== null){\n\t\t\tnode.updateHeight();\n\t\t\tnode.updateMax();\n\t\t\tthis._rebalance(node);\n\t\t\tnode = node.parent;\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Remove an event from the timeline.\n\t *  @param  {Object}  event  The event to remove from the timeline\n\t *  @return  {Tone.IntervalTimeline}  this\n\t */\n\tTone.IntervalTimeline.prototype.remove = function(event){\n\t\tif (this._root !== null){\n\t\t\tvar results = [];\n\t\t\tthis._root.search(event.time, results);\n\t\t\tfor (var i = 0; i < results.length; i++){\n\t\t\t\tvar node = results[i];\n\t\t\t\tif (node.event === event){\n\t\t\t\t\tthis._removeNode(node);\n\t\t\t\t\tthis._length--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  The number of items in the timeline.\n\t *  @type {Number}\n\t *  @memberOf Tone.IntervalTimeline#\n\t *  @name length\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.IntervalTimeline.prototype, \"length\", {\n\t\tget : function(){\n\t\t\treturn this._length;\n\t\t}\n\t});\n\n\t/**\n\t *  Remove events whose time time is after the given time\n\t *  @param  {Number}  time  The time to query.\n\t *  @returns {Tone.IntervalTimeline} this\n\t */\n\tTone.IntervalTimeline.prototype.cancel = function(after){\n\t\tthis.forEachFrom(after, function(event){\n\t\t\tthis.remove(event);\n\t\t}.bind(this));\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Set the root node as the given node\n\t *  @param {IntervalNode} node\n\t *  @private\n\t */\n\tTone.IntervalTimeline.prototype._setRoot = function(node){\n\t\tthis._root = node;\n\t\tif (this._root !== null){\n\t\t\tthis._root.parent = null;\n\t\t}\n\t};\n\n\t/**\n\t *  Replace the references to the node in the node's parent\n\t *  with the replacement node.\n\t *  @param  {IntervalNode}  node\n\t *  @param  {IntervalNode}  replacement\n\t *  @private\n\t */\n\tTone.IntervalTimeline.prototype._replaceNodeInParent = function(node, replacement){\n\t\tif (node.parent !== null){\n\t\t\tif (node.isLeftChild()){\n\t\t\t\tnode.parent.left = replacement;\n\t\t\t} else {\n\t\t\t\tnode.parent.right = replacement;\n\t\t\t}\n\t\t\tthis._rebalance(node.parent);\n\t\t} else {\n\t\t\tthis._setRoot(replacement);\n\t\t}\n\t};\n\n\t/**\n\t *  Remove the node from the tree and replace it with\n\t *  a successor which follows the schema.\n\t *  @param  {IntervalNode}  node\n\t *  @private\n\t */\n\tTone.IntervalTimeline.prototype._removeNode = function(node){\n\t\tif (node.left === null && node.right === null){\n\t\t\tthis._replaceNodeInParent(node, null);\n\t\t} else if (node.right === null){\n\t\t\tthis._replaceNodeInParent(node, node.left);\n\t\t} else if (node.left === null){\n\t\t\tthis._replaceNodeInParent(node, node.right);\n\t\t} else {\n\t\t\tvar balance = node.getBalance();\n\t\t\tvar replacement, temp;\n\t\t\tif (balance > 0){\n\t\t\t\tif (node.left.right === null){\n\t\t\t\t\treplacement = node.left;\n\t\t\t\t\treplacement.right = node.right;\n\t\t\t\t\ttemp = replacement;\n\t\t\t\t} else {\n\t\t\t\t\treplacement = node.left.right;\n\t\t\t\t\twhile (replacement.right !== null){\n\t\t\t\t\t\treplacement = replacement.right;\n\t\t\t\t\t}\n\t\t\t\t\treplacement.parent.right = replacement.left;\n\t\t\t\t\ttemp = replacement.parent;\n\t\t\t\t\treplacement.left = node.left;\n\t\t\t\t\treplacement.right = node.right;\n\t\t\t\t}\n\t\t\t} else if (node.right.left === null){\n\t\t\t\treplacement = node.right;\n\t\t\t\treplacement.left = node.left;\n\t\t\t\ttemp = replacement;\n\t\t\t} else {\n\t\t\t\treplacement = node.right.left;\n\t\t\t\twhile (replacement.left !== null){\n\t\t\t\t\treplacement = replacement.left;\n\t\t\t\t}\n\t\t\t\treplacement.parent = replacement.parent;\n\t\t\t\treplacement.parent.left = replacement.right;\n\t\t\t\ttemp = replacement.parent;\n\t\t\t\treplacement.left = node.left;\n\t\t\t\treplacement.right = node.right;\n\t\t\t}\n\t\t\tif (node.parent !== null){\n\t\t\t\tif (node.isLeftChild()){\n\t\t\t\t\tnode.parent.left = replacement;\n\t\t\t\t} else {\n\t\t\t\t\tnode.parent.right = replacement;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._setRoot(replacement);\n\t\t\t}\n\t\t\t// this._replaceNodeInParent(node, replacement);\n\t\t\tthis._rebalance(temp);\n\t\t}\n\t\tnode.dispose();\n\t};\n\n\t/**\n\t *  Rotate the tree to the left\n\t *  @param  {IntervalNode}  node\n\t *  @private\n\t */\n\tTone.IntervalTimeline.prototype._rotateLeft = function(node){\n\t\tvar parent = node.parent;\n\t\tvar isLeftChild = node.isLeftChild();\n\n\t\t// Make node.right the new root of this sub tree (instead of node)\n\t\tvar pivotNode = node.right;\n\t\tnode.right = pivotNode.left;\n\t\tpivotNode.left = node;\n\n\t\tif (parent !== null){\n\t\t\tif (isLeftChild){\n\t\t\t\tparent.left = pivotNode;\n\t\t\t} else {\n\t\t\t\tparent.right = pivotNode;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._setRoot(pivotNode);\n\t\t}\n\t};\n\n\t/**\n\t *  Rotate the tree to the right\n\t *  @param  {IntervalNode}  node\n\t *  @private\n\t */\n\tTone.IntervalTimeline.prototype._rotateRight = function(node){\n\t\tvar parent = node.parent;\n\t\tvar isLeftChild = node.isLeftChild();\n\n\t\t// Make node.left the new root of this sub tree (instead of node)\n\t\tvar pivotNode = node.left;\n\t\tnode.left = pivotNode.right;\n\t\tpivotNode.right = node;\n\n\t\tif (parent !== null){\n\t\t\tif (isLeftChild){\n\t\t\t\tparent.left = pivotNode;\n\t\t\t} else {\n\t\t\t\tparent.right = pivotNode;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._setRoot(pivotNode);\n\t\t}\n\t};\n\n\t/**\n\t *  Balance the BST\n\t *  @param  {IntervalNode}  node\n\t *  @private\n\t */\n\tTone.IntervalTimeline.prototype._rebalance = function(node){\n\t\tvar balance = node.getBalance();\n\t\tif (balance > 1){\n\t\t\tif (node.left.getBalance() < 0){\n\t\t\t\tthis._rotateLeft(node.left);\n\t\t\t} else {\n\t\t\t\tthis._rotateRight(node);\n\t\t\t}\n\t\t} else if (balance < -1){\n\t\t\tif (node.right.getBalance() > 0){\n\t\t\t\tthis._rotateRight(node.right);\n\t\t\t} else {\n\t\t\t\tthis._rotateLeft(node);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t *  Get an event whose time and duration span the give time. Will\n\t *  return the match whose \"time\" value is closest to the given time.\n\t *  @param  {Object}  event  The event to add to the timeline\n\t *  @return  {Object}  The event which spans the desired time\n\t */\n\tTone.IntervalTimeline.prototype.get = function(time){\n\t\tif (this._root !== null){\n\t\t\tvar results = [];\n\t\t\tthis._root.search(time, results);\n\t\t\tif (results.length > 0){\n\t\t\t\tvar max = results[0];\n\t\t\t\tfor (var i = 1; i < results.length; i++){\n\t\t\t\t\tif (results[i].low > max.low){\n\t\t\t\t\t\tmax = results[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn max.event;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\t/**\n\t *  Iterate over everything in the timeline.\n\t *  @param  {Function}  callback The callback to invoke with every item\n\t *  @returns {Tone.IntervalTimeline} this\n\t */\n\tTone.IntervalTimeline.prototype.forEach = function(callback){\n\t\tif (this._root !== null){\n\t\t\tvar allNodes = [];\n\t\t\tthis._root.traverse(function(node){\n\t\t\t\tallNodes.push(node);\n\t\t\t});\n\t\t\tfor (var i = 0; i < allNodes.length; i++){\n\t\t\t\tvar ev = allNodes[i].event;\n\t\t\t\tif (ev){\n\t\t\t\t\tcallback(ev);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Iterate over everything in the array in which the given time\n\t *  overlaps with the time and duration time of the event.\n\t *  @param  {Number}  time The time to check if items are overlapping\n\t *  @param  {Function}  callback The callback to invoke with every item\n\t *  @returns {Tone.IntervalTimeline} this\n\t */\n\tTone.IntervalTimeline.prototype.forEachAtTime = function(time, callback){\n\t\tif (this._root !== null){\n\t\t\tvar results = [];\n\t\t\tthis._root.search(time, results);\n\t\t\tfor (var i = results.length - 1; i >= 0; i--){\n\t\t\t\tvar ev = results[i].event;\n\t\t\t\tif (ev){\n\t\t\t\t\tcallback(ev);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Iterate over everything in the array in which the time is greater\n\t *  than or equal to the given time.\n\t *  @param  {Number}  time The time to check if items are before\n\t *  @param  {Function}  callback The callback to invoke with every item\n\t *  @returns {Tone.IntervalTimeline} this\n\t */\n\tTone.IntervalTimeline.prototype.forEachFrom = function(time, callback){\n\t\tif (this._root !== null){\n\t\t\tvar results = [];\n\t\t\tthis._root.searchAfter(time, results);\n\t\t\tfor (var i = results.length - 1; i >= 0; i--){\n\t\t\t\tvar ev = results[i].event;\n\t\t\t\tcallback(ev);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Clean up\n\t *  @return  {Tone.IntervalTimeline}  this\n\t */\n\tTone.IntervalTimeline.prototype.dispose = function(){\n\t\tvar allNodes = [];\n\t\tif (this._root !== null){\n\t\t\tthis._root.traverse(function(node){\n\t\t\t\tallNodes.push(node);\n\t\t\t});\n\t\t}\n\t\tfor (var i = 0; i < allNodes.length; i++){\n\t\t\tallNodes[i].dispose();\n\t\t}\n\t\tallNodes = null;\n\t\tthis._root = null;\n\t\treturn this;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tINTERVAL NODE HELPER\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Represents a node in the binary search tree, with the addition\n\t *  of a \"high\" value which keeps track of the highest value of\n\t *  its children.\n\t *  References:\n\t *  https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n\t *  http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n\t *  @param {Number} low\n\t *  @param {Number} high\n\t *  @private\n\t */\n\tvar IntervalNode = function(low, high, event){\n\t\t//the event container\n\t\tthis.event = event;\n\t\t//the low value\n\t\tthis.low = low;\n\t\t//the high value\n\t\tthis.high = high;\n\t\t//the high value for this and all child nodes\n\t\tthis.max = this.high;\n\t\t//the nodes to the left\n\t\tthis._left = null;\n\t\t//the nodes to the right\n\t\tthis._right = null;\n\t\t//the parent node\n\t\tthis.parent = null;\n\t\t//the number of child nodes\n\t\tthis.height = 0;\n\t};\n\n\t/**\n\t *  Insert a node into the correct spot in the tree\n\t *  @param  {IntervalNode}  node\n\t */\n\tIntervalNode.prototype.insert = function(node){\n\t\tif (node.low <= this.low){\n\t\t\tif (this.left === null){\n\t\t\t\tthis.left = node;\n\t\t\t} else {\n\t\t\t\tthis.left.insert(node);\n\t\t\t}\n\t\t} else if (this.right === null){\n\t\t\tthis.right = node;\n\t\t} else {\n\t\t\tthis.right.insert(node);\n\t\t}\n\t};\n\n\t/**\n\t *  Search the tree for nodes which overlap\n\t *  with the given point\n\t *  @param  {Number}  point  The point to query\n\t *  @param  {Array}  results  The array to put the results\n\t */\n\tIntervalNode.prototype.search = function(point, results){\n\t\t// If p is to the right of the rightmost point of any interval\n\t\t// in this node and all children, there won't be any matches.\n\t\tif (point > this.max){\n\t\t\treturn;\n\t\t}\n\t\t// Search left children\n\t\tif (this.left !== null){\n\t\t\tthis.left.search(point, results);\n\t\t}\n\t\t// Check this node\n\t\tif (this.low <= point && this.high > point){\n\t\t\tresults.push(this);\n\t\t}\n\t\t// If p is to the left of the time of this interval,\n\t\t// then it can't be in any child to the right.\n\t\tif (this.low > point){\n\t\t\treturn;\n\t\t}\n\t\t// Search right children\n\t\tif (this.right !== null){\n\t\t\tthis.right.search(point, results);\n\t\t}\n\t};\n\n\t/**\n\t *  Search the tree for nodes which are less\n\t *  than the given point\n\t *  @param  {Number}  point  The point to query\n\t *  @param  {Array}  results  The array to put the results\n\t */\n\tIntervalNode.prototype.searchAfter = function(point, results){\n\t\t// Check this node\n\t\tif (this.low >= point){\n\t\t\tresults.push(this);\n\t\t\tif (this.left !== null){\n\t\t\t\tthis.left.searchAfter(point, results);\n\t\t\t}\n\t\t}\n\t\t// search the right side\n\t\tif (this.right !== null){\n\t\t\tthis.right.searchAfter(point, results);\n\t\t}\n\t};\n\n\t/**\n\t *  Invoke the callback on this element and both it's branches\n\t *  @param  {Function}  callback\n\t */\n\tIntervalNode.prototype.traverse = function(callback){\n\t\tcallback(this);\n\t\tif (this.left !== null){\n\t\t\tthis.left.traverse(callback);\n\t\t}\n\t\tif (this.right !== null){\n\t\t\tthis.right.traverse(callback);\n\t\t}\n\t};\n\n\t/**\n\t *  Update the height of the node\n\t */\n\tIntervalNode.prototype.updateHeight = function(){\n\t\tif (this.left !== null && this.right !== null){\n\t\t\tthis.height = Math.max(this.left.height, this.right.height) + 1;\n\t\t} else if (this.right !== null){\n\t\t\tthis.height = this.right.height + 1;\n\t\t} else if (this.left !== null){\n\t\t\tthis.height = this.left.height + 1;\n\t\t} else {\n\t\t\tthis.height = 0;\n\t\t}\n\t};\n\n\t/**\n\t *  Update the height of the node\n\t */\n\tIntervalNode.prototype.updateMax = function(){\n\t\tthis.max = this.high;\n\t\tif (this.left !== null){\n\t\t\tthis.max = Math.max(this.max, this.left.max);\n\t\t}\n\t\tif (this.right !== null){\n\t\t\tthis.max = Math.max(this.max, this.right.max);\n\t\t}\n\t};\n\n\t/**\n\t *  The balance is how the leafs are distributed on the node\n\t *  @return  {Number}  Negative numbers are balanced to the right\n\t */\n\tIntervalNode.prototype.getBalance = function(){\n\t\tvar balance = 0;\n\t\tif (this.left !== null && this.right !== null){\n\t\t\tbalance = this.left.height - this.right.height;\n\t\t} else if (this.left !== null){\n\t\t\tbalance = this.left.height + 1;\n\t\t} else if (this.right !== null){\n\t\t\tbalance = -(this.right.height + 1);\n\t\t}\n\t\treturn balance;\n\t};\n\n\t/**\n\t *  @returns {Boolean} true if this node is the left child\n\t *  of its parent\n\t */\n\tIntervalNode.prototype.isLeftChild = function(){\n\t\treturn this.parent !== null && this.parent.left === this;\n\t};\n\n\t/**\n\t *  get/set the left node\n\t *  @type {IntervalNode}\n\t */\n\tObject.defineProperty(IntervalNode.prototype, \"left\", {\n\t\tget : function(){\n\t\t\treturn this._left;\n\t\t},\n\t\tset : function(node){\n\t\t\tthis._left = node;\n\t\t\tif (node !== null){\n\t\t\t\tnode.parent = this;\n\t\t\t}\n\t\t\tthis.updateHeight();\n\t\t\tthis.updateMax();\n\t\t}\n\t});\n\n\t/**\n\t *  get/set the right node\n\t *  @type {IntervalNode}\n\t */\n\tObject.defineProperty(IntervalNode.prototype, \"right\", {\n\t\tget : function(){\n\t\t\treturn this._right;\n\t\t},\n\t\tset : function(node){\n\t\t\tthis._right = node;\n\t\t\tif (node !== null){\n\t\t\t\tnode.parent = this;\n\t\t\t}\n\t\t\tthis.updateHeight();\n\t\t\tthis.updateMax();\n\t\t}\n\t});\n\n\t/**\n\t *  null out references.\n\t */\n\tIntervalNode.prototype.dispose = function(){\n\t\tthis.parent = null;\n\t\tthis._left = null;\n\t\tthis._right = null;\n\t\tthis.event = null;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tEND INTERVAL NODE HELPER\n\t///////////////////////////////////////////////////////////////////////////\n\n\treturn Tone.IntervalTimeline;\n});\n","define([\"../core/Tone\", \"../source/Source\", \"../source/Oscillator\",\n\t\"../signal/Multiply\", \"../core/Gain\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.FatOscillator\n\t *\n\t *  @extends {Tone.Source}\n\t *  @constructor\n\t *  @param {Frequency} frequency The starting frequency of the oscillator.\n\t *  @param {String} type The type of the carrier oscillator.\n\t *  @param {String} modulationType The type of the modulator oscillator.\n\t *  @example\n\t * //a sine oscillator frequency-modulated by a square wave\n\t * var fmOsc = new Tone.FatOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t */\n\tTone.FatOscillator = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"spread\"], Tone.FatOscillator);\n\t\tTone.Source.call(this, options);\n\n\t\t/**\n\t\t *  The oscillator's frequency\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t\t/**\n\t\t *  The detune control signal.\n\t\t *  @type {Cents}\n\t\t *  @signal\n\t\t */\n\t\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t\t/**\n\t\t *  The array of oscillators\n\t\t *  @type {Array}\n\t\t *  @private\n\t\t */\n\t\tthis._oscillators = [];\n\n\t\t/**\n\t\t *  The total spread of the oscillators\n\t\t *  @type  {Cents}\n\t\t *  @private\n\t\t */\n\t\tthis._spread = options.spread;\n\n\t\t/**\n\t\t *  The type of the oscillator\n\t\t *  @type {String}\n\t\t *  @private\n\t\t */\n\t\tthis._type = options.type;\n\n\t\t/**\n\t\t *  The phase of the oscillators\n\t\t *  @type {Degrees}\n\t\t *  @private\n\t\t */\n\t\tthis._phase = options.phase;\n\n\t\t/**\n\t\t *  The partials array\n\t\t *  @type {Array}\n\t\t *  @private\n\t\t */\n\t\tthis._partials = options.partials;\n\n\t\t/**\n\t\t *  The number of partials to use\n\t\t *  @type {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._partialCount = options.partialCount;\n\n\t\t//set the count initially\n\t\tthis.count = options.count;\n\t\tthis._readOnly([\"frequency\", \"detune\"]);\n\t};\n\n\tTone.extend(Tone.FatOscillator, Tone.Source);\n\n\t/**\n\t *  default values\n\t *  @static\n\t *  @type {Object}\n\t *  @const\n\t */\n\tTone.FatOscillator.defaults = {\n\t\t\"frequency\" : 440,\n\t\t\"detune\" : 0,\n\t\t\"phase\" : 0,\n\t\t\"spread\" : 20,\n\t\t\"count\" : 3,\n\t\t\"type\" : \"sawtooth\",\n\t\t\"partials\" : [],\n\t\t\"partialCount\" : 0\n\t};\n\n\t/**\n\t *  start the oscillator\n\t *  @param  {Time} [time=now]\n\t *  @private\n\t */\n\tTone.FatOscillator.prototype._start = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._forEach(function(osc){\n\t\t\tosc.start(time);\n\t\t});\n\t};\n\n\t/**\n\t *  stop the oscillator\n\t *  @param  {Time} [time=now]\n\t *  @private\n\t */\n\tTone.FatOscillator.prototype._stop = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._forEach(function(osc){\n\t\t\tosc.stop(time);\n\t\t});\n\t};\n\n\t/**\n\t *  restart the oscillator\n\t *  @param  {Time} time (optional) timing parameter\n\t *  @private\n\t */\n\tTone.FatOscillator.prototype.restart = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._forEach(function(osc){\n\t\t\tosc.restart(time);\n\t\t});\n\t};\n\n\t/**\n\t *  Iterate over all of the oscillators\n\t *  @param  {Function}  iterator  The iterator function\n\t *  @private\n\t */\n\tTone.FatOscillator.prototype._forEach = function(iterator){\n\t\tfor (var i = 0; i < this._oscillators.length; i++){\n\t\t\titerator.call(this, this._oscillators[i], i);\n\t\t}\n\t};\n\n\t/**\n\t * The type of the carrier oscillator\n\t * @memberOf Tone.FatOscillator#\n\t * @type {string}\n\t * @name type\n\t */\n\tObject.defineProperty(Tone.FatOscillator.prototype, \"type\", {\n\t\tget : function(){\n\t\t\treturn this._type;\n\t\t},\n\t\tset : function(type){\n\t\t\tthis._type = type;\n\t\t\tthis._forEach(function(osc){\n\t\t\t\tosc.type = type;\n\t\t\t});\n\t\t}\n\t});\n\n\t/**\n\t * The detune spread between the oscillators. If \"count\" is\n\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t * for a total detune spread of 40 cents.\n\t * @memberOf Tone.FatOscillator#\n\t * @type {Cents}\n\t * @name spread\n\t */\n\tObject.defineProperty(Tone.FatOscillator.prototype, \"spread\", {\n\t\tget : function(){\n\t\t\treturn this._spread;\n\t\t},\n\t\tset : function(spread){\n\t\t\tthis._spread = spread;\n\t\t\tif (this._oscillators.length > 1){\n\t\t\t\tvar start = -spread/2;\n\t\t\t\tvar step = spread / (this._oscillators.length - 1);\n\t\t\t\tthis._forEach(function(osc, i){\n\t\t\t\t\tosc.detune.value = start + step * i;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The number of detuned oscillators\n\t * @memberOf Tone.FatOscillator#\n\t * @type {Number}\n\t * @name count\n\t */\n\tObject.defineProperty(Tone.FatOscillator.prototype, \"count\", {\n\t\tget : function(){\n\t\t\treturn this._oscillators.length;\n\t\t},\n\t\tset : function(count){\n\t\t\tcount = Math.max(count, 1);\n\t\t\tif (this._oscillators.length !== count){\n\t\t\t\t//dispose the previous oscillators\n\t\t\t\tthis._forEach(function(osc){\n\t\t\t\t\tosc.dispose();\n\t\t\t\t});\n\t\t\t\tthis._oscillators = [];\n\t\t\t\tfor (var i = 0; i < count; i++){\n\t\t\t\t\tvar osc = new Tone.Oscillator();\n\t\t\t\t\tif (this.type === Tone.Oscillator.Type.Custom){\n\t\t\t\t\t\tosc.partials = this._partials;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tosc.type = this._type;\n\t\t\t\t\t}\n\t\t\t\t\tosc.partialCount = this._partialCount;\n\t\t\t\t\tosc.phase = this._phase + (i / count) * 360;\n\t\t\t\t\tosc.volume.value = -6 - count*1.1;\n\t\t\t\t\tthis.frequency.connect(osc.frequency);\n\t\t\t\t\tthis.detune.connect(osc.detune);\n\t\t\t\t\tosc.connect(this.output);\n\t\t\t\t\tthis._oscillators[i] = osc;\n\t\t\t\t}\n\t\t\t\t//set the spread\n\t\t\t\tthis.spread = this._spread;\n\t\t\t\tif (this.state === Tone.State.Started){\n\t\t\t\t\tthis._forEach(function(osc){\n\t\t\t\t\t\tosc.start();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t * @memberOf Tone.FatOscillator#\n\t * @type {Number}\n\t * @name phase\n\t */\n\tObject.defineProperty(Tone.FatOscillator.prototype, \"phase\", {\n\t\tget : function(){\n\t\t\treturn this._phase;\n\t\t},\n\t\tset : function(phase){\n\t\t\tthis._phase = phase;\n\t\t\tthis._forEach(function(osc){\n\t\t\t\tosc.phase = phase;\n\t\t\t});\n\t\t}\n\t});\n\n\t/**\n\t * The oscillator type without the partialsCount appended to the end\n\t * @memberOf Tone.FatOscillator#\n\t * @type {string}\n\t * @name baseType\n\t * @example\n\t * osc.type = 'sine2'\n\t * osc.baseType //'sine'\n\t * osc.partialCount = 2\n\t */\n\tObject.defineProperty(Tone.FatOscillator.prototype, \"baseType\", {\n\t\tget : function(){\n\t\t\treturn this._oscillators[0].baseType;\n\t\t},\n\t\tset : function(baseType){\n\t\t\tthis._forEach(function(osc){\n\t\t\t\tosc.baseType = baseType;\n\t\t\t});\n\t\t\tthis._type = this._oscillators[0].type;\n\t\t}\n\t});\n\n\t/**\n\t * The partials of the carrier waveform. A partial represents\n\t * the amplitude at a harmonic. The first harmonic is the\n\t * fundamental frequency, the second is the octave and so on\n\t * following the harmonic series.\n\t * Setting this value will automatically set the type to \"custom\".\n\t * The value is an empty array when the type is not \"custom\".\n\t * @memberOf Tone.FatOscillator#\n\t * @type {Array}\n\t * @name partials\n\t * @example\n\t * osc.partials = [1, 0.2, 0.01];\n\t */\n\tObject.defineProperty(Tone.FatOscillator.prototype, \"partials\", {\n\t\tget : function(){\n\t\t\treturn this._oscillators[0].partials;\n\t\t},\n\t\tset : function(partials){\n\t\t\tthis._partials = partials;\n\t\t\tthis._type = Tone.Oscillator.Type.Custom;\n\t\t\tthis._forEach(function(osc){\n\t\t\t\tosc.partials = partials;\n\t\t\t});\n\t\t}\n\t});\n\n\t/**\n\t * 'partialCount' offers an alternative way to set the number of used partials. \n\t * When partialCount is 0, the maximum number of partials are used when representing\n\t * the waveform using the periodicWave. When 'partials' is set, this value is \n\t * not settable, but equals the length of the partials array.\n\t * @memberOf Tone.FatOscillator#\n\t * @type {Number}\n\t * @name partialCount\n\t */\n\tObject.defineProperty(Tone.FatOscillator.prototype, \"partialCount\", {\n\t\tget : function(){\n\t\t\treturn this._oscillators[0].partialCount;\n\t\t},\n\t\tset : function(partialCount){\n\t\t\tthis._partialCount = partialCount;\n\t\t\tthis._forEach(function(osc){\n\t\t\t\tosc.partialCount = partialCount;\n\t\t\t});\n\t\t\tthis._type = this._oscillators[0].type;\n\t\t}\n\t});\n\n\t/**\n\t *  Clean up.\n\t *  @return {Tone.FatOscillator} this\n\t */\n\tTone.FatOscillator.prototype.dispose = function(){\n\t\tTone.Source.prototype.dispose.call(this);\n\t\tthis._writable([\"frequency\", \"detune\"]);\n\t\tthis.frequency.dispose();\n\t\tthis.frequency = null;\n\t\tthis.detune.dispose();\n\t\tthis.detune = null;\n\t\tthis._forEach(function(osc){\n\t\t\tosc.dispose();\n\t\t});\n\t\tthis._oscillators = null;\n\t\tthis._partials = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.FatOscillator;\n});\n","define([\"../core/Tone\", \"../component/AmplitudeEnvelope\", \"../source/OmniOscillator\",\n\t\"../signal/Signal\", \"../instrument/Monophonic\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Tone.Synth is composed simply of a Tone.OmniOscillator\n\t *          routed through a Tone.AmplitudeEnvelope.\n\t *          <img src=\"https://docs.google.com/drawings/d/1-1_0YW2Z1J2EPI36P8fNCMcZG7N1w1GZluPs4og4evo/pub?w=1163&h=231\">\n\t *\n\t *  @constructor\n\t *  @extends {Tone.Monophonic}\n\t *  @param {Object} [options] the options available for the synth\n\t *                          see defaults below\n\t *  @example\n\t * var synth = new Tone.Synth().toMaster();\n\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t */\n\tTone.Synth = function(options){\n\n\t\t//get the defaults\n\t\toptions = Tone.defaultArg(options, Tone.Synth.defaults);\n\t\tTone.Monophonic.call(this, options);\n\n\t\t/**\n\t\t *  The oscillator.\n\t\t *  @type {Tone.OmniOscillator}\n\t\t */\n\t\tthis.oscillator = new Tone.OmniOscillator(options.oscillator);\n\n\t\t/**\n\t\t *  The frequency control.\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = this.oscillator.frequency;\n\n\t\t/**\n\t\t *  The detune control.\n\t\t *  @type {Cents}\n\t\t *  @signal\n\t\t */\n\t\tthis.detune = this.oscillator.detune;\n\n\t\t/**\n\t\t *  The amplitude envelope.\n\t\t *  @type {Tone.AmplitudeEnvelope}\n\t\t */\n\t\tthis.envelope = new Tone.AmplitudeEnvelope(options.envelope);\n\n\t\t//connect the oscillators to the output\n\t\tthis.oscillator.chain(this.envelope, this.output);\n\t\tthis._readOnly([\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n\t};\n\n\tTone.extend(Tone.Synth, Tone.Monophonic);\n\n\t/**\n\t *  @const\n\t *  @static\n\t *  @type {Object}\n\t */\n\tTone.Synth.defaults = {\n\t\t\"oscillator\" : {\n\t\t\t\"type\" : \"triangle\"\n\t\t},\n\t\t\"envelope\" : {\n\t\t\t\"attack\" : 0.005,\n\t\t\t\"decay\" : 0.1,\n\t\t\t\"sustain\" : 0.3,\n\t\t\t\"release\" : 1\n\t\t}\n\t};\n\n\t/**\n\t *  start the attack portion of the envelope\n\t *  @param {Time} [time=now] the time the attack should start\n\t *  @param {number} [velocity=1] the velocity of the note (0-1)\n\t *  @returns {Tone.Synth} this\n\t *  @private\n\t */\n\tTone.Synth.prototype._triggerEnvelopeAttack = function(time, velocity){\n\t\t//the envelopes\n\t\tthis.envelope.triggerAttack(time, velocity);\n\t\tthis.oscillator.start(time);\n\t\t//if there is no release portion, stop the oscillator\n\t\tif (this.envelope.sustain === 0){\n\t\t\tthis.oscillator.stop(time + this.envelope.attack + this.envelope.decay);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  start the release portion of the envelope\n\t *  @param {Time} [time=now] the time the release should start\n\t *  @returns {Tone.Synth} this\n\t *  @private\n\t */\n\tTone.Synth.prototype._triggerEnvelopeRelease = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis.envelope.triggerRelease(time);\n\t\tthis.oscillator.stop(time + this.envelope.release);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  clean up\n\t *  @returns {Tone.Synth} this\n\t */\n\tTone.Synth.prototype.dispose = function(){\n\t\tTone.Monophonic.prototype.dispose.call(this);\n\t\tthis._writable([\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n\t\tthis.oscillator.dispose();\n\t\tthis.oscillator = null;\n\t\tthis.envelope.dispose();\n\t\tthis.envelope = null;\n\t\tthis.frequency = null;\n\t\tthis.detune = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Synth;\n});\n","define([\"../core/Tone\", \"../signal/Signal\"], function(Tone){\n\n\t/**\n\t * @class Tone.TickSignal extends Tone.Signal, but adds the capability\n\t *        to calculate the number of elapsed ticks. exponential and target curves\n\t *        are approximated with multiple linear ramps.\n\t *\n\t *        Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos, for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n\t *        describing integrating timing functions for tempo calculations.\n\t *\n\t * @param {Number} value The initial value of the signal\n\t * @extends {Tone.Signal}\n\t */\n\tTone.TickSignal = function(value){\n\n\t\tvalue = Tone.defaultArg(value, 1);\n\n\t\tTone.Signal.call(this, {\n\t\t\t\"units\" : Tone.Type.Ticks,\n\t\t\t\"value\" : value\n\t\t});\n\n\t\t//extend the memory\n\t\tthis._events.memory = Infinity;\n\n\t\t//clear the clock from the beginning\n\t\tthis.cancelScheduledValues(0);\n\t\t//set an initial event\n\t\tthis._events.add({\n\t\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\t\"time\" : 0,\n\t\t\t\"value\" : value\n\t\t});\n\t};\n\n\tTone.extend(Tone.TickSignal, Tone.Signal);\n\t\n\t/**\n\t * Wraps Tone.Signal methods so that they also\n\t * record the ticks.\n\t * @param  {Function} method\n\t * @return {Function}\n\t * @private\n\t */\n\tfunction _wrapScheduleMethods(method){\n\t\treturn function(value, time){\n\t\t\ttime = this.toSeconds(time);\n\t\t\tmethod.apply(this, arguments);\n\t\t\tvar event = this._events.get(time);\n\t\t\tvar previousEvent = this._events.previousEvent(event);\n\t\t\tvar ticksUntilTime = this._getTicksUntilEvent(previousEvent, time);\n\t\t\tevent.ticks = Math.max(ticksUntilTime, 0);\n\t\t\treturn this;\n\t\t};\n\t}\n\n\tTone.TickSignal.prototype.setValueAtTime = _wrapScheduleMethods(Tone.Signal.prototype.setValueAtTime);\n\tTone.TickSignal.prototype.linearRampToValueAtTime = _wrapScheduleMethods(Tone.Signal.prototype.linearRampToValueAtTime);\n\n\t/**\n\t *  Start exponentially approaching the target value at the given time with\n\t *  a rate having the given time constant.\n\t *  @param {number} value\n\t *  @param {Time} startTime\n\t *  @param {number} timeConstant\n\t *  @returns {Tone.TickSignal} this\n\t */\n\tTone.TickSignal.prototype.setTargetAtTime = function(value, time, constant){\n\t\t//aproximate it with multiple linear ramps\n\t\ttime = this.toSeconds(time);\n\t\tthis.setRampPoint(time);\n\t\tvalue = this._fromUnits(value);\n\n\t\t//start from previously scheduled value\n\t\tvar prevEvent = this._events.get(time);\n\t\tvar segments = Math.round(Math.max(1 / constant, 1));\n\t\tfor (var i = 0; i <= segments; i++){\n\t\t\tvar segTime = constant * i + time;\n\t\t\tvar rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, value, constant, segTime);\n\t\t\tthis.linearRampToValueAtTime(this._toUnits(rampVal), segTime);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Schedules an exponential continuous change in parameter value from\n\t *  the previous scheduled parameter value to the given value.\n\t *  @param  {number} value\n\t *  @param  {Time} endTime\n\t *  @returns {Tone.TickSignal} this\n\t */\n\tTone.TickSignal.prototype.exponentialRampToValueAtTime = function(value, time){\n\t\t//aproximate it with multiple linear ramps\n\t\ttime = this.toSeconds(time);\n\t\tvalue = this._fromUnits(value);\n\n\t\t//start from previously scheduled value\n\t\tvar prevEvent = this._events.get(time);\n\t\tif (prevEvent === null){\n\t\t\tprevEvent = {\n\t\t\t\t\"value\" : this._initialValue,\n\t\t\t\t\"time\" : 0\n\t\t\t};\n\t\t}\n\t\t//approx 10 segments per second\n\t\tvar segments = Math.round(Math.max((time - prevEvent.time)*10, 1));\n\t\tvar segmentDur = ((time - prevEvent.time)/segments);\n\t\tfor (var i = 0; i <= segments; i++){\n\t\t\tvar segTime = segmentDur * i + prevEvent.time;\n\t\t\tvar rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, value, segTime);\n\t\t\tthis.linearRampToValueAtTime(this._toUnits(rampVal), segTime);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns the tick value at the time. Takes into account\n\t * any automation curves scheduled on the signal.\n\t * @private\n\t * @param  {Time} time The time to get the tick count at\n\t * @return {Ticks}      The number of ticks which have elapsed at the time\n\t *                          given any automations.\n\t */\n\tTone.TickSignal.prototype._getTicksUntilEvent = function(event, time){\n\t\tif (event === null){\n\t\t\tevent = {\n\t\t\t\t\"ticks\" : 0,\n\t\t\t\t\"time\" : 0\n\t\t\t};\n\t\t} else if (Tone.isUndef(event.ticks)){\n\t\t\tvar previousEvent = this._events.previousEvent(event);\n\t\t\tevent.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n\t\t}\n\t\tvar val0 = this.getValueAtTime(event.time);\n\t\tvar val1 = this.getValueAtTime(time);\n\t\t//if it's right on the line, take the previous value\n\t\tif (this._events.get(time).time === time && this._events.get(time).type === Tone.Param.AutomationType.SetValue){\n\t\t\tval1 = this.getValueAtTime(time - this.sampleTime);\n\t\t}\n\t\treturn 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n\t};\n\n\t/**\n\t * Returns the tick value at the time. Takes into account\n\t * any automation curves scheduled on the signal.\n\t * @param  {Time} time The time to get the tick count at\n\t * @return {Ticks}      The number of ticks which have elapsed at the time\n\t *                          given any automations.\n\t */\n\tTone.TickSignal.prototype.getTicksAtTime = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tvar event = this._events.get(time);\n\t\treturn Math.max(this._getTicksUntilEvent(event, time), 0);\n\t};\n\n\t/**\n\t * Return the elapsed time of the number of ticks from the given time\n\t * @param {Ticks} ticks The number of ticks to calculate\n\t * @param  {Time} time The time to get the next tick from\n\t * @return {Seconds} The duration of the number of ticks from the given time in seconds\n\t */\n\tTone.TickSignal.prototype.getDurationOfTicks = function(ticks, time){\n\t\ttime = this.toSeconds(time);\n\t\tvar currentTick = this.getTicksAtTime(time);\n\t\treturn this.getTimeOfTick(currentTick + ticks) - time;\n\t};\n\n\t/**\n\t * Given a tick, returns the time that tick occurs at.\n\t * @param  {Ticks} tick\n\t * @return {Time}      The time that the tick occurs.\n\t */\n\tTone.TickSignal.prototype.getTimeOfTick = function(tick){\n\t\tvar before = this._events.get(tick, \"ticks\");\n\t\tvar after = this._events.getAfter(tick, \"ticks\");\n\t\tif (before && before.ticks === tick){\n\t\t\treturn before.time;\n\t\t} else if (before && after &&\n\t\t\tafter.type === Tone.Param.AutomationType.Linear &&\n\t\t\tbefore.value !== after.value){\n\t\t\tvar val0 = this.getValueAtTime(before.time);\n\t\t\tvar val1 = this.getValueAtTime(after.time);\n\t\t\tvar delta = (val1 - val0) / (after.time - before.time);\n\t\t\tvar k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n\t\t\tvar sol1 = (-val0 + k) / delta;\n\t\t\tvar sol2 = (-val0 - k) / delta;\n\t\t\treturn (sol1 > 0 ? sol1 : sol2) + before.time;\n\t\t} else if (before){\n\t\t\tif (before.value === 0){\n\t\t\t\treturn Infinity;\n\t\t\t} else {\n\t\t\t\treturn before.time + (tick - before.ticks) / before.value;\n\t\t\t}\n\t\t} else {\n\t\t\treturn tick / this._initialValue;\n\t\t}\n\t};\n\n\t/**\n\t * Convert some number of ticks their the duration in seconds accounting\n\t * for any automation curves starting at the given time.\n\t * @param  {Ticks} ticks The number of ticks to convert to seconds.\n\t * @param  {Time} [when=now]  When along the automation timeline to convert the ticks.\n\t * @return {Tone.Time}       The duration in seconds of the ticks.\n\t */\n\tTone.TickSignal.prototype.ticksToTime = function(ticks, when){\n\t\twhen = this.toSeconds(when);\n\t\treturn new Tone.Time(this.getDurationOfTicks(ticks, when));\n\t};\n\n\t/**\n\t * The inverse of [ticksToTime](#tickstotime). Convert a duration in\n\t * seconds to the corresponding number of ticks accounting for any\n\t * automation curves starting at the given time.\n\t * @param  {Time} duration The time interval to convert to ticks.\n\t * @param  {Time} [when=now]     When along the automation timeline to convert the ticks.\n\t * @return {Tone.Ticks}          The duration in ticks.\n\t */\n\tTone.TickSignal.prototype.timeToTicks = function(duration, when){\n\t\twhen = this.toSeconds(when);\n\t\tduration = this.toSeconds(duration);\n\t\tvar startTicks = this.getTicksAtTime(when);\n\t\tvar endTicks = this.getTicksAtTime(when + duration);\n\t\treturn new Tone.Ticks(endTicks - startTicks);\n\t};\n\n\treturn Tone.TickSignal;\n});\n","/**\n *  Tone.js\n *  @author Yotam Mann\n *  @license http://opensource.org/licenses/MIT MIT License\n *  @copyright 2014-2019 Yotam Mann\n */\ndefine([\"../version\"], function(version){\n\n\t\"use strict\";\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tTONE\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  @class  Tone is the base class of all other classes.\n\t *  @constructor\n\t */\n\tvar Tone = function(){\n\t\tif (!(this instanceof Tone)){\n\t\t\tthrow new Error(\"constructor needs to be called with the 'new' keyword\");\n\t\t}\n\t};\n\n\t/**\n\t *  @memberOf Tone#\n\t *  @returns {String} returns the name of the class as a string\n\t */\n\tTone.prototype.toString = function(){\n\t\tfor (var className in Tone){\n\t\t\tvar isLetter = className[0].match(/^[A-Z]$/);\n\t\t\tvar sameConstructor = Tone[className] === this.constructor;\n\t\t\tif (Tone.isFunction(Tone[className]) && isLetter && sameConstructor){\n\t\t\t\treturn className;\n\t\t\t}\n\t\t}\n\t\treturn \"Tone\";\n\t};\n\n\t/**\n\t *  @memberOf Tone#\n\t *  disconnect and dispose\n\t *  @returns {Tone} this\n\t */\n\tTone.prototype.dispose = function(){\n\t\treturn this;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tGET/SET\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Set the parameters at once. Either pass in an\n\t *  object mapping parameters to values, or to set a\n\t *  single parameter, by passing in a string and value.\n\t *  The last argument is an optional ramp time which\n\t *  will ramp any signal values to their destination value\n\t *  over the duration of the rampTime.\n\t *  @param {Object|String} params\n\t *  @param {Number=} value\n\t *  @param {Time=} rampTime\n\t *  @returns {Tone} this\n\t *  @memberOf Tone#\n\t *  @example\n\t * //set values using an object\n\t * filter.set({\n\t * \t\"frequency\" : 300,\n\t * \t\"type\" : highpass\n\t * });\n\t *  @example\n\t * filter.set(\"type\", \"highpass\");\n\t *  @example\n\t * //ramp to the value 220 over 3 seconds.\n\t * oscillator.set({\n\t * \t\"frequency\" : 220\n\t * }, 3);\n\t */\n\tTone.prototype.set = function(params, value, rampTime){\n\t\tif (Tone.isObject(params)){\n\t\t\trampTime = value;\n\t\t} else if (Tone.isString(params)){\n\t\t\tvar tmpObj = {};\n\t\t\ttmpObj[params] = value;\n\t\t\tparams = tmpObj;\n\t\t}\n\n\t\tparamLoop:\n\t\tfor (var attr in params){\n\t\t\tvalue = params[attr];\n\t\t\tvar parent = this;\n\t\t\tif (attr.indexOf(\".\") !== -1){\n\t\t\t\tvar attrSplit = attr.split(\".\");\n\t\t\t\tfor (var i = 0; i < attrSplit.length - 1; i++){\n\t\t\t\t\tparent = parent[attrSplit[i]];\n\t\t\t\t\tif (parent instanceof Tone){\n\t\t\t\t\t\tattrSplit.splice(0, i+1);\n\t\t\t\t\t\tvar innerParam = attrSplit.join(\".\");\n\t\t\t\t\t\tparent.set(innerParam, value);\n\t\t\t\t\t\tcontinue paramLoop;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tattr = attrSplit[attrSplit.length - 1];\n\t\t\t}\n\t\t\tvar param = parent[attr];\n\t\t\tif (Tone.isUndef(param)){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ((Tone.Signal && param instanceof Tone.Signal) ||\n\t\t\t\t\t(Tone.Param && param instanceof Tone.Param)){\n\t\t\t\tif (param.value !== value){\n\t\t\t\t\tif (Tone.isUndef(rampTime)){\n\t\t\t\t\t\tparam.value = value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparam.rampTo(value, rampTime);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (param instanceof AudioParam){\n\t\t\t\tif (param.value !== value){\n\t\t\t\t\tparam.value = value;\n\t\t\t\t}\n\t\t\t} else if (Tone.TimeBase && param instanceof Tone.TimeBase){\n\t\t\t\tparent[attr] = value;\n\t\t\t} else if (param instanceof Tone){\n\t\t\t\tparam.set(value);\n\t\t\t} else if (param !== value){\n\t\t\t\tparent[attr] = value;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Get the object's attributes. Given no arguments get\n\t *  will return all available object properties and their corresponding\n\t *  values. Pass in a single attribute to retrieve or an array\n\t *  of attributes. The attribute strings can also include a \".\"\n\t *  to access deeper properties.\n\t *  @memberOf Tone#\n\t *  @example\n\t * osc.get();\n\t * //returns {\"type\" : \"sine\", \"frequency\" : 440, ...etc}\n\t *  @example\n\t * osc.get(\"type\");\n\t * //returns { \"type\" : \"sine\"}\n\t * @example\n\t * //use dot notation to access deep properties\n\t * synth.get([\"envelope.attack\", \"envelope.release\"]);\n\t * //returns {\"envelope\" : {\"attack\" : 0.2, \"release\" : 0.4}}\n\t *  @param {Array=|string|undefined} params the parameters to get, otherwise will return\n\t *  \t\t\t\t\t                  all available.\n\t *  @returns {Object}\n\t */\n\tTone.prototype.get = function(params){\n\t\tif (Tone.isUndef(params)){\n\t\t\tparams = this._collectDefaults(this.constructor);\n\t\t} else if (Tone.isString(params)){\n\t\t\tparams = [params];\n\t\t}\n\t\tvar ret = {};\n\t\tfor (var i = 0; i < params.length; i++){\n\t\t\tvar attr = params[i];\n\t\t\tvar parent = this;\n\t\t\tvar subRet = ret;\n\t\t\tif (attr.indexOf(\".\") !== -1){\n\t\t\t\tvar attrSplit = attr.split(\".\");\n\t\t\t\tfor (var j = 0; j < attrSplit.length - 1; j++){\n\t\t\t\t\tvar subAttr = attrSplit[j];\n\t\t\t\t\tsubRet[subAttr] = subRet[subAttr] || {};\n\t\t\t\t\tsubRet = subRet[subAttr];\n\t\t\t\t\tparent = parent[subAttr];\n\t\t\t\t}\n\t\t\t\tattr = attrSplit[attrSplit.length - 1];\n\t\t\t}\n\t\t\tvar param = parent[attr];\n\t\t\tif (Tone.isObject(params[attr])){\n\t\t\t\tsubRet[attr] = param.get();\n\t\t\t} else if (Tone.Signal && param instanceof Tone.Signal){\n\t\t\t\tsubRet[attr] = param.value;\n\t\t\t} else if (Tone.Param && param instanceof Tone.Param){\n\t\t\t\tsubRet[attr] = param.value;\n\t\t\t} else if (param instanceof AudioParam){\n\t\t\t\tsubRet[attr] = param.value;\n\t\t\t} else if (param instanceof Tone){\n\t\t\t\tsubRet[attr] = param.get();\n\t\t\t} else if (!Tone.isFunction(param) && Tone.isDefined(param)){\n\t\t\t\tsubRet[attr] = param;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t};\n\n\t/**\n\t *  collect all of the default attributes in one\n\t *  @private\n\t *  @param {Function} constr the constructor to find the defaults from\n\t *  @return {Array} all of the attributes which belong to the class\n\t */\n\tTone.prototype._collectDefaults = function(constr){\n\t\tvar ret = [];\n\t\tif (Tone.isDefined(constr.defaults)){\n\t\t\tret = Object.keys(constr.defaults);\n\t\t}\n\t\tif (Tone.isDefined(constr._super)){\n\t\t\tvar superDefs = this._collectDefaults(constr._super);\n\t\t\t//filter out repeats\n\t\t\tfor (var i = 0; i < superDefs.length; i++){\n\t\t\t\tif (ret.indexOf(superDefs[i]) === -1){\n\t\t\t\t\tret.push(superDefs[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tDEFAULTS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  @memberOf Tone\n\t *  @param  {Array}  values  The arguments array\n\t *  @param  {Array}  keys    The names of the arguments\n\t *  @param {Function|Object} constr The class constructor\n\t *  @return  {Object}  An object composed of the  defaults between the class' defaults\n\t *                        and the passed in arguments.\n\t */\n\tTone.defaults = function(values, keys, constr){\n\t\tvar options = {};\n\t\tif (values.length === 1 && Tone.isObject(values[0])){\n\t\t\toptions = values[0];\n\t\t} else {\n\t\t\tfor (var i = 0; i < keys.length; i++){\n\t\t\t\toptions[keys[i]] = values[i];\n\t\t\t}\n\t\t}\n\t\tif (Tone.isDefined(constr.defaults)){\n\t\t\treturn Tone.defaultArg(options, constr.defaults);\n\t\t} else if (Tone.isObject(constr)){\n\t\t\treturn Tone.defaultArg(options, constr);\n\t\t} else {\n\t\t\treturn options;\n\t\t}\n\t};\n\n\t/**\n\t *  If the `given` parameter is undefined, use the `fallback`.\n\t *  If both `given` and `fallback` are object literals, it will\n\t *  return a deep copy which includes all of the parameters from both\n\t *  objects. If a parameter is undefined in given, it will return\n\t *  the fallback property.\n\t *  <br><br>\n\t *  WARNING: if object is self referential, it will go into an an\n\t *  infinite recursive loop.\n\t *  @memberOf Tone\n\t *  @param  {*} given\n\t *  @param  {*} fallback\n\t *  @return {*}\n\t */\n\tTone.defaultArg = function(given, fallback){\n\t\tif (Tone.isObject(given) && Tone.isObject(fallback)){\n\t\t\tvar ret = {};\n\t\t\t//make a deep copy of the given object\n\t\t\tfor (var givenProp in given){\n\t\t\t\tret[givenProp] = Tone.defaultArg(fallback[givenProp], given[givenProp]);\n\t\t\t}\n\t\t\tfor (var fallbackProp in fallback){\n\t\t\t\tret[fallbackProp] = Tone.defaultArg(given[fallbackProp], fallback[fallbackProp]);\n\t\t\t}\n\t\t\treturn ret;\n\t\t} else {\n\t\t\treturn Tone.isUndef(given) ? fallback : given;\n\t\t}\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tDEBUGGING\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Print the outputs to the console log for debugging purposes. \n\t *  Prints the contents only if either the object has a property\n\t *  called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n\t *  is set to the name of the class. \n\t *  @example\n\t * //prints all logs originating from Tone.OscillatorNode\n\t * Tone.global.TONE_DEBUG_CLASS = \"OscillatorNode\"\n\t *  @param {*} args Any arguments to print to the console.\n\t *  @private\n\t */\n\tTone.prototype.log = function(){\n\t\t//if the object is either set to debug = true\n\t\t//or if there is a string on the Tone.global.with the class name\n\t\tif (this.debug || this.toString() === Tone.global.TONE_DEBUG_CLASS){\n\t\t\tvar args = Array.from(arguments);\n\t\t\targs.unshift(this.toString()+\":\");\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log.apply(undefined, args);\n\t\t}\n\t};\n\n\t/**\n\t *  Assert that the statement is true, otherwise invoke the error. \n\t *  @param {Boolean} statement\n\t *  @param {String} error The message which is passed into an Error\n\t *  @private\n\t */\n\tTone.prototype.assert = function(statement, error){\n\t\tif (!statement){\n\t\t\tthrow new Error(error);\n\t\t}\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tCONNECTIONS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  connect together all of the arguments in series\n\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t *  @returns {Tone}\n\t *  @memberOf Tone\n\t *  @static\n\t */\n\tTone.connectSeries = function(){\n\t\tvar currentUnit = arguments[0];\n\t\tfor (var i = 1; i < arguments.length; i++){\n\t\t\tvar toUnit = arguments[i];\n\t\t\tcurrentUnit.connect(toUnit);\n\t\t\tcurrentUnit = toUnit;\n\t\t}\n\t\treturn Tone;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// TYPE CHECKING\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Test if the arg is undefined\n\t *  @param {*} arg the argument to test\n\t *  @returns {Boolean} true if the arg is undefined\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.isUndef = function(val){\n\t\treturn typeof val === \"undefined\";\n\t};\n\n\t/**\n\t *  Test if the arg is not undefined\n\t *  @param {*} arg the argument to test\n\t *  @returns {Boolean} true if the arg is undefined\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.isDefined = function(val){\n\t\treturn !Tone.isUndef(val);\n\t};\n\n\t/**\n\t *  Test if the arg is a function\n\t *  @param {*} arg the argument to test\n\t *  @returns {Boolean} true if the arg is a function\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.isFunction = function(val){\n\t\treturn typeof val === \"function\";\n\t};\n\n\t/**\n\t *  Test if the argument is a number.\n\t *  @param {*} arg the argument to test\n\t *  @returns {Boolean} true if the arg is a number\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.isNumber = function(arg){\n\t\treturn (typeof arg === \"number\");\n\t};\n\n\t/**\n\t *  Test if the given argument is an object literal (i.e. `{}`);\n\t *  @param {*} arg the argument to test\n\t *  @returns {Boolean} true if the arg is an object literal.\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.isObject = function(arg){\n\t\treturn (Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object);\n\t};\n\n\t/**\n\t *  Test if the argument is a boolean.\n\t *  @param {*} arg the argument to test\n\t *  @returns {Boolean} true if the arg is a boolean\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.isBoolean = function(arg){\n\t\treturn (typeof arg === \"boolean\");\n\t};\n\n\t/**\n\t *  Test if the argument is an Array\n\t *  @param {*} arg the argument to test\n\t *  @returns {Boolean} true if the arg is an array\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.isArray = function(arg){\n\t\treturn (Array.isArray(arg));\n\t};\n\n\t/**\n\t *  Test if the argument is a string.\n\t *  @param {*} arg the argument to test\n\t *  @returns {Boolean} true if the arg is a string\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.isString = function(arg){\n\t\treturn (typeof arg === \"string\");\n\t};\n\n\t/**\n\t *  Test if the argument is in the form of a note in scientific pitch notation.\n\t *  e.g. \"C4\"\n\t *  @param {*} arg the argument to test\n\t *  @returns {Boolean} true if the arg is a string\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.isNote = function(arg){\n\t\treturn Tone.isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n\t};\n\n\t/**\n\t *  An empty function.\n\t *  @static\n\t */\n\tTone.noOp = function(){};\n\n\t/**\n\t *  Make the property not writable. Internal use only.\n\t *  @private\n\t *  @param  {String}  property  the property to make not writable\n\t */\n\tTone.prototype._readOnly = function(property){\n\t\tif (Array.isArray(property)){\n\t\t\tfor (var i = 0; i < property.length; i++){\n\t\t\t\tthis._readOnly(property[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tObject.defineProperty(this, property, {\n\t\t\t\t\"writable\" : false,\n\t\t\t\t\"enumerable\" : true,\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t *  Make an attribute writeable. Interal use only.\n\t *  @private\n\t *  @param  {String}  property  the property to make writable\n\t */\n\tTone.prototype._writable = function(property){\n\t\tif (Array.isArray(property)){\n\t\t\tfor (var i = 0; i < property.length; i++){\n\t\t\t\tthis._writable(property[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tObject.defineProperty(this, property, {\n\t\t\t\t\"writable\" : true,\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Possible play states.\n\t * @enum {String}\n\t */\n\tTone.State = {\n\t\t\"Started\" : \"started\",\n\t\t\"Stopped\" : \"stopped\",\n\t\t\"Paused\" : \"paused\",\n\t};\n\n\t/**\n\t * A reference to the global context, `global` or `Tone.global.\n\t */\n\tTone.global = Tone.isUndef(global) ? window : global;\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// CONVERSIONS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Equal power gain scale. Good for cross-fading.\n\t *  @param  {NormalRange} percent (0-1)\n\t *  @return {Number}         output gain (0-1)\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.equalPowerScale = function(percent){\n\t\tvar piFactor = 0.5 * Math.PI;\n\t\treturn Math.sin(percent * piFactor);\n\t};\n\n\t/**\n\t *  Convert decibels into gain.\n\t *  @param  {Decibels} db\n\t *  @return {Number}\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.dbToGain = function(db){\n\t\treturn Math.pow(10, db / 20);\n\t};\n\n\t/**\n\t *  Convert gain to decibels.\n\t *  @param  {Number} gain (0-1)\n\t *  @return {Decibels}\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.gainToDb = function(gain){\n\t\treturn 20 * (Math.log(gain) / Math.LN10);\n\t};\n\n\t/**\n\t *  Convert an interval (in semitones) to a frequency ratio.\n\t *  @param  {Interval} interval the number of semitones above the base note\n\t *  @return {Number}          the frequency ratio\n\t *  @static\n\t *  @memberOf Tone\n\t *  @example\n\t * tone.intervalToFrequencyRatio(0); // 1\n\t * tone.intervalToFrequencyRatio(12); // 2\n\t * tone.intervalToFrequencyRatio(-12); // 0.5\n\t */\n\tTone.intervalToFrequencyRatio = function(interval){\n\t\treturn Math.pow(2, (interval/12));\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tTIMING\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Return the current time of the AudioContext clock plus\n\t *  the lookAhead.\n\t *  @return {Number} the currentTime from the AudioContext\n\t *  @memberOf Tone#\n\t */\n\tTone.prototype.now = function(){\n\t\treturn Tone.context.now();\n\t};\n\n\t/**\n\t *  Return the current time of the AudioContext clock plus\n\t *  the lookAhead.\n\t *  @return {Number} the currentTime from the AudioContext\n\t *  @static\n\t *  @memberOf Tone\n\t */\n\tTone.now = function(){\n\t\treturn Tone.context.now();\n\t};\n\n\t/**\n\t *  Return the current time of the AudioContext clock without\n\t *  any lookAhead.\n\t *  @return {Number} the currentTime from the AudioContext\n\t *  @memberOf Tone#\n\t */\n\tTone.prototype.immediate = function(){\n\t\treturn Tone.context.currentTime;\n\t};\n\n\t/**\n\t *  Return the current time of the AudioContext clock without\n\t *  any lookAhead.\n\t *  @return {Number} the currentTime from the AudioContext\n\t *  @memberOf Tone\n\t */\n\tTone.immediate = function(){\n\t\treturn Tone.context.currentTime;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tINHERITANCE\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  have a child inherit all of Tone's (or a parent's) prototype\n\t *  to inherit the parent's properties, make sure to call\n\t *  Parent.call(this) in the child's constructor\n\t *\n\t *  based on closure library's inherit function\n\t *\n\t *  @memberOf Tone\n\t *  @static\n\t *  @param  {Function} \tchild\n\t *  @param  {Function=} parent (optional) parent to inherit from\n\t *                             if no parent is supplied, the child\n\t *                             will inherit from Tone\n\t */\n\tTone.extend = function(child, parent){\n\t\tif (Tone.isUndef(parent)){\n\t\t\tparent = Tone;\n\t\t}\n\t\tfunction TempConstructor(){}\n\t\tTempConstructor.prototype = parent.prototype;\n\t\tchild.prototype = new TempConstructor();\n\t\t/** @override */\n\t\tchild.prototype.constructor = child;\n\t\tchild._super = parent;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tCONTEXT\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t * The shared AudioContext\n\t * @type {Tone.Context}\n\t * @private\n\t */\n\tTone._audioContext = null;\n\n\t/**\n\t * \tMost browsers will not play _any_ audio until a user \n\t * \tclicks something (like a play button). Invoke this method\n\t * \ton a click or keypress event handler to start the audio context. \n\t * \tMore about the Autoplay policy [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n\t *  @memberOf Tone\n\t *  @static\n\t *  @return {Promise} This promise is resolved when the audio context is started. \n\t *  @example\n\t * document.querySelector('#playbutton').addEventListener('click', () => Tone.start())\n\t */\n\tTone.start = function(){\n\t\treturn Tone.context.resume();\n\t};\n\n\t/**\n\t *  A static pointer to the audio context accessible as Tone.context.\n\t *  @type {Tone.Context}\n\t *  @name context\n\t *  @memberOf Tone\n\t */\n\tObject.defineProperty(Tone, \"context\", {\n\t\t\"get\" : function(){\n\t\t\treturn Tone._audioContext;\n\t\t},\n\t\t\"set\" : function(context){\n\t\t\tif (context.isContext){\n\t\t\t\tTone._audioContext = context;\n\t\t\t} else {\n\t\t\t\tTone._audioContext = new Tone.Context(context);\n\t\t\t}\n\t\t\t//initialize the new audio context\n\t\t\tTone.Context.emit(\"init\", Tone._audioContext);\n\t\t}\n\t});\n\n\t/**\n\t *  The AudioContext\n\t *  @type {Tone.Context}\n\t *  @name context\n\t *  @memberOf Tone#\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.prototype, \"context\", {\n\t\t\"get\" : function(){\n\t\t\treturn Tone.context;\n\t\t}\n\t});\n\n\t/**\n\t *  Tone automatically creates a context on init, but if you are working\n\t *  with other libraries which also create an AudioContext, it can be\n\t *  useful to set your own. If you are going to set your own context,\n\t *  be sure to do it at the start of your code, before creating any objects.\n\t *  @static\n\t *  @param {AudioContext} ctx The new audio context to set\n\t */\n\tTone.setContext = function(ctx){\n\t\tTone.context = ctx;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tATTRIBUTES\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  The number of seconds of 1 processing block (128 samples)\n\t *  @type {Number}\n\t *  @name blockTime\n\t *  @memberOf Tone\n\t *  @static\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.prototype, \"blockTime\", {\n\t\t\"get\" : function(){\n\t\t\treturn 128 / this.context.sampleRate;\n\t\t}\n\t});\n\n\t/**\n\t *  The duration in seconds of one sample.\n\t *  @type {Number}\n\t *  @name sampleTime\n\t *  @memberOf Tone\n\t *  @static\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.prototype, \"sampleTime\", {\n\t\t\"get\" : function(){\n\t\t\treturn 1 / this.context.sampleRate;\n\t\t}\n\t});\n\n\t/**\n\t *  Whether or not all the technologies that Tone.js relies on are supported by the current browser.\n\t *  @type {Boolean}\n\t *  @name supported\n\t *  @memberOf Tone\n\t *  @readOnly\n\t *  @static\n\t */\n\tObject.defineProperty(Tone, \"supported\", {\n\t\t\"get\" : function(){\n\t\t\tvar hasAudioContext = Tone.global.hasOwnProperty(\"AudioContext\") || Tone.global.hasOwnProperty(\"webkitAudioContext\");\n\t\t\tvar hasPromises = Tone.global.hasOwnProperty(\"Promise\");\n\t\t\treturn hasAudioContext && hasPromises;\n\t\t}\n\t});\n\n\t/**\n\t *  Boolean value if the audio context has been initialized.\n\t *  @type {Boolean}\n\t *  @memberOf Tone\n\t *  @static\n\t *  @name initialized\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone, \"initialized\", {\n\t\t\"get\" : function(){\n\t\t\treturn Boolean(Tone.context);\n\t\t}\n\t});\n\n\t/**\n\t *  Get the context when it becomes available\n\t *  @param  {Function}  resolve  Callback when the context is initialized\n\t *  @return  {Tone}\n\t */\n\tTone.getContext = function(resolve){\n\t\tif (Tone.initialized){\n\t\t\tresolve(Tone.context);\n\t\t} else {\n\t\t\tvar resCallback = function(){\n\t\t\t\tresolve(Tone.context);\n\t\t\t\tTone.Context.off(\"init\", resCallback);\n\t\t\t};\n\t\t\tTone.Context.on(\"init\", resCallback);\n\t\t}\n\t\treturn Tone;\n\t};\n\n\t/**\n\t * The version number\n\t * @type {String}\n\t * @static\n\t */\n\tTone.version = version;\n\n\treturn Tone;\n});\n","define([\"../core/Tone\", \"../type/Time\"], function(Tone){\n\n\t/**\n\t *  @class Tone.TransportTime is a the time along the Transport's\n\t *         timeline. It is similar to Tone.Time, but instead of evaluating\n\t *         against the AudioContext's clock, it is evaluated against\n\t *         the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n\t *  @constructor\n\t *  @param  {Time}  val    The time value as a number or string\n\t *  @param  {String=}  units  Unit values\n\t *  @extends {Tone.Time}\n\t */\n\tTone.TransportTime = function(val, units){\n\t\tif (this instanceof Tone.TransportTime){\n\n\t\t\tTone.Time.call(this, val, units);\n\n\t\t} else {\n\t\t\treturn new Tone.TransportTime(val, units);\n\t\t}\n\t};\n\n\tTone.extend(Tone.TransportTime, Tone.Time);\n\n\t/**\n\t * Return the current time in whichever context is relevant\n\t * @type {Number}\n\t * @private\n\t */\n\tTone.TransportTime.prototype._now = function(){\n\t\treturn Tone.Transport.seconds;\n\t};\n\n\treturn Tone.TransportTime;\n});\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","define([\"../core/Tone\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class A Timeline class for scheduling and maintaining state\n\t *         along a timeline. All events must have a \"time\" property.\n\t *         Internally, events are stored in time order for fast\n\t *         retrieval.\n\t *  @extends {Tone}\n\t *  @param {Positive} [memory=Infinity] The number of previous events that are retained.\n\t */\n\tTone.Timeline = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"memory\"], Tone.Timeline);\n\t\tTone.call(this);\n\n\t\t/**\n\t\t *  The array of scheduled timeline events\n\t\t *  @type  {Array}\n\t\t *  @private\n\t\t */\n\t\tthis._timeline = [];\n\n\t\t/**\n\t\t *  The memory of the timeline, i.e.\n\t\t *  how many events in the past it will retain\n\t\t *  @type {Positive}\n\t\t */\n\t\tthis.memory = options.memory;\n\t};\n\n\tTone.extend(Tone.Timeline);\n\n\t/**\n\t *  the default parameters\n\t *  @static\n\t *  @const\n\t */\n\tTone.Timeline.defaults = {\n\t\t\"memory\" : Infinity\n\t};\n\n\t/**\n\t *  The number of items in the timeline.\n\t *  @type {Number}\n\t *  @memberOf Tone.Timeline#\n\t *  @name length\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.Timeline.prototype, \"length\", {\n\t\tget : function(){\n\t\t\treturn this._timeline.length;\n\t\t}\n\t});\n\n\t/**\n\t *  Insert an event object onto the timeline. Events must have a \"time\" attribute.\n\t *  @param  {Object}  event  The event object to insert into the\n\t *                           timeline.\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.add = function(event){\n\t\t//the event needs to have a time attribute\n\t\tif (Tone.isUndef(event.time)){\n\t\t\tthrow new Error(\"Tone.Timeline: events must have a time attribute\");\n\t\t}\n\t\tevent.time = event.time.valueOf();\n\t\tvar index = this._search(event.time);\n\t\tthis._timeline.splice(index + 1, 0, event);\n\t\t//if the length is more than the memory, remove the previous ones\n\t\tif (this.length > this.memory){\n\t\t\tvar diff = this.length - this.memory;\n\t\t\tthis._timeline.splice(0, diff);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Remove an event from the timeline.\n\t *  @param  {Object}  event  The event object to remove from the list.\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.remove = function(event){\n\t\tvar index = this._timeline.indexOf(event);\n\t\tif (index !== -1){\n\t\t\tthis._timeline.splice(index, 1);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Get the nearest event whose time is less than or equal to the given time.\n\t *  @param  {Number}  time  The time to query.\n\t *  @param  {String}  comparator Which value in the object to compare\n\t *  @returns {Object} The event object set after that time.\n\t */\n\tTone.Timeline.prototype.get = function(time, comparator){\n\t\tcomparator = Tone.defaultArg(comparator, \"time\");\n\t\tvar index = this._search(time, comparator);\n\t\tif (index !== -1){\n\t\t\treturn this._timeline[index];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\t/**\n\t *  Return the first event in the timeline without removing it\n\t *  @returns {Object} The first event object\n\t */\n\tTone.Timeline.prototype.peek = function(){\n\t\treturn this._timeline[0];\n\t};\n\n\t/**\n\t *  Return the first event in the timeline and remove it\n\t *  @returns {Object} The first event object\n\t */\n\tTone.Timeline.prototype.shift = function(){\n\t\treturn this._timeline.shift();\n\t};\n\n\t/**\n\t *  Get the event which is scheduled after the given time.\n\t *  @param  {Number}  time  The time to query.\n\t *  @param  {String}  comparator Which value in the object to compare\n\t *  @returns {Object} The event object after the given time\n\t */\n\tTone.Timeline.prototype.getAfter = function(time, comparator){\n\t\tcomparator = Tone.defaultArg(comparator, \"time\");\n\t\tvar index = this._search(time, comparator);\n\t\tif (index + 1 < this._timeline.length){\n\t\t\treturn this._timeline[index + 1];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\t/**\n\t *  Get the event before the event at the given time.\n\t *  @param  {Number}  time  The time to query.\n\t *  @param  {String}  comparator Which value in the object to compare\n\t *  @returns {Object} The event object before the given time\n\t */\n\tTone.Timeline.prototype.getBefore = function(time, comparator){\n\t\tcomparator = Tone.defaultArg(comparator, \"time\");\n\t\tvar len = this._timeline.length;\n\t\t//if it's after the last item, return the last item\n\t\tif (len > 0 && this._timeline[len - 1][comparator] < time){\n\t\t\treturn this._timeline[len - 1];\n\t\t}\n\t\tvar index = this._search(time, comparator);\n\t\tif (index - 1 >= 0){\n\t\t\treturn this._timeline[index - 1];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\t/**\n\t *  Cancel events after the given time\n\t *  @param  {Number}  time  The time to query.\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.cancel = function(after){\n\t\tif (this._timeline.length > 1){\n\t\t\tvar index = this._search(after);\n\t\t\tif (index >= 0){\n\t\t\t\tif (this._timeline[index].time === after){\n\t\t\t\t\t//get the first item with that time\n\t\t\t\t\tfor (var i = index; i >= 0; i--){\n\t\t\t\t\t\tif (this._timeline[i].time === after){\n\t\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._timeline = this._timeline.slice(0, index);\n\t\t\t\t} else {\n\t\t\t\t\tthis._timeline = this._timeline.slice(0, index + 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._timeline = [];\n\t\t\t}\n\t\t} else if (this._timeline.length === 1){\n\t\t\t//the first item's time\n\t\t\tif (this._timeline[0].time >= after){\n\t\t\t\tthis._timeline = [];\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Cancel events before or equal to the given time.\n\t *  @param  {Number}  time  The time to cancel before.\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.cancelBefore = function(time){\n\t\tvar index = this._search(time);\n\t\tif (index >= 0){\n\t\t\tthis._timeline = this._timeline.slice(index + 1);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns the previous event if there is one. null otherwise\n\t * @param  {Object} event The event to find the previous one of\n\t * @return {Object}       The event right before the given event\n\t */\n\tTone.Timeline.prototype.previousEvent = function(event){\n\t\tvar index = this._timeline.indexOf(event);\n\t\tif (index > 0){\n\t\t\treturn this._timeline[index-1];\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\t/**\n\t *  Does a binary search on the timeline array and returns the\n\t *  nearest event index whose time is after or equal to the given time.\n\t *  If a time is searched before the first index in the timeline, -1 is returned.\n\t *  If the time is after the end, the index of the last item is returned.\n\t *  @param  {Number}  time\n\t *  @param  {String}  comparator Which value in the object to compare\n\t *  @return  {Number} the index in the timeline array\n\t *  @private\n\t */\n\tTone.Timeline.prototype._search = function(time, comparator){\n\t\tif (this._timeline.length === 0){\n\t\t\treturn -1;\n\t\t}\n\t\tcomparator = Tone.defaultArg(comparator, \"time\");\n\t\tvar beginning = 0;\n\t\tvar len = this._timeline.length;\n\t\tvar end = len;\n\t\tif (len > 0 && this._timeline[len - 1][comparator] <= time){\n\t\t\treturn len - 1;\n\t\t}\n\t\twhile (beginning < end){\n\t\t\t// calculate the midpoint for roughly equal partition\n\t\t\tvar midPoint = Math.floor(beginning + (end - beginning) / 2);\n\t\t\tvar event = this._timeline[midPoint];\n\t\t\tvar nextEvent = this._timeline[midPoint + 1];\n\t\t\tif (event[comparator] === time){\n\t\t\t\t//choose the last one that has the same time\n\t\t\t\tfor (var i = midPoint; i < this._timeline.length; i++){\n\t\t\t\t\tvar testEvent = this._timeline[i];\n\t\t\t\t\tif (testEvent[comparator] === time){\n\t\t\t\t\t\tmidPoint = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn midPoint;\n\t\t\t} else if (event[comparator] < time && nextEvent[comparator] > time){\n\t\t\t\treturn midPoint;\n\t\t\t} else if (event[comparator] > time){\n\t\t\t\t//search lower\n\t\t\t\tend = midPoint;\n\t\t\t} else {\n\t\t\t\t//search upper\n\t\t\t\tbeginning = midPoint + 1;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t};\n\n\t/**\n\t *  Internal iterator. Applies extra safety checks for\n\t *  removing items from the array.\n\t *  @param  {Function}  callback\n\t *  @param  {Number=}    lowerBound\n\t *  @param  {Number=}    upperBound\n\t *  @private\n\t */\n\tTone.Timeline.prototype._iterate = function(callback, lowerBound, upperBound){\n\t\tlowerBound = Tone.defaultArg(lowerBound, 0);\n\t\tupperBound = Tone.defaultArg(upperBound, this._timeline.length-1);\n\t\tthis._timeline.slice(lowerBound, upperBound+1).forEach(function(event){\n\t\t\tcallback.call(this, event);\n\t\t}.bind(this));\n\t};\n\n\t/**\n\t *  Iterate over everything in the array\n\t *  @param  {Function}  callback The callback to invoke with every item\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.forEach = function(callback){\n\t\tthis._iterate(callback);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Iterate over everything in the array at or before the given time.\n\t *  @param  {Number}  time The time to check if items are before\n\t *  @param  {Function}  callback The callback to invoke with every item\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.forEachBefore = function(time, callback){\n\t\t//iterate over the items in reverse so that removing an item doesn't break things\n\t\tvar upperBound = this._search(time);\n\t\tif (upperBound !== -1){\n\t\t\tthis._iterate(callback, 0, upperBound);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Iterate over everything in the array after the given time.\n\t *  @param  {Number}  time The time to check if items are before\n\t *  @param  {Function}  callback The callback to invoke with every item\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.forEachAfter = function(time, callback){\n\t\t//iterate over the items in reverse so that removing an item doesn't break things\n\t\tvar lowerBound = this._search(time);\n\t\tthis._iterate(callback, lowerBound + 1);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Iterate over everything in the array between the startTime and endTime. \n\t *  The timerange is inclusive of the startTime, but exclusive of the endTime. \n\t *  range = [startTime, endTime). \n\t *  @param  {Number}  startTime The time to check if items are before\n\t *  @param  {Number}  endTime The end of the test interval. \n\t *  @param  {Function}  callback The callback to invoke with every item\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.forEachBetween = function(startTime, endTime, callback){\n\t\tvar lowerBound = this._search(startTime);\n\t\tvar upperBound = this._search(endTime);\n\t\tif (lowerBound !== -1 && upperBound !== -1){\n\t\t\tif (this._timeline[lowerBound].time !== startTime){\n\t\t\t\tlowerBound += 1;\n\t\t\t}\n\t\t\t//exclusive of the end time\n\t\t\tif (this._timeline[upperBound].time === endTime){\n\t\t\t\tupperBound -= 1;\n\t\t\t}\n\t\t\tthis._iterate(callback, lowerBound, upperBound);\n\t\t} else if (lowerBound === -1){\n\t\t\tthis._iterate(callback, 0, upperBound);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Iterate over everything in the array at or after the given time. Similar to\n\t *  forEachAfter, but includes the item(s) at the given time.\n\t *  @param  {Number}  time The time to check if items are before\n\t *  @param  {Function}  callback The callback to invoke with every item\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.forEachFrom = function(time, callback){\n\t\t//iterate over the items in reverse so that removing an item doesn't break things\n\t\tvar lowerBound = this._search(time);\n\t\t//work backwards until the event time is less than time\n\t\twhile (lowerBound >= 0 && this._timeline[lowerBound].time >= time){\n\t\t\tlowerBound--;\n\t\t}\n\t\tthis._iterate(callback, lowerBound + 1);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Iterate over everything in the array at the given time\n\t *  @param  {Number}  time The time to check if items are before\n\t *  @param  {Function}  callback The callback to invoke with every item\n\t *  @returns {Tone.Timeline} this\n\t */\n\tTone.Timeline.prototype.forEachAtTime = function(time, callback){\n\t\t//iterate over the items in reverse so that removing an item doesn't break things\n\t\tvar upperBound = this._search(time);\n\t\tif (upperBound !== -1){\n\t\t\tthis._iterate(function(event){\n\t\t\t\tif (event.time === time){\n\t\t\t\t\tcallback.call(this, event);\n\t\t\t\t}\n\t\t\t}, 0, upperBound);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Clean up.\n\t *  @return  {Tone.Timeline}  this\n\t */\n\tTone.Timeline.prototype.dispose = function(){\n\t\tTone.prototype.dispose.call(this);\n\t\tthis._timeline = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Timeline;\n});\n","(function(t,e){\"object\"===typeof exports&&\"object\"===typeof module?module.exports=e(require(\"vue\")):\"function\"===typeof define&&define.amd?define([],e):\"object\"===typeof exports?exports[\"vue-slider-component\"]=e(require(\"vue\")):t[\"vue-slider-component\"]=e(t[\"Vue\"])})(\"undefined\"!==typeof self?self:this,function(t){return function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){\"undefined\"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&\"object\"===typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t[\"default\"]}:function(){return t};return r.d(e,\"a\",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p=\"\",r(r.s=\"fb15\")}({2350:function(t,e){function r(t,e){var r=t[1]||\"\",o=t[3];if(!o)return r;if(e&&\"function\"===typeof btoa){var i=n(o),s=o.sources.map(function(t){return\"/*# sourceURL=\"+o.sourceRoot+t+\" */\"});return[r].concat(s).concat([i]).join(\"\\n\")}return[r].join(\"\\n\")}function n(t){var e=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r=\"sourceMappingURL=data:application/json;charset=utf-8;base64,\"+e;return\"/*# \"+r+\" */\"}t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var n=r(e,t);return e[2]?\"@media \"+e[2]+\"{\"+n+\"}\":n}).join(\"\")},e.i=function(t,r){\"string\"===typeof t&&(t=[[null,t,\"\"]]);for(var n={},o=0;o<this.length;o++){var i=this[o][0];\"number\"===typeof i&&(n[i]=!0)}for(o=0;o<t.length;o++){var s=t[o];\"number\"===typeof s[0]&&n[s[0]]||(r&&!s[2]?s[2]=r:r&&(s[2]=\"(\"+s[2]+\") and (\"+r+\")\"),e.push(s))}},e}},\"499e\":function(t,e,r){\"use strict\";function n(t,e){for(var r=[],n={},o=0;o<e.length;o++){var i=e[o],s=i[0],a=i[1],u=i[2],l=i[3],c={id:t+\":\"+o,css:a,media:u,sourceMap:l};n[s]?n[s].parts.push(c):r.push(n[s]={id:s,parts:[c]})}return r}r.r(e),r.d(e,\"default\",function(){return h});var o=\"undefined\"!==typeof document;if(\"undefined\"!==typeof DEBUG&&DEBUG&&!o)throw new Error(\"vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\");var i={},s=o&&(document.head||document.getElementsByTagName(\"head\")[0]),a=null,u=0,l=!1,c=function(){},d=null,f=\"data-vue-ssr-id\",p=\"undefined\"!==typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());function h(t,e,r,o){l=r,d=o||{};var s=n(t,e);return y(s),function(e){for(var r=[],o=0;o<s.length;o++){var a=s[o],u=i[a.id];u.refs--,r.push(u)}e?(s=n(t,e),y(s)):s=[];for(o=0;o<r.length;o++){u=r[o];if(0===u.refs){for(var l=0;l<u.parts.length;l++)u.parts[l]();delete i[u.id]}}}}function y(t){for(var e=0;e<t.length;e++){var r=t[e],n=i[r.id];if(n){n.refs++;for(var o=0;o<n.parts.length;o++)n.parts[o](r.parts[o]);for(;o<r.parts.length;o++)n.parts.push(m(r.parts[o]));n.parts.length>r.parts.length&&(n.parts.length=r.parts.length)}else{var s=[];for(o=0;o<r.parts.length;o++)s.push(m(r.parts[o]));i[r.id]={id:r.id,refs:1,parts:s}}}}function v(){var t=document.createElement(\"style\");return t.type=\"text/css\",s.appendChild(t),t}function m(t){var e,r,n=document.querySelector(\"style[\"+f+'~=\"'+t.id+'\"]');if(n){if(l)return c;n.parentNode.removeChild(n)}if(p){var o=u++;n=a||(a=v()),e=g.bind(null,n,o,!1),r=g.bind(null,n,o,!0)}else n=v(),e=k.bind(null,n),r=function(){n.parentNode.removeChild(n)};return e(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap)return;e(t=n)}else r()}}var b=function(){var t=[];return function(e,r){return t[e]=r,t.filter(Boolean).join(\"\\n\")}}();function g(t,e,r,n){var o=r?\"\":n.css;if(t.styleSheet)t.styleSheet.cssText=b(e,o);else{var i=document.createTextNode(o),s=t.childNodes;s[e]&&t.removeChild(s[e]),s.length?t.insertBefore(i,s[e]):t.appendChild(i)}}function k(t,e){var r=e.css,n=e.media,o=e.sourceMap;if(n&&t.setAttribute(\"media\",n),d.ssrId&&t.setAttribute(f,e.id),o&&(r+=\"\\n/*# sourceURL=\"+o.sources[0]+\" */\",r+=\"\\n/*# sourceMappingURL=data:application/json;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+\" */\"),t.styleSheet)t.styleSheet.cssText=r;else{while(t.firstChild)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}},\"4abb\":function(t,e,r){var n=r(\"df80\");\"string\"===typeof n&&(n=[[t.i,n,\"\"]]),n.locals&&(t.exports=n.locals);var o=r(\"499e\").default;o(\"3e7284f8\",n,!0,{sourceMap:!1,shadowMode:!1})},\"4ed8\":function(t,e,r){var n=r(\"ae61\");\"string\"===typeof n&&(n=[[t.i,n,\"\"]]),n.locals&&(t.exports=n.locals);var o=r(\"499e\").default;o(\"57c2b2f0\",n,!0,{sourceMap:!1,shadowMode:!1})},\"556c\":function(t,e,r){var n=r(\"d5ac\");\"string\"===typeof n&&(n=[[t.i,n,\"\"]]),n.locals&&(t.exports=n.locals);var o=r(\"499e\").default;o(\"f3ffc7f8\",n,!0,{sourceMap:!1,shadowMode:!1})},\"65d9\":function(t,e,r){\"use strict\";\n/**\n  * vue-class-component v7.0.1\n  * (c) 2015-present Evan You\n  * @license MIT\n  */function n(t){return t&&\"object\"===typeof t&&\"default\"in t?t[\"default\"]:t}Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(r(\"8bbf\")),i=\"undefined\"!==typeof Reflect&&Reflect.defineMetadata&&Reflect.getOwnMetadataKeys;function s(t,e){a(t,e),Object.getOwnPropertyNames(e.prototype).forEach(function(r){a(t.prototype,e.prototype,r)}),Object.getOwnPropertyNames(e).forEach(function(r){a(t,e,r)})}function a(t,e,r){var n=r?Reflect.getOwnMetadataKeys(e,r):Reflect.getOwnMetadataKeys(e);n.forEach(function(n){var o=r?Reflect.getOwnMetadata(n,e,r):Reflect.getOwnMetadata(n,e);r?Reflect.defineMetadata(n,o,t,r):Reflect.defineMetadata(n,o,t)})}var u={__proto__:[]},l=u instanceof Array;function c(t){return function(e,r,n){var o=\"function\"===typeof e?e:e.constructor;o.__decorators__||(o.__decorators__=[]),\"number\"!==typeof n&&(n=void 0),o.__decorators__.push(function(e){return t(e,r,n)})}}function d(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return o.extend({mixins:t})}function f(t){var e=typeof t;return null==t||\"object\"!==e&&\"function\"!==e}function p(t,e){var r=e.prototype._init;e.prototype._init=function(){var e=this,r=Object.getOwnPropertyNames(t);if(t.$options.props)for(var n in t.$options.props)t.hasOwnProperty(n)||r.push(n);r.forEach(function(r){\"_\"!==r.charAt(0)&&Object.defineProperty(e,r,{get:function(){return t[r]},set:function(e){t[r]=e},configurable:!0})})};var n=new e;e.prototype._init=r;var o={};return Object.keys(n).forEach(function(t){void 0!==n[t]&&(o[t]=n[t])}),o}var h=[\"data\",\"beforeCreate\",\"created\",\"beforeMount\",\"mounted\",\"beforeDestroy\",\"destroyed\",\"beforeUpdate\",\"updated\",\"activated\",\"deactivated\",\"render\",\"errorCaptured\",\"serverPrefetch\"];function y(t,e){void 0===e&&(e={}),e.name=e.name||t._componentTag||t.name;var r=t.prototype;Object.getOwnPropertyNames(r).forEach(function(t){if(\"constructor\"!==t)if(h.indexOf(t)>-1)e[t]=r[t];else{var n=Object.getOwnPropertyDescriptor(r,t);void 0!==n.value?\"function\"===typeof n.value?(e.methods||(e.methods={}))[t]=n.value:(e.mixins||(e.mixins=[])).push({data:function(){var e;return e={},e[t]=n.value,e}}):(n.get||n.set)&&((e.computed||(e.computed={}))[t]={get:n.get,set:n.set})}}),(e.mixins||(e.mixins=[])).push({data:function(){return p(this,t)}});var n=t.__decorators__;n&&(n.forEach(function(t){return t(e)}),delete t.__decorators__);var a=Object.getPrototypeOf(t.prototype),u=a instanceof o?a.constructor:o,l=u.extend(e);return v(l,t,u),i&&s(l,t),l}function v(t,e,r){Object.getOwnPropertyNames(e).forEach(function(n){if(\"prototype\"!==n){var o=Object.getOwnPropertyDescriptor(t,n);if(!o||o.configurable){var i=Object.getOwnPropertyDescriptor(e,n);if(!l){if(\"cid\"===n)return;var s=Object.getOwnPropertyDescriptor(r,n);if(!f(i.value)&&s&&s.value===i.value)return}0,Object.defineProperty(t,n,i)}}})}function m(t){return\"function\"===typeof t?y(t):function(e){return y(e,t)}}m.registerHooks=function(t){h.push.apply(h,t)},e.default=m,e.createDecorator=c,e.mixins=d},\"8bbf\":function(e,r){e.exports=t},ae61:function(t,e,r){e=t.exports=r(\"2350\")(!1),e.push([t.i,\".vue-slider-dot{position:absolute;will-change:transform;-webkit-transition:all 0s;transition:all 0s;z-index:5}.vue-slider-dot-tooltip{position:absolute;visibility:hidden}.vue-slider-dot-tooltip-show{visibility:visible}.vue-slider-dot-tooltip-top{top:-10px;left:50%;-webkit-transform:translate(-50%,-100%);transform:translate(-50%,-100%)}.vue-slider-dot-tooltip-bottom{bottom:-10px;left:50%;-webkit-transform:translate(-50%,100%);transform:translate(-50%,100%)}.vue-slider-dot-tooltip-left{left:-10px;top:50%;-webkit-transform:translate(-100%,-50%);transform:translate(-100%,-50%)}.vue-slider-dot-tooltip-right{right:-10px;top:50%;-webkit-transform:translate(100%,-50%);transform:translate(100%,-50%)}\",\"\"])},d5ac:function(t,e,r){e=t.exports=r(\"2350\")(!1),e.push([t.i,\".vue-slider-marks{position:relative;width:100%;height:100%}.vue-slider-mark{position:absolute;z-index:1}.vue-slider-ltr .vue-slider-mark,.vue-slider-rtl .vue-slider-mark{width:0;height:100%;top:50%}.vue-slider-ltr .vue-slider-mark-step,.vue-slider-rtl .vue-slider-mark-step{top:0}.vue-slider-ltr .vue-slider-mark-label,.vue-slider-rtl .vue-slider-mark-label{top:100%;margin-top:10px}.vue-slider-ltr .vue-slider-mark{-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.vue-slider-ltr .vue-slider-mark-step{left:0}.vue-slider-ltr .vue-slider-mark-label{left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.vue-slider-rtl .vue-slider-mark{-webkit-transform:translate(50%,-50%);transform:translate(50%,-50%)}.vue-slider-rtl .vue-slider-mark-step{right:0}.vue-slider-rtl .vue-slider-mark-label{right:50%;-webkit-transform:translateX(50%);transform:translateX(50%)}.vue-slider-btt .vue-slider-mark,.vue-slider-ttb .vue-slider-mark{width:100%;height:0;left:50%}.vue-slider-btt .vue-slider-mark-step,.vue-slider-ttb .vue-slider-mark-step{left:0}.vue-slider-btt .vue-slider-mark-label,.vue-slider-ttb .vue-slider-mark-label{left:100%;margin-left:10px}.vue-slider-btt .vue-slider-mark{-webkit-transform:translate(-50%,50%);transform:translate(-50%,50%)}.vue-slider-btt .vue-slider-mark-step{top:0}.vue-slider-btt .vue-slider-mark-label{top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.vue-slider-ttb .vue-slider-mark{-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.vue-slider-ttb .vue-slider-mark-step{bottom:0}.vue-slider-ttb .vue-slider-mark-label{bottom:50%;-webkit-transform:translateY(50%);transform:translateY(50%)}.vue-slider-mark-label,.vue-slider-mark-step{position:absolute}\",\"\"])},df80:function(t,e,r){e=t.exports=r(\"2350\")(!1),e.push([t.i,\".vue-slider{position:relative;-webkit-box-sizing:content-box;box-sizing:content-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:block;-ms-touch-action:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.vue-slider-disabled{pointer-events:none}.vue-slider-rail{position:relative;width:100%;height:100%;-webkit-transition-property:width,height,left,right,top,bottom;transition-property:width,height,left,right,top,bottom}.vue-slider-process{position:absolute;z-index:1}.vue-slider-sr-only{clip:rect(1px,1px,1px,1px);height:1px;width:1px;overflow:hidden;position:absolute!important}\",\"\"])},fb15:function(t,e,r){\"use strict\";var n;(r.r(e),\"undefined\"!==typeof window)&&((n=window.document.currentScript)&&(n=n.src.match(/(.+\\/)[^\\/]+\\.js(\\?.*)?$/))&&(r.p=n[1]));function o(t,e,r,n){var o,i=arguments.length,s=i<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,r):n;if(\"object\"===typeof Reflect&&\"function\"===typeof Reflect.decorate)s=Reflect.decorate(t,e,r,n);else for(var a=t.length-1;a>=0;a--)(o=t[a])&&(s=(i<3?o(s):i>3?o(e,r,s):o(e,r))||s);return i>3&&s&&Object.defineProperty(e,r,s),s}var i=r(\"8bbf\"),s=r.n(i),a=r(\"65d9\"),u=r.n(a);function l(t,e){return void 0===e&&(e={}),Object(a[\"createDecorator\"])(function(r,n){(r.props||(r.props={}))[n]=e,r.model={prop:n,event:t||n}})}function c(t){return void 0===t&&(t={}),Object(a[\"createDecorator\"])(function(e,r){(e.props||(e.props={}))[r]=t})}function d(t,e){void 0===e&&(e={});var r=e.deep,n=void 0!==r&&r,o=e.immediate,i=void 0!==o&&o;return Object(a[\"createDecorator\"])(function(e,r){\"object\"!==typeof e.watch&&(e.watch=Object.create(null));var o=e.watch;\"object\"!==typeof o[t]||Array.isArray(o[t])?\"undefined\"===typeof o[t]&&(o[t]=[]):o[t]=[o[t]],o[t].push({handler:r,deep:n,immediate:i})})}r(\"4ed8\");function f(t){return f=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},f(t)}function p(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function h(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function y(t,e,r){return e&&h(t.prototype,e),r&&h(t,r),t}function v(t,e){return!e||\"object\"!==f(e)&&\"function\"!==typeof e?m(t):e}function m(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}function b(t){return b=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},b(t)}function g(t,e){if(\"function\"!==typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&k(t,e)}function k(t,e){return k=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},k(t,e)}var x=function(t){function e(){return p(this,e),v(this,b(e).apply(this,arguments))}return g(e,t),y(e,[{key:\"dragStart\",value:function(t){if(this.disabled)return!1;this.$emit(\"drag-start\")}},{key:\"render\",value:function(){var t=arguments[0];return t(\"div\",{ref:\"dot\",class:this.dotClasses,on:{mousedown:this.dragStart,touchstart:this.dragStart}},[this.$slots.dot||t(\"div\",{class:this.handleClasses,style:this.dotStyle}),\"none\"!==this.tooltip?t(\"div\",{class:this.tooltipClasses},[this.$slots.tooltip||t(\"div\",{class:this.tooltipInnerClasses,style:this.tooltipStyle},[t(\"span\",{class:\"vue-slider-dot-tooltip-text\"},[this.tooltipValue])])]):null])}},{key:\"dotClasses\",get:function(){return[\"vue-slider-dot\",{\"vue-slider-dot-disabled\":this.disabled,\"vue-slider-dot-focus\":this.focus}]}},{key:\"handleClasses\",get:function(){return[\"vue-slider-dot-handle\",{\"vue-slider-dot-handle-disabled\":this.disabled,\"vue-slider-dot-handle-focus\":this.focus}]}},{key:\"tooltipClasses\",get:function(){return[\"vue-slider-dot-tooltip\",[\"vue-slider-dot-tooltip-\".concat(this.tooltipPlacement)],{\"vue-slider-dot-tooltip-show\":this.showTooltip}]}},{key:\"tooltipInnerClasses\",get:function(){return[\"vue-slider-dot-tooltip-inner\",[\"vue-slider-dot-tooltip-inner-\".concat(this.tooltipPlacement)],{\"vue-slider-dot-tooltip-inner-disabled\":this.disabled,\"vue-slider-dot-tooltip-inner-focus\":this.focus}]}},{key:\"showTooltip\",get:function(){switch(this.tooltip){case\"always\":return!0;case\"none\":return!1;case\"focus\":return!!this.focus;default:return!1}}},{key:\"tooltipValue\",get:function(){return this.tooltipFormatter?\"string\"===typeof this.tooltipFormatter?this.tooltipFormatter.replace(/\\{value\\}/,String(this.value)):this.tooltipFormatter(this.value):this.value}}]),e}(s.a);o([c({default:0})],x.prototype,\"value\",void 0),o([c()],x.prototype,\"tooltip\",void 0),o([c()],x.prototype,\"dotStyle\",void 0),o([c()],x.prototype,\"tooltipStyle\",void 0),o([c({type:String,validator:function(t){return[\"top\",\"right\",\"bottom\",\"left\"].indexOf(t)>-1},required:!0})],x.prototype,\"tooltipPlacement\",void 0),o([c({type:[String,Function]})],x.prototype,\"tooltipFormatter\",void 0),o([c({type:Boolean,default:!1})],x.prototype,\"focus\",void 0),o([c({default:!1})],x.prototype,\"disabled\",void 0),x=o([u.a],x);var w=x;r(\"556c\");function O(t){return O=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},O(t)}function P(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function S(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function E(t,e,r){return e&&S(t.prototype,e),r&&S(t,r),t}function R(t,e){return!e||\"object\"!==O(e)&&\"function\"!==typeof e?D(t):e}function D(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}function A(t){return A=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},A(t)}function j(t,e){if(\"function\"!==typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&V(t,e)}function V(t,e){return V=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},V(t,e)}var _=function(t){function e(){return P(this,e),R(this,A(e).apply(this,arguments))}return j(e,t),E(e,[{key:\"labelClickHandle\",value:function(t){t.stopPropagation(),this.$emit(\"pressLabel\",this.mark.pos)}},{key:\"render\",value:function(){var t=arguments[0],e=this.mark;return t(\"div\",{class:this.marksClasses},[this.$slots.step||t(\"div\",{class:this.stepClasses,style:[this.stepStyle,e.style,e.active?this.stepActiveStyle:null,e.active?e.activeStyle:null]}),this.hideLabel?null:this.$slots.label||t(\"div\",{class:this.labelClasses,style:[this.labelStyle,e.labelStyle,e.active?this.labelActiveStyle:null,e.active?e.labelActiveStyle:null],on:{click:this.labelClickHandle}},[e.label])])}},{key:\"marksClasses\",get:function(){return[\"vue-slider-mark\",{\"vue-slider-mark-active\":this.mark.active}]}},{key:\"stepClasses\",get:function(){return[\"vue-slider-mark-step\",{\"vue-slider-mark-step-active\":this.mark.active}]}},{key:\"labelClasses\",get:function(){return[\"vue-slider-mark-label\",{\"vue-slider-mark-label-active\":this.mark.active}]}}]),e}(s.a);o([c({required:!0})],_.prototype,\"mark\",void 0),o([c(Boolean)],_.prototype,\"hideLabel\",void 0),o([c()],_.prototype,\"stepStyle\",void 0),o([c()],_.prototype,\"stepActiveStyle\",void 0),o([c()],_.prototype,\"labelStyle\",void 0),o([c()],_.prototype,\"labelActiveStyle\",void 0),_=o([u.a],_);var M,C=_,N=function(t){return\"number\"===typeof t?\"\".concat(t,\"px\"):t},T=function(t){var e=document.documentElement,r=document.body,n=t.getBoundingClientRect(),o={y:n.top+(window.pageYOffset||e.scrollTop)-(e.clientTop||r.clientTop||0),x:n.left+(window.pageXOffset||e.scrollLeft)-(e.clientLeft||r.clientLeft||0)};return o},B=function(t,e,r){var n=\"targetTouches\"in t?t.targetTouches[0]:t,o=T(e),i={x:n.pageX-o.x,y:n.pageY-o.y};return{x:r?e.offsetWidth-i.x:i.x,y:r?e.offsetHeight-i.y:i.y}};(function(t){t[t[\"PAGE_UP\"]=33]=\"PAGE_UP\",t[t[\"PAGE_DOWN\"]=34]=\"PAGE_DOWN\",t[t[\"END\"]=35]=\"END\",t[t[\"HOME\"]=36]=\"HOME\",t[t[\"LEFT\"]=37]=\"LEFT\",t[t[\"UP\"]=38]=\"UP\",t[t[\"RIGHT\"]=39]=\"RIGHT\",t[t[\"DOWN\"]=40]=\"DOWN\"})(M||(M={}));var I=function(t,e){switch(t.keyCode){case M.UP:return function(t){return\"ttb\"===e.direction?t-1:t+1};case M.RIGHT:return function(t){return\"rtl\"===e.direction?t-1:t+1};case M.DOWN:return function(t){return\"ttb\"===e.direction?t+1:t-1};case M.LEFT:return function(t){return\"rtl\"===e.direction?t+1:t-1};case M.END:return function(){return e.max};case M.HOME:return function(){return e.min};case M.PAGE_UP:return function(t){return t+10};case M.PAGE_DOWN:return function(t){return t-10};default:return null}};function L(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function z(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function H(t,e,r){return e&&z(t.prototype,e),r&&z(t,r),t}var U,F,$=function(){function t(e){L(this,t),this.num=e}return H(t,[{key:\"decimal\",value:function(t,e){var r=this.num,n=this.getDecimalLen(r),o=this.getDecimalLen(t),i=0;switch(e){case\"+\":i=this.getExponent(n,o),this.num=(this.safeRoundUp(r,i)+this.safeRoundUp(t,i))/i;break;case\"-\":i=this.getExponent(n,o),this.num=(this.safeRoundUp(r,i)-this.safeRoundUp(t,i))/i;break;case\"*\":this.num=this.safeRoundUp(this.safeRoundUp(r,this.getExponent(n)),this.safeRoundUp(t,this.getExponent(o)))/this.getExponent(n+o);break;case\"/\":i=this.getExponent(n,o),this.num=this.safeRoundUp(r,i)/this.safeRoundUp(t,i);break;case\"%\":i=this.getExponent(n,o),this.num=this.safeRoundUp(r,i)%this.safeRoundUp(t,i)/i;break}return this}},{key:\"plus\",value:function(t){return this.decimal(t,\"+\")}},{key:\"minus\",value:function(t){return this.decimal(t,\"-\")}},{key:\"multiply\",value:function(t){return this.decimal(t,\"*\")}},{key:\"divide\",value:function(t){return this.decimal(t,\"/\")}},{key:\"remainder\",value:function(t){return this.decimal(t,\"%\")}},{key:\"toNumber\",value:function(){return this.num}},{key:\"getDecimalLen\",value:function(t){return(\"\".concat(t).split(\".\")[1]||\"\").length}},{key:\"getExponent\",value:function(t,e){return Math.pow(10,void 0!==e?Math.max(t,e):t)}},{key:\"safeRoundUp\",value:function(t,e){return Math.round(t*e)}}]),t}();function W(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{},n=Object.keys(r);\"function\"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable}))),n.forEach(function(e){nt(t,e,r[e])})}return t}function G(t,e){return Y(t)||K(t,e)||X()}function X(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}function K(t,e){var r=[],n=!0,o=!1,i=void 0;try{for(var s,a=t[Symbol.iterator]();!(n=(s=a.next()).done);n=!0)if(r.push(s.value),e&&r.length===e)break}catch(u){o=!0,i=u}finally{try{n||null==a[\"return\"]||a[\"return\"]()}finally{if(o)throw i}}return r}function Y(t){if(Array.isArray(t))return t}function q(t){return Z(t)||Q(t)||J()}function J(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}function Q(t){if(Symbol.iterator in Object(t)||\"[object Arguments]\"===Object.prototype.toString.call(t))return Array.from(t)}function Z(t){if(Array.isArray(t)){for(var e=0,r=new Array(t.length);e<t.length;e++)r[e]=t[e];return r}}function tt(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function et(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function rt(t,e,r){return e&&et(t.prototype,e),r&&et(t,r),t}function nt(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}(function(t){t[t[\"VALUE\"]=1]=\"VALUE\",t[t[\"INTERVAL\"]=2]=\"INTERVAL\",t[t[\"MIN\"]=3]=\"MIN\",t[t[\"MAX\"]=4]=\"MAX\",t[t[\"ORDER\"]=5]=\"ORDER\"})(F||(F={}));var ot=(U={},nt(U,F.VALUE,'The type of the \"value\" is illegal'),nt(U,F.INTERVAL,'The prop \"interval\" is invalid, \"(max - min)\" cannot be divisible by \"interval\"'),nt(U,F.MIN,'The \"value\" cannot be less than the minimum.'),nt(U,F.MAX,'The \"value\" cannot be greater than the maximum.'),nt(U,F.ORDER,'When \"order\" is false, the parameters \"minRange\", \"maxRange\", \"fixed\", \"enabled\" are invalid.'),U),it=function(){function t(e){tt(this,t),this.dotsPos=[],this.dotsValue=[],this.data=e.data,this.max=e.max,this.min=e.min,this.interval=e.interval,this.order=e.order,this.marks=e.marks,this.included=e.included,this.process=e.process,this.adsorb=e.adsorb,this.dotOptions=e.dotOptions,this.onError=e.onError,this.order?(this.minRange=e.minRange||0,this.maxRange=e.maxRange||0,this.enableCross=e.enableCross,this.fixed=e.fixed):((e.minRange||e.maxRange||!e.enableCross||e.fixed)&&this.emitError(F.ORDER),this.minRange=0,this.maxRange=0,this.enableCross=!0,this.fixed=!1),this.setValue(e.value)}return rt(t,[{key:\"setValue\",value:function(t){this.setDotsValue(Array.isArray(t)?q(t):[t],!0)}},{key:\"setDotsValue\",value:function(t,e){this.dotsValue=t,e&&this.syncDotsPos()}},{key:\"setDotsPos\",value:function(t){var e=this,r=this.order?q(t).sort(function(t,e){return t-e}):t;this.dotsPos=r,this.setDotsValue(r.map(function(t){return e.getValueByPos(t)}),this.adsorb)}},{key:\"getValueByPos\",value:function(t){var e=this.parsePos(t);if(this.included){var r=100;this.markList.forEach(function(n){var o=Math.abs(n.pos-t);o<r&&(r=o,e=n.value)})}return e}},{key:\"syncDotsPos\",value:function(){var t=this;this.dotsPos=this.dotsValue.map(function(e){return t.parseValue(e)})}},{key:\"getRecentDot\",value:function(t){var e=this.dotsPos.map(function(e){return Math.abs(e-t)});return e.indexOf(Math.min.apply(Math,q(e)))}},{key:\"getIndexByValue\",value:function(t){return this.data?this.data.indexOf(t):new $(+t).minus(this.min).divide(this.interval).toNumber()}},{key:\"getValueByIndex\",value:function(t){return t<0?t=0:t>this.total&&(t=this.total),this.data?this.data[t]:new $(t).multiply(this.interval).plus(this.min).toNumber()}},{key:\"setDotPos\",value:function(t,e){t=this.getValidPos(t,e).pos;var r=t-this.dotsPos[e];if(r){var n=new Array(this.dotsPos.length);this.fixed?n=this.getFixedChangePosArr(r,e):this.minRange||this.maxRange?n=this.getLimitRangeChangePosArr(t,r,e):n[e]=r,this.setDotsPos(this.dotsPos.map(function(t,e){return t+(n[e]||0)}))}}},{key:\"getFixedChangePosArr\",value:function(t,e){var r=this;return this.dotsPos.forEach(function(n,o){if(o!==e){var i=r.getValidPos(n+t,o),s=i.pos,a=i.inRange;a||(t=Math.min(Math.abs(s-n),Math.abs(t))*(t<0?-1:1))}}),this.dotsPos.map(function(e){return t})}},{key:\"getLimitRangeChangePosArr\",value:function(t,e,r){var n=this,o=[{index:r,changePos:e}],i=e;return[this.minRange,this.maxRange].forEach(function(s,a){if(!s)return!1;var u=0===a,l=e>0,c=0;c=u?l?1:-1:l?-1:1;var d=function(t,e){var r=Math.abs(t-e);return u?r<n.minRangeDir:r>n.maxRangeDir},f=r+c,p=n.dotsPos[f],h=t;while(n.isPos(p)&&d(p,h)){var y=n.getValidPos(p+i,f),v=y.pos;o.push({index:f,changePos:v-p}),f+=c,h=v,p=n.dotsPos[f]}}),this.dotsPos.map(function(t,e){var r=o.filter(function(t){return t.index===e});return r.length?r[0].changePos:0})}},{key:\"isPos\",value:function(t){return\"number\"===typeof t}},{key:\"getValidPos\",value:function(t,e){var r=this.valuePosRange[e],n=!0;return t<r[0]?(t=r[0],n=!1):t>r[1]&&(t=r[1],n=!1),{pos:t,inRange:n}}},{key:\"parseValue\",value:function(t){if(this.data)t=this.data.indexOf(t);else if(\"number\"===typeof t||\"string\"===typeof t){if(t=+t,t<this.min)return this.emitError(F.MIN),0;if(t>this.max)return this.emitError(F.MAX),0;if(\"number\"!==typeof t||t!==t)return this.emitError(F.VALUE),0;t=new $(t).minus(this.min).divide(this.interval).toNumber()}var e=new $(t).multiply(this.gap).toNumber();return e<0?0:e>100?100:e}},{key:\"parsePos\",value:function(t){var e=Math.round(t/this.gap);return this.getValueByIndex(e)}},{key:\"isActiveByPos\",value:function(t){return this.processArray.some(function(e){var r=G(e,2),n=r[0],o=r[1];return t>=n&&t<=o})}},{key:\"getValues\",value:function(){if(this.data)return this.data;for(var t=[],e=0;e<=this.total;e++)t.push(new $(e).multiply(this.interval).plus(this.min).toNumber());return t}},{key:\"emitError\",value:function(t){this.onError&&this.onError(t,ot[t])}},{key:\"getDotRange\",value:function(t,e,r){if(!this.dotOptions)return r;var n=Array.isArray(this.dotOptions)?this.dotOptions[t]:this.dotOptions;return n&&void 0!==n[e]?this.parseValue(n[e]):r}},{key:\"markList\",get:function(){var t=this;if(!this.marks)return[];var e=function(e,r){var n=t.parseValue(e);return W({pos:n,value:e,label:e,active:t.isActiveByPos(n)},r)};return!0===this.marks?this.getValues().map(function(t){return e(t)}):\"[object Object]\"===Object.prototype.toString.call(this.marks)?Object.keys(this.marks).sort(function(t,e){return+t-+e}).map(function(r){var n=t.marks[r];return e(r,\"string\"!==typeof n?n:{label:n})}):Array.isArray(this.marks)?this.marks.map(function(t){return e(t)}):\"function\"===typeof this.marks?this.getValues().map(function(e){return{value:e,result:t.marks(e)}}).filter(function(t){var e=t.result;return!!e}).map(function(t){var r=t.value,n=t.result;return e(r,n)}):[]}},{key:\"processArray\",get:function(){if(this.process){if(\"function\"===typeof this.process)return this.process(this.dotsPos);if(1===this.dotsPos.length)return[[0,this.dotsPos[0]]];if(this.dotsPos.length>1)return[[Math.min.apply(Math,q(this.dotsPos)),Math.max.apply(Math,q(this.dotsPos))]]}return[]}},{key:\"total\",get:function(){var t=0;return t=this.data?this.data.length-1:new $(this.max).minus(this.min).divide(this.interval).toNumber(),t-Math.floor(t)!==0?(this.emitError(F.INTERVAL),0):t}},{key:\"gap\",get:function(){return 100/this.total}},{key:\"minRangeDir\",get:function(){return this.minRange?this.minRange*this.gap:0}},{key:\"maxRangeDir\",get:function(){return this.maxRange?this.maxRange*this.gap:100}},{key:\"valuePosRange\",get:function(){var t=this,e=this.dotsPos,r=[];return e.forEach(function(n,o){r.push([Math.max(t.minRange?t.minRangeDir*o:0,t.enableCross?0:e[o-1]||0,t.getDotRange(o,\"min\",0)),Math.min(t.minRange?100-t.minRangeDir*(e.length-1-o):100,t.enableCross?100:e[o+1]||100,t.getDotRange(o,\"max\",100))])}),r}},{key:\"dotsIndex\",get:function(){var t=this;return this.dotsValue.map(function(e){return t.getIndexByValue(e)})}}]),t}();function st(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function at(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function ut(t,e,r){return e&&at(t.prototype,e),r&&at(t,r),t}var lt=function(){function t(e){st(this,t),this.states=0,this.map=e}return ut(t,[{key:\"add\",value:function(t){this.states|=t}},{key:\"delete\",value:function(t){this.states&=~t}},{key:\"toggle\",value:function(t){this.has(t)?this.delete(t):this.add(t)}},{key:\"has\",value:function(t){return!!(this.states&t)}}]),t}();r(\"4abb\");function ct(t){return ct=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},ct(t)}function dt(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{},n=Object.keys(r);\"function\"===typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable}))),n.forEach(function(e){vt(t,e,r[e])})}return t}function ft(t,e){return yt(t)||ht(t,e)||pt()}function pt(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}function ht(t,e){var r=[],n=!0,o=!1,i=void 0;try{for(var s,a=t[Symbol.iterator]();!(n=(s=a.next()).done);n=!0)if(r.push(s.value),e&&r.length===e)break}catch(u){o=!0,i=u}finally{try{n||null==a[\"return\"]||a[\"return\"]()}finally{if(o)throw i}}return r}function yt(t){if(Array.isArray(t))return t}function vt(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function mt(t){return kt(t)||gt(t)||bt()}function bt(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}function gt(t){if(Symbol.iterator in Object(t)||\"[object Arguments]\"===Object.prototype.toString.call(t))return Array.from(t)}function kt(t){if(Array.isArray(t)){for(var e=0,r=new Array(t.length);e<t.length;e++)r[e]=t[e];return r}}function xt(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function wt(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function Ot(t,e,r){return e&&wt(t.prototype,e),r&&wt(t,r),t}function Pt(t,e){return!e||\"object\"!==ct(e)&&\"function\"!==typeof e?St(t):e}function St(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}function Et(t){return Et=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},Et(t)}function Rt(t,e){if(\"function\"!==typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Dt(t,e)}function Dt(t,e){return Dt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},Dt(t,e)}var At={None:0,Drag:1,Focus:2},jt=4,Vt=function(t){function e(){var t;return xt(this,e),t=Pt(this,Et(e).apply(this,arguments)),t.states=new lt(At),t.scale=1,t.focusDotIndex=0,t}return Rt(e,t),Ot(e,[{key:\"onValueChanged\",value:function(){!this.states.has(At.Drag)&&this.isNotSync&&this.control.setValue(this.value)}},{key:\"created\",value:function(){this.initControl()}},{key:\"mounted\",value:function(){this.bindEvent()}},{key:\"beforeDestroy\",value:function(){this.unbindEvent()}},{key:\"bindEvent\",value:function(){document.addEventListener(\"touchmove\",this.dragMove,{passive:!1}),document.addEventListener(\"touchend\",this.dragEnd,{passive:!1}),document.addEventListener(\"mousedown\",this.blurHandle),document.addEventListener(\"mousemove\",this.dragMove),document.addEventListener(\"mouseup\",this.dragEnd),document.addEventListener(\"mouseleave\",this.dragEnd),document.addEventListener(\"keydown\",this.keydownHandle)}},{key:\"unbindEvent\",value:function(){document.removeEventListener(\"touchmove\",this.dragMove),document.removeEventListener(\"touchend\",this.dragEnd),document.removeEventListener(\"mousedown\",this.blurHandle),document.removeEventListener(\"mousemove\",this.dragMove),document.removeEventListener(\"mouseup\",this.dragEnd),document.removeEventListener(\"mouseleave\",this.dragEnd),document.removeEventListener(\"keydown\",this.keydownHandle)}},{key:\"setScale\",value:function(){this.scale=new $(Math.floor(this.isHorizontal?this.$el.offsetWidth:this.$el.offsetHeight)).divide(100).toNumber()}},{key:\"initControl\",value:function(){var t=this;this.control=new it({value:this.value,data:this.data,enableCross:this.enableCross,fixed:this.fixed,max:this.max,min:this.min,interval:this.interval,minRange:this.minRange,maxRange:this.maxRange,order:this.order,marks:this.marks,included:this.included,process:this.process,adsorb:this.adsorb,dotOptions:this.dotOptions,onError:this.emitError}),[\"data\",\"enableCross\",\"fixed\",\"max\",\"min\",\"interval\",\"minRange\",\"maxRange\",\"order\",\"marks\",\"process\",\"adsorb\",\"included\",\"dotOptions\"].forEach(function(e){t.$watch(e,function(r){if(\"data\"===e&&Array.isArray(t.control.data)&&Array.isArray(r)&&t.control.data.length===r.length&&r.every(function(e,r){return e===t.control.data[r]}))return!1;t.control[e]=r,[\"data\",\"max\",\"min\",\"interval\"].indexOf(e)>-1&&t.control.syncDotsPos()})})}},{key:\"isDisabledByDotIndex\",value:function(t){return this.dots[t].disabled}},{key:\"syncValueByPos\",value:function(){var t=this.control.dotsValue;this.isDiff(t,Array.isArray(this.value)?this.value:[this.value])&&this.$emit(\"change\",1===t.length?t[0]:mt(t))}},{key:\"isDiff\",value:function(t,e){return t.length!==e.length||t.some(function(t,r){return t!==e[r]})}},{key:\"emitError\",value:function(t,e){this.silent||console.error(\"[VueSlider error]: \".concat(e)),this.$emit(\"error\",t,e)}},{key:\"dragStart\",value:function(t){this.focusDotIndex=t,this.setScale(),this.states.add(At.Drag),this.states.add(At.Focus),this.$emit(\"drag-start\")}},{key:\"dragMove\",value:function(t){if(!this.states.has(At.Drag))return!1;t.preventDefault();var e=this.getPosByEvent(t);this.isCrossDot(e),this.control.setDotPos(e,this.focusDotIndex),this.lazy||this.syncValueByPos();var r=this.control.dotsValue;this.$emit(\"dragging\",1===r.length?r[0]:mt(r))}},{key:\"isCrossDot\",value:function(t){if(this.canSort){var e=this.focusDotIndex,r=t;r>this.dragRange[1]?(r=this.dragRange[1],this.focusDotIndex++):r<this.dragRange[0]&&(r=this.dragRange[0],this.focusDotIndex--),e!==this.focusDotIndex&&this.control.setDotPos(r,e)}}},{key:\"dragEnd\",value:function(){var t=this;if(!this.states.has(At.Drag))return!1;this.lazy&&this.syncValueByPos(),setTimeout(function(){t.included&&t.isNotSync?t.control.setValue(t.value):t.control.syncDotsPos(),t.states.delete(At.Drag),t.useKeyboard||t.states.delete(At.Focus),t.$emit(\"drag-end\")})}},{key:\"blurHandle\",value:function(t){if(!this.states.has(At.Focus)||!this.$refs.container||this.$refs.container.contains(t.target))return!1;this.states.delete(At.Focus)}},{key:\"clickHandle\",value:function(t){if(!this.clickable)return!1;if(!this.states.has(At.Drag)){this.setScale();var e=this.getPosByEvent(t);this.setValueByPos(e)}}},{key:\"focus\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;this.states.add(At.Focus),this.focusDotIndex=t}},{key:\"blur\",value:function(){this.states.delete(At.Focus)}},{key:\"getValue\",value:function(){var t=this.control.dotsValue;return 1===t.length?t[0]:t}},{key:\"getIndex\",value:function(){var t=this.control.dotsIndex;return 1===t.length?t[0]:t}},{key:\"setValue\",value:function(t){this.control.setValue(Array.isArray(t)?mt(t):[t]),this.syncValueByPos()}},{key:\"setIndex\",value:function(t){var e=this,r=Array.isArray(t)?t.map(function(t){return e.control.getValueByIndex(t)}):this.control.getValueByIndex(t);this.setValue(r)}},{key:\"setValueByPos\",value:function(t){var e=this,r=this.control.getRecentDot(t);if(this.isDisabledByDotIndex(r))return!1;this.focusDotIndex=r,this.control.setDotPos(t,r),this.syncValueByPos(),this.useKeyboard&&this.states.add(At.Focus),setTimeout(function(){e.included&&e.isNotSync?e.control.setValue(e.value):e.control.syncDotsPos()})}},{key:\"keydownHandle\",value:function(t){if(!this.useKeyboard||!this.states.has(At.Focus))return!1;var e=I(t,{direction:this.direction,max:this.control.total,min:0});if(e){t.preventDefault();var r=this.control.getIndexByValue(this.control.dotsValue[this.focusDotIndex]),n=e(r),o=this.control.parseValue(this.control.getValueByIndex(n));this.isCrossDot(o),this.control.setDotPos(o,this.focusDotIndex),this.syncValueByPos()}}},{key:\"getPosByEvent\",value:function(t){return B(t,this.$el,this.isReverse)[this.isHorizontal?\"x\":\"y\"]/this.scale}},{key:\"renderSlot\",value:function(t,e,r,n){var o=this.$createElement,i=this.$scopedSlots[t];return i?n?i(e):o(\"template\",{slot:t},[i(e)]):r}},{key:\"render\",value:function(){var t=this,e=arguments[0];return e(\"div\",{ref:\"container\",class:this.containerClasses,style:this.containerStyles,attrs:{\"aria-hidden\":!0},on:{click:this.clickHandle}},[e(\"div\",{class:\"vue-slider-rail\",style:this.railStyle},[this.processArray.map(function(r,n){return t.renderSlot(\"process\",r,e(\"div\",{class:\"vue-slider-process\",key:\"process-\".concat(n),style:r.style}),!0)}),this.marks?e(\"div\",{class:\"vue-slider-marks\"},[this.control.markList.map(function(r,n){var o;return t.renderSlot(\"mark\",r,e(\"vue-slider-mark\",{key:\"mark-\".concat(n),attrs:{mark:r,hideLabel:t.hideLabel,stepStyle:t.stepStyle,stepActiveStyle:t.stepActiveStyle,labelStyle:t.labelStyle,labelActiveStyle:t.labelActiveStyle},style:(o={},vt(o,t.isHorizontal?\"height\":\"width\",\"100%\"),vt(o,t.isHorizontal?\"width\":\"height\",t.tailSize),vt(o,t.mainDirection,\"\".concat(r.pos,\"%\")),o),on:{pressLabel:function(e){return t.setValueByPos(e)}}},[t.renderSlot(\"step\",r,null),t.renderSlot(\"label\",r,null)]),!0)})]):null,this.dots.map(function(r,n){var o;return e(\"vue-slider-dot\",{ref:\"dot-\".concat(n),key:\"dot-\".concat(n),attrs:{value:r.value,disabled:r.disabled,focus:r.focus,\"dot-style\":[r.style,r.disabled?r.disabledStyle:null,r.focus?r.focusStyle:null],tooltip:r.tooltip||t.tooltip,\"tooltip-style\":[t.tooltipStyle,r.tooltipStyle,r.disabled?r.tooltipDisabledStyle:null,r.focus?r.tooltipFocusStyle:null],\"tooltip-formatter\":Array.isArray(t.tooltipFormatter)?t.tooltipFormatter[n]:t.tooltipFormatter,\"tooltip-placement\":t.tooltipDirections[n]},style:[t.dotBaseStyle,(o={},vt(o,t.mainDirection,\"\".concat(r.pos,\"%\")),vt(o,\"transition\",\"\".concat(t.mainDirection,\" \").concat(t.animateTime,\"s\")),o)],on:{\"drag-start\":function(){return t.dragStart(n)}}},[t.renderSlot(\"dot\",r,null),t.renderSlot(\"tooltip\",r,null)])})]),1!==this.dots.length||this.data?null:e(\"input\",{class:\"vue-slider-sr-only\",attrs:{type:\"range\",min:this.min,max:this.max},domProps:{value:this.value}})])}},{key:\"tailSize\",get:function(){return N((this.isHorizontal?this.height:this.width)||jt)}},{key:\"containerClasses\",get:function(){return[\"vue-slider\",[\"vue-slider-\".concat(this.direction)],{\"vue-slider-disabled\":this.disabled}]}},{key:\"containerStyles\",get:function(){var t=Array.isArray(this.dotSize)?this.dotSize:[this.dotSize,this.dotSize],e=ft(t,2),r=e[0],n=e[1],o=this.width?N(this.width):this.isHorizontal?\"auto\":N(jt),i=this.height?N(this.height):this.isHorizontal?N(jt):\"auto\";return{padding:this.contained?\"\".concat(n/2,\"px \").concat(r/2,\"px\"):this.isHorizontal?\"\".concat(n/2,\"px 0\"):\"0 \".concat(r/2,\"px\"),width:o,height:i}}},{key:\"processArray\",get:function(){var t=this;return this.control.processArray.map(function(e){var r,n=ft(e,3),o=n[0],i=n[1],s=n[2];if(o>i){var a=[i,o];o=a[0],i=a[1]}var u=t.isHorizontal?\"width\":\"height\";return{start:o,end:i,style:dt((r={},vt(r,t.isHorizontal?\"height\":\"width\",\"100%\"),vt(r,t.isHorizontal?\"top\":\"left\",0),vt(r,t.mainDirection,\"\".concat(o,\"%\")),vt(r,u,\"\".concat(i-o,\"%\")),vt(r,\"transitionProperty\",\"\".concat(u,\",\").concat(t.mainDirection)),vt(r,\"transitionDuration\",\"\".concat(t.animateTime,\"s\")),r),t.processStyle,s)}})}},{key:\"dotBaseStyle\",get:function(){var t,e=Array.isArray(this.dotSize)?this.dotSize:[this.dotSize,this.dotSize],r=ft(e,2),n=r[0],o=r[1];return t=this.isHorizontal?vt({transform:\"translate(\".concat(this.isReverse?\"50%\":\"-50%\",\", -50%)\"),WebkitTransform:\"translate(\".concat(this.isReverse?\"50%\":\"-50%\",\", -50%)\"),top:\"50%\"},\"ltr\"===this.direction?\"left\":\"right\",\"0\"):vt({transform:\"translate(-50%, \".concat(this.isReverse?\"50%\":\"-50%\",\")\"),WebkitTransform:\"translate(-50%, \".concat(this.isReverse?\"50%\":\"-50%\",\")\"),left:\"50%\"},\"btt\"===this.direction?\"bottom\":\"top\",\"0\"),dt({width:\"\".concat(n,\"px\"),height:\"\".concat(o,\"px\")},t)}},{key:\"mainDirection\",get:function(){switch(this.direction){case\"ltr\":return\"left\";case\"rtl\":return\"right\";case\"btt\":return\"bottom\";case\"ttb\":return\"top\"}}},{key:\"isHorizontal\",get:function(){return\"ltr\"===this.direction||\"rtl\"===this.direction}},{key:\"isReverse\",get:function(){return\"rtl\"===this.direction||\"btt\"===this.direction}},{key:\"tooltipDirections\",get:function(){var t=this.tooltipPlacement||(this.isHorizontal?\"top\":\"left\");return Array.isArray(t)?t:this.dots.map(function(){return t})}},{key:\"dots\",get:function(){var t=this;return this.control.dotsPos.map(function(e,r){return dt({pos:e,index:r,value:t.control.dotsValue[r],focus:t.states.has(At.Focus)&&t.focusDotIndex===r,disabled:!1,style:t.dotStyle},(Array.isArray(t.dotOptions)?t.dotOptions[r]:t.dotOptions)||{})})}},{key:\"animateTime\",get:function(){return this.states.has(At.Drag)?0:this.duration}},{key:\"canSort\",get:function(){return this.order&&!this.minRange&&!this.maxRange&&!this.fixed&&this.enableCross}},{key:\"isNotSync\",get:function(){var t=this.control.dotsValue;return Array.isArray(this.value)?this.value.length!==t.length||this.value.some(function(e,r){return e!==t[r]}):this.value!==t[0]}},{key:\"dragRange\",get:function(){var t=this.dots[this.focusDotIndex-1],e=this.dots[this.focusDotIndex+1];return[t?t.pos:-1/0,e?e.pos:1/0]}}]),e}(s.a);o([l(\"change\",{default:0})],Vt.prototype,\"value\",void 0),o([c({type:Boolean,default:!1})],Vt.prototype,\"silent\",void 0),o([c({default:\"ltr\",validator:function(t){return[\"ltr\",\"rtl\",\"ttb\",\"btt\"].indexOf(t)>-1}})],Vt.prototype,\"direction\",void 0),o([c({type:[Number,String]})],Vt.prototype,\"width\",void 0),o([c({type:[Number,String]})],Vt.prototype,\"height\",void 0),o([c({default:14})],Vt.prototype,\"dotSize\",void 0),o([c({default:!1})],Vt.prototype,\"contained\",void 0),o([c({type:Number,default:0})],Vt.prototype,\"min\",void 0),o([c({type:Number,default:100})],Vt.prototype,\"max\",void 0),o([c({type:Number,default:1})],Vt.prototype,\"interval\",void 0),o([c({type:Boolean,default:!1})],Vt.prototype,\"disabled\",void 0),o([c({type:Boolean,default:!0})],Vt.prototype,\"clickable\",void 0),o([c({type:Number,default:.5})],Vt.prototype,\"duration\",void 0),o([c(Array)],Vt.prototype,\"data\",void 0),o([c({type:Boolean,default:!1})],Vt.prototype,\"lazy\",void 0),o([c({type:String,validator:function(t){return[\"none\",\"always\",\"focus\"].indexOf(t)>-1},default:\"focus\"})],Vt.prototype,\"tooltip\",void 0),o([c({type:[String,Array],validator:function(t){return(Array.isArray(t)?t:[t]).every(function(t){return[\"top\",\"right\",\"bottom\",\"left\"].indexOf(t)>-1})}})],Vt.prototype,\"tooltipPlacement\",void 0),o([c({type:[String,Array,Function]})],Vt.prototype,\"tooltipFormatter\",void 0),o([c({type:Boolean,default:!1})],Vt.prototype,\"useKeyboard\",void 0),o([c({type:Boolean,default:!0})],Vt.prototype,\"enableCross\",void 0),o([c({type:Boolean,default:!1})],Vt.prototype,\"fixed\",void 0),o([c({type:Boolean,default:!0})],Vt.prototype,\"order\",void 0),o([c(Number)],Vt.prototype,\"minRange\",void 0),o([c(Number)],Vt.prototype,\"maxRange\",void 0),o([c({type:[Boolean,Object,Array,Function],default:!1})],Vt.prototype,\"marks\",void 0),o([c({type:[Boolean,Function],default:!0})],Vt.prototype,\"process\",void 0),o([c(Boolean)],Vt.prototype,\"included\",void 0),o([c(Boolean)],Vt.prototype,\"adsorb\",void 0),o([c(Boolean)],Vt.prototype,\"hideLabel\",void 0),o([c()],Vt.prototype,\"dotOptions\",void 0),o([c()],Vt.prototype,\"railStyle\",void 0),o([c()],Vt.prototype,\"processStyle\",void 0),o([c()],Vt.prototype,\"dotStyle\",void 0),o([c()],Vt.prototype,\"tooltipStyle\",void 0),o([c()],Vt.prototype,\"stepStyle\",void 0),o([c()],Vt.prototype,\"stepActiveStyle\",void 0),o([c()],Vt.prototype,\"labelStyle\",void 0),o([c()],Vt.prototype,\"labelActiveStyle\",void 0),o([d(\"value\")],Vt.prototype,\"onValueChanged\",null),Vt=o([u()({data:function(){return{control:null}},components:{VueSliderDot:w,VueSliderMark:C},inheritAttrs:!1})],Vt);var _t=Vt,Mt=_t;r.d(e,\"ERROR_TYPE\",function(){return F});e[\"default\"]=Mt}})[\"default\"]});\n//# sourceMappingURL=vue-slider-component.umd.min.js.map","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","define([\"../core/Tone\", \"../core/Param\", \"../type/Type\", \"../core/AudioNode\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class A thin wrapper around the Native Web Audio GainNode.\n\t *         The GainNode is a basic building block of the Web Audio\n\t *         API and is useful for routing audio and adjusting gains.\n\t *  @extends {Tone.AudioNode}\n\t *  @param  {Number=}  gain  The initial gain of the GainNode\n\t *  @param {Tone.Type=} units The units of the gain parameter.\n\t */\n\tTone.Gain = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"gain\", \"units\"], Tone.Gain);\n\t\tTone.AudioNode.call(this, options);\n\n\t\t/**\n\t\t *  The GainNode\n\t\t *  @type  {GainNode}\n\t\t *  @private\n\t\t */\n\t\tthis.input = this.output = this._gainNode = this.context.createGain();\n\n\t\t/**\n\t\t *  The gain parameter of the gain node.\n\t\t *  @type {Gain}\n\t\t *  @signal\n\t\t */\n\t\tthis.gain = new Tone.Param({\n\t\t\t\"param\" : this._gainNode.gain,\n\t\t\t\"units\" : options.units,\n\t\t\t\"value\" : options.gain,\n\t\t\t\"convert\" : options.convert\n\t\t});\n\t\tthis._readOnly(\"gain\");\n\t};\n\n\tTone.extend(Tone.Gain, Tone.AudioNode);\n\n\t/**\n\t *  The defaults\n\t *  @const\n\t *  @type  {Object}\n\t */\n\tTone.Gain.defaults = {\n\t\t\"gain\" : 1,\n\t\t\"convert\" : true,\n\t};\n\n\t/**\n\t *  Clean up.\n\t *  @return  {Tone.Gain}  this\n\t */\n\tTone.Gain.prototype.dispose = function(){\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis._gainNode.disconnect();\n\t\tthis._gainNode = null;\n\t\tthis._writable(\"gain\");\n\t\tthis.gain.dispose();\n\t\tthis.gain = null;\n\t};\n\n\treturn Tone.Gain;\n});\n","define([\"../core/Tone\", \"../source/Source\", \"../source/Oscillator\",\n\t\"../signal/Signal\", \"../signal/WaveShaper\", \"../core/Gain\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.PulseOscillator is a pulse oscillator with control over pulse width,\n\t *         also known as the duty cycle. At 50% duty cycle (width = 0.5) the wave is\n\t *         a square and only odd-numbered harmonics are present. At all other widths\n\t *         even-numbered harmonics are present. Read more\n\t *         [here](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n\t *\n\t *  @constructor\n\t *  @extends {Tone.Source}\n\t *  @param {Frequency} [frequency] The frequency of the oscillator\n\t *  @param {NormalRange} [width] The width of the pulse\n\t *  @example\n\t * var pulse = new Tone.PulseOscillator(\"E5\", 0.4).toMaster().start();\n\t */\n\tTone.PulseOscillator = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"frequency\", \"width\"], Tone.Oscillator);\n\t\tTone.Source.call(this, options);\n\n\t\t/**\n\t\t *  The width of the pulse.\n\t\t *  @type {NormalRange}\n\t\t *  @signal\n\t\t */\n\t\tthis.width = new Tone.Signal(options.width, Tone.Type.NormalRange);\n\n\t\t/**\n\t\t *  gate the width amount\n\t\t *  @type {Tone.Gain}\n\t\t *  @private\n\t\t */\n\t\tthis._widthGate = new Tone.Gain(0);\n\n\t\t/**\n\t\t *  the sawtooth oscillator\n\t\t *  @type {Tone.Oscillator}\n\t\t *  @private\n\t\t */\n\t\tthis._sawtooth = new Tone.Oscillator({\n\t\t\tfrequency : options.frequency,\n\t\t\tdetune : options.detune,\n\t\t\ttype : \"sawtooth\",\n\t\t\tphase : options.phase\n\t\t});\n\n\t\t/**\n\t\t *  The frequency control.\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = this._sawtooth.frequency;\n\n\t\t/**\n\t\t *  The detune in cents.\n\t\t *  @type {Cents}\n\t\t *  @signal\n\t\t */\n\t\tthis.detune = this._sawtooth.detune;\n\n\t\t/**\n\t\t *  Threshold the signal to turn it into a square\n\t\t *  @type {Tone.WaveShaper}\n\t\t *  @private\n\t\t */\n\t\tthis._thresh = new Tone.WaveShaper(function(val){\n\t\t\tif (val < 0){\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t});\n\n\t\t//connections\n\t\tthis._sawtooth.chain(this._thresh, this.output);\n\t\tthis.width.chain(this._widthGate, this._thresh);\n\t\tthis._readOnly([\"width\", \"frequency\", \"detune\"]);\n\t};\n\n\tTone.extend(Tone.PulseOscillator, Tone.Source);\n\n\t/**\n\t *  The default parameters.\n\t *  @static\n\t *  @const\n\t *  @type {Object}\n\t */\n\tTone.PulseOscillator.defaults = {\n\t\t\"frequency\" : 440,\n\t\t\"detune\" : 0,\n\t\t\"phase\" : 0,\n\t\t\"width\" : 0.2,\n\t};\n\n\t/**\n\t *  start the oscillator\n\t *  @param  {Time} time\n\t *  @private\n\t */\n\tTone.PulseOscillator.prototype._start = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._sawtooth.start(time);\n\t\tthis._widthGate.gain.setValueAtTime(1, time);\n\t};\n\n\t/**\n\t *  stop the oscillator\n\t *  @param  {Time} time\n\t *  @private\n\t */\n\tTone.PulseOscillator.prototype._stop = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._sawtooth.stop(time);\n\t\t//the width is still connected to the output.\n\t\t//that needs to be stopped also\n\t\tthis._widthGate.gain.setValueAtTime(0, time);\n\t};\n\n\t/**\n\t *  restart the oscillator\n\t *  @param  {Time} time (optional) timing parameter\n\t *  @private\n\t */\n\tTone.PulseOscillator.prototype.restart = function(time){\n\t\tthis._sawtooth.restart(time);\n\t\tthis._widthGate.gain.cancelScheduledValues(time);\n\t\tthis._widthGate.gain.setValueAtTime(1, time);\n\t};\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t * @memberOf Tone.PulseOscillator#\n\t * @type {Degrees}\n\t * @name phase\n\t */\n\tObject.defineProperty(Tone.PulseOscillator.prototype, \"phase\", {\n\t\tget : function(){\n\t\t\treturn this._sawtooth.phase;\n\t\t},\n\t\tset : function(phase){\n\t\t\tthis._sawtooth.phase = phase;\n\t\t}\n\t});\n\n\t/**\n\t * The type of the oscillator. Always returns \"pulse\".\n\t * @readOnly\n\t * @memberOf Tone.PulseOscillator#\n\t * @type {string}\n\t * @name type\n\t */\n\tObject.defineProperty(Tone.PulseOscillator.prototype, \"type\", {\n\t\tget : function(){\n\t\t\treturn \"pulse\";\n\t\t}\n\t});\n\n\t/**\n\t * The baseType of the oscillator. Always returns \"pulse\".\n\t * @readOnly\n\t * @memberOf Tone.PulseOscillator#\n\t * @type {string}\n\t * @name baseType\n\t */\n\tObject.defineProperty(Tone.PulseOscillator.prototype, \"baseType\", {\n\t\tget : function(){\n\t\t\treturn \"pulse\";\n\t\t}\n\t});\n\n\t/**\n\t * The partials of the waveform. Cannot set partials for this waveform type\n\t * @memberOf Tone.PulseOscillator#\n\t * @type {Array}\n\t * @name partials\n\t * @private\n\t */\n\tObject.defineProperty(Tone.PulseOscillator.prototype, \"partials\", {\n\t\tget : function(){\n\t\t\treturn [];\n\t\t}\n\t});\n\n\t/**\n\t *  Clean up method.\n\t *  @return {Tone.PulseOscillator} this\n\t */\n\tTone.PulseOscillator.prototype.dispose = function(){\n\t\tTone.Source.prototype.dispose.call(this);\n\t\tthis._sawtooth.dispose();\n\t\tthis._sawtooth = null;\n\t\tthis._writable([\"width\", \"frequency\", \"detune\"]);\n\t\tthis.width.dispose();\n\t\tthis.width = null;\n\t\tthis._widthGate.dispose();\n\t\tthis._widthGate = null;\n\t\tthis._thresh.dispose();\n\t\tthis._thresh = null;\n\t\tthis.frequency = null;\n\t\tthis.detune = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.PulseOscillator;\n});\n","define([\"../core/Tone\", \"../type/Type\", \"../core/AudioNode\", \"../core/Timeline\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.Param wraps the native Web Audio's AudioParam to provide\n\t *         additional unit conversion functionality. It also\n\t *         serves as a base-class for classes which have a single,\n\t *         automatable parameter.\n\t *  @extends {Tone.AudioNode}\n\t *  @param  {AudioParam}  param  The parameter to wrap.\n\t *  @param  {Tone.Type} units The units of the audio param.\n\t *  @param  {Boolean} convert If the param should be converted.\n\t */\n\tTone.Param = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"param\", \"units\", \"convert\"], Tone.Param);\n\t\tTone.AudioNode.call(this, options);\n\n\t\t/**\n\t\t *  The native parameter to control\n\t\t *  @type  {AudioParam}\n\t\t *  @private\n\t\t */\n\t\tthis._param = this.input = options.param;\n\n\t\t/**\n\t\t *  The units of the parameter\n\t\t *  @type {Tone.Type}\n\t\t */\n\t\tthis.units = options.units;\n\n\t\t/**\n\t\t *  If the value should be converted or not\n\t\t *  @type {Boolean}\n\t\t */\n\t\tthis.convert = options.convert;\n\n\t\t/**\n\t\t *  True if the signal value is being overridden by\n\t\t *  a connected signal.\n\t\t *  @readOnly\n\t\t *  @type  {boolean}\n\t\t *  @private\n\t\t */\n\t\tthis.overridden = false;\n\n\t\t/**\n\t\t * The timeline which tracks all of the automations.\n\t\t * @type {Tone.Timeline}\n\t\t * @private\n\t\t */\n\t\tthis._events = new Tone.Timeline(1000);\n\n\t\tif (Tone.isDefined(options.value) && this._param){\n\t\t\tthis.setValueAtTime(options.value, 0);\n\t\t}\n\t};\n\n\tTone.extend(Tone.Param, Tone.AudioNode);\n\n\t/**\n\t *  Defaults\n\t *  @type  {Object}\n\t *  @const\n\t */\n\tTone.Param.defaults = {\n\t\t\"units\" : Tone.Type.Default,\n\t\t\"convert\" : true,\n\t\t\"param\" : undefined\n\t};\n\n\t/**\n\t * The current value of the parameter.\n\t * @memberOf Tone.Param#\n\t * @type {Number}\n\t * @name value\n\t */\n\tObject.defineProperty(Tone.Param.prototype, \"value\", {\n\t\tget : function(){\n\t\t\tvar now = this.now();\n\t\t\treturn this._toUnits(this.getValueAtTime(now));\n\t\t},\n\t\tset : function(value){\n\t\t\tthis._initialValue = this._fromUnits(value);\n\t\t\tthis.cancelScheduledValues(this.now());\n\t\t\tthis.setValueAtTime(value, this.now());\n\t\t}\n\t});\n\n\t/**\n\t * The minimum output value of the parameter\n\t * @memberOf Tone.Param#\n\t * @type {Number}\n\t * @name value\n\t */\n\tObject.defineProperty(Tone.Param.prototype, \"minValue\", {\n\t\tget : function(){\n\t\t\tif (this.units === Tone.Type.Time || this.units === Tone.Type.Frequency ||\n\t\t\t\tthis.units === Tone.Type.NormalRange || this.units === Tone.Type.Positive ||\n\t\t\t\tthis.units === Tone.Type.BPM){\n\t\t\t\treturn 0;\n\t\t\t} else if (this.units === Tone.Type.AudioRange){\n\t\t\t\treturn -1;\n\t\t\t} else if (this.units === Tone.Type.Decibels){\n\t\t\t\treturn -Infinity;\n\t\t\t} else {\n\t\t\t\treturn this._param.minValue;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The maximum output value of the parameter\n\t * @memberOf Tone.Param#\n\t * @type {Number}\n\t * @name value\n\t */\n\tObject.defineProperty(Tone.Param.prototype, \"maxValue\", {\n\t\tget : function(){\n\t\t\tif (this.units === Tone.Type.NormalRange ||\n\t\t\t\tthis.units === Tone.Type.AudioRange){\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn this._param.maxValue;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  Convert the given value from the type specified by Tone.Param.units\n\t *  into the destination value (such as Gain or Frequency).\n\t *  @private\n\t *  @param  {*} val the value to convert\n\t *  @return {number}     the number which the value should be set to\n\t */\n\tTone.Param.prototype._fromUnits = function(val){\n\t\tif ((this.convert || Tone.isUndef(this.convert)) && !this.overridden){\n\t\t\tswitch (this.units){\n\t\t\t\tcase Tone.Type.Time:\n\t\t\t\t\treturn this.toSeconds(val);\n\t\t\t\tcase Tone.Type.Frequency:\n\t\t\t\t\treturn this.toFrequency(val);\n\t\t\t\tcase Tone.Type.Decibels:\n\t\t\t\t\treturn Tone.dbToGain(val);\n\t\t\t\tcase Tone.Type.NormalRange:\n\t\t\t\t\treturn Math.min(Math.max(val, 0), 1);\n\t\t\t\tcase Tone.Type.AudioRange:\n\t\t\t\t\treturn Math.min(Math.max(val, -1), 1);\n\t\t\t\tcase Tone.Type.Positive:\n\t\t\t\t\treturn Math.max(val, 0);\n\t\t\t\tdefault:\n\t\t\t\t\treturn val;\n\t\t\t}\n\t\t} else {\n\t\t\treturn val;\n\t\t}\n\t};\n\n\t/**\n\t * Convert the parameters value into the units specified by Tone.Param.units.\n\t * @private\n\t * @param  {number} val the value to convert\n\t * @return {number}\n\t */\n\tTone.Param.prototype._toUnits = function(val){\n\t\tif (this.convert || Tone.isUndef(this.convert)){\n\t\t\tswitch (this.units){\n\t\t\t\tcase Tone.Type.Decibels:\n\t\t\t\t\treturn Tone.gainToDb(val);\n\t\t\t\tdefault:\n\t\t\t\t\treturn val;\n\t\t\t}\n\t\t} else {\n\t\t\treturn val;\n\t\t}\n\t};\n\n\t/**\n\t *  the minimum output value\n\t *  @type {Number}\n\t *  @private\n\t */\n\tTone.Param.prototype._minOutput = 1e-5;\n\n\t/**\n\t *  The event types\n\t *  @enum {String}\n\t *  @private\n\t */\n\tTone.Param.AutomationType = {\n\t\tLinear : \"linearRampToValueAtTime\",\n\t\tExponential : \"exponentialRampToValueAtTime\",\n\t\tTarget : \"setTargetAtTime\",\n\t\tSetValue : \"setValueAtTime\",\n\t\tCancel : \"cancelScheduledValues\"\n\t};\n\n\t/**\n\t *  Schedules a parameter value change at the given time.\n\t *  @param {*}\tvalue The value to set the signal.\n\t *  @param {Time}  time The time when the change should occur.\n\t *  @returns {Tone.Param} this\n\t *  @example\n\t * //set the frequency to \"G4\" in exactly 1 second from now.\n\t * freq.setValueAtTime(\"G4\", \"+1\");\n\t */\n\tTone.Param.prototype.setValueAtTime = function(value, time){\n\t\ttime = this.toSeconds(time);\n\t\tvalue = this._fromUnits(value);\n\t\tthis._events.add({\n\t\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\t\"value\" : value,\n\t\t\t\"time\" : time,\n\t\t});\n\t\tthis.log(Tone.Param.AutomationType.SetValue, value, time);\n\t\tthis._param.setValueAtTime(value, time);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Get the signals value at the given time. Subsequent scheduling\n\t *  may invalidate the returned value.\n\t *  @param {Time} time When to get the value\n\t *  @returns {Number} The value at the given time\n\t */\n\tTone.Param.prototype.getValueAtTime = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tvar after = this._events.getAfter(time);\n\t\tvar before = this._events.get(time);\n\t\tvar initialValue = Tone.defaultArg(this._initialValue, this._param.defaultValue);\n\t\tvar value = initialValue;\n\t\t//if it was set by\n\t\tif (before === null){\n\t\t\tvalue = initialValue;\n\t\t} else if (before.type === Tone.Param.AutomationType.Target){\n\t\t\tvar previous = this._events.getBefore(before.time);\n\t\t\tvar previousVal;\n\t\t\tif (previous === null){\n\t\t\t\tpreviousVal = initialValue;\n\t\t\t} else {\n\t\t\t\tpreviousVal = previous.value;\n\t\t\t}\n\t\t\tvalue = this._exponentialApproach(before.time, previousVal, before.value, before.constant, time);\n\t\t} else if (after === null){\n\t\t\tvalue = before.value;\n\t\t} else if (after.type === Tone.Param.AutomationType.Linear){\n\t\t\tvalue = this._linearInterpolate(before.time, before.value, after.time, after.value, time);\n\t\t} else if (after.type === Tone.Param.AutomationType.Exponential){\n\t\t\tvalue = this._exponentialInterpolate(before.time, before.value, after.time, after.value, time);\n\t\t} else {\n\t\t\tvalue = before.value;\n\t\t}\n\t\treturn value;\n\t};\n\n\t/**\n\t *  Creates a schedule point with the current value at the current time.\n\t *  This is useful for creating an automation anchor point in order to\n\t *  schedule changes from the current value.\n\t *\n\t *  @param {number=} now (Optionally) pass the now value in.\n\t *  @returns {Tone.Param} this\n\t */\n\tTone.Param.prototype.setRampPoint = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tvar currentVal = this.getValueAtTime(time);\n\t\tthis.cancelAndHoldAtTime(time);\n\t\tif (currentVal === 0){\n\t\t\tcurrentVal = this._minOutput;\n\t\t}\n\t\tthis.setValueAtTime(this._toUnits(currentVal), time);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Schedules a linear continuous change in parameter value from the\n\t *  previous scheduled parameter value to the given value.\n\t *\n\t *  @param  {number} value\n\t *  @param  {Time} endTime\n\t *  @returns {Tone.Param} this\n\t */\n\tTone.Param.prototype.linearRampToValueAtTime = function(value, endTime){\n\t\tvalue = this._fromUnits(value);\n\t\tendTime = this.toSeconds(endTime);\n\t\tthis._events.add({\n\t\t\t\"type\" : Tone.Param.AutomationType.Linear,\n\t\t\t\"value\" : value,\n\t\t\t\"time\" : endTime,\n\t\t});\n\t\tthis.log(Tone.Param.AutomationType.Linear, value, endTime);\n\t\tthis._param.linearRampToValueAtTime(value, endTime);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Schedules an exponential continuous change in parameter value from\n\t *  the previous scheduled parameter value to the given value.\n\t *\n\t *  @param  {number} value\n\t *  @param  {Time} endTime\n\t *  @returns {Tone.Param} this\n\t */\n\tTone.Param.prototype.exponentialRampToValueAtTime = function(value, endTime){\n\t\tvalue = this._fromUnits(value);\n\t\tvalue = Math.max(this._minOutput, value);\n\t\tendTime = this.toSeconds(endTime);\n\t\t//store the event\n\t\tthis._events.add({\n\t\t\t\"type\" : Tone.Param.AutomationType.Exponential,\n\t\t\t\"time\" : endTime,\n\t\t\t\"value\" : value\n\t\t});\n\t\tthis.log(Tone.Param.AutomationType.Exponential, value, endTime);\n\t\tthis._param.exponentialRampToValueAtTime(value, endTime);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Schedules an exponential continuous change in parameter value from\n\t *  the current time and current value to the given value over the\n\t *  duration of the rampTime.\n\t *\n\t *  @param  {number} value   The value to ramp to.\n\t *  @param  {Time} rampTime the time that it takes the\n\t *                               value to ramp from it's current value\n\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n\t *  @returns {Tone.Param} this\n\t *  @example\n\t * //exponentially ramp to the value 2 over 4 seconds.\n\t * signal.exponentialRampTo(2, 4);\n\t */\n\tTone.Param.prototype.exponentialRampTo = function(value, rampTime, startTime){\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setRampPoint(startTime);\n\t\tthis.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Schedules an linear continuous change in parameter value from\n\t *  the current time and current value to the given value over the\n\t *  duration of the rampTime.\n\t *\n\t *  @param  {number} value   The value to ramp to.\n\t *  @param  {Time} rampTime the time that it takes the\n\t *                               value to ramp from it's current value\n\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n\t *  @returns {Tone.Param} this\n\t *  @example\n\t * //linearly ramp to the value 4 over 3 seconds.\n\t * signal.linearRampTo(4, 3);\n\t */\n\tTone.Param.prototype.linearRampTo = function(value, rampTime, startTime){\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setRampPoint(startTime);\n\t\tthis.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Start exponentially approaching the target value at the given time. Since it\n\t *  is an exponential approach it will continue approaching after the ramp duration. The\n\t *  rampTime is the time that it takes to reach over 99% of the way towards the value.\n\t *  @param  {number} value   The value to ramp to.\n\t *  @param  {Time} rampTime the time that it takes the\n\t *                               value to ramp from it's current value\n\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n\t *  @returns {Tone.Param} this\n\t *  @example\n\t * //exponentially ramp to the value 2 over 4 seconds.\n\t * signal.exponentialRampTo(2, 4);\n\t */\n\tTone.Param.prototype.targetRampTo = function(value, rampTime, startTime){\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setRampPoint(startTime);\n\t\tthis.exponentialApproachValueAtTime(value, startTime, rampTime);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Start exponentially approaching the target value at the given time. Since it\n\t *  is an exponential approach it will continue approaching after the ramp duration. The\n\t *  rampTime is the time that it takes to reach over 99% of the way towards the value. This methods\n\t *  is similar to setTargetAtTime except the third argument is a time instead of a 'timeConstant'\n\t *  @param  {number} value   The value to ramp to.\n\t *  @param {Time}\ttime \tWhen the ramp should start.\n\t *  @param  {Time} rampTime the time that it takes the\n\t *                               value to ramp from it's current value\n\t *  @returns {Tone.Param} this\n\t *  @example\n\t * //exponentially ramp to the value 2 over 4 seconds.\n\t * signal.exponentialRampTo(2, 4);\n\t */\n\tTone.Param.prototype.exponentialApproachValueAtTime = function(value, time, rampTime){\n\t\tvar timeConstant = Math.log(this.toSeconds(rampTime)+1)/Math.log(200);\n\t\ttime = this.toSeconds(time);\n\t\treturn this.setTargetAtTime(value, time, timeConstant);\n\t};\n\n\t/**\n\t *  Start exponentially approaching the target value at the given time with\n\t *  a rate having the given time constant.\n\t *  @param {number} value\n\t *  @param {Time} startTime\n\t *  @param {number} timeConstant\n\t *  @returns {Tone.Param} this\n\t */\n\tTone.Param.prototype.setTargetAtTime = function(value, startTime, timeConstant){\n\t\tvalue = this._fromUnits(value);\n\t\t// The value will never be able to approach without timeConstant > 0.\n\t\tif (timeConstant <= 0){\n\t\t\tthrow new Error(\"timeConstant must be greater than 0\");\n\t\t}\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis._events.add({\n\t\t\t\"type\" : Tone.Param.AutomationType.Target,\n\t\t\t\"value\" : value,\n\t\t\t\"time\" : startTime,\n\t\t\t\"constant\" : timeConstant\n\t\t});\n\t\tthis.log(Tone.Param.AutomationType.Target, value, startTime, timeConstant);\n\t\tthis._param.setTargetAtTime(value, startTime, timeConstant);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Sets an array of arbitrary parameter values starting at the given time\n\t *  for the given duration.\n\t *\n\t *  @param {Array} values\n\t *  @param {Time} startTime\n\t *  @param {Time} duration\n\t *  @param {NormalRange} [scaling=1] If the values in the curve should be scaled by some value\n\t *  @returns {Tone.Param} this\n\t */\n\tTone.Param.prototype.setValueCurveAtTime = function(values, startTime, duration, scaling){\n\t\tscaling = Tone.defaultArg(scaling, 1);\n\t\tduration = this.toSeconds(duration);\n\t\tstartTime = this.toSeconds(startTime);\n\t\tthis.setValueAtTime(values[0] * scaling, startTime);\n\t\tvar segTime = duration / (values.length - 1);\n\t\tfor (var i = 1; i < values.length; i++){\n\t\t\tthis.linearRampToValueAtTime(values[i] * scaling, startTime + i * segTime);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Cancels all scheduled parameter changes with times greater than or\n\t *  equal to startTime.\n\t *\n\t *  @param  {Time} time\n\t *  @returns {Tone.Param} this\n\t */\n\tTone.Param.prototype.cancelScheduledValues = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._events.cancel(time);\n\t\tthis._param.cancelScheduledValues(time);\n\t\tthis.log(Tone.Param.AutomationType.Cancel, time);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  This is similar to [cancelScheduledValues](#cancelScheduledValues) except\n\t *  it holds the automated value at time until the next automated event.\n\t *  @param  {Time} time\n\t *  @returns {Tone.Param} this\n\t */\n\tTone.Param.prototype.cancelAndHoldAtTime = function(time){\n\t\tvar valueAtTime = this.getValueAtTime(time);\n\t\tthis.log(\"cancelAndHoldAtTime\", time, \"value=\"+valueAtTime);\n\n\t\t//remove the schedule events\n\t\tthis._param.cancelScheduledValues(time);\n\n\t\t//if there is an event at the given time\n\t\t//and that even is not a \"set\"\n\t\tvar before = this._events.get(time);\n\t\tvar after = this._events.getAfter(time);\n\t\tif (before && before.time === time){\n\t\t\t//remove everything after\n\t\t\tif (after){\n\t\t\t\tthis._events.cancel(after.time);\n\t\t\t} else {\n\t\t\t\tthis._events.cancel(time + this.sampleTime);\n\t\t\t}\n\t\t} else if (after){\n\t\t\t//cancel the next event(s)\n\t\t\tthis._events.cancel(after.time);\n\t\t\tif (after.type === Tone.Param.AutomationType.Linear){\n\t\t\t\tthis.linearRampToValueAtTime(valueAtTime, time);\n\t\t\t} else if (after.type === Tone.Param.AutomationType.Exponential){\n\t\t\t\tthis.exponentialRampToValueAtTime(valueAtTime, time);\n\t\t\t}\n\t\t}\n\n\t\t//set the value at the given time\n\t\tthis._events.add({\n\t\t\t\"type\" : Tone.Param.AutomationType.SetValue,\n\t\t\t\"value\" : valueAtTime,\n\t\t\t\"time\" : time\n\t\t});\n\t\tthis._param.setValueAtTime(valueAtTime, time);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Ramps to the given value over the duration of the rampTime.\n\t *  Automatically selects the best ramp type (exponential or linear)\n\t *  depending on the `units` of the signal\n\t *\n\t *  @param  {number} value\n\t *  @param  {Time} rampTime \tThe time that it takes the\n\t *                              value to ramp from it's current value\n\t *  @param {Time}\t[startTime=now] \tWhen the ramp should start.\n\t *  @returns {Tone.Param} this\n\t *  @example\n\t * //ramp to the value either linearly or exponentially\n\t * //depending on the \"units\" value of the signal\n\t * signal.rampTo(0, 10);\n\t *  @example\n\t * //schedule it to ramp starting at a specific time\n\t * signal.rampTo(0, 10, 5)\n\t */\n\tTone.Param.prototype.rampTo = function(value, rampTime, startTime){\n\t\trampTime = Tone.defaultArg(rampTime, 0.1);\n\t\tif (this.units === Tone.Type.Frequency || this.units === Tone.Type.BPM || this.units === Tone.Type.Decibels){\n\t\t\tthis.exponentialRampTo(value, rampTime, startTime);\n\t\t} else {\n\t\t\tthis.linearRampTo(value, rampTime, startTime);\n\t\t}\n\t\treturn this;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tAUTOMATION CURVE CALCULATIONS\n\t//\tMIT License, copyright (c) 2014 Jordan Santell\n\t///////////////////////////////////////////////////////////////////////////\n\n\t// Calculates the the value along the curve produced by setTargetAtTime\n\tTone.Param.prototype._exponentialApproach = function(t0, v0, v1, timeConstant, t){\n\t\treturn v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n\t};\n\n\t// Calculates the the value along the curve produced by linearRampToValueAtTime\n\tTone.Param.prototype._linearInterpolate = function(t0, v0, t1, v1, t){\n\t\treturn v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n\t};\n\n\t// Calculates the the value along the curve produced by exponentialRampToValueAtTime\n\tTone.Param.prototype._exponentialInterpolate = function(t0, v0, t1, v1, t){\n\t\treturn v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n\t};\n\n\t/**\n\t *  Clean up\n\t *  @returns {Tone.Param} this\n\t */\n\tTone.Param.prototype.dispose = function(){\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis._param = null;\n\t\tthis._events = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Param;\n});\n","define([\"../core/Tone\", \"../type/TransportTime\"], function(Tone){\n\n\t/**\n\t *  @class Tone.Ticks is a primitive type for encoding Time values.\n\t *         Tone.Ticks can be constructed with or without the `new` keyword. Tone.Ticks can be passed\n\t *         into the parameter of any method which takes time as an argument.\n\t *  @constructor\n\t *  @extends {Tone.TransportTime}\n\t *  @param  {String|Number}  val    The time value.\n\t *  @param  {String=}  units  The units of the value.\n\t *  @example\n\t * var t = Tone.Ticks(\"4n\");//a quarter note\n\t */\n\tTone.Ticks = function(val, units){\n\t\tif (this instanceof Tone.Ticks){\n\n\t\t\tTone.TransportTime.call(this, val, units);\n\n\t\t} else {\n\t\t\treturn new Tone.Ticks(val, units);\n\t\t}\n\t};\n\n\tTone.extend(Tone.Ticks, Tone.TransportTime);\n\n\t/**\n\t *  The default units if none are given.\n\t *  @type {String}\n\t *  @private\n\t */\n\tTone.Ticks.prototype._defaultUnits = \"i\";\n\n\t/**\n\t * Get the current time in the given units\n\t * @return {Ticks}\n\t * @private\n\t */\n\tTone.Ticks.prototype._now = function(){\n\t\treturn Tone.Transport.ticks;\n\t};\n\n\t/**\n\t *  Return the value of the beats in the current units\n\t *  @param {Number} beats\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.Ticks.prototype._beatsToUnits = function(beats){\n\t\treturn this._getPPQ() * beats;\n\t};\n\n\t/**\n\t *  Returns the value of a second in the current units\n\t *  @param {Seconds} seconds\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.Ticks.prototype._secondsToUnits = function(seconds){\n\t\treturn Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n\t};\n\n\t/**\n\t *  Returns the value of a tick in the current time units\n\t *  @param {Ticks} ticks\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.Ticks.prototype._ticksToUnits = function(ticks){\n\t\treturn ticks;\n\t};\n\n\t/**\n\t *  Return the time in ticks\n\t *  @return  {Ticks}\n\t */\n\tTone.Ticks.prototype.toTicks = function(){\n\t\treturn this.valueOf();\n\t};\n\n\t/**\n\t *  Return the time in ticks\n\t *  @return  {Ticks}\n\t */\n\tTone.Ticks.prototype.toSeconds = function(){\n\t\treturn (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());\n\t};\n\n\treturn Tone.Ticks;\n});\n","define([\"../core/Tone\", \"../signal/WaveShaper\", \"../type/Type\", \"../core/Param\",\n\t\"../shim/ConstantSourceNode\", \"../core/Gain\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  A signal is an audio-rate value. Tone.Signal is a core component of the library.\n\t *          Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n\t *          has all of the methods available to native Web Audio\n\t *          [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n\t *          as well as additional conveniences. Read more about working with signals\n\t *          [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n\t *\n\t *  @constructor\n\t *  @extends {Tone.Param}\n\t *  @param {Number|AudioParam} [value] Initial value of the signal. If an AudioParam\n\t *                                     is passed in, that parameter will be wrapped\n\t *                                     and controlled by the Signal.\n\t *  @param {string} [units=Number] unit The units the signal is in.\n\t *  @example\n\t * var signal = new Tone.Signal(10);\n\t */\n\tTone.Signal = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"value\", \"units\"], Tone.Signal);\n\t\tTone.Param.call(this, options);\n\n\t\t/**\n\t\t * The constant source node which generates the signal\n\t\t * @type {ConstantSourceNode}\n\t\t * @private\n\t\t */\n\t\tthis._constantSource = this.context.createConstantSource();\n\t\tthis._constantSource.start(0);\n\t\tthis._param = this._constantSource.offset;\n\t\tthis.value = options.value;\n\n\t\t/**\n\t\t * The node where the constant signal value is scaled.\n\t\t * @type {GainNode}\n\t\t * @private\n\t\t */\n\t\tthis.output = this._constantSource;\n\n\t\t/**\n\t\t * The node where the value is set.\n\t\t * @type {Tone.Param}\n\t\t * @private\n\t\t */\n\t\tthis.input = this._param = this.output.offset;\n\t};\n\n\tTone.extend(Tone.Signal, Tone.Param);\n\n\t/**\n\t *  The default values\n\t *  @type  {Object}\n\t *  @static\n\t *  @const\n\t */\n\tTone.Signal.defaults = {\n\t\t\"value\" : 0,\n\t\t\"units\" : Tone.Type.Default,\n\t\t\"convert\" : true,\n\t};\n\n\t//use SignalBase's connect/disconnect methods\n\tTone.Signal.prototype.connect = Tone.SignalBase.prototype.connect;\n\tTone.Signal.prototype.disconnect = Tone.SignalBase.prototype.disconnect;\n\n\t/**\n\t * Return the current signal value at the given time.\n\t * @param  {Time} time When to get the signal value\n\t * @return {Number}\n\t */\n\tTone.Signal.prototype.getValueAtTime = function(time){\n\t\tif (this._param.getValueAtTime){\n\t\t\treturn this._param.getValueAtTime(time);\n\t\t} else {\n\t\t\treturn Tone.Param.prototype.getValueAtTime.call(this, time);\n\t\t}\n\t};\n\n\t/**\n\t *  dispose and disconnect\n\t *  @returns {Tone.Signal} this\n\t */\n\tTone.Signal.prototype.dispose = function(){\n\t\tTone.Param.prototype.dispose.call(this);\n\t\tthis._constantSource.disconnect();\n\t\tthis._constantSource = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Signal;\n});\n","define([\"../core/Tone\", \"../component/Envelope\", \"../core/Gain\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Tone.AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n\t *          Unlike Tone.Envelope, which outputs the envelope's value, Tone.AmplitudeEnvelope accepts\n\t *          an audio signal as the input and will apply the envelope to the amplitude\n\t *          of the signal. Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n\t *\n\t *  @constructor\n\t *  @extends {Tone.Envelope}\n\t *  @param {Time|Object} [attack] The amount of time it takes for the envelope to go from\n\t *                               0 to it's maximum value.\n\t *  @param {Time} [decay]\tThe period of time after the attack that it takes for the envelope\n\t *                       \tto fall to the sustain value.\n\t *  @param {NormalRange} [sustain]\tThe percent of the maximum value that the envelope rests at until\n\t *                                \tthe release is triggered.\n\t *  @param {Time} [release]\tThe amount of time after the release is triggered it takes to reach 0.\n\t *  @example\n\t * var ampEnv = new Tone.AmplitudeEnvelope({\n\t * \t\"attack\": 0.1,\n\t * \t\"decay\": 0.2,\n\t * \t\"sustain\": 1.0,\n\t * \t\"release\": 0.8\n\t * }).toMaster();\n\t * //create an oscillator and connect it\n\t * var osc = new Tone.Oscillator().connect(ampEnv).start();\n\t * //trigger the envelopes attack and release \"8t\" apart\n\t * ampEnv.triggerAttackRelease(\"8t\");\n\t */\n\tTone.AmplitudeEnvelope = function(){\n\n\t\tTone.Envelope.apply(this, arguments);\n\n\t\t/**\n\t\t *  the input node\n\t\t *  @type {GainNode}\n\t\t *  @private\n\t\t */\n\t\tthis.input = this.output = new Tone.Gain();\n\n\t\tthis._sig.connect(this.output.gain);\n\t};\n\n\tTone.extend(Tone.AmplitudeEnvelope, Tone.Envelope);\n\n\t/**\n\t *  Clean up\n\t *  @return  {Tone.AmplitudeEnvelope}  this\n\t */\n\tTone.AmplitudeEnvelope.prototype.dispose = function(){\n\t\tTone.Envelope.prototype.dispose.call(this);\n\t\treturn this;\n\t};\n\n\treturn Tone.AmplitudeEnvelope;\n});\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function() { try { return require('moment'); } catch(e) { } }()) :\ntypeof define === 'function' && define.amd ? define(['require'], function(require) { return factory(function() { try { return require('moment'); } catch(e) { } }()); }) :\n(global.Chart = factory(global.moment));\n}(this, (function (moment) { 'use strict';\n\nmoment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n\n/* MIT license */\n\nvar conversions = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\nvar convert = function() {\n   return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   };\n});\n\nvar colorConvert = convert;\n\nvar colorName = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\n/* MIT license */\n\n\nvar colorString = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n};\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3,4})$/i,\n       hex =  /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr),\n       hexAlpha = \"\";\n   if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorName[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgba, a) {\n   var a = (a !== undefined && rgba.length === 3) ? a : rgba[3];\n   return \"#\" + hexDouble(rgba[0]) \n              + hexDouble(rgba[1])\n              + hexDouble(rgba[2])\n              + (\n                 (a >= 0 && a < 1)\n                 ? hexDouble(Math.round(a * 255))\n                 : \"\"\n              );\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorName) {\n   reverseNames[colorName[name]] = name;\n}\n\n/* MIT license */\n\n\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = colorString.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = colorString.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = colorString.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn colorString.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn colorString.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn colorString.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn colorString.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn colorString.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn colorString.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn colorString.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn colorString.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = colorConvert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nvar chartjsColor = Color;\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array (including typed arrays), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @function\n\t */\n\tisArray: function(value) {\n\t\tif (Array.isArray && Array.isArray(value)) {\n\t\t\treturn true;\n\t\t}\n\t\tvar type = Object.prototype.toString.call(value);\n\t\tif (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns true if `value` is a finite number, else returns false\n\t * @param {*} value  - The value to test.\n\t * @returns {boolean}\n\t */\n\tisFinite: function(value) {\n\t\treturn (typeof value === 'number' || value instanceof Number) && isFinite(value);\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {object|Array} loopable - The object or array to be iterated.\n\t * @param {function} fn - The function to call for each item.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see https://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @param {object} [options] - Merging options:\n\t * @param {function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @returns {object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {object} target - The target object in which all objects are merged into.\n\t * @param {object} arg1 - Object containing additional properties to merge in target.\n\t * @param {object} argN - Additional objects containing properties to merge in target.\n\t * @returns {object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nvar helpers_core = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nvar helpers_easing = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.easingEffects = effects;\n\nvar PI = Math.PI;\nvar RAD_PER_DEG = PI / 180;\nvar DOUBLE_PI = PI * 2;\nvar HALF_PI = PI / 2;\nvar QUARTER_PI = PI / 4;\nvar TWO_THIRDS_PI = PI * 2 / 3;\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports$1 = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {number} width - The rectangle's width.\n\t * @param {number} height - The rectangle's height.\n\t * @param {number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar r = Math.min(radius, height / 2, width / 2);\n\t\t\tvar left = x + r;\n\t\t\tvar top = y + r;\n\t\t\tvar right = x + width - r;\n\t\t\tvar bottom = y + height - r;\n\n\t\t\tctx.moveTo(x, top);\n\t\t\tif (left < right && top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, -HALF_PI);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, 0);\n\t\t\t\tctx.arc(right, bottom, r, 0, HALF_PI);\n\t\t\t\tctx.arc(left, bottom, r, HALF_PI, PI);\n\t\t\t} else if (left < right) {\n\t\t\t\tctx.moveTo(left, y);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, HALF_PI);\n\t\t\t\tctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n\t\t\t} else if (top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, 0);\n\t\t\t\tctx.arc(left, bottom, r, 0, PI);\n\t\t\t} else {\n\t\t\t\tctx.arc(left, top, r, -PI, PI);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, xOffset, yOffset, size, cornerRadius;\n\t\tvar rad = (rotation || 0) * RAD_PER_DEG;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(x, y, radius, 0, DOUBLE_PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\t// NOTE: the rounded rect implementation changed to use `arc` instead of\n\t\t\t// `quadraticCurveTo` since it generates better results when rect is\n\t\t\t// almost a circle. 0.516 (instead of 0.5) produces results with visually\n\t\t\t// closer proportion to the previous impl and it is inscribed in the\n\t\t\t// circle with `radius`. For more details, see the following PRs:\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5597\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5858\n\t\t\tcornerRadius = radius * 0.516;\n\t\t\tsize = radius - cornerRadius;\n\t\t\txOffset = Math.cos(rad + QUARTER_PI) * size;\n\t\t\tyOffset = Math.sin(rad + QUARTER_PI) * size;\n\t\t\tctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n\t\t\tctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n\t\t\tctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n\t\t\tctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tif (!rotation) {\n\t\t\t\tsize = Math.SQRT1_2 * radius;\n\t\t\t\tctx.rect(x - size, y - size, 2 * size, 2 * size);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'rectRot':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'cross':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\trad += QUARTER_PI;\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t},\n\n\t/**\n\t * Returns true if the point is inside the rectangle\n\t * @param {object} point - The point to test\n\t * @param {object} area - The rectangle\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_isPointInArea: function(point, area) {\n\t\tvar epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n\t\treturn point.x > area.left - epsilon && point.x < area.right + epsilon &&\n\t\t\tpoint.y > area.top - epsilon && point.y < area.bottom + epsilon;\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tvar stepped = target.steppedLine;\n\t\tif (stepped) {\n\t\t\tif (stepped === 'middle') {\n\t\t\t\tvar midpoint = (previous.x + target.x) / 2.0;\n\t\t\t\tctx.lineTo(midpoint, flip ? target.y : previous.y);\n\t\t\t\tctx.lineTo(midpoint, flip ? previous.y : target.y);\n\t\t\t} else if ((stepped === 'after' && !flip) || (stepped !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\nvar helpers_canvas = exports$1;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.clear = exports$1.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports$1.roundedRect.apply(exports$1, arguments);\n};\n\nvar defaults = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers_core.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\ndefaults._set('global', {\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tdefaultLineHeight: 1.2,\n\tshowLines: true\n});\n\nvar core_defaults = defaults;\n\nvar valueOrDefault = helpers_core.valueOrDefault;\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nfunction toFontString(font) {\n\tif (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n\t\treturn null;\n\t}\n\n\treturn (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nvar helpers_options = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {number|object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers_core.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Parses font options and returns the font object.\n\t * @param {object} options - A object that contains font options to be parsed.\n\t * @return {object} The font object.\n\t * @todo Support font.* options and renamed to toFont().\n\t * @private\n\t */\n\t_parseFont: function(options) {\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar font = {\n\t\t\tfamily: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\tlineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n\t\t\tsize: size,\n\t\t\tstyle: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\tweight: null,\n\t\t\tstring: ''\n\t\t};\n\n\t\tfont.string = toFontString(font);\n\t\treturn font;\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array} inputs - An array of values, falling back to the last value.\n\t * @param {object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers_core.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar helpers$1 = helpers_core;\nvar easing = helpers_easing;\nvar canvas = helpers_canvas;\nvar options = helpers_options;\nhelpers$1.easing = easing;\nhelpers$1.canvas = canvas;\nhelpers$1.options = options;\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = chartjsColor(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = chartjsColor(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers$1.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers$1.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers$1.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers$1.inherits;\n\nvar core_element = Element;\n\nvar exports$2 = core_element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\nvar core_animation = exports$2;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n\ncore_defaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers$1.noop,\n\t\tonComplete: helpers$1.noop\n\t}\n});\n\nvar core_animations = {\n\tanimations: [],\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {number} duration - The animation duration in ms.\n\t * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\t\tanimation.startTime = Date.now();\n\t\tanimation.duration = duration;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers$1.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\n\t\tme.advance();\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function() {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart, numSteps, nextStep;\n\t\tvar i = 0;\n\n\t\t// 1 animation per chart, so we are looping charts here\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\t\t\tnumSteps = animation.numSteps;\n\n\t\t\t// Make sure that currentStep starts at 1\n\t\t\t// https://github.com/chartjs/Chart.js/issues/6104\n\t\t\tnextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n\t\t\tanimation.currentStep = Math.min(nextStep, numSteps);\n\n\t\t\thelpers$1.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= numSteps) {\n\t\t\t\thelpers$1.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar resolve = helpers$1.options.resolve;\n\nvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n */\nfunction listenArrayEvents(array, listener) {\n\tif (array._chartjs) {\n\t\tarray._chartjs.listeners.push(listener);\n\t\treturn;\n\t}\n\n\tObject.defineProperty(array, '_chartjs', {\n\t\tconfigurable: true,\n\t\tenumerable: false,\n\t\tvalue: {\n\t\t\tlisteners: [listener]\n\t\t}\n\t});\n\n\tarrayEvents.forEach(function(key) {\n\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\tvar base = array[key];\n\n\t\tObject.defineProperty(array, key, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: function() {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\thelpers$1.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn res;\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nfunction unlistenArrayEvents(array, listener) {\n\tvar stub = array._chartjs;\n\tif (!stub) {\n\t\treturn;\n\t}\n\n\tvar listeners = stub.listeners;\n\tvar index = listeners.indexOf(listener);\n\tif (index !== -1) {\n\t\tlisteners.splice(index, 1);\n\t}\n\n\tif (listeners.length > 0) {\n\t\treturn;\n\t}\n\n\tarrayEvents.forEach(function(key) {\n\t\tdelete array[key];\n\t});\n\n\tdelete array._chartjs;\n}\n\n// Base class for all dataset controllers (line, bar, etc)\nvar DatasetController = function(chart, datasetIndex) {\n\tthis.initialize(chart, datasetIndex);\n};\n\nhelpers$1.extend(DatasetController.prototype, {\n\n\t/**\n\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t * @type {Chart.core.element}\n\t */\n\tdatasetElementType: null,\n\n\t/**\n\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t * @type {Chart.core.element}\n\t */\n\tdataElementType: null,\n\n\tinitialize: function(chart, datasetIndex) {\n\t\tvar me = this;\n\t\tme.chart = chart;\n\t\tme.index = datasetIndex;\n\t\tme.linkScales();\n\t\tme.addElements();\n\t},\n\n\tupdateIndex: function(datasetIndex) {\n\t\tthis.index = datasetIndex;\n\t},\n\n\tlinkScales: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\n\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t}\n\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t}\n\t},\n\n\tgetDataset: function() {\n\t\treturn this.chart.data.datasets[this.index];\n\t},\n\n\tgetMeta: function() {\n\t\treturn this.chart.getDatasetMeta(this.index);\n\t},\n\n\tgetScaleForId: function(scaleID) {\n\t\treturn this.chart.scales[scaleID];\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScale: function() {\n\t\treturn this.getScaleForId(this._getValueScaleId());\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScale: function() {\n\t\treturn this.getScaleForId(this._getIndexScaleId());\n\t},\n\n\treset: function() {\n\t\tthis.update(true);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroy: function() {\n\t\tif (this._data) {\n\t\t\tunlistenArrayEvents(this._data, this);\n\t\t}\n\t},\n\n\tcreateMetaDataset: function() {\n\t\tvar me = this;\n\t\tvar type = me.datasetElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index\n\t\t});\n\t},\n\n\tcreateMetaData: function(index) {\n\t\tvar me = this;\n\t\tvar type = me.dataElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index\n\t\t});\n\t},\n\n\taddElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data || [];\n\t\tvar metaData = meta.data;\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t}\n\n\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t},\n\n\taddElementAndReset: function(index) {\n\t\tvar element = this.createMetaData(index);\n\t\tthis.getMeta().data.splice(index, 0, element);\n\t\tthis.updateElement(element, index, true);\n\t},\n\n\tbuildOrUpdateElements: function() {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t// the internal meta data accordingly.\n\t\tif (me._data !== data) {\n\t\t\tif (me._data) {\n\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t}\n\n\t\t\tif (data && Object.isExtensible(data)) {\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t}\n\t\t\tme._data = data;\n\t\t}\n\n\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\tme.resyncElements();\n\t},\n\n\tupdate: helpers$1.noop,\n\n\ttransition: function(easingValue) {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].transition(easingValue);\n\t\t}\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.transition(easingValue);\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.draw();\n\t\t}\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].draw();\n\t\t}\n\t},\n\n\tremoveHoverStyle: function(element) {\n\t\thelpers$1.merge(element._model, element.$previousStyle || {});\n\t\tdelete element.$previousStyle;\n\t},\n\n\tsetHoverStyle: function(element) {\n\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\tvar index = element._index;\n\t\tvar custom = element.custom || {};\n\t\tvar model = element._model;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\telement.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth\n\t\t};\n\n\t\tmodel.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n\t\tmodel.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n\t\tmodel.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tresyncElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data;\n\t\tvar numMeta = meta.data.length;\n\t\tvar numData = data.length;\n\n\t\tif (numData < numMeta) {\n\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t} else if (numData > numMeta) {\n\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinsertElements: function(start, count) {\n\t\tfor (var i = 0; i < count; ++i) {\n\t\t\tthis.addElementAndReset(start + i);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPush: function() {\n\t\tvar count = arguments.length;\n\t\tthis.insertElements(this.getDataset().data.length - count, count);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPop: function() {\n\t\tthis.getMeta().data.pop();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataShift: function() {\n\t\tthis.getMeta().data.shift();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataSplice: function(start, count) {\n\t\tthis.getMeta().data.splice(start, count);\n\t\tthis.insertElements(start, arguments.length - 2);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataUnshift: function() {\n\t\tthis.insertElements(0, arguments.length);\n\t}\n});\n\nDatasetController.extend = helpers$1.inherits;\n\nvar core_datasetController = DatasetController;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: core_defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2,\n\t\t\tborderAlign: 'center'\n\t\t}\n\t}\n});\n\nvar element_arc = core_element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers$1.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\t\tvar pixelMargin = (vm.borderAlign === 'inner') ? 0.33 : 0;\n\t\tvar angleMargin;\n\n\t\tctx.save();\n\n\t\tctx.beginPath();\n\t\tctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\tctx.closePath();\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth) {\n\t\t\tif (vm.borderAlign === 'inner') {\n\t\t\t\t// Draw an inner border by cliping the arc and drawing a double-width border\n\t\t\t\t// Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\t\t\t\tctx.beginPath();\n\t\t\t\tangleMargin = pixelMargin / vm.outerRadius;\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\t\t\t\tif (vm.innerRadius > pixelMargin) {\n\t\t\t\t\tangleMargin = pixelMargin / vm.innerRadius;\n\t\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n\t\t\t\t} else {\n\t\t\t\t\tctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n\t\t\t\t}\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.clip();\n\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.lineWidth = vm.borderWidth * 2;\n\t\t\t\tctx.lineJoin = 'round';\n\t\t\t} else {\n\t\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\t\tctx.lineJoin = 'bevel';\n\t\t\t}\n\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$1 = helpers$1.valueOrDefault;\n\nvar defaultColor = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nvar element_line = core_element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers$1.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers$1.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$2 = helpers$1.valueOrDefault;\n\nvar defaultColor$1 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor$1,\n\t\t\tborderColor: defaultColor$1,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nvar element_point = core_element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n\nvar defaultColor$2 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaultColor$2,\n\t\t\tborderColor: defaultColor$2,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(vm) {\n\treturn vm && vm.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(vm) {\n\tvar x1, x2, y1, y2, half;\n\n\tif (isVertical(vm)) {\n\t\thalf = vm.width / 2;\n\t\tx1 = vm.x - half;\n\t\tx2 = vm.x + half;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\thalf = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - half;\n\t\ty2 = vm.y + half;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nfunction swap(orig, v1, v2) {\n\treturn orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction parseBorderSkipped(vm) {\n\tvar edge = vm.borderSkipped;\n\tvar res = {};\n\n\tif (!edge) {\n\t\treturn res;\n\t}\n\n\tif (vm.horizontal) {\n\t\tif (vm.base > vm.x) {\n\t\t\tedge = swap(edge, 'left', 'right');\n\t\t}\n\t} else if (vm.base < vm.y) {\n\t\tedge = swap(edge, 'bottom', 'top');\n\t}\n\n\tres[edge] = true;\n\treturn res;\n}\n\nfunction parseBorderWidth(vm, maxW, maxH) {\n\tvar value = vm.borderWidth;\n\tvar skip = parseBorderSkipped(vm);\n\tvar t, r, b, l;\n\n\tif (helpers$1.isObject(value)) {\n\t\tt = +value.top || 0;\n\t\tr = +value.right || 0;\n\t\tb = +value.bottom || 0;\n\t\tl = +value.left || 0;\n\t} else {\n\t\tt = r = b = l = +value || 0;\n\t}\n\n\treturn {\n\t\tt: skip.top || (t < 0) ? 0 : t > maxH ? maxH : t,\n\t\tr: skip.right || (r < 0) ? 0 : r > maxW ? maxW : r,\n\t\tb: skip.bottom || (b < 0) ? 0 : b > maxH ? maxH : b,\n\t\tl: skip.left || (l < 0) ? 0 : l > maxW ? maxW : l\n\t};\n}\n\nfunction boundingRects(vm) {\n\tvar bounds = getBarBounds(vm);\n\tvar width = bounds.right - bounds.left;\n\tvar height = bounds.bottom - bounds.top;\n\tvar border = parseBorderWidth(vm, width / 2, height / 2);\n\n\treturn {\n\t\touter: {\n\t\t\tx: bounds.left,\n\t\t\ty: bounds.top,\n\t\t\tw: width,\n\t\t\th: height\n\t\t},\n\t\tinner: {\n\t\t\tx: bounds.left + border.l,\n\t\t\ty: bounds.top + border.t,\n\t\t\tw: width - border.l - border.r,\n\t\t\th: height - border.t - border.b\n\t\t}\n\t};\n}\n\nfunction inRange(vm, x, y) {\n\tvar skipX = x === null;\n\tvar skipY = y === null;\n\tvar bounds = !vm || (skipX && skipY) ? false : getBarBounds(vm);\n\n\treturn bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nvar element_rectangle = core_element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar rects = boundingRects(vm);\n\t\tvar outer = rects.outer;\n\t\tvar inner = rects.inner;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n\t\tif (outer.w === inner.w && outer.h === inner.h) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(outer.x, outer.y, outer.w, outer.h);\n\t\tctx.clip();\n\t\tctx.fillStyle = vm.borderColor;\n\t\tctx.rect(inner.x, inner.y, inner.w, inner.h);\n\t\tctx.fill('evenodd');\n\t\tctx.restore();\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\treturn inRange(this._view, mouseX, mouseY);\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn isVertical(vm)\n\t\t\t? inRange(vm, mouseX, null)\n\t\t\t: inRange(vm, null, mouseY);\n\t},\n\n\tinXRange: function(mouseX) {\n\t\treturn inRange(this._view, mouseX, null);\n\t},\n\n\tinYRange: function(mouseY) {\n\t\treturn inRange(this._view, null, mouseY);\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(vm)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\n\t\treturn isVertical(vm)\n\t\t\t? vm.width * Math.abs(vm.y - vm.base)\n\t\t\t: vm.height * Math.abs(vm.x - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\nvar elements = {};\nvar Arc = element_arc;\nvar Line = element_line;\nvar Point = element_point;\nvar Rectangle = element_rectangle;\nelements.Arc = Arc;\nelements.Line = Line;\nelements.Point = Point;\nelements.Rectangle = Rectangle;\n\nvar resolve$1 = helpers$1.options.resolve;\n\ncore_defaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers$1.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale size.\n\t\tprev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - (curr - Math.min(prev, next)) / 2 * percent;\n\tsize = Math.abs(next - prev) / 2 * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nvar controller_bar = core_datasetController.extend({\n\n\tdataElementType: elements.Rectangle,\n\n\tinitialize: function() {\n\t\tvar me = this;\n\t\tvar meta;\n\n\t\tcore_datasetController.prototype.initialize.apply(me, arguments);\n\n\t\tmeta = me.getMeta();\n\t\tmeta.stack = me.getDataset().stack;\n\t\tmeta.bar = true;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar rects = me.getMeta().data;\n\t\tvar i, ilen;\n\n\t\tme._ruler = me.getRuler();\n\n\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\tme.updateElement(rects[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\t\tvar options = me._resolveElementOptions(rectangle, index);\n\n\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\trectangle._datasetIndex = me.index;\n\t\trectangle._index = index;\n\t\trectangle._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderSkipped: options.borderSkipped,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\tdatasetLabel: dataset.label,\n\t\t\tlabel: me.chart.data.labels[index]\n\t\t};\n\n\t\tme._updateElementGeometry(rectangle, index, reset);\n\n\t\trectangle.pivot();\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateElementGeometry: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar model = rectangle._model;\n\t\tvar vscale = me._getValueScale();\n\t\tvar base = vscale.getBasePixel();\n\t\tvar horizontal = vscale.isHorizontal();\n\t\tvar ruler = me._ruler || me.getRuler();\n\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\tmodel.horizontal = horizontal;\n\t\tmodel.base = reset ? base : vpixels.base;\n\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t},\n\n\t/**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n\t_getStacks: function(last) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stacked = scale.options.stacked;\n\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\tvar stacks = [];\n\t\tvar i, meta;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t(stacked === false ||\n\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\tstacks.push(meta.stack);\n\t\t\t}\n\t\t}\n\n\t\treturn stacks;\n\t},\n\n\t/**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n\tgetStackCount: function() {\n\t\treturn this._getStacks().length;\n\t},\n\n\t/**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n\t * @returns {number} The stack index\n\t * @private\n\t */\n\tgetStackIndex: function(datasetIndex, name) {\n\t\tvar stacks = this._getStacks(datasetIndex);\n\t\tvar index = (name !== undefined)\n\t\t\t? stacks.indexOf(name)\n\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\treturn (index === -1)\n\t\t\t? stacks.length - 1\n\t\t\t: index;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetRuler: function() {\n\t\tvar me = this;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stackCount = me.getStackCount();\n\t\tvar datasetIndex = me.index;\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\tvar pixels = [];\n\t\tvar i, ilen, min;\n\n\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t}\n\n\t\tmin = helpers$1.isNullOrUndef(scale.options.barThickness)\n\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t: -1;\n\n\t\treturn {\n\t\t\tmin: min,\n\t\t\tpixels: pixels,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tstackCount: stackCount,\n\t\t\tscale: scale\n\t\t};\n\t},\n\n\t/**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar scale = me._getValueScale();\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar datasets = chart.data.datasets;\n\t\tvar value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\tvar minBarLength = scale.options.minBarLength;\n\t\tvar stacked = scale.options.stacked;\n\t\tvar stack = meta.stack;\n\t\tvar start = 0;\n\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\tif (imeta.bar &&\n\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\timeta.controller._getValueScaleId() === scale.id &&\n\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\tivalue = +scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbase = scale.getPixelForValue(start);\n\t\thead = scale.getPixelForValue(start + value);\n\t\tsize = head - base;\n\n\t\tif (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n\t\t\tsize = minBarLength;\n\t\t\tif (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n\t\t\t\thead = base - minBarLength;\n\t\t\t} else {\n\t\t\t\thead = base + minBarLength;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tbase: base,\n\t\t\thead: head,\n\t\t\tcenter: head + size / 2\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\tvar me = this;\n\t\tvar options = ruler.scale.options;\n\t\tvar range = options.barThickness === 'flex'\n\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\tvar size = Math.min(\n\t\t\thelpers$1.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\trange.chunk * range.ratio);\n\n\t\treturn {\n\t\t\tbase: center - size / 2,\n\t\t\thead: center + size / 2,\n\t\t\tcenter: center,\n\t\t\tsize: size\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getValueScale();\n\t\tvar rects = me.getMeta().data;\n\t\tvar dataset = me.getDataset();\n\t\tvar ilen = rects.length;\n\t\tvar i = 0;\n\n\t\thelpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\trects[i].draw();\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(rectangle, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = rectangle.custom || {};\n\t\tvar options = chart.options.elements.rectangle;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderSkipped',\n\t\t\t'borderWidth'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$1([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t}\n});\n\nvar valueOrDefault$3 = helpers$1.valueOrDefault;\nvar resolve$2 = helpers$1.options.resolve;\n\ncore_defaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_bubble = core_datasetController.extend({\n\t/**\n\t * @protected\n\t */\n\tdataElementType: elements.Point,\n\n\t/**\n\t * @protected\n\t */\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data;\n\n\t\t// Update Points\n\t\thelpers$1.each(points, function(point, index) {\n\t\t\tme.updateElement(point, index, reset);\n\t\t});\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar options = me._resolveElementOptions(point, index);\n\t\tvar data = me.getDataset().data[index];\n\t\tvar dsIndex = me.index;\n\n\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = dsIndex;\n\t\tpoint._index = index;\n\t\tpoint._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\thitRadius: options.hitRadius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tradius: reset ? 0 : options.radius,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t};\n\n\t\tpoint.pivot();\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = options.radius + options.hoverRadius;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(point, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = point.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar data = dataset.data[index];\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t\t'hoverRadius',\n\t\t\t'hitRadius',\n\t\t\t'pointStyle',\n\t\t\t'rotation'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$2([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\t// Custom radius resolution\n\t\tvalues.radius = resolve$2([\n\t\t\tcustom.radius,\n\t\t\tdata ? data.r : undefined,\n\t\t\tdataset.radius,\n\t\t\toptions.radius\n\t\t], context, index);\n\n\t\treturn values;\n\t}\n});\n\nvar resolve$3 = helpers$1.options.resolve;\nvar valueOrDefault$4 = helpers$1.valueOrDefault;\n\ncore_defaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers$1.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_doughnut = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\tgetRingIndex: function(datasetIndex) {\n\t\tvar ringIndex = 0;\n\n\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t++ringIndex;\n\t\t\t}\n\t\t}\n\n\t\treturn ringIndex;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar availableWidth = chartArea.right - chartArea.left;\n\t\tvar availableHeight = chartArea.bottom - chartArea.top;\n\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\tvar offset = {x: 0, y: 0};\n\t\tvar meta = me.getMeta();\n\t\tvar arcs = meta.data;\n\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\tvar circumference = opts.circumference;\n\t\tvar chartWeight = me._getRingWeight(me.index);\n\t\tvar i, ilen;\n\n\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\tif (circumference < Math.PI * 2.0) {\n\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\tvar endAngle = startAngle + circumference;\n\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t}\n\n\t\tchart.borderWidth = me.getMaxBorderWidth();\n\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\tmeta.total = me.calculateTotal();\n\n\t\tme.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\tvar dataset = me.getDataset();\n\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\tstartAngle: startAngle,\n\t\t\t\tendAngle: endAngle,\n\t\t\t\tcircumference: circumference,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t}\n\t\t});\n\n\t\tvar model = arc._model;\n\n\t\t// Set correct angles if not resetting\n\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\tif (index === 0) {\n\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t} else {\n\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t}\n\n\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t}\n\n\t\tarc.pivot();\n\t},\n\n\tcalculateTotal: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar total = 0;\n\t\tvar value;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tvalue = dataset.data[index];\n\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\ttotal += Math.abs(value);\n\t\t\t}\n\t\t});\n\n\t\t/* if (total === 0) {\n\t\t\ttotal = NaN;\n\t\t}*/\n\n\t\treturn total;\n\t},\n\n\tcalculateCircumference: function(value) {\n\t\tvar total = this.getMeta().total;\n\t\tif (total > 0 && !isNaN(value)) {\n\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// gets the max border or hover width to properly scale pie charts\n\tgetMaxBorderWidth: function(arcs) {\n\t\tvar me = this;\n\t\tvar max = 0;\n\t\tvar chart = me.chart;\n\t\tvar i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n\t\tif (!arcs) {\n\t\t\t// Find the outmost visible dataset\n\t\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\tarcs = meta.data;\n\t\t\t\t\tif (i !== me.index) {\n\t\t\t\t\t\tcontroller = meta.controller;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!arcs) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarc = arcs[i];\n\t\t\toptions = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\t\t\tif (options.borderAlign !== 'inner') {\n\t\t\t\tborderWidth = options.borderWidth;\n\t\t\t\thoverWidth = options.hoverBorderWidth;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$3([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n\t_getRingWeightOffset: function(datasetIndex) {\n\t\tvar ringWeightOffset = 0;\n\n\t\tfor (var i = 0; i < datasetIndex; ++i) {\n\t\t\tif (this.chart.isDatasetVisible(i)) {\n\t\t\t\tringWeightOffset += this._getRingWeight(i);\n\t\t\t}\n\t\t}\n\n\t\treturn ringWeightOffset;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getRingWeight: function(dataSetIndex) {\n\t\treturn Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n\t},\n\n\t/**\n\t * Returns the sum of all visibile data set weights.  This value can be 0.\n\t * @private\n\t */\n\t_getVisibleDatasetWeightTotal: function() {\n\t\treturn this._getRingWeightOffset(this.chart.data.datasets.length);\n\t}\n});\n\ncore_defaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'category',\n\t\t\tposition: 'left',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\nvar controller_horizontalBar = controller_bar.extend({\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t}\n});\n\nvar valueOrDefault$5 = helpers$1.valueOrDefault;\nvar resolve$4 = helpers$1.options.resolve;\nvar isPointInArea = helpers$1.canvas._isPointInArea;\n\ncore_defaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nfunction lineEnabled(dataset, options) {\n\treturn valueOrDefault$5(dataset.showLine, options.showLines);\n}\n\nvar controller_line = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\tvar dataset = me.getDataset();\n\t\tvar showLine = lineEnabled(dataset, me.chart.options);\n\t\tvar i, ilen;\n\n\t\t// Update Line\n\t\tif (showLine) {\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\t// Utility\n\t\t\tline._scale = scale;\n\t\t\tline._datasetIndex = me.index;\n\t\t\t// Data\n\t\t\tline._children = points;\n\t\t\t// Model\n\t\t\tline._model = me._resolveLineOptions(line);\n\n\t\t\tline.pivot();\n\t\t}\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\tif (showLine && line._model.tension !== 0) {\n\t\t\tme.updateBezierControlPoints();\n\t\t}\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar datasetIndex = me.index;\n\t\tvar value = dataset.data[index];\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar x, y;\n\n\t\tvar options = me._resolvePointOptions(point, index);\n\n\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t// Utility\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = datasetIndex;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n\t\t\tsteppedLine: lineModel ? lineModel.steppedLine : false,\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options;\n\t\tvar elementOptions = options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill',\n\t\t\t'cubicInterpolationMode'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\telementOptions[key]\n\t\t\t]);\n\t\t}\n\n\t\t// The default behavior of lines is to break at null values, according\n\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t// This option gives lines the ability to span gaps\n\t\tvalues.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n\t\tvalues.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n\t\tvalues.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n\n\t\treturn values;\n\t},\n\n\tcalculatePointY: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar sumPos = 0;\n\t\tvar sumNeg = 0;\n\t\tvar i, ds, dsMeta;\n\n\t\tif (yScale.options.stacked) {\n\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\tif (rightValue < 0) {\n\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t}\n\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t}\n\n\t\treturn yScale.getPixelForValue(value);\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar area = chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\tif (lineModel.spanGaps) {\n\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\treturn !pt._model.skip;\n\t\t\t});\n\t\t}\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tif (lineModel.cubicInterpolationMode === 'monotone') {\n\t\t\thelpers$1.splineCurveMonotone(points);\n\t\t} else {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\t\thelpers$1.previousItem(points, i)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers$1.nextItem(points, i)._model,\n\t\t\t\t\tlineModel.tension\n\t\t\t\t);\n\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t}\n\t\t}\n\n\t\tif (chart.options.elements.line.capBezierPoints) {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tif (isPointInArea(model, area)) {\n\t\t\t\t\tif (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t\tif (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data || [];\n\t\tvar area = chart.chartArea;\n\t\tvar ilen = points.length;\n\t\tvar halfBorderWidth;\n\t\tvar i = 0;\n\n\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\thelpers$1.canvas.clipArea(chart.ctx, {\n\t\t\t\tleft: area.left,\n\t\t\t\tright: area.right,\n\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t});\n\n\t\t\tmeta.dataset.draw();\n\n\t\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t\t}\n\n\t\t// Draw the points\n\t\tfor (; i < ilen; ++i) {\n\t\t\tpoints[i].draw(area);\n\t\t}\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n\t},\n});\n\nvar resolve$5 = helpers$1.options.resolve;\n\ncore_defaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_polarArea = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\t\tvar start = me.chart.options.startAngle || 0;\n\t\tvar starts = me._starts = [];\n\t\tvar angles = me._angles = [];\n\t\tvar arcs = meta.data;\n\t\tvar i, ilen, angle;\n\n\t\tme._updateRadius();\n\n\t\tmeta.count = me.countVisibleElements();\n\n\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\tstarts[i] = start;\n\t\t\tangle = me._computeAngle(i);\n\t\t\tangles[i] = angle;\n\t\t\tstart += angle;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateRadius: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\tchart.outerRadius = Math.max(minSize / 2, 0);\n\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar scale = chart.scale;\n\t\tvar labels = chart.data.labels;\n\n\t\tvar centerX = scale.xCenter;\n\t\tvar centerY = scale.yCenter;\n\n\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\tvar datasetStartAngle = opts.startAngle;\n\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar startAngle = me._starts[index];\n\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\t\t\t_scale: scale,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX,\n\t\t\t\ty: centerY,\n\t\t\t\tinnerRadius: 0,\n\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t}\n\t\t});\n\n\t\tarc.pivot();\n\t},\n\n\tcountVisibleElements: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar count = 0;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\treturn count;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\t\tvar valueOrDefault = helpers$1.valueOrDefault;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$5([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_computeAngle: function(index) {\n\t\tvar me = this;\n\t\tvar count = this.getMeta().count;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\n\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: me.chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\treturn resolve$5([\n\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t(2 * Math.PI) / count\n\t\t], context, index);\n\t}\n});\n\ncore_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\ncore_defaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\n// Pie charts are Doughnut chart with different defaults\nvar controller_pie = controller_doughnut;\n\nvar valueOrDefault$6 = helpers$1.valueOrDefault;\nvar resolve$6 = helpers$1.options.resolve;\n\ncore_defaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nvar controller_radar = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.chart.scale;\n\t\tvar dataset = me.getDataset();\n\t\tvar i, ilen;\n\n\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\tdataset.lineTension = dataset.tension;\n\t\t}\n\n\t\t// Utility\n\t\tline._scale = scale;\n\t\tline._datasetIndex = me.index;\n\t\t// Data\n\t\tline._children = points;\n\t\tline._loop = true;\n\t\t// Model\n\t\tline._model = me._resolveLineOptions(line);\n\n\t\tline.pivot();\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\t// Update bezier control points\n\t\tme.updateBezierControlPoints();\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar scale = me.chart.scale;\n\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\t\tvar options = me._resolvePointOptions(point, index);\n\t\tvar lineModel = me.getMeta().dataset._model;\n\t\tvar x = reset ? scale.xCenter : pointPosition.x;\n\t\tvar y = reset ? scale.yCenter : pointPosition.y;\n\n\t\t// Utility\n\t\tpoint._scale = scale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = me.index;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t]);\n\t\t}\n\n\t\tvalues.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n\n\t\treturn values;\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar area = me.chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tmodel = points[i]._model;\n\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\thelpers$1.previousItem(points, i, true)._model,\n\t\t\t\tmodel,\n\t\t\t\thelpers$1.nextItem(points, i, true)._model,\n\t\t\t\tmodel.tension\n\t\t\t);\n\n\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\tmodel.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n\t\t\tmodel.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n\t\t\tmodel.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n\t\t\tmodel.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n\t\t}\n\t},\n\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n\t}\n});\n\ncore_defaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Scatter charts use line controllers\nvar controller_scatter = controller_line;\n\n// NOTE export a map in which the key represents the controller type, not\n// the class, and so must be CamelCase in order to be correctly retrieved\n// by the controller in core.controller.js (`controllers[meta.type]`).\n\nvar controllers = {\n\tbar: controller_bar,\n\tbubble: controller_bubble,\n\tdoughnut: controller_doughnut,\n\thorizontalBar: controller_horizontalBar,\n\tline: controller_line,\n\tpolarArea: controller_polarArea,\n\tpie: controller_pie,\n\tradar: controller_radar,\n\tscatter: controller_scatter\n};\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {object} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers$1.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param {Chart} chart - the chart\n * @param {function} handler - the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {ChartElement[]} items - elements to filter\n * @param {object} position - the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {object} position - the point to be nearest to\n * @param {boolean} intersect - if true, only consider items that intersect the position\n * @param {function} distanceMetric - function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nvar core_interaction = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\treturn getNearestItems(chart, position, options.intersect, distanceMetric);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\nfunction filterByPosition(array, position) {\n\treturn helpers$1.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\nfunction findMaxPadding(boxes) {\n\tvar top = 0;\n\tvar left = 0;\n\tvar bottom = 0;\n\tvar right = 0;\n\thelpers$1.each(boxes, function(box) {\n\t\tif (box.getPadding) {\n\t\t\tvar boxPadding = box.getPadding();\n\t\t\ttop = Math.max(top, boxPadding.top);\n\t\t\tleft = Math.max(left, boxPadding.left);\n\t\t\tbottom = Math.max(bottom, boxPadding.bottom);\n\t\t\tright = Math.max(right, boxPadding.right);\n\t\t}\n\t});\n\treturn {\n\t\ttop: top,\n\t\tleft: left,\n\t\tbottom: bottom,\n\t\tright: right\n\t};\n}\n\nfunction addSizeByPosition(boxes, size) {\n\thelpers$1.each(boxes, function(box) {\n\t\tsize[box.position] += box.isHorizontal() ? box.height : box.width;\n\t});\n}\n\ncore_defaults._set('global', {\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\n/**\n * @interface ILayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} getPadding -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nvar core_layouts = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {ILayoutItem} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {ILayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers$1.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\tvar verticalBoxes = leftBoxes.concat(rightBoxes);\n\t\tvar horizontalBoxes = topBoxes.concat(bottomBoxes);\n\t\tvar outerBoxes = verticalBoxes.concat(horizontalBoxes);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length;\n\n\t\t// Step 3\n\t\t// TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n\t\t// var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar outerBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\tvar minBoxSizes = [];\n\t\tvar maxPadding;\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\twidth: minSize.width,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(outerBoxes, getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tmaxPadding = findMaxPadding(outerBoxes);\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (minBoxSize.horizontal) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(outerBoxSizes.left, maxPadding.left),\n\t\t\t\t\t\tright: Math.max(outerBoxSizes.right, maxPadding.right),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers$1.each(verticalBoxes, fitBox);\n\t\taddSizeByPosition(verticalBoxes, outerBoxSizes);\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers$1.each(horizontalBoxes, fitBox);\n\t\taddSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: outerBoxSizes.top,\n\t\t\t\tbottom: outerBoxSizes.bottom\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers$1.each(verticalBoxes, finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\touterBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\taddSizeByPosition(outerBoxes, outerBoxSizes);\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n\t\touterBoxSizes.left += leftPaddingAddition;\n\t\touterBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n\t\touterBoxSizes.top += topPaddingAddition;\n\t\touterBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n\t\tvar newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers$1.each(verticalBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers$1.each(horizontalBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = outerBoxSizes.top;\n\t\t\t\tbox.bottom = outerBoxSizes.top + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers$1.each(rightBoxes, placeBox);\n\t\thelpers$1.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: outerBoxSizes.left,\n\t\t\ttop: outerBoxSizes.top,\n\t\t\tright: outerBoxSizes.left + maxChartAreaWidth,\n\t\t\tbottom: outerBoxSizes.top + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers$1.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nvar platform_basic = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\nvar platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n\nvar platform_dom$1 = /*#__PURE__*/Object.freeze({\ndefault: platform_dom\n});\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n.default || n;\n}\n\nvar stylesheet = getCjsExportFromNamespace(platform_dom$1);\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers$1.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\t// eslint-disable-next-line getter-return\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers$1.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction createDiv(cls) {\n\tvar el = document.createElement('div');\n\tel.className = cls || '';\n\treturn el;\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar maxSize = 1000000;\n\n\t// NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n\t// https://github.com/chartjs/Chart.js/issues/5902\n\tvar resizer = createDiv(CSS_SIZE_MONITOR);\n\tvar expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n\tvar shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n\n\texpand.appendChild(createDiv());\n\tshrink.appendChild(createDiv());\n\n\tresizer.appendChild(expand);\n\tresizer.appendChild(shrink);\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = chart.options.maintainAspectRatio && node.parentNode;\n\t\t\tvar w = container ? container.clientWidth : 0;\n\t\t\tlistener(createEvent('resize', chart));\n\t\t\tif (container && container.clientWidth < w && chart.canvas) {\n\t\t\t\t// If the container size shrank during chart resize, let's assume\n\t\t\t\t// scrollbar appeared. So we resize again with the scrollbar visible -\n\t\t\t\t// effectively making chart smaller and the scrollbar hidden again.\n\t\t\t\t// Because we are inside `throttled`, and currently `ticking`, scroll\n\t\t\t\t// events are ignored during this whole 2 resize process.\n\t\t\t\t// If we assumed wrong and something else happened, we are resizing\n\t\t\t\t// twice in a frame (potential performance issue)\n\t\t\t\tlistener(createEvent('resize', chart));\n\t\t\t}\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// https://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nvar platform_dom$2 = {\n\t/**\n\t * When `true`, prevents the automatic injection of the stylesheet required to\n\t * correctly detect when the chart is added to the DOM and then resized. This\n\t * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n\t * to be manually imported to make this library compatible with any CSP.\n\t * See https://github.com/chartjs/Chart.js/issues/5208\n\t */\n\tdisableCSSInjection: false,\n\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\t/**\n\t * @private\n\t */\n\t_ensureLoaded: function() {\n\t\tif (this._loaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._loaded = true;\n\n\t\t// https://github.com/chartjs/Chart.js/issues/5208\n\t\tif (!this.disableCSSInjection) {\n\t\t\tinjectCSS(this, stylesheet);\n\t\t}\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// Load platform resources on first chart creation, to make possible to change\n\t\t// platform options after importing the library (e.g. `disableCSSInjection`).\n\t\tthis._ensureLoaded();\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers$1.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers$1.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\t// eslint-disable-next-line no-self-assign\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.addEvent = addListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.removeEvent = removeListener;\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nvar platform = helpers$1.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link IEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link IEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\ncore_defaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nvar core_plugins = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {IPlugin[]} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {object[]} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers$1.clone(core_defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\nvar core_scaleService = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers$1.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers$1.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tcore_layouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n\nvar valueOrDefault$7 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers$1.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\t\t\t\t\tif (item.label) {\n\t\t\t\t\t\ttitle = item.label;\n\t\t\t\t\t} else if (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers$1.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tif (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n\t\t\t\t\tlabel += tooltipItem.value;\n\t\t\t\t} else {\n\t\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\t}\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers$1.noop,\n\t\t\tfooter: helpers$1.noop,\n\t\t\tafterFooter: helpers$1.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {object} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: x / count,\n\t\t\ty: y / count\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {object} the position of the event in canvas coordinates\n\t * @returns {object} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers$1.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {string} value - The value to split by newline.\n * @returns {string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param element - the chart element (point, arc, bar) to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\tvar controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\tvar indexScale = controller._getIndexScale();\n\tvar valueScale = controller._getValueScale();\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tlabel: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tvalue: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = core_defaults.global;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers$1.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers$1.each(body, function(bodyItem) {\n\t\thelpers$1.each(bodyItem.before, maxLineWidth);\n\t\thelpers$1.each(bodyItem.lines, maxLineWidth);\n\t\thelpers$1.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers$1.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\nfunction getAlignedX(vm, align) {\n\treturn align === 'center'\n\t\t? vm.x + vm.width / 2\n\t\t: align === 'right'\n\t\t\t? vm.x + vm.width - vm.xPadding\n\t\t\t: vm.x + vm.xPadding;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports$3 = core_element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = tooltipPosition.x;\n\t\t\tmodel.y = tooltipPosition.y;\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._titleAlign);\n\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = vm.titleFontColor;\n\t\t\tctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar bodyAlign = vm._bodyAlign;\n\t\tvar body = vm.body;\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\tvar labelColors = vm.labelColors;\n\t\tvar xLinePadding = 0;\n\t\tvar colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n\t\tvar textColor;\n\n\t\tctx.textAlign = bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\tpt.x = getAlignedX(vm, bodyAlign);\n\n\t\t// Before Body\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = vm.bodyFontColor;\n\t\thelpers$1.each(vm.beforeBody, fillLineOfText);\n\n\t\txLinePadding = drawColorBoxes && bodyAlign !== 'right'\n\t\t\t? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\n\t\t\t: 0;\n\n\t\t// Draw body lines now\n\t\thelpers$1.each(body, function(bodyItem, i) {\n\t\t\ttextColor = vm.labelTextColors[i];\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers$1.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers$1.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = vm.legendColorBackground;\n\t\t\t\t\tctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = labelColors[i].borderColor;\n\t\t\t\t\tctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = labelColors[i].backgroundColor;\n\t\t\t\t\tctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers$1.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers$1.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._footerAlign);\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = vm.footerFontColor;\n\t\t\tctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers$1.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize) {\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\tctx.save();\n\t\t\tctx.globalAlpha = opacity;\n\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx);\n\n\t\t\tctx.restore();\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers$1.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nvar positioners_1 = positioners;\n\nvar core_tooltip = exports$3;\ncore_tooltip.positioners = positioners_1;\n\nvar valueOrDefault$8 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\telements: {},\n\tevents: [\n\t\t'mousemove',\n\t\t'mouseout',\n\t\t'click',\n\t\t'touchstart',\n\t\t'touchmove'\n\t],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tmaintainAspectRatio: true,\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0\n});\n\n/**\n * Recursively merge the given config objects representing the `scales` option\n * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n * returns a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeScaleConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\tvar slen = source[key].length;\n\t\t\t\tvar i, type, scale;\n\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\ttarget[key] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\ttype = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\thelpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\thelpers$1.merge(target[key][i], scale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Recursively merge the given config objects as the root options by handling\n * default scale options for the `scales` and `scale` properties, then returns\n * a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tvar tval = target[key] || {};\n\t\t\tvar sval = source[key];\n\n\t\t\tif (key === 'scales') {\n\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\ttarget[key] = mergeScaleConfig(tval, sval);\n\t\t\t} else if (key === 'scale') {\n\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\ttarget[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction initConfig(config) {\n\tconfig = config || {};\n\n\t// Do NOT use mergeConfig for the data object because this method merges arrays\n\t// and so would change references to labels and datasets, preventing data updates.\n\tvar data = config.data = config.data || {};\n\tdata.datasets = data.datasets || [];\n\tdata.labels = data.labels || [];\n\n\tconfig.options = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[config.type],\n\t\tconfig.options || {});\n\n\treturn config;\n}\n\nfunction updateConfig(chart) {\n\tvar newOptions = chart.options;\n\n\thelpers$1.each(chart.scales, function(scale) {\n\t\tcore_layouts.removeBox(chart, scale);\n\t});\n\n\tnewOptions = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[chart.config.type],\n\t\tnewOptions);\n\n\tchart.options = chart.config.options = newOptions;\n\tchart.ensureScalesHaveIDs();\n\tchart.buildOrUpdateScales();\n\n\t// Tooltip\n\tchart.tooltip._options = newOptions.tooltips;\n\tchart.tooltip.initialize();\n}\n\nfunction positionIsHorizontal(position) {\n\treturn position === 'top' || position === 'bottom';\n}\n\nvar Chart = function(item, config) {\n\tthis.construct(item, config);\n\treturn this;\n};\n\nhelpers$1.extend(Chart.prototype, /** @lends Chart */ {\n\t/**\n\t * @private\n\t */\n\tconstruct: function(item, config) {\n\t\tvar me = this;\n\n\t\tconfig = initConfig(config);\n\n\t\tvar context = platform.acquireContext(item, config);\n\t\tvar canvas = context && context.canvas;\n\t\tvar height = canvas && canvas.height;\n\t\tvar width = canvas && canvas.width;\n\n\t\tme.id = helpers$1.uid();\n\t\tme.ctx = context;\n\t\tme.canvas = canvas;\n\t\tme.config = config;\n\t\tme.width = width;\n\t\tme.height = height;\n\t\tme.aspectRatio = height ? width / height : null;\n\t\tme.options = config.options;\n\t\tme._bufferedRender = false;\n\n\t\t/**\n\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t * @prop Chart#chart\n\t\t * @deprecated since version 2.6.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tme.chart = me;\n\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t// Add the chart instance to the global namespace\n\t\tChart.instances[me.id] = me;\n\n\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\tObject.defineProperty(me, 'data', {\n\t\t\tget: function() {\n\t\t\t\treturn me.config.data;\n\t\t\t},\n\t\t\tset: function(value) {\n\t\t\t\tme.config.data = value;\n\t\t\t}\n\t\t});\n\n\t\tif (!context || !canvas) {\n\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\treturn;\n\t\t}\n\n\t\tme.initialize();\n\t\tme.update();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinitialize: function() {\n\t\tvar me = this;\n\n\t\t// Before init plugin notification\n\t\tcore_plugins.notify(me, 'beforeInit');\n\n\t\thelpers$1.retinaScale(me, me.options.devicePixelRatio);\n\n\t\tme.bindEvents();\n\n\t\tif (me.options.responsive) {\n\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\tme.resize(true);\n\t\t}\n\n\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\tme.ensureScalesHaveIDs();\n\t\tme.buildOrUpdateScales();\n\t\tme.initToolTip();\n\n\t\t// After init plugin notification\n\t\tcore_plugins.notify(me, 'afterInit');\n\n\t\treturn me;\n\t},\n\n\tclear: function() {\n\t\thelpers$1.canvas.clear(this);\n\t\treturn this;\n\t},\n\n\tstop: function() {\n\t\t// Stops any current animation loop occurring\n\t\tcore_animations.cancelAnimation(this);\n\t\treturn this;\n\t},\n\n\tresize: function(silent) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar canvas = me.canvas;\n\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\tvar newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\treturn;\n\t\t}\n\n\t\tcanvas.width = me.width = newWidth;\n\t\tcanvas.height = me.height = newHeight;\n\t\tcanvas.style.width = newWidth + 'px';\n\t\tcanvas.style.height = newHeight + 'px';\n\n\t\thelpers$1.retinaScale(me, options.devicePixelRatio);\n\n\t\tif (!silent) {\n\t\t\t// Notify any plugins about the resize\n\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\tcore_plugins.notify(me, 'resize', [newSize]);\n\n\t\t\t// Notify of resize\n\t\t\tif (options.onResize) {\n\t\t\t\toptions.onResize(me, newSize);\n\t\t\t}\n\n\t\t\tme.stop();\n\t\t\tme.update({\n\t\t\t\tduration: options.responsiveAnimationDuration\n\t\t\t});\n\t\t}\n\t},\n\n\tensureScalesHaveIDs: function() {\n\t\tvar options = this.options;\n\t\tvar scalesOptions = options.scales || {};\n\t\tvar scaleOptions = options.scale;\n\n\t\thelpers$1.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t});\n\n\t\thelpers$1.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t});\n\n\t\tif (scaleOptions) {\n\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t}\n\t},\n\n\t/**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n\tbuildOrUpdateScales: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar scales = me.scales || {};\n\t\tvar items = [];\n\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\tobj[id] = false;\n\t\t\treturn obj;\n\t\t}, {});\n\n\t\tif (options.scales) {\n\t\t\titems = items.concat(\n\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t}),\n\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif (options.scale) {\n\t\t\titems.push({\n\t\t\t\toptions: options.scale,\n\t\t\t\tdtype: 'radialLinear',\n\t\t\t\tisDefault: true,\n\t\t\t\tdposition: 'chartArea'\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(items, function(item) {\n\t\t\tvar scaleOptions = item.options;\n\t\t\tvar id = scaleOptions.id;\n\t\t\tvar scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t}\n\n\t\t\tupdated[id] = true;\n\t\t\tvar scale = null;\n\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\tscale = scales[id];\n\t\t\t\tscale.options = scaleOptions;\n\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\tscale.chart = me;\n\t\t\t} else {\n\t\t\t\tvar scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tscale = new scaleClass({\n\t\t\t\t\tid: id,\n\t\t\t\t\ttype: scaleType,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\t\t\t\tscales[scale.id] = scale;\n\t\t\t}\n\n\t\t\tscale.mergeTicksOptions();\n\n\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\tif (item.isDefault) {\n\t\t\t\tme.scale = scale;\n\t\t\t}\n\t\t});\n\t\t// clear up discarded scales\n\t\thelpers$1.each(updated, function(hasUpdated, id) {\n\t\t\tif (!hasUpdated) {\n\t\t\t\tdelete scales[id];\n\t\t\t}\n\t\t});\n\n\t\tme.scales = scales;\n\n\t\tcore_scaleService.addScalesToLayout(this);\n\t},\n\n\tbuildOrUpdateControllers: function() {\n\t\tvar me = this;\n\t\tvar newControllers = [];\n\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t}\n\t\t\tmeta.type = type;\n\n\t\t\tif (meta.controller) {\n\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\tmeta.controller.linkScales();\n\t\t\t} else {\n\t\t\t\tvar ControllerClass = controllers[meta.type];\n\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t}\n\n\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t}\n\t\t}, me);\n\n\t\treturn newControllers;\n\t},\n\n\t/**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n\tresetElements: function() {\n\t\tvar me = this;\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t}, me);\n\t},\n\n\t/**\n\t* Resets the chart back to it's state before the initial animation\n\t*/\n\treset: function() {\n\t\tthis.resetElements();\n\t\tthis.tooltip.initialize();\n\t},\n\n\tupdate: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tupdateConfig(me);\n\n\t\t// plugins options references might have change, let's invalidate the cache\n\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\tcore_plugins._invalidate(me);\n\n\t\tif (core_plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case the entire data object changed\n\t\tme.tooltip._data = me.data;\n\n\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t// Make sure all dataset controllers have correct meta data counts\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t}, me);\n\n\t\tme.updateLayout();\n\n\t\t// Can only reset the new controllers after the scales have been updated\n\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\thelpers$1.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\t\t}\n\n\t\tme.updateDatasets();\n\n\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t// after update.\n\t\tme.tooltip.initialize();\n\n\t\t// Last active contains items that were previously in the tooltip.\n\t\t// When we reset the tooltip, we need to clear it\n\t\tme.lastActive = [];\n\n\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\tcore_plugins.notify(me, 'afterUpdate');\n\n\t\tif (me._bufferedRender) {\n\t\t\tme._bufferedRequest = {\n\t\t\t\tduration: config.duration,\n\t\t\t\teasing: config.easing,\n\t\t\t\tlazy: config.lazy\n\t\t\t};\n\t\t} else {\n\t\t\tme.render(config);\n\t\t}\n\t},\n\n\t/**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n\tupdateLayout: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeLayout') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tcore_layouts.update(this, this.width, this.height);\n\n\t\t/**\n\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t * @method IPlugin#afterScaleUpdate\n\t\t * @deprecated since version 2.5.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tcore_plugins.notify(me, 'afterScaleUpdate');\n\t\tcore_plugins.notify(me, 'afterLayout');\n\t},\n\n\t/**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n\tupdateDatasets: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.updateDataset(i);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsUpdate');\n\t},\n\n\t/**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n\tupdateDataset: function(index) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.update();\n\n\t\tcore_plugins.notify(me, 'afterDatasetUpdate', [args]);\n\t},\n\n\trender: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tvar animationOptions = me.options.animation;\n\t\tvar duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n\t\tvar lazy = config.lazy;\n\n\t\tif (core_plugins.notify(me, 'beforeRender') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar onComplete = function(animation) {\n\t\t\tcore_plugins.notify(me, 'afterRender');\n\t\t\thelpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t};\n\n\t\tif (animationOptions && duration) {\n\t\t\tvar animation = new core_animation({\n\t\t\t\tnumSteps: duration / 16.66, // 60 fps\n\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers$1.easing.effects[animationObject.easing];\n\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t},\n\n\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\tonAnimationComplete: onComplete\n\t\t\t});\n\n\t\t\tcore_animations.addAnimation(me, animation, duration, lazy);\n\t\t} else {\n\t\t\tme.draw();\n\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\tonComplete(new core_animation({numSteps: 0, chart: me}));\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdraw: function(easingValue) {\n\t\tvar me = this;\n\n\t\tme.clear();\n\n\t\tif (helpers$1.isNullOrUndef(easingValue)) {\n\t\t\teasingValue = 1;\n\t\t}\n\n\t\tme.transition(easingValue);\n\n\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw all the scales\n\t\thelpers$1.each(me.boxes, function(box) {\n\t\t\tbox.draw(me.chartArea);\n\t\t}, me);\n\n\t\tme.drawDatasets(easingValue);\n\t\tme._drawTooltip(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDraw', [easingValue]);\n\t},\n\n\t/**\n\t * @private\n\t */\n\ttransition: function(easingValue) {\n\t\tvar me = this;\n\n\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t}\n\t\t}\n\n\t\tme.tooltip.transition(easingValue);\n\t},\n\n\t/**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n\tdrawDatasets: function(easingValue) {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw datasets reversed to support proper line stacking\n\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t}\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t},\n\n\t/**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n\tdrawDataset: function(index, easingValue) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.draw(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDatasetDraw', [args]);\n\t},\n\n\t/**\n\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t * @private\n\t */\n\t_drawTooltip: function(easingValue) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\t\tvar args = {\n\t\t\ttooltip: tooltip,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\ttooltip.draw();\n\n\t\tcore_plugins.notify(me, 'afterTooltipDraw', [args]);\n\t},\n\n\t/**\n\t * Get the single element that was clicked on\n\t * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t */\n\tgetElementAtEvent: function(e) {\n\t\treturn core_interaction.modes.single(this, e);\n\t},\n\n\tgetElementsAtEvent: function(e) {\n\t\treturn core_interaction.modes.label(this, e, {intersect: true});\n\t},\n\n\tgetElementsAtXAxis: function(e) {\n\t\treturn core_interaction.modes['x-axis'](this, e, {intersect: true});\n\t},\n\n\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\tvar method = core_interaction.modes[mode];\n\t\tif (typeof method === 'function') {\n\t\t\treturn method(this, e, options);\n\t\t}\n\n\t\treturn [];\n\t},\n\n\tgetDatasetAtEvent: function(e) {\n\t\treturn core_interaction.modes.dataset(this, e, {intersect: true});\n\t},\n\n\tgetDatasetMeta: function(datasetIndex) {\n\t\tvar me = this;\n\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\tif (!dataset._meta) {\n\t\t\tdataset._meta = {};\n\t\t}\n\n\t\tvar meta = dataset._meta[me.id];\n\t\tif (!meta) {\n\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\ttype: null,\n\t\t\t\tdata: [],\n\t\t\t\tdataset: null,\n\t\t\t\tcontroller: null,\n\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\txAxisID: null,\n\t\t\t\tyAxisID: null\n\t\t\t};\n\t\t}\n\n\t\treturn meta;\n\t},\n\n\tgetVisibleDatasetCount: function() {\n\t\tvar count = 0;\n\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t},\n\n\tisDatasetVisible: function(datasetIndex) {\n\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t},\n\n\tgenerateLegend: function() {\n\t\treturn this.options.legendCallback(this);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroyDatasetMeta: function(datasetIndex) {\n\t\tvar id = this.id;\n\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\tif (meta) {\n\t\t\tmeta.controller.destroy();\n\t\t\tdelete dataset._meta[id];\n\t\t}\n\t},\n\n\tdestroy: function() {\n\t\tvar me = this;\n\t\tvar canvas = me.canvas;\n\t\tvar i, ilen;\n\n\t\tme.stop();\n\n\t\t// dataset controllers need to cleanup associated data\n\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.destroyDatasetMeta(i);\n\t\t}\n\n\t\tif (canvas) {\n\t\t\tme.unbindEvents();\n\t\t\thelpers$1.canvas.clear(me);\n\t\t\tplatform.releaseContext(me.ctx);\n\t\t\tme.canvas = null;\n\t\t\tme.ctx = null;\n\t\t}\n\n\t\tcore_plugins.notify(me, 'destroy');\n\n\t\tdelete Chart.instances[me.id];\n\t},\n\n\ttoBase64Image: function() {\n\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t},\n\n\tinitToolTip: function() {\n\t\tvar me = this;\n\t\tme.tooltip = new core_tooltip({\n\t\t\t_chart: me,\n\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t_data: me.data,\n\t\t\t_options: me.options.tooltips\n\t\t}, me);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners = {};\n\t\tvar listener = function() {\n\t\t\tme.eventHandler.apply(me, arguments);\n\t\t};\n\n\t\thelpers$1.each(me.options.events, function(type) {\n\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\tlisteners[type] = listener;\n\t\t});\n\n\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\tif (me.options.responsive) {\n\t\t\tlistener = function() {\n\t\t\t\tme.resize();\n\t\t\t};\n\n\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\tlisteners.resize = listener;\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tunbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners;\n\t\tif (!listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete me._listeners;\n\t\thelpers$1.each(listeners, function(listener, type) {\n\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t});\n\t},\n\n\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\tvar element, i, ilen;\n\n\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\telement = elements[i];\n\t\t\tif (element) {\n\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\teventHandler: function(e) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\n\t\tif (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Buffer any update calls so that renders do not occur\n\t\tme._bufferedRender = true;\n\t\tme._bufferedRequest = null;\n\n\t\tvar changed = me.handleEvent(e);\n\t\t// for smooth tooltip animations issue #4989\n\t\t// the tooltip should be the source of change\n\t\t// Animation check workaround:\n\t\t// tooltip._start will be null when tooltip isn't animating\n\t\tif (tooltip) {\n\t\t\tchanged = tooltip._start\n\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterEvent', [e]);\n\n\t\tvar bufferedRequest = me._bufferedRequest;\n\t\tif (bufferedRequest) {\n\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\tme.render(bufferedRequest);\n\t\t} else if (changed && !me.animating) {\n\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\tme.stop();\n\n\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\tme.render({\n\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\tlazy: true\n\t\t\t});\n\t\t}\n\n\t\tme._bufferedRender = false;\n\t\tme._bufferedRequest = null;\n\n\t\treturn me;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event the event to handle\n\t * @return {boolean} true if the chart needs to re-render\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me.options || {};\n\t\tvar hoverOptions = options.hover;\n\t\tvar changed = false;\n\n\t\tme.lastActive = me.lastActive || [];\n\n\t\t// Find Active Elements for hover and tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme.active = [];\n\t\t} else {\n\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t}\n\n\t\t// Invoke onHover hook\n\t\t// Need to call with native event here to not break backwards compatibility\n\t\thelpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\tif (options.onClick) {\n\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t}\n\t\t}\n\n\t\t// Remove styling for last active (even if it may still be active)\n\t\tif (me.lastActive.length) {\n\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t}\n\n\t\t// Built in hover styling\n\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t}\n\n\t\tchanged = !helpers$1.arrayEquals(me.active, me.lastActive);\n\n\t\t// Remember Last Actives\n\t\tme.lastActive = me.active;\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * NOTE(SB) We actually don't use this container anymore but we need to keep it\n * for backward compatibility. Though, it can still be useful for plugins that\n * would need to work on multiple charts?!\n */\nChart.instances = {};\n\nvar core_controller = Chart;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart instead.\n * @class Chart.Controller\n * @deprecated since version 2.6\n * @todo remove at version 3\n * @private\n */\nChart.Controller = Chart;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\nChart.types = {};\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.configMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.configMerge = mergeConfig;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.scaleMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.scaleMerge = mergeScaleConfig;\n\nvar core_helpers = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers$1.where = function(collection, filterCallback) {\n\t\tif (helpers$1.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers$1.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers$1.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers$1.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers$1.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers$1.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers$1.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers$1.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers$1.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers$1.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers$1.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers$1.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers$1.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\n\t/**\n\t * Returns the number of decimal places\n\t * i.e. the number of digits after the decimal point, of the value of this Number.\n\t * @param {number} x - A number.\n\t * @returns {number} The number of decimal places.\n\t * @private\n\t */\n\thelpers$1._decimalPlaces = function(x) {\n\t\tif (!helpers$1.isFinite(x)) {\n\t\t\treturn;\n\t\t}\n\t\tvar e = 1;\n\t\tvar p = 0;\n\t\twhile (Math.round(x * e) / e !== x) {\n\t\t\te *= 10;\n\t\t\tp++;\n\t\t}\n\t\treturn p;\n\t};\n\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers$1.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers$1.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\n\t/**\n\t * Provided for backward compatibility, not available anymore\n\t * @function Chart.helpers.aliasPixel\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t */\n\thelpers$1.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\n\t/**\n\t * Returns the aligned pixel value to avoid anti-aliasing blur\n\t * @param {Chart} chart - The chart instance.\n\t * @param {number} pixel - A pixel value.\n\t * @param {number} width - The width of the element.\n\t * @returns {number} The aligned pixel value.\n\t * @private\n\t */\n\thelpers$1._alignPixel = function(chart, pixel, width) {\n\t\tvar devicePixelRatio = chart.currentDevicePixelRatio;\n\t\tvar halfWidth = width / 2;\n\t\treturn Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n\t};\n\n\thelpers$1.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers$1.EPSILON = Number.EPSILON || 1e-14;\n\thelpers$1.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers$1.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers$1.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers$1.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers$1.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers$1.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t/**\n\t * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n\t * @param {HTMLElement} domNode - the node to check the constraint on\n\t * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n\t * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n\t * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n\t */\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers$1._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers$1._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers$1.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers$1._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.toString() === '[object ShadowRoot]') {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers$1.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers$1.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers$1.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers$1.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers$1.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers$1.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers$1.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers$1.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers$1.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers$1.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers$1.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers$1.color = !chartjsColor ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = core_defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn chartjsColor(value);\n\t\t};\n\n\thelpers$1.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient) ?\n\t\t\tcolorValue :\n\t\t\thelpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\nfunction abstract() {\n\tthrow new Error(\n\t\t'This method is not implemented: either no adapter can ' +\n\t\t'be found or an incomplete integration was provided.'\n\t);\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n/**\n * Currently supported unit string values.\n * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n * @memberof Chart._adapters._date\n * @name Unit\n */\n\n/**\n * @class\n */\nfunction DateAdapter(options) {\n\tthis.options = options || {};\n}\n\nhelpers$1.extend(DateAdapter.prototype, /** @lends DateAdapter */ {\n\t/**\n\t * Returns a map of time formats for the supported formatting units defined\n\t * in Unit as well as 'datetime' representing a detailed date/time string.\n\t * @returns {{string: string}}\n\t */\n\tformats: abstract,\n\n\t/**\n\t * Parses the given `value` and return the associated timestamp.\n\t * @param {any} value - the value to parse (usually comes from the data)\n\t * @param {string} [format] - the expected data format\n\t * @returns {(number|null)}\n\t * @function\n\t */\n\tparse: abstract,\n\n\t/**\n\t * Returns the formatted date in the specified `format` for a given `timestamp`.\n\t * @param {number} timestamp - the timestamp to format\n\t * @param {string} format - the date/time token\n\t * @return {string}\n\t * @function\n\t */\n\tformat: abstract,\n\n\t/**\n\t * Adds the specified `amount` of `unit` to the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {number} amount - the amount to add\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tadd: abstract,\n\n\t/**\n\t * Returns the number of `unit` between the given timestamps.\n\t * @param {number} max - the input timestamp (reference)\n\t * @param {number} min - the timestamp to substract\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tdiff: abstract,\n\n\t/**\n\t * Returns start of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n\t * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n\t * @function\n\t */\n\tstartOf: abstract,\n\n\t/**\n\t * Returns end of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @function\n\t */\n\tendOf: abstract,\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility for scale.getValueForPixel(),\n\t * this method should be overridden only by the moment adapter.\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(value) {\n\t\treturn value;\n\t}\n});\n\nDateAdapter.override = function(members) {\n\thelpers$1.extend(DateAdapter.prototype, members);\n};\n\nvar _date = DateAdapter;\n\nvar core_adapters = {\n\t_date: _date\n};\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nvar core_ticks = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {string|string[]} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers$1.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {number} the value to be formatted\n\t\t * @param index {number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {number[]} the list of ticks being converted\n\t\t * @return {string} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers$1.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers$1.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers$1.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\nvar valueOrDefault$9 = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\ncore_defaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: core_ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (scale.getTicks().length === 1) {\n\t\t\tlineValue -= scale.isHorizontal() ?\n\t\t\t\tMath.max(lineValue - scale.left, scale.right - lineValue) :\n\t\t\t\tMath.max(lineValue - scale.top, scale.bottom - lineValue);\n\t\t} else if (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers$1.isArray(tick) ?\n\t\thelpers$1.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nvar core_scale = core_element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers$1.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers$1.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\n\t\tme._maxLabelLines = 0;\n\t\tme.longestLabelWidth = 0;\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\t// Allow modification of ticks in callback.\n\t\tticks = me.afterBuildTicks(ticks) || ticks;\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers$1.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers$1.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers$1.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers$1.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers$1.noop,\n\tafterDataLimits: function() {\n\t\thelpers$1.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers$1.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers$1.noop,\n\tafterBuildTicks: function(ticks) {\n\t\tvar me = this;\n\t\t// ticks is empty for old axis implementations here\n\t\tif (helpers$1.isArray(ticks) && ticks.length) {\n\t\t\treturn helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n\t\t}\n\t\t// Support old implementations (that modified `this.ticks` directly in buildTicks)\n\t\tme.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n\t\treturn ticks;\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\t\tcontext.font = tickFont.string;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers$1.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = me._isVisible();\n\t\tvar position = opts.position;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar tickFont = parseFont(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelFont = parseFont(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing the labels\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t// Store max number of lines and widest label for _autoSkip\n\t\t\tme._maxLabelLines = tallestLabelHeightInLines;\n\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.lineHeight * tallestLabelHeightInLines)\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.string;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n\t\t\t\tvar offsetLeft = me.getPixelForTick(0) - me.left;\n\t\t\t\tvar offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n\t\t\t\tvar paddingLeft, paddingRight;\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tpaddingLeft = position === 'bottom' ? (cosRotation * firstLabelWidth) : (cosRotation * lineSpace);\n\t\t\t\t\tpaddingRight = position === 'bottom' ? (cosRotation * lineSpace) : (cosRotation * lastLabelWidth);\n\t\t\t\t} else {\n\t\t\t\t\tpaddingLeft = firstLabelWidth / 2;\n\t\t\t\t\tpaddingRight = lastLabelWidth / 2;\n\t\t\t\t}\n\t\t\t\tme.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\t\t\t\tme.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers$1.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers$1.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers$1.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + pixel;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + valueOffset;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar skipRatio = false;\n\t\tvar maxTicks = optionTicks.maxTicksLimit;\n\n\t\t// Total space needed to display all ticks. First and last ticks are\n\t\t// drawn as their center at end of axis, so tickCount-1\n\t\tvar ticksLength = me._tickSize() * (tickCount - 1);\n\n\t\t// Axis length\n\t\tvar axisLength = isHorizontal\n\t\t\t? me.width - (me.paddingLeft + me.paddingRight)\n\t\t\t: me.height - (me.paddingTop + me.PaddingBottom);\n\n\t\tvar result = [];\n\t\tvar i, tick;\n\n\t\tif (ticksLength > axisLength) {\n\t\t\tskipRatio = 1 + Math.floor(ticksLength / axisLength);\n\t\t}\n\n\t\t// if they defined a max number of optionTicks,\n\t\t// increase skipRatio until that number is met\n\t\tif (tickCount > maxTicks) {\n\t\t\tskipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\tif (skipRatio > 1 && i % skipRatio > 0) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_tickSize: function() {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\n\t\t// Calculate space needed by label in axis direction.\n\t\tvar rot = helpers$1.toRadians(me.labelRotation);\n\t\tvar cos = Math.abs(Math.cos(rot));\n\t\tvar sin = Math.abs(Math.sin(rot));\n\n\t\tvar padding = optionTicks.autoSkipPadding || 0;\n\t\tvar w = (me.longestLabelWidth + padding) || 0;\n\n\t\tvar tickFont = helpers$1.options._parseFont(optionTicks);\n\t\tvar h = (me._maxLabelLines * tickFont.lineHeight + padding) || 0;\n\n\t\t// Calculate space needed for 1 tick in axis direction.\n\t\treturn isHorizontal\n\t\t\t? h * cos > w * sin ? w / cos : h / sin\n\t\t\t: h * sin < w * cos ? h / cos : w / sin;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_isVisible: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar display = me.options.display;\n\t\tvar i, ilen, meta;\n\n\t\tif (display !== 'auto') {\n\t\t\treturn !!display;\n\t\t}\n\n\t\t// When 'auto', the scale is visible if at least one associated dataset is visible.\n\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t * Actually draw the scale on the canvas\n\t * @param {object} chartArea - the area of the chart to draw full grid lines on\n\t */\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\n\t\tif (!me._isVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar chart = me.chart;\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultFontColor = globalDefaults.defaultFontColor;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\t\tvar position = options.position;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isMirrored = optionTicks.mirror;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n\t\tvar tickFont = parseFont(optionTicks);\n\t\tvar lineHeight = tickFont.lineHeight;\n\t\tvar majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n\t\tvar majorTickFont = parseFont(optionMajorTicks);\n\t\tvar tickPadding = optionTicks.padding;\n\t\tvar labelOffset = optionTicks.labelOffset;\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n\t\tvar scaleLabelFont = parseFont(scaleLabel);\n\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n\t\tvar alignPixel = helpers$1._alignPixel;\n\t\tvar borderValue, tickStart, tickEnd;\n\n\t\tif (position === 'top') {\n\t\t\tborderValue = alignPixel(chart, me.bottom, axisWidth);\n\t\t\ttickStart = me.bottom - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else if (position === 'bottom') {\n\t\t\tborderValue = alignPixel(chart, me.top, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.top + tl;\n\t\t} else if (position === 'left') {\n\t\t\tborderValue = alignPixel(chart, me.right, axisWidth);\n\t\t\ttickStart = me.right - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else {\n\t\t\tborderValue = alignPixel(chart, me.left, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.left + tl;\n\t\t}\n\n\t\tvar epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n\t\thelpers$1.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers$1.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash || [];\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n\t\t\t} else {\n\t\t\t\tlineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = gridLines.borderDash || [];\n\t\t\t\tborderDashOffset = gridLines.borderDashOffset || 0.0;\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n\t\t\tvar labelCount = helpers$1.isArray(label) ? label.length : 1;\n\t\t\tvar lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (lineValue < me.left - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tty1 = tickStart;\n\t\t\t\tty2 = tickEnd;\n\t\t\t\tlabelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\tif (position === 'top') {\n\t\t\t\t\ty1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t\ttextOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n\t\t\t\tif (lineValue < me.top - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tickStart;\n\t\t\t\ttx2 = tickEnd;\n\t\t\t\tty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tlabelY = me.getPixelForTick(index) + labelOffset;\n\t\t\t\ttextOffset = (1 - labelCount) * lineHeight / 2;\n\n\t\t\t\tif (position === 'left') {\n\t\t\t\t\tx1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\ttextAlign = isMirrored ? 'left' : 'right';\n\t\t\t\t\tlabelX = me.right - labelXOffset;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextAlign = isMirrored ? 'right' : 'left';\n\t\t\t\t\tlabelX = me.left + labelXOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextOffset: textOffset,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers$1.each(itemsToDraw, function(itemToDraw) {\n\t\t\tvar glWidth = itemToDraw.glWidth;\n\t\t\tvar glColor = itemToDraw.glColor;\n\n\t\t\tif (gridLines.display && glWidth && glColor) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = glWidth;\n\t\t\t\tcontext.strokeStyle = glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tvar y = itemToDraw.textOffset;\n\t\t\t\tif (helpers$1.isArray(label)) {\n\t\t\t\t\tfor (var i = 0; i < label.length; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, y);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.string;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (axisWidth) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tvar firstLineWidth = axisWidth;\n\t\t\tvar lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n\t\t\tvar x1, x2, y1, y2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tx1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\tx2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\ty1 = y2 = borderValue;\n\t\t\t} else {\n\t\t\t\ty1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\ty2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\tx1 = x2 = borderValue;\n\t\t\t}\n\n\t\t\tcontext.lineWidth = axisWidth;\n\t\t\tcontext.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n\nvar defaultConfig = {\n\tposition: 'bottom'\n};\n\nvar scale_category = core_scale.extend({\n\t/**\n\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t* else fall back to data.labels\n\t* @private\n\t*/\n\tgetLabels: function() {\n\t\tvar data = this.chart.data;\n\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\tme.minIndex = 0;\n\t\tme.maxIndex = labels.length - 1;\n\t\tvar findIndex;\n\n\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t// user specified min value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t}\n\n\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t// user specified max value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t}\n\n\t\tme.min = labels[me.minIndex];\n\t\tme.max = labels[me.maxIndex];\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\t// If we are viewing some subset of labels, slice the original array\n\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\n\t\tif (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n\t\t\treturn me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n\t\t}\n\n\t\treturn me.ticks[index - me.minIndex];\n\t},\n\n\t// Used to get data value locations.  Value can either be an index or a numerical value\n\tgetPixelForValue: function(value, index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\t// 1 is added because we need the length but we have the indexes\n\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t// If value is a data object, then index is the index in the data array,\n\t\t// not the index of the scale. We need to change that.\n\t\tvar valueCategory;\n\t\tif (value !== undefined && value !== null) {\n\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t}\n\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\tvar labels = me.getLabels();\n\t\t\tvalue = valueCategory || value;\n\t\t\tvar idx = labels.indexOf(value);\n\t\t\tindex = idx !== -1 ? idx : index;\n\t\t}\n\n\t\tif (me.isHorizontal()) {\n\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t}\n\n\t\t\treturn me.left + widthOffset;\n\t\t}\n\t\tvar valueHeight = me.height / offsetAmt;\n\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\tif (offset) {\n\t\t\theightOffset += (valueHeight / 2);\n\t\t}\n\n\t\treturn me.top + heightOffset;\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tvar value;\n\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\tvar horz = me.isHorizontal();\n\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\tpixel -= horz ? me.left : me.top;\n\n\t\tif (offset) {\n\t\t\tpixel -= (valueDimension / 2);\n\t\t}\n\n\t\tif (pixel <= 0) {\n\t\t\tvalue = 0;\n\t\t} else {\n\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t}\n\n\t\treturn value + me.minIndex;\n\t},\n\n\tgetBasePixel: function() {\n\t\treturn this.bottom;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults = defaultConfig;\nscale_category._defaults = _defaults;\n\nvar noop = helpers$1.noop;\nvar isNullOrUndef = helpers$1.isNullOrUndef;\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar MIN_SPACING = 1e-14;\n\tvar stepSize = generationOptions.stepSize;\n\tvar unit = stepSize || 1;\n\tvar maxNumSpaces = generationOptions.maxTicks - 1;\n\tvar min = generationOptions.min;\n\tvar max = generationOptions.max;\n\tvar precision = generationOptions.precision;\n\tvar rmin = dataRange.min;\n\tvar rmax = dataRange.max;\n\tvar spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n\tvar factor, niceMin, niceMax, numSpaces;\n\n\t// Beyond MIN_SPACING floating point numbers being to lose precision\n\t// such that we can't do the math necessary to generate ticks\n\tif (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n\t\treturn [rmin, rmax];\n\t}\n\n\tnumSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\tif (numSpaces > maxNumSpaces) {\n\t\t// If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n\t\tspacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n\t}\n\n\tif (stepSize || isNullOrUndef(precision)) {\n\t\t// If a precision is not specified, calculate factor based on spacing\n\t\tfactor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n\t} else {\n\t\t// If the user specified a precision, round to that number of decimal places\n\t\tfactor = Math.pow(10, precision);\n\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t}\n\n\tniceMin = Math.floor(rmin / spacing) * spacing;\n\tniceMax = Math.ceil(rmax / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n\t\t\tniceMin = min;\n\t\t}\n\t\tif (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n\t\t\tniceMax = max;\n\t\t}\n\t}\n\n\tnumSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tniceMin = Math.round(niceMin * factor) / factor;\n\tniceMax = Math.round(niceMax * factor) / factor;\n\tticks.push(isNullOrUndef(min) ? niceMin : min);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n\t}\n\tticks.push(isNullOrUndef(max) ? niceMax : max);\n\n\treturn ticks;\n}\n\nvar scale_linearbase = core_scale.extend({\n\tgetRightValue: function(value) {\n\t\tif (typeof value === 'string') {\n\t\t\treturn +value;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, value);\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t// axis, they can manually override it\n\t\tif (tickOpts.beginAtZero) {\n\t\t\tvar minSign = helpers$1.sign(me.min);\n\t\t\tvar maxSign = helpers$1.sign(me.max);\n\n\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t// move the top up to 0\n\t\t\t\tme.max = 0;\n\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t// move the bottom down to 0\n\t\t\t\tme.min = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\tif (tickOpts.min !== undefined) {\n\t\t\tme.min = tickOpts.min;\n\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t} else {\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t}\n\t\t}\n\n\t\tif (tickOpts.max !== undefined) {\n\t\t\tme.max = tickOpts.max;\n\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t} else {\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t}\n\t\t}\n\n\t\tif (setMin !== setMax) {\n\t\t\t// We set the min or the max but not both.\n\t\t\t// So ensure that our range is good\n\t\t\t// Inverted or 0 length range can happen when\n\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\tif (me.min >= me.max) {\n\t\t\t\tif (setMin) {\n\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (me.min === me.max) {\n\t\t\tme.max++;\n\n\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\tme.min--;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar stepSize = tickOpts.stepSize;\n\t\tvar maxTicksLimit = tickOpts.maxTicksLimit;\n\t\tvar maxTicks;\n\n\t\tif (stepSize) {\n\t\t\tmaxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n\t\t} else {\n\t\t\tmaxTicks = me._computeTickLimit();\n\t\t\tmaxTicksLimit = maxTicksLimit || 11;\n\t\t}\n\n\t\tif (maxTicksLimit) {\n\t\t\tmaxTicks = Math.min(maxTicksLimit, maxTicks);\n\t\t}\n\n\t\treturn maxTicks;\n\t},\n\n\t_computeTickLimit: function() {\n\t\treturn Number.POSITIVE_INFINITY;\n\t},\n\n\thandleDirectionalChanges: noop,\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t// the graph. Make sure we always have at least 2 ticks\n\t\tvar maxTicks = me.getTickLimit();\n\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\tvar numericGeneratorOptions = {\n\t\t\tmaxTicks: maxTicks,\n\t\t\tmin: tickOpts.min,\n\t\t\tmax: tickOpts.max,\n\t\t\tprecision: tickOpts.precision,\n\t\t\tstepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\tme.handleDirectionalChanges();\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\tticks.reverse();\n\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(me);\n\t}\n});\n\nvar defaultConfig$1 = {\n\tposition: 'left',\n\tticks: {\n\t\tcallback: core_ticks.formatters.linear\n\t}\n};\n\nvar scale_linear = scale_linearbase.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar DEFAULT_MIN = 0;\n\t\tvar DEFAULT_MAX = 1;\n\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// First Calculate the range\n\t\tme.min = null;\n\t\tme.max = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Store these per type\n\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\tvar minVal = helpers$1.min(values);\n\t\t\t\tvar maxVal = helpers$1.max(values);\n\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickFont;\n\n\t\tif (me.isHorizontal()) {\n\t\t\treturn Math.ceil(me.width / 40);\n\t\t}\n\t\ttickFont = helpers$1.options._parseFont(me.options.ticks);\n\t\treturn Math.ceil(me.height / tickFont.lineHeight);\n\t},\n\n\t// Called after the ticks are built. We need\n\thandleDirectionalChanges: function() {\n\t\tif (!this.isHorizontal()) {\n\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\tthis.ticks.reverse();\n\t\t}\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\t// Utils\n\tgetPixelForValue: function(value) {\n\t\t// This must be called after fit has been run so that\n\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\tvar me = this;\n\t\tvar start = me.start;\n\n\t\tvar rightValue = +me.getRightValue(value);\n\t\tvar pixel;\n\t\tvar range = me.end - start;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t} else {\n\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\treturn me.start + ((me.end - me.start) * offset);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$1 = defaultConfig$1;\nscale_linear._defaults = _defaults$1;\n\nvar valueOrDefault$a = helpers$1.valueOrDefault;\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks$1(generationOptions, dataRange) {\n\tvar ticks = [];\n\n\tvar tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers$1.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers$1.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\nvar defaultConfig$2 = {\n\tposition: 'left',\n\n\t// label settings\n\tticks: {\n\t\tcallback: core_ticks.formatters.logarithmic\n\t}\n};\n\n// TODO(v3): change this to positiveOrDefault\nfunction nonNegativeOrDefault(value, defaultValue) {\n\treturn helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n}\n\nvar scale_logarithmic = core_scale.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// Calculate Range\n\t\tme.min = null;\n\t\tme.max = null;\n\t\tme.minNotZero = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\tvar minVal = helpers$1.min(valuesForType);\n\t\t\t\t\tvar maxVal = helpers$1.max(valuesForType);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar DEFAULT_MIN = 1;\n\t\tvar DEFAULT_MAX = 10;\n\n\t\tme.min = nonNegativeOrDefault(tickOpts.min, me.min);\n\t\tme.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n\t\tif (me.min === me.max) {\n\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n\t\t\t\tme.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n\t\t\t} else {\n\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t}\n\t\t}\n\t\tif (me.min === null) {\n\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n\t\t}\n\t\tif (me.max === null) {\n\t\t\tme.max = me.min !== 0\n\t\t\t\t? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1)\n\t\t\t\t: DEFAULT_MAX;\n\t\t}\n\t\tif (me.minNotZero === null) {\n\t\t\tif (me.min > 0) {\n\t\t\t\tme.minNotZero = me.min;\n\t\t\t} else if (me.max < 1) {\n\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n\t\t\t} else {\n\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t}\n\t\t}\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = !me.isHorizontal();\n\n\t\tvar generationOptions = {\n\t\t\tmin: nonNegativeOrDefault(tickOpts.min),\n\t\t\tmax: nonNegativeOrDefault(tickOpts.max)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks$1(generationOptions, me);\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\treverse = !reverse;\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t\tif (reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tthis.tickValues = this.ticks.slice();\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(this);\n\t},\n\n\t// Get the correct tooltip label\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t},\n\n\t/**\n\t * Returns the value of the first tick.\n\t * @param {number} value - The minimum not zero value.\n\t * @return {number} The first tick value.\n\t * @private\n\t */\n\t_getFirstTickValue: function(value) {\n\t\tvar exp = Math.floor(helpers$1.log10(value));\n\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\treturn significand * Math.pow(10, exp);\n\t},\n\n\tgetPixelForValue: function(value) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar offset = 0;\n\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\tvalue = +me.getRightValue(value);\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t\tsign = -1;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t\tsign = 1;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tpixel = reverse ? me.right : me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\toffset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tif (value !== 0) {\n\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t}\n\t\t\tpixel += sign * offset;\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar innerDimension, start, end, value;\n\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\tvar offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tvalue -= offset;\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tvalue *= log10(end) - log10(start);\n\t\t\tvalue /= innerDimension;\n\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t}\n\t\treturn value;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$2 = defaultConfig$2;\nscale_logarithmic._defaults = _defaults$2;\n\nvar valueOrDefault$b = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\nvar resolve$7 = helpers$1.options.resolve;\n\nvar defaultConfig$3 = {\n\tdisplay: true,\n\n\t// Boolean - Whether to animate scaling the chart from the centre\n\tanimate: true,\n\tposition: 'chartArea',\n\n\tangleLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\tgridLines: {\n\t\tcircular: false\n\t},\n\n\t// label settings\n\tticks: {\n\t\t// Boolean - Show a backdrop to the scale label\n\t\tshowLabelBackdrop: true,\n\n\t\t// String - The colour of the label backdrop\n\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t// Number - The backdrop padding above & below the label in pixels\n\t\tbackdropPaddingY: 2,\n\n\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\tbackdropPaddingX: 2,\n\n\t\tcallback: core_ticks.formatters.linear\n\t},\n\n\tpointLabels: {\n\t\t// Boolean - if true, show point labels\n\t\tdisplay: true,\n\n\t\t// Number - Point label font size in pixels\n\t\tfontSize: 10,\n\n\t\t// Function - Used to convert point labels\n\t\tcallback: function(label) {\n\t\t\treturn label;\n\t\t}\n\t}\n};\n\nfunction getValueCount(scale) {\n\tvar opts = scale.options;\n\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n}\n\nfunction getTickBackdropHeight(opts) {\n\tvar tickOpts = opts.ticks;\n\n\tif (tickOpts.display && opts.display) {\n\t\treturn valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n\t}\n\treturn 0;\n}\n\nfunction measureLabelSize(ctx, lineHeight, label) {\n\tif (helpers$1.isArray(label)) {\n\t\treturn {\n\t\t\tw: helpers$1.longestText(ctx, ctx.font, label),\n\t\t\th: label.length * lineHeight\n\t\t};\n\t}\n\n\treturn {\n\t\tw: ctx.measureText(label).width,\n\t\th: lineHeight\n\t};\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n\tif (angle === min || angle === max) {\n\t\treturn {\n\t\t\tstart: pos - (size / 2),\n\t\t\tend: pos + (size / 2)\n\t\t};\n\t} else if (angle < min || angle > max) {\n\t\treturn {\n\t\t\tstart: pos - size,\n\t\t\tend: pos\n\t\t};\n\t}\n\n\treturn {\n\t\tstart: pos,\n\t\tend: pos + size\n\t};\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n\t// Right, this is really confusing and there is a lot of maths going on here\n\t// The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t//\n\t// Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t//\n\t// Solution:\n\t//\n\t// We assume the radius of the polygon is half the size of the canvas at first\n\t// at each index we check if the text overlaps.\n\t//\n\t// Where it does, we store that angle and that index.\n\t//\n\t// After finding the largest index and angle we calculate how much we need to remove\n\t// from the shape radius to move the point inwards by that x.\n\t//\n\t// We average the left and right distances to get the maximum shape radius that can fit in the box\n\t// along with labels.\n\t//\n\t// Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t// on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t//\n\t// This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t// and position it in the most space efficient manner\n\t//\n\t// https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n\tvar plFont = helpers$1.options._parseFont(scale.options.pointLabels);\n\n\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\tvar furthestLimits = {\n\t\tl: 0,\n\t\tr: scale.width,\n\t\tt: 0,\n\t\tb: scale.height - scale.paddingTop\n\t};\n\tvar furthestAngles = {};\n\tvar i, textSize, pointPosition;\n\n\tscale.ctx.font = plFont.string;\n\tscale._pointLabelSizes = [];\n\n\tvar valueCount = getValueCount(scale);\n\tfor (i = 0; i < valueCount; i++) {\n\t\tpointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n\t\ttextSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\tvar angle = helpers$1.toDegrees(angleRadians) % 360;\n\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\tfurthestAngles.l = angleRadians;\n\t\t}\n\n\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\tfurthestAngles.r = angleRadians;\n\t\t}\n\n\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\tfurthestAngles.t = angleRadians;\n\t\t}\n\n\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\tfurthestAngles.b = angleRadians;\n\t\t}\n\t}\n\n\tscale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n}\n\nfunction getTextAlignForAngle(angle) {\n\tif (angle === 0 || angle === 180) {\n\t\treturn 'center';\n\t} else if (angle < 180) {\n\t\treturn 'left';\n\t}\n\n\treturn 'right';\n}\n\nfunction fillText(ctx, text, position, lineHeight) {\n\tvar y = position.y + lineHeight / 2;\n\tvar i, ilen;\n\n\tif (helpers$1.isArray(text)) {\n\t\tfor (i = 0, ilen = text.length; i < ilen; ++i) {\n\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\ty += lineHeight;\n\t\t}\n\t} else {\n\t\tctx.fillText(text, position.x, y);\n\t}\n}\n\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\tif (angle === 90 || angle === 270) {\n\t\tposition.y -= (textSize.h / 2);\n\t} else if (angle > 270 || angle < 90) {\n\t\tposition.y -= textSize.h;\n\t}\n}\n\nfunction drawPointLabels(scale) {\n\tvar ctx = scale.ctx;\n\tvar opts = scale.options;\n\tvar angleLineOpts = opts.angleLines;\n\tvar gridLineOpts = opts.gridLines;\n\tvar pointLabelOpts = opts.pointLabels;\n\tvar lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n\tvar lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n\tvar tickBackdropHeight = getTickBackdropHeight(opts);\n\n\tctx.save();\n\tctx.lineWidth = lineWidth;\n\tctx.strokeStyle = lineColor;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n\t\tctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n\t}\n\n\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t// Point Label Font\n\tvar plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n\tctx.font = plFont.string;\n\tctx.textBaseline = 'middle';\n\n\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\tif (angleLineOpts.display && lineWidth && lineColor) {\n\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tif (pointLabelOpts.display) {\n\t\t\t// Extra pixels out for some label spacing\n\t\t\tvar extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5);\n\n\t\t\t// Keep this in loop since we may support array properties here\n\t\t\tvar pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers$1.toDegrees(angleRadians);\n\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n\t\t}\n\t}\n\tctx.restore();\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\tvar ctx = scale.ctx;\n\tvar circular = gridLineOpts.circular;\n\tvar valueCount = getValueCount(scale);\n\tvar lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n\tvar lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n\tvar pointPosition;\n\n\tif ((!circular && !valueCount) || !lineColor || !lineWidth) {\n\t\treturn;\n\t}\n\n\tctx.save();\n\tctx.strokeStyle = lineColor;\n\tctx.lineWidth = lineWidth;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(gridLineOpts.borderDash || []);\n\t\tctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n\t}\n\n\tctx.beginPath();\n\tif (circular) {\n\t\t// Draw circular arcs between the points\n\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t} else {\n\t\t// Draw straight lines connecting each index\n\t\tpointPosition = scale.getPointPosition(0, radius);\n\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t}\n\t}\n\tctx.closePath();\n\tctx.stroke();\n\tctx.restore();\n}\n\nfunction numberOrZero(param) {\n\treturn helpers$1.isNumber(param) ? param : 0;\n}\n\nvar scale_radialLinear = scale_linearbase.extend({\n\tsetDimensions: function() {\n\t\tvar me = this;\n\n\t\t// Set the unconstrained dimension before label rotation\n\t\tme.width = me.maxWidth;\n\t\tme.height = me.maxHeight;\n\t\tme.paddingTop = getTickBackdropHeight(me.options) / 2;\n\t\tme.xCenter = Math.floor(me.width / 2);\n\t\tme.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n\t\tme.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar min = Number.POSITIVE_INFINITY;\n\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\thelpers$1.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tme.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\treturn Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\n\t\tscale_linearbase.prototype.convertTicksToLabels.call(me);\n\n\t\t// Point labels\n\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display && opts.pointLabels.display) {\n\t\t\tfitWithPointLabels(me);\n\t\t} else {\n\t\t\tme.setCenterPoint(0, 0, 0, 0);\n\t\t}\n\t},\n\n\t/**\n\t * Set radius reductions and determine new radius and center point\n\t * @private\n\t */\n\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\tvar me = this;\n\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n\n\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\tme.drawingArea = Math.min(\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t},\n\n\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\tvar me = this;\n\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\tvar maxTop = topMovement + me.drawingArea;\n\t\tvar maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n\n\t\tme.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n\t\tme.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n\t},\n\n\tgetIndexAngle: function(index) {\n\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\tthis.chart.options.startAngle :\n\t\t\t0;\n\n\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\treturn index * angleMultiplier + startAngleRadians;\n\t},\n\n\tgetDistanceFromCenterForValue: function(value) {\n\t\tvar me = this;\n\n\t\tif (value === null) {\n\t\t\treturn 0; // null always in center\n\t\t}\n\n\t\t// Take into account half font size + the yPadding of the top value\n\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\tif (me.options.ticks.reverse) {\n\t\t\treturn (me.max - value) * scalingFactor;\n\t\t}\n\t\treturn (value - me.min) * scalingFactor;\n\t},\n\n\tgetPointPosition: function(index, distanceFromCenter) {\n\t\tvar me = this;\n\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\treturn {\n\t\t\tx: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n\t\t\ty: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n\t\t};\n\t},\n\n\tgetPointPositionForValue: function(index, value) {\n\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t},\n\n\tgetBasePosition: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.getPointPositionForValue(0,\n\t\t\tme.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0);\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar tickOpts = opts.ticks;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar startAngle = this.getIndexAngle(0);\n\t\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\n\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\tdrawPointLabels(me);\n\t\t\t}\n\n\t\t\thelpers$1.each(me.ticks, function(label, index) {\n\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\tvar tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n\t\t\t\t\t\tctx.font = tickFont.string;\n\n\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t-yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\ttickFont.size + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$3 = defaultConfig$3;\nscale_radialLinear._defaults = _defaults$3;\n\nvar valueOrDefault$c = helpers$1.valueOrDefault;\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate$1(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\nfunction toTimestamp(scale, input) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options.time;\n\tvar parser = options.parser;\n\tvar format = parser || options.format;\n\tvar value = input;\n\n\tif (typeof parser === 'function') {\n\t\tvalue = parser(value);\n\t}\n\n\t// Only parse if its not a timestamp already\n\tif (!helpers$1.isFinite(value)) {\n\t\tvalue = typeof format === 'string'\n\t\t\t? adapter.parse(value, format)\n\t\t\t: adapter.parse(value);\n\t}\n\n\tif (value !== null) {\n\t\treturn +value;\n\t}\n\n\t// Labels are in an incompatible format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option for parsing.\n\tif (!parser && typeof format === 'function') {\n\t\tvalue = format(input);\n\n\t\t// `format` could return something else than a timestamp, if so, parse it\n\t\tif (!helpers$1.isFinite(value)) {\n\t\t\tvalue = adapter.parse(value);\n\t\t}\n\t}\n\n\treturn value;\n}\n\nfunction parse(scale, input) {\n\tif (helpers$1.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = toTimestamp(scale, scale.getRightValue(input));\n\tif (value === null) {\n\t\treturn value;\n\t}\n\n\tif (options.round) {\n\t\tvalue = +scale._adapter.startOf(value, options.round);\n\t}\n\n\treturn value;\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(scale, min, max, capacity) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options;\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = min;\n\tvar last = max;\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = +adapter.startOf(first, 'isoWeek', weekday);\n\t\tlast = +adapter.startOf(last, 'isoWeek', weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = +adapter.startOf(first, weekday ? 'day' : minor);\n\tlast = +adapter.startOf(last, weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast = +adapter.add(last, 1, minor);\n\t}\n\n\ttime = first;\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime = +adapter.startOf(time, major);\n\t\ttime = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time = +adapter.add(time, stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the start and end offsets from edges in the form of {start, end}\n * where each value is a relative width to the scale and ranges between 0 and 1.\n * They add extra margins on the both sides by scaling down the original scale.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar start = 0;\n\tvar end = 0;\n\tvar first, last;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tfirst = interpolate$1(table, 'time', ticks[0], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tstart = 1 - first;\n\t\t\t} else {\n\t\t\t\tstart = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n\t\t\t}\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tlast = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tend = last;\n\t\t\t} else {\n\t\t\t\tend = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {start: start, end: end};\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nvar defaultConfig$4 = {\n\tposition: 'bottom',\n\n\t/**\n\t * Data distribution along the scale:\n\t * - 'linear': data are spread according to their time (distances can vary),\n\t * - 'series': data are spread at the same distance from each other.\n\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t * @since 2.7.0\n\t */\n\tdistribution: 'linear',\n\n\t/**\n\t * Scale boundary strategy (bypassed by min/max time options)\n\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t * @since 2.7.0\n\t */\n\tbounds: 'data',\n\n\tadapters: {},\n\ttime: {\n\t\tparser: false, // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\tround: false, // none, or override with week, month, year, etc.\n\t\tdisplayFormat: false, // DEPRECATED\n\t\tisoWeekday: false, // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n\t\tminUnit: 'millisecond',\n\t\tdisplayFormats: {}\n\t},\n\tticks: {\n\t\tautoSkip: false,\n\n\t\t/**\n\t\t * Ticks generation input values:\n\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tsource: 'auto',\n\n\t\tmajor: {\n\t\t\tenabled: false\n\t\t}\n\t}\n};\n\nvar scale_time = core_scale.extend({\n\tinitialize: function() {\n\t\tthis.mergeTicksOptions();\n\t\tcore_scale.prototype.initialize.call(this);\n\t},\n\n\tupdate: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar time = options.time || (options.time = {});\n\t\tvar adapter = me._adapter = new core_adapters._date(options.adapters.date);\n\n\t\t// DEPRECATIONS: output a message only one time per update\n\t\tif (time.format) {\n\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t}\n\n\t\t// Backward compatibility: before introducing adapter, `displayFormats` was\n\t\t// supposed to contain *all* unit/string pairs but this can't be resolved\n\t\t// when loading the scale (adapters are loaded afterward), so let's populate\n\t\t// missing formats on update\n\t\thelpers$1.mergeIf(time.displayFormats, adapter.formats());\n\n\t\treturn core_scale.prototype.update.apply(me, arguments);\n\t},\n\n\t/**\n\t * Allows data to be referenced via 't' attribute\n\t */\n\tgetRightValue: function(rawValue) {\n\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\trawValue = rawValue.t;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, rawValue);\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar adapter = me._adapter;\n\t\tvar timeOpts = me.options.time;\n\t\tvar unit = timeOpts.unit || 'day';\n\t\tvar min = MAX_INTEGER;\n\t\tvar max = MIN_INTEGER;\n\t\tvar timestamps = [];\n\t\tvar datasets = [];\n\t\tvar labels = [];\n\t\tvar i, j, ilen, jlen, data, timestamp;\n\t\tvar dataLabels = chart.data.labels || [];\n\n\t\t// Convert labels to timestamps\n\t\tfor (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n\t\t\tlabels.push(parse(me, dataLabels[i]));\n\t\t}\n\n\t\t// Convert data to timestamps\n\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\tif (helpers$1.isObject(data[0])) {\n\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamp = parse(me, data[j]);\n\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (j = 0, jlen = labels.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamps.push(labels[j]);\n\t\t\t\t\t}\n\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdatasets[i] = [];\n\t\t\t}\n\t\t}\n\n\t\tif (labels.length) {\n\t\t\t// Sort labels **after** data have been converted\n\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\tmin = Math.min(min, labels[0]);\n\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t}\n\n\t\tif (timestamps.length) {\n\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t}\n\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\tmin = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n\t\tmax = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max;\n\n\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\tme.min = Math.min(min, max);\n\t\tme.max = Math.max(min + 1, max);\n\n\t\t// PRIVATE\n\t\tme._horizontal = me.isHorizontal();\n\t\tme._table = [];\n\t\tme._timestamps = {\n\t\t\tdata: timestamps,\n\t\t\tdatasets: datasets,\n\t\t\tlabels: labels\n\t\t};\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\t\tvar options = me.options;\n\t\tvar timeOpts = options.time;\n\t\tvar timestamps = [];\n\t\tvar ticks = [];\n\t\tvar i, ilen, timestamp;\n\n\t\tswitch (options.ticks.source) {\n\t\tcase 'data':\n\t\t\ttimestamps = me._timestamps.data;\n\t\t\tbreak;\n\t\tcase 'labels':\n\t\t\ttimestamps = me._timestamps.labels;\n\t\t\tbreak;\n\t\tcase 'auto':\n\t\tdefault:\n\t\t\ttimestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n\t\t}\n\n\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\tmin = timestamps[0];\n\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t}\n\n\t\t// Enforce limits with user min/max options\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// Remove ticks outside the min/max range\n\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\ttimestamp = timestamps[i];\n\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\tticks.push(timestamp);\n\t\t\t}\n\t\t}\n\n\t\tme.min = min;\n\t\tme.max = max;\n\n\t\t// PRIVATE\n\t\tme._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n\t\tif (options.ticks.reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\n\t\treturn ticksFromTimestamps(me, ticks, me._majorUnit);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar data = me.chart.data;\n\t\tvar timeOpts = me.options.time;\n\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\tif (helpers$1.isObject(value)) {\n\t\t\tlabel = me.getRightValue(value);\n\t\t}\n\t\tif (timeOpts.tooltipFormat) {\n\t\t\treturn adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n\t\t}\n\t\tif (typeof label === 'string') {\n\t\t\treturn label;\n\t\t}\n\t\treturn adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n\t},\n\n\t/**\n\t * Function to format an individual tick mark\n\t * @private\n\t */\n\ttickFormatFunction: function(time, index, ticks, format) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar options = me.options;\n\t\tvar formats = options.time.displayFormats;\n\t\tvar minorFormat = formats[me._unit];\n\t\tvar majorUnit = me._majorUnit;\n\t\tvar majorFormat = formats[majorUnit];\n\t\tvar majorTime = +adapter.startOf(time, majorUnit);\n\t\tvar majorTickOpts = options.ticks.major;\n\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\tvar label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\tvar formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n\n\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t},\n\n\tconvertTicksToLabels: function(ticks) {\n\t\tvar labels = [];\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\tlabels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n\t\t}\n\n\t\treturn labels;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetPixelForOffset: function(time) {\n\t\tvar me = this;\n\t\tvar isReverse = me.options.ticks.reverse;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n\t\tvar pos = interpolate$1(me._table, 'time', time, 'pos');\n\t\tvar offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n\n\t\treturn isReverse ? start - offset : start + offset;\n\t},\n\n\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar time = null;\n\n\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t}\n\n\t\tif (time === null) {\n\t\t\ttime = parse(me, value);\n\t\t}\n\n\t\tif (time !== null) {\n\t\t\treturn me.getPixelForOffset(time);\n\t\t}\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\tvar ticks = this.getTicks();\n\t\treturn index >= 0 && index < ticks.length ?\n\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\tnull;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? me.left : me.top;\n\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n\t\tvar time = interpolate$1(me._table, 'pos', pos, 'time');\n\n\t\t// DEPRECATION, we should return time directly\n\t\treturn me._adapter._create(time);\n\t},\n\n\t/**\n\t * Crude approximation of what the label width might be\n\t * @private\n\t */\n\tgetLabelWidth: function(label) {\n\t\tvar me = this;\n\t\tvar ticksOpts = me.options.ticks;\n\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\tvar angle = helpers$1.toRadians(ticksOpts.maxRotation);\n\t\tvar cosRotation = Math.cos(angle);\n\t\tvar sinRotation = Math.sin(angle);\n\t\tvar tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n\n\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetLabelCapacity: function(exampleTime) {\n\t\tvar me = this;\n\n\t\t// pick the longest format (milliseconds) for guestimation\n\t\tvar format = me.options.time.displayFormats.millisecond;\n\t\tvar exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\n\t\treturn capacity > 0 ? capacity : 1;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$4 = defaultConfig$4;\nscale_time._defaults = _defaults$4;\n\nvar scales = {\n\tcategory: scale_category,\n\tlinear: scale_linear,\n\tlogarithmic: scale_logarithmic,\n\tradialLinear: scale_radialLinear,\n\ttime: scale_time\n};\n\nvar FORMATS = {\n\tdatetime: 'MMM D, YYYY, h:mm:ss a',\n\tmillisecond: 'h:mm:ss.SSS a',\n\tsecond: 'h:mm:ss a',\n\tminute: 'h:mm a',\n\thour: 'hA',\n\tday: 'MMM D',\n\tweek: 'll',\n\tmonth: 'MMM YYYY',\n\tquarter: '[Q]Q - YYYY',\n\tyear: 'YYYY'\n};\n\ncore_adapters._date.override(typeof moment === 'function' ? {\n\t_id: 'moment', // DEBUG ONLY\n\n\tformats: function() {\n\t\treturn FORMATS;\n\t},\n\n\tparse: function(value, format) {\n\t\tif (typeof value === 'string' && typeof format === 'string') {\n\t\t\tvalue = moment(value, format);\n\t\t} else if (!(value instanceof moment)) {\n\t\t\tvalue = moment(value);\n\t\t}\n\t\treturn value.isValid() ? value.valueOf() : null;\n\t},\n\n\tformat: function(time, format) {\n\t\treturn moment(time).format(format);\n\t},\n\n\tadd: function(time, amount, unit) {\n\t\treturn moment(time).add(amount, unit).valueOf();\n\t},\n\n\tdiff: function(max, min, unit) {\n\t\treturn moment.duration(moment(max).diff(moment(min))).as(unit);\n\t},\n\n\tstartOf: function(time, unit, weekday) {\n\t\ttime = moment(time);\n\t\tif (unit === 'isoWeek') {\n\t\t\treturn time.isoWeekday(weekday).valueOf();\n\t\t}\n\t\treturn time.startOf(unit).valueOf();\n\t},\n\n\tendOf: function(time, unit) {\n\t\treturn moment(time).endOf(unit).valueOf();\n\t},\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility with scale.getValueForPixel().\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(time) {\n\t\treturn moment(time);\n\t},\n} : {});\n\ncore_defaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (helpers$1.isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nvar plugin_filler = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || core_defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers$1.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers$1.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\nvar noop$1 = helpers$1.noop;\nvar valueOrDefault$d = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\t\tonLeave: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers$1.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param {object} labelopts - the label options on the legend\n * @param {number} fontSize - the label font size\n * @return {number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\n\t\tfontSize :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = core_element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers$1.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t/**\n \t\t * @private\n \t\t */\n\t\tthis._hoveredItem = null;\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop$1,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop$1,\n\n\t//\n\n\tbeforeSetDimensions: noop$1,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$1,\n\n\t//\n\n\tbeforeBuildLabels: noop$1,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop$1,\n\n\t//\n\n\tbeforeFit: noop$1,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\tvar fontSize = labelFont.size;\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + labelOpts.padding;\n\t\t\t\t\t\tlineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop$1,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor;\n\t\tvar lineDefault = globalDefaults.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\t\tvar fontSize = labelFont.size;\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tvar lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = lineWidth;\n\t\t\t\tctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = boxWidth * Math.SQRT2 / 2;\n\t\t\t\t\tvar centerX = x + boxWidth / 2;\n\t\t\t\t\tvar centerY = y + fontSize / 2;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (lineWidth !== 0) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2) + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\t// Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n\t\t\t\t// instead of me.right and me.bottom because me.width and me.height\n\t\t\t\t// may have been changed since me.minSize was calculated\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2) + labelOpts.padding;\n\t\t\t\t\t}\n\t\t\t\t} else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + labelOpts.padding;\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getLegendItemAt: function(x, y) {\n\t\tvar me = this;\n\t\tvar i, hitBox, lh;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tlh = me.legendHitBoxes;\n\t\t\tfor (i = 0; i < lh.length; ++i) {\n\t\t\t\thitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\treturn me.legendItems[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar hoveredItem;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover && !opts.onLeave) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\thoveredItem = me._getLegendItemAt(e.x, e.y);\n\n\t\tif (type === 'click') {\n\t\t\tif (hoveredItem && opts.onClick) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onClick.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t} else {\n\t\t\tif (opts.onLeave && hoveredItem !== me._hoveredItem) {\n\t\t\t\tif (me._hoveredItem) {\n\t\t\t\t\topts.onLeave.call(me, e.native, me._hoveredItem);\n\t\t\t\t}\n\t\t\t\tme._hoveredItem = hoveredItem;\n\t\t\t}\n\n\t\t\tif (opts.onHover && hoveredItem) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onHover.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t}\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, legend, legendOpts);\n\tcore_layouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nvar plugin_legend = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tcore_layouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tcore_layouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\nvar noop$2 = helpers$1.noop;\n\ncore_defaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = core_element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers$1.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop$2,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop$2,\n\n\t//\n\n\tbeforeSetDimensions: noop$2,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$2,\n\n\t//\n\n\tbeforeBuildLabels: noop$2,\n\tbuildLabels: noop$2,\n\tafterBuildLabels: noop$2,\n\n\t//\n\n\tbeforeFit: noop$2,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\tvar textSize = display ? (lineCount * fontOpts.lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop$2,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display) {\n\t\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\t\tvar lineHeight = fontOpts.lineHeight;\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\t\t\tctx.font = fontOpts.string;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers$1.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, title, titleOpts);\n\tcore_layouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nvar plugin_title = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tcore_layouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tcore_layouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\nvar plugins = {};\nvar filler = plugin_filler;\nvar legend = plugin_legend;\nvar title = plugin_title;\nplugins.filler = filler;\nplugins.legend = legend;\nplugins.title = title;\n\n/**\n * @namespace Chart\n */\n\n\ncore_controller.helpers = helpers$1;\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\ncore_helpers(core_controller);\n\ncore_controller._adapters = core_adapters;\ncore_controller.Animation = core_animation;\ncore_controller.animationService = core_animations;\ncore_controller.controllers = controllers;\ncore_controller.DatasetController = core_datasetController;\ncore_controller.defaults = core_defaults;\ncore_controller.Element = core_element;\ncore_controller.elements = elements;\ncore_controller.Interaction = core_interaction;\ncore_controller.layouts = core_layouts;\ncore_controller.platform = platform;\ncore_controller.plugins = core_plugins;\ncore_controller.Scale = core_scale;\ncore_controller.scaleService = core_scaleService;\ncore_controller.Ticks = core_ticks;\ncore_controller.Tooltip = core_tooltip;\n\n// Register built-in scales\n\ncore_controller.helpers.each(scales, function(scale, type) {\n\tcore_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n});\n\n// Load to register built-in adapters (as side effects)\n\n\n// Loading built-in plugins\n\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tcore_controller.plugins.register(plugins[k]);\n\t}\n}\n\ncore_controller.platform.initialize();\n\nvar src = core_controller;\nif (typeof window !== 'undefined') {\n\twindow.Chart = core_controller;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Chart\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.Chart = core_controller;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.pluginService = core_controller.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.PluginBase = core_controller.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.canvasHelpers = core_controller.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.7.3\n * @todo remove at version 3\n * @private\n */\ncore_controller.layoutService = core_controller.layouts;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.LinearScaleBase\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\ncore_controller.LinearScaleBase = scale_linearbase;\n\n/**\n * Provided for backward compatibility, instead we should create a new Chart\n * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n */\ncore_controller.helpers.each(\n\t[\n\t\t'Bar',\n\t\t'Bubble',\n\t\t'Doughnut',\n\t\t'Line',\n\t\t'PolarArea',\n\t\t'Radar',\n\t\t'Scatter'\n\t],\n\tfunction(klass) {\n\t\tcore_controller[klass] = function(ctx, cfg) {\n\t\t\treturn new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n\t\t\t\ttype: klass.charAt(0).toLowerCase() + klass.slice(1)\n\t\t\t}));\n\t\t};\n\t}\n);\n\nreturn src;\n\n})));\n","define([\"../core/Tone\", \"../type/TimeBase\"], function(Tone){\n\n\t/**\n\t *  @class Tone.Frequency is a primitive type for encoding Frequency values.\n\t *         Eventually all time values are evaluated to hertz\n\t *         using the `eval` method.\n\t *  @constructor\n\t *  @extends {Tone.TimeBase}\n\t *  @param  {String|Number}  val    The time value.\n\t *  @param  {String=}  units  The units of the value.\n\t *  @example\n\t * Tone.Frequency(\"C3\") // 261\n\t * Tone.Frequency(38, \"midi\") //\n\t * Tone.Frequency(\"C3\").transpose(4);\n\t */\n\tTone.Frequency = function(val, units){\n\t\tif (this instanceof Tone.Frequency){\n\n\t\t\tTone.TimeBase.call(this, val, units);\n\n\t\t} else {\n\t\t\treturn new Tone.Frequency(val, units);\n\t\t}\n\t};\n\n\tTone.extend(Tone.Frequency, Tone.TimeBase);\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tAUGMENT BASE EXPRESSIONS\n\t///////////////////////////////////////////////////////////////////////////\n\n\tTone.Frequency.prototype._expressions = Object.assign({}, Tone.TimeBase.prototype._expressions, {\n\t\t\"midi\" : {\n\t\t\tregexp : /^(\\d+(?:\\.\\d+)?midi)/,\n\t\t\tmethod : function(value){\n\t\t\t\tif (this._defaultUnits === \"midi\"){\n\t\t\t\t\treturn value;\n\t\t\t\t} else {\n\t\t\t\t\treturn Tone.Frequency.mtof(value);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"note\" : {\n\t\t\tregexp : /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n\t\t\tmethod : function(pitch, octave){\n\t\t\t\tvar index = noteToScaleIndex[pitch.toLowerCase()];\n\t\t\t\tvar noteNumber = index + (parseInt(octave) + 1) * 12;\n\t\t\t\tif (this._defaultUnits === \"midi\"){\n\t\t\t\t\treturn noteNumber;\n\t\t\t\t} else {\n\t\t\t\t\treturn Tone.Frequency.mtof(noteNumber);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"tr\" : {\n\t\t\tregexp : /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n\t\t\tmethod : function(m, q, s){\n\t\t\t\tvar total = 1;\n\t\t\t\tif (m && m !== \"0\"){\n\t\t\t\t\ttotal *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t\t}\n\t\t\t\tif (q && q !== \"0\"){\n\t\t\t\t\ttotal *= this._beatsToUnits(parseFloat(q));\n\t\t\t\t}\n\t\t\t\tif (s && s !== \"0\"){\n\t\t\t\t\ttotal *= this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t\t}\n\t\t\t\treturn total;\n\t\t\t}\n\t\t}\n\t});\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tEXPRESSIONS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Transposes the frequency by the given number of semitones.\n\t *  @param  {Interval}  interval\n\t *  @return  {Tone.Frequency} A new transposed frequency\n\t *  @example\n\t * Tone.Frequency(\"A4\").transpose(3); //\"C5\"\n\t */\n\tTone.Frequency.prototype.transpose = function(interval){\n\t\treturn new this.constructor(this.valueOf() * Tone.intervalToFrequencyRatio(interval));\n\t};\n\n\t/**\n\t *  Takes an array of semitone intervals and returns\n\t *  an array of frequencies transposed by those intervals.\n\t *  @param  {Array}  intervals\n\t *  @return  {Array<Tone.Frequency>} Returns an array of Frequencies\n\t *  @example\n\t * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); //[\"A4\", \"C5\", \"E5\"]\n\t */\n\tTone.Frequency.prototype.harmonize = function(intervals){\n\t\treturn intervals.map(function(interval){\n\t\t\treturn this.transpose(interval);\n\t\t}.bind(this));\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tUNIT CONVERSIONS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Return the value of the frequency as a MIDI note\n\t *  @return  {MIDI}\n\t *  @example\n\t * Tone.Frequency(\"C4\").toMidi(); //60\n\t */\n\tTone.Frequency.prototype.toMidi = function(){\n\t\treturn Tone.Frequency.ftom(this.valueOf());\n\t};\n\n\t/**\n\t *  Return the value of the frequency in Scientific Pitch Notation\n\t *  @return  {Note}\n\t *  @example\n\t * Tone.Frequency(69, \"midi\").toNote(); //\"A4\"\n\t */\n\tTone.Frequency.prototype.toNote = function(){\n\t\tvar freq = this.toFrequency();\n\t\tvar log = Math.log2(freq / Tone.Frequency.A4);\n\t\tvar noteNumber = Math.round(12 * log) + 57;\n\t\tvar octave = Math.floor(noteNumber/12);\n\t\tif (octave < 0){\n\t\t\tnoteNumber += -12 * octave;\n\t\t}\n\t\tvar noteName = scaleIndexToNote[noteNumber % 12];\n\t\treturn noteName + octave.toString();\n\t};\n\n\t/**\n\t *  Return the duration of one cycle in seconds.\n\t *  @return  {Seconds}\n\t */\n\tTone.Frequency.prototype.toSeconds = function(){\n\t\treturn 1 / Tone.TimeBase.prototype.toSeconds.call(this);\n\t};\n\n\t/**\n\t *  Return the value in Hertz\n\t *  @return  {Frequency}\n\t */\n\tTone.Frequency.prototype.toFrequency = function(){\n\t\treturn Tone.TimeBase.prototype.toFrequency.call(this);\n\t};\n\n\t/**\n\t *  Return the duration of one cycle in ticks\n\t *  @return  {Ticks}\n\t */\n\tTone.Frequency.prototype.toTicks = function(){\n\t\tvar quarterTime = this._beatsToUnits(1);\n\t\tvar quarters = this.valueOf() / quarterTime;\n\t\treturn Math.floor(quarters * Tone.Transport.PPQ);\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tUNIT CONVERSIONS HELPERS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  With no arguments, return 0\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.Frequency.prototype._noArg = function(){\n\t\treturn 0;\n\t};\n\n\t/**\n\t *  Returns the value of a frequency in the current units\n\t *  @param {Frequency} freq\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.Frequency.prototype._frequencyToUnits = function(freq){\n\t\treturn freq;\n\t};\n\n\t/**\n\t *  Returns the value of a tick in the current time units\n\t *  @param {Ticks} ticks\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.Frequency.prototype._ticksToUnits = function(ticks){\n\t\treturn 1 / ((ticks * 60) / (Tone.Transport.bpm.value * Tone.Transport.PPQ));\n\t};\n\n\t/**\n\t *  Return the value of the beats in the current units\n\t *  @param {Number} beats\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.Frequency.prototype._beatsToUnits = function(beats){\n\t\treturn 1 / Tone.TimeBase.prototype._beatsToUnits.call(this, beats);\n\t};\n\n\t/**\n\t *  Returns the value of a second in the current units\n\t *  @param {Seconds} seconds\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.Frequency.prototype._secondsToUnits = function(seconds){\n\t\treturn 1 / seconds;\n\t};\n\n\t/**\n\t *  The default units if none are given.\n\t *  @private\n\t */\n\tTone.Frequency.prototype._defaultUnits = \"hz\";\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tFREQUENCY CONVERSIONS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Note to scale index\n\t *  @type  {Object}\n\t */\n\tvar noteToScaleIndex = {\n\t\t\"cbb\" : -2, \"cb\" : -1, \"c\" : 0, \"c#\" : 1, \"cx\" : 2,\n\t\t\"dbb\" : 0, \"db\" : 1, \"d\" : 2, \"d#\" : 3, \"dx\" : 4,\n\t\t\"ebb\" : 2, \"eb\" : 3, \"e\" : 4, \"e#\" : 5, \"ex\" : 6,\n\t\t\"fbb\" : 3, \"fb\" : 4, \"f\" : 5, \"f#\" : 6, \"fx\" : 7,\n\t\t\"gbb\" : 5, \"gb\" : 6, \"g\" : 7, \"g#\" : 8, \"gx\" : 9,\n\t\t\"abb\" : 7, \"ab\" : 8, \"a\" : 9, \"a#\" : 10, \"ax\" : 11,\n\t\t\"bbb\" : 9, \"bb\" : 10, \"b\" : 11, \"b#\" : 12, \"bx\" : 13,\n\t};\n\n\t/**\n\t *  scale index to note (sharps)\n\t *  @type  {Array}\n\t */\n\tvar scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n\n\t/**\n\t *  The [concert pitch](https://en.wikipedia.org/wiki/Concert_pitch)\n\t *  A4's values in Hertz.\n\t *  @type {Frequency}\n\t *  @static\n\t */\n\tTone.Frequency.A4 = 440;\n\n\t/**\n\t *  Convert a MIDI note to frequency value.\n\t *  @param  {MIDI} midi The midi number to convert.\n\t *  @return {Frequency} the corresponding frequency value\n\t *  @static\n\t *  @example\n\t * Tone.Frequency.mtof(69); // returns 440\n\t */\n\tTone.Frequency.mtof = function(midi){\n\t\treturn Tone.Frequency.A4 * Math.pow(2, (midi - 69) / 12);\n\t};\n\n\t/**\n\t *  Convert a frequency value to a MIDI note.\n\t *  @param {Frequency} frequency The value to frequency value to convert.\n\t *  @returns  {MIDI}\n\t *  @static\n\t *  @example\n\t * Tone.Frequency.ftom(440); // returns 69\n\t */\n\tTone.Frequency.ftom = function(frequency){\n\t\treturn 69 + Math.round(12 * Math.log2(frequency / Tone.Frequency.A4));\n\t};\n\n\treturn Tone.Frequency;\n});\n","define([\"../core/Tone\"], function(Tone){\n\tif (Tone.supported){\n\n\t\tif (!Tone.global.hasOwnProperty(\"OfflineAudioContext\") && Tone.global.hasOwnProperty(\"webkitOfflineAudioContext\")){\n\t\t\tTone.global.OfflineAudioContext = Tone.global.webkitOfflineAudioContext;\n\t\t}\n\n\t\t//returns promise?\n\t\tvar context = new OfflineAudioContext(1, 1, 44100);\n\t\tvar ret = context.startRendering();\n\t\tif (!(ret && Tone.isFunction(ret.then))){\n\t\t\tOfflineAudioContext.prototype._native_startRendering = OfflineAudioContext.prototype.startRendering;\n\t\t\tOfflineAudioContext.prototype.startRendering = function(){\n\t\t\t\treturn new Promise(function(done){\n\t\t\t\t\tthis.oncomplete = function(e){\n\t\t\t\t\t\tdone(e.renderedBuffer);\n\t\t\t\t\t};\n\t\t\t\t\tthis._native_startRendering();\n\t\t\t\t}.bind(this));\n\t\t\t};\n\t\t}\n\t}\n});\n","define([\"../core/Tone\", \"../source/Source\", \"../source/Oscillator\", \"../signal/Multiply\",\n\t\"../core/Gain\", \"../signal/AudioToGain\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.AMOscillator\n\t *\n\t *  @extends {Tone.Oscillator}\n\t *  @constructor\n\t *  @param {Frequency} frequency The starting frequency of the oscillator.\n\t *  @param {String} type The type of the carrier oscillator.\n\t *  @param {String} modulationType The type of the modulator oscillator.\n\t *  @example\n\t * //a sine oscillator frequency-modulated by a square wave\n\t * var fmOsc = new Tone.AMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t */\n\tTone.AMOscillator = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"modulationType\"], Tone.AMOscillator);\n\t\tTone.Source.call(this, options);\n\n\t\t/**\n\t\t *  The carrier oscillator\n\t\t *  @type {Tone.Oscillator}\n\t\t *  @private\n\t\t */\n\t\tthis._carrier = new Tone.Oscillator(options.frequency, options.type);\n\n\t\t/**\n\t\t *  The oscillator's frequency\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = this._carrier.frequency;\n\n\t\t/**\n\t\t *  The detune control signal.\n\t\t *  @type {Cents}\n\t\t *  @signal\n\t\t */\n\t\tthis.detune = this._carrier.detune;\n\t\tthis.detune.value = options.detune;\n\n\t\t/**\n\t\t *  The modulating oscillator\n\t\t *  @type  {Tone.Oscillator}\n\t\t *  @private\n\t\t */\n\t\tthis._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\n\t\t/**\n\t\t *  convert the -1,1 output to 0,1\n\t\t *  @type {Tone.AudioToGain}\n\t\t *  @private\n\t\t */\n\t\tthis._modulationScale = new Tone.AudioToGain();\n\n\t\t/**\n\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t\t *  A harmonicity of 1 gives both oscillators the same frequency.\n\t\t *  Harmonicity = 2 means a change of an octave.\n\t\t *  @type {Positive}\n\t\t *  @signal\n\t\t *  @example\n\t\t * //pitch the modulator an octave below carrier\n\t\t * synth.harmonicity.value = 0.5;\n\t\t */\n\t\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\t\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t\t/**\n\t\t *  the node where the modulation happens\n\t\t *  @type {Tone.Gain}\n\t\t *  @private\n\t\t */\n\t\tthis._modulationNode = new Tone.Gain(0);\n\n\t\t//connections\n\t\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\tthis.detune.connect(this._modulator.detune);\n\t\tthis._modulator.chain(this._modulationScale, this._modulationNode.gain);\n\t\tthis._carrier.chain(this._modulationNode, this.output);\n\n\t\tthis.phase = options.phase;\n\n\t\tthis._readOnly([\"frequency\", \"detune\", \"harmonicity\"]);\n\t};\n\n\tTone.extend(Tone.AMOscillator, Tone.Oscillator);\n\n\t/**\n\t *  default values\n\t *  @static\n\t *  @type {Object}\n\t *  @const\n\t */\n\tTone.AMOscillator.defaults = {\n\t\t\"frequency\" : 440,\n\t\t\"detune\" : 0,\n\t\t\"phase\" : 0,\n\t\t\"type\" : \"sine\",\n\t\t\"modulationType\" : \"square\",\n\t\t\"harmonicity\" : 1\n\t};\n\n\t/**\n\t *  start the oscillator\n\t *  @param  {Time} [time=now]\n\t *  @private\n\t */\n\tTone.AMOscillator.prototype._start = function(time){\n\t\tthis._modulator.start(time);\n\t\tthis._carrier.start(time);\n\t};\n\n\t/**\n\t *  stop the oscillator\n\t *  @param  {Time} time (optional) timing parameter\n\t *  @private\n\t */\n\tTone.AMOscillator.prototype._stop = function(time){\n\t\tthis._modulator.stop(time);\n\t\tthis._carrier.stop(time);\n\t};\n\n\t/**\n\t *  restart the oscillator\n\t *  @param  {Time} time (optional) timing parameter\n\t *  @private\n\t */\n\tTone.AMOscillator.prototype.restart = function(time){\n\t\tthis._modulator.restart(time);\n\t\tthis._carrier.restart(time);\n\t};\n\n\t/**\n\t * The type of the carrier oscillator\n\t * @memberOf Tone.AMOscillator#\n\t * @type {string}\n\t * @name type\n\t */\n\tObject.defineProperty(Tone.AMOscillator.prototype, \"type\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.type;\n\t\t},\n\t\tset : function(type){\n\t\t\tthis._carrier.type = type;\n\t\t}\n\t});\n\n\t/**\n\t * The oscillator type without the partialsCount appended to the end\n\t * @memberOf Tone.AMOscillator#\n\t * @type {string}\n\t * @name baseType\n\t * @example\n\t * osc.type = 'sine2'\n\t * osc.baseType //'sine'\n\t * osc.partialCount = 2\n\t */\n\tObject.defineProperty(Tone.AMOscillator.prototype, \"baseType\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.baseType;\n\t\t},\n\t\tset : function(baseType){\n\t\t\tthis._carrier.baseType = baseType;\n\t\t}\n\t});\n\n\t/**\n\t * 'partialCount' offers an alternative way to set the number of used partials. \n\t * When partialCount is 0, the maximum number of partials are used when representing\n\t * the waveform using the periodicWave. When 'partials' is set, this value is \n\t * not settable, but equals the length of the partials array.\n\t * @memberOf Tone.AMOscillator#\n\t * @type {Number}\n\t * @name partialCount\n\t */\n\tObject.defineProperty(Tone.AMOscillator.prototype, \"partialCount\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.partialCount;\n\t\t},\n\t\tset : function(partialCount){\n\t\t\tthis._carrier.partialCount = partialCount;\n\t\t}\n\t});\n\n\t/**\n\t * The type of the modulator oscillator\n\t * @memberOf Tone.AMOscillator#\n\t * @type {string}\n\t * @name modulationType\n\t */\n\tObject.defineProperty(Tone.AMOscillator.prototype, \"modulationType\", {\n\t\tget : function(){\n\t\t\treturn this._modulator.type;\n\t\t},\n\t\tset : function(type){\n\t\t\tthis._modulator.type = type;\n\t\t}\n\t});\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t * @memberOf Tone.AMOscillator#\n\t * @type {number}\n\t * @name phase\n\t */\n\tObject.defineProperty(Tone.AMOscillator.prototype, \"phase\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.phase;\n\t\t},\n\t\tset : function(phase){\n\t\t\tthis._carrier.phase = phase;\n\t\t\tthis._modulator.phase = phase;\n\t\t}\n\t});\n\n\t/**\n\t * The partials of the carrier waveform. A partial represents\n\t * the amplitude at a harmonic. The first harmonic is the\n\t * fundamental frequency, the second is the octave and so on\n\t * following the harmonic series.\n\t * Setting this value will automatically set the type to \"custom\".\n\t * The value is an empty array when the type is not \"custom\".\n\t * @memberOf Tone.AMOscillator#\n\t * @type {Array}\n\t * @name partials\n\t * @example\n\t * osc.partials = [1, 0.2, 0.01];\n\t */\n\tObject.defineProperty(Tone.AMOscillator.prototype, \"partials\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.partials;\n\t\t},\n\t\tset : function(partials){\n\t\t\tthis._carrier.partials = partials;\n\t\t}\n\t});\n\n\t/**\n\t *  Clean up.\n\t *  @return {Tone.AMOscillator} this\n\t */\n\tTone.AMOscillator.prototype.dispose = function(){\n\t\tTone.Source.prototype.dispose.call(this);\n\t\tthis._writable([\"frequency\", \"detune\", \"harmonicity\"]);\n\t\tthis.frequency = null;\n\t\tthis.detune = null;\n\t\tthis.harmonicity.dispose();\n\t\tthis.harmonicity = null;\n\t\tthis._carrier.dispose();\n\t\tthis._carrier = null;\n\t\tthis._modulator.dispose();\n\t\tthis._modulator = null;\n\t\tthis._modulationNode.dispose();\n\t\tthis._modulationNode = null;\n\t\tthis._modulationScale.dispose();\n\t\tthis._modulationScale = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.AMOscillator;\n});\n","define([\"../core/Tone\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.Emitter gives classes which extend it\n\t *         the ability to listen for and emit events.\n\t *         Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n\t *         MIT (c) 2011 Jerome Etienne.\n\t *\n\t *  @extends {Tone}\n\t */\n\tTone.Emitter = function(){\n\t\tTone.call(this);\n\t\t/**\n\t\t *  Contains all of the events.\n\t\t *  @private\n\t\t *  @type  {Object}\n\t\t */\n\t\tthis._events = {};\n\t};\n\n\tTone.extend(Tone.Emitter);\n\n\t/**\n\t *  Bind a callback to a specific event.\n\t *  @param  {String}    event     The name of the event to listen for.\n\t *  @param  {Function}  callback  The callback to invoke when the\n\t *                                event is emitted\n\t *  @return  {Tone.Emitter}    this\n\t */\n\tTone.Emitter.prototype.on = function(event, callback){\n\t\t//split the event\n\t\tvar events = event.split(/\\W+/);\n\t\tfor (var i = 0; i < events.length; i++){\n\t\t\tvar eventName = events[i];\n\t\t\tif (!this._events.hasOwnProperty(eventName)){\n\t\t\t\tthis._events[eventName] = [];\n\t\t\t}\n\t\t\tthis._events[eventName].push(callback);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Bind a callback which is only invoked once\n\t *  @param  {String}    event     The name of the event to listen for.\n\t *  @param  {Function}  callback  The callback to invoke when the\n\t *                                event is emitted\n\t *  @return  {Tone.Emitter}    this\n\t */\n\tTone.Emitter.prototype.once = function(event, callback){\n\t\tvar boundCallback = function(){\n\t\t\t//invoke the callback\n\t\t\tcallback.apply(this, arguments);\n\t\t\tthis.off(event, boundCallback);\n\t\t}.bind(this);\n\t\tthis.on(event, boundCallback);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Remove the event listener.\n\t *  @param  {String}    event     The event to stop listening to.\n\t *  @param  {Function=}  callback  The callback which was bound to\n\t *                                the event with Tone.Emitter.on.\n\t *                                If no callback is given, all callbacks\n\t *                                events are removed.\n\t *  @return  {Tone.Emitter}    this\n\t */\n\tTone.Emitter.prototype.off = function(event, callback){\n\t\tvar events = event.split(/\\W+/);\n\t\tfor (var ev = 0; ev < events.length; ev++){\n\t\t\tevent = events[ev];\n\t\t\tif (this._events.hasOwnProperty(event)){\n\t\t\t\tif (Tone.isUndef(callback)){\n\t\t\t\t\tthis._events[event] = [];\n\t\t\t\t} else {\n\t\t\t\t\tvar eventList = this._events[event];\n\t\t\t\t\tfor (var i = 0; i < eventList.length; i++){\n\t\t\t\t\t\tif (eventList[i] === callback){\n\t\t\t\t\t\t\teventList.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Invoke all of the callbacks bound to the event\n\t *  with any arguments passed in.\n\t *  @param  {String}  event  The name of the event.\n\t *  @param {*} args... The arguments to pass to the functions listening.\n\t *  @return  {Tone.Emitter}  this\n\t */\n\tTone.Emitter.prototype.emit = function(event){\n\t\tif (this._events){\n\t\t\tvar args = Array.apply(null, arguments).slice(1);\n\t\t\tif (this._events.hasOwnProperty(event)){\n\t\t\t\tvar eventList = this._events[event].slice(0);\n\t\t\t\tfor (var i = 0, len = eventList.length; i < len; i++){\n\t\t\t\t\teventList[i].apply(this, args);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Add Emitter functions (on/off/emit) to the object\n\t *  @param  {Object|Function}  object  The object or class to extend.\n\t *  @returns {Tone.Emitter}\n\t */\n\tTone.Emitter.mixin = function(object){\n\t\tvar functions = [\"on\", \"once\", \"off\", \"emit\"];\n\t\tobject._events = {};\n\t\tfor (var i = 0; i < functions.length; i++){\n\t\t\tvar func = functions[i];\n\t\t\tvar emitterFunc = Tone.Emitter.prototype[func];\n\t\t\tobject[func] = emitterFunc;\n\t\t}\n\t\treturn Tone.Emitter;\n\t};\n\n\t/**\n\t *  Clean up\n\t *  @return  {Tone.Emitter}  this\n\t */\n\tTone.Emitter.prototype.dispose = function(){\n\t\tTone.prototype.dispose.call(this);\n\t\tthis._events = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Emitter;\n});\n","module.exports = \"13.4.9\";\n","define([\"../core/Tone\", \"../signal/TickSignal\", \"../core/TimelineState\",\n\t\"../core/Timeline\", \"../core/Param\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Uses [Tone.TickSignal](TickSignal) to track elapsed ticks with\n\t *  \t\tcomplex automation curves.\n\t *\n\t * \t@constructor\n     *  @param {Frequency} frequency The initial frequency that the signal ticks at\n     *  @param {Tone.Param=} param A parameter to control (such as playbackRate)\n\t *  @extends {Tone}\n\t */\n\tTone.TickSource = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"frequency\"], Tone.TickSource);\n\n\t\t/**\n\t\t *  The frequency the callback function should be invoked.\n\t\t *  @type  {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = new Tone.TickSignal(options.frequency);\n\t\tthis._readOnly(\"frequency\");\n\n\t\t/**\n\t\t *  The state timeline\n\t\t *  @type {Tone.TimelineState}\n\t\t *  @private\n\t\t */\n\t\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, 0);\n\n\t\t/**\n\t\t * The offset values of the ticks\n\t\t * @type {Tone.Timeline}\n\t\t * @private\n\t\t */\n\t\tthis._tickOffset = new Tone.Timeline();\n\t\t//add the first event\n\t\tthis.setTicksAtTime(0, 0);\n\t};\n\n\tTone.extend(Tone.TickSource);\n\n\t/**\n\t *  The defaults\n\t *  @const\n\t *  @type  {Object}\n\t */\n\tTone.TickSource.defaults = {\n\t\t\"frequency\" : 1,\n\t};\n\n\t/**\n\t *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t *  @type {Tone.State}\n\t *  @readOnly\n\t *  @memberOf Tone.TickSource#\n\t *  @name state\n\t */\n\tObject.defineProperty(Tone.TickSource.prototype, \"state\", {\n\t\tget : function(){\n\t\t\treturn this._state.getValueAtTime(this.now());\n\t\t}\n\t});\n\n\t/**\n\t *  Start the clock at the given time. Optionally pass in an offset\n\t *  of where to start the tick counter from.\n\t *  @param  {Time=}  time    The time the clock should start\n\t *  @param {Ticks} [offset=0] The number of ticks to start the source at\n\t *  @return  {Tone.TickSource}  this\n\t */\n\tTone.TickSource.prototype.start = function(time, offset){\n\t\ttime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(time) !== Tone.State.Started){\n\t\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\t\tif (Tone.isDefined(offset)){\n\t\t\t\tthis.setTicksAtTime(offset, time);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Stop the clock. Stopping the clock resets the tick counter to 0.\n\t *  @param {Time} [time=now] The time when the clock should stop.\n\t *  @returns {Tone.TickSource} this\n\t *  @example\n\t * clock.stop();\n\t */\n\tTone.TickSource.prototype.stop = function(time){\n\t\ttime = this.toSeconds(time);\n\t\t//cancel the previous stop\n\t\tif (this._state.getValueAtTime(time) === Tone.State.Stopped){\n\t\t\tvar event = this._state.get(time);\n\t\t\tif (event.time > 0){\n\t\t\t\tthis._tickOffset.cancel(event.time);\n\t\t\t\tthis._state.cancel(event.time);\n\t\t\t}\n\t\t}\n\t\tthis._state.cancel(time);\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\t\tthis.setTicksAtTime(0, time);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Pause the clock. Pausing does not reset the tick counter.\n\t *  @param {Time} [time=now] The time when the clock should stop.\n\t *  @returns {Tone.TickSource} this\n\t */\n\tTone.TickSource.prototype.pause = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\t\tthis._state.setStateAtTime(Tone.State.Paused, time);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n\t *  @param {Time} [time=now] When to clear the events after\n\t *  @returns {Tone.TickSource} this\n\t */\n\tTone.TickSource.prototype.cancel = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._state.cancel(time);\n\t\tthis._tickOffset.cancel(time);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Get the elapsed ticks at the given time\n\t * @param  {Time} time  When to get the tick value\n\t * @return {Ticks}     The number of ticks\n\t */\n\tTone.TickSource.prototype.getTicksAtTime = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tvar stopEvent = this._state.getLastState(Tone.State.Stopped, time);\n\t\t//this event allows forEachBetween to iterate until the current time\n\t\tvar tmpEvent = { state : Tone.State.Paused, time : time };\n\t\tthis._state.add(tmpEvent);\n\n\t\t//keep track of the previous offset event\n\t\tvar lastState = stopEvent;\n\t\tvar elapsedTicks = 0;\n\n\t\t//iterate through all the events since the last stop\n\t\tthis._state.forEachBetween(stopEvent.time, time + this.sampleTime, function(e){\n\t\t\tvar periodStartTime = lastState.time;\n\t\t\t//if there is an offset event in this period use that\n\t\t\tvar offsetEvent = this._tickOffset.get(e.time);\n\t\t\tif (offsetEvent.time >= lastState.time){\n\t\t\t\telapsedTicks = offsetEvent.ticks;\n\t\t\t\tperiodStartTime = offsetEvent.time;\n\t\t\t}\n\t\t\tif (lastState.state === Tone.State.Started && e.state !== Tone.State.Started){\n\t\t\t\telapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);\n\t\t\t} \n\t\t\tlastState = e;\n\t\t}.bind(this));\n\n\t\t//remove the temporary event\n\t\tthis._state.remove(tmpEvent);\n\n\t\t//return the ticks\n\t\treturn elapsedTicks;\n\t};\n\n\t/**\n\t *  The number of times the callback was invoked. Starts counting at 0\n\t *  and increments after the callback was invoked. Returns -1 when stopped.\n\t *  @memberOf Tone.TickSource#\n\t *  @name ticks\n\t *  @type {Ticks}\n\t */\n\tObject.defineProperty(Tone.TickSource.prototype, \"ticks\", {\n\t\tget : function(){\n\t\t\treturn this.getTicksAtTime(this.now());\n\t\t},\n\t\tset : function(t){\n\t\t\tthis.setTicksAtTime(t, this.now());\n\t\t}\n\t});\n\n\t/**\n\t *  The time since ticks=0 that the TickSource has been running. Accounts\n\t *  for tempo curves\n\t *  @memberOf Tone.TickSource#\n\t *  @name seconds\n\t *  @type {Seconds}\n\t */\n\tObject.defineProperty(Tone.TickSource.prototype, \"seconds\", {\n\t\tget : function(){\n\t\t\treturn this.getSecondsAtTime(this.now());\n\t\t},\n\t\tset : function(s){\n\t\t\tvar now = this.now();\n\t\t\tvar ticks = this.frequency.timeToTicks(s, now);\n\t\t\tthis.setTicksAtTime(ticks, now);\n\t\t}\n\t});\n\n\t/**\n\t *  Return the elapsed seconds at the given time.\n\t *  @param  {Time}  time  When to get the elapsed seconds\n\t *  @return  {Seconds}  The number of elapsed seconds\n\t */\n\tTone.TickSource.prototype.getSecondsAtTime = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tvar stopEvent = this._state.getLastState(Tone.State.Stopped, time);\n\t\t//this event allows forEachBetween to iterate until the current time\n\t\tvar tmpEvent = { state : Tone.State.Paused, time : time };\n\t\tthis._state.add(tmpEvent);\n\n\t\t//keep track of the previous offset event\n\t\tvar lastState = stopEvent;\n\t\tvar elapsedSeconds = 0;\n\n\t\t//iterate through all the events since the last stop\n\t\tthis._state.forEachBetween(stopEvent.time, time + this.sampleTime, function(e){\n\t\t\tvar periodStartTime = lastState.time;\n\t\t\t//if there is an offset event in this period use that\n\t\t\tvar offsetEvent = this._tickOffset.get(e.time);\n\t\t\tif (offsetEvent.time >= lastState.time){\n\t\t\t\telapsedSeconds = offsetEvent.seconds;\n\t\t\t\tperiodStartTime = offsetEvent.time;\n\t\t\t}\n\t\t\tif (lastState.state === Tone.State.Started && e.state !== Tone.State.Started){\n\t\t\t\telapsedSeconds += e.time - periodStartTime;\n\t\t\t} \n\t\t\tlastState = e;\n\t\t}.bind(this));\n\n\t\t//remove the temporary event\n\t\tthis._state.remove(tmpEvent);\n\n\t\t//return the ticks\n\t\treturn elapsedSeconds;\n\t};\n\n\t/**\n\t * Set the clock's ticks at the given time.\n\t * @param  {Ticks} ticks The tick value to set\n\t * @param  {Time} time  When to set the tick value\n\t * @return {Tone.TickSource}       this\n\t */\n\tTone.TickSource.prototype.setTicksAtTime = function(ticks, time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._tickOffset.cancel(time);\n\t\tthis._tickOffset.add({\n\t\t\t\"time\" : time,\n\t\t\t\"ticks\" : ticks,\n\t\t\t\"seconds\" : this.frequency.getDurationOfTicks(ticks, time)\n\t\t});\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Returns the scheduled state at the given time.\n\t *  @param  {Time}  time  The time to query.\n\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t *  @example\n\t * source.start(\"+0.1\");\n\t * source.getStateAtTime(\"+0.1\"); //returns \"started\"\n\t */\n\tTone.TickSource.prototype.getStateAtTime = function(time){\n\t\ttime = this.toSeconds(time);\n\t\treturn this._state.getValueAtTime(time);\n\t};\n\n\t/**\n\t * Get the time of the given tick. The second argument\n\t * is when to test before. Since ticks can be set (with setTicksAtTime)\n\t * there may be multiple times for a given tick value. \n\t * @param  {Ticks} ticks The tick number.\n\t * @param  {Time=} before When to measure the tick value from. \n\t * @return {Time}       The time of the tick\n\t */\n\tTone.TickSource.prototype.getTimeOfTick = function(tick, before){\n\t\tbefore = Tone.defaultArg(before, this.now());\n\t\tvar offset = this._tickOffset.get(before);\n\t\tvar event = this._state.get(before);\n\t\tvar startTime = Math.max(offset.time, event.time);\n\t\tvar absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n\t\treturn this.frequency.getTimeOfTick(absoluteTicks);\n\t};\n\n\t/**\n\t *  Invoke the callback event at all scheduled ticks between the \n\t *  start time and the end time\n\t *  @param  {Time}    startTime  The beginning of the search range\n\t *  @param  {Time}    endTime    The end of the search range\n\t *  @param  {Function<Time,Ticks>}  callback   The callback to invoke with each tick\n\t *  @return  {Tone.TickSource}    this\n\t */\n\tTone.TickSource.prototype.forEachTickBetween = function(startTime, endTime, callback){\n\n\t\t//only iterate through the sections where it is \"started\"\n\t\tvar lastStateEvent = this._state.get(startTime);\n\t\tthis._state.forEachBetween(startTime, endTime, function(event){\n\t\t\tif (lastStateEvent.state === Tone.State.Started && event.state !== Tone.State.Started){\n\t\t\t\tthis.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);\n\t\t\t}\n\t\t\tlastStateEvent = event;\n\t\t}.bind(this));\n\n\t\tstartTime = Math.max(lastStateEvent.time, startTime);\n\n\t\tif (lastStateEvent.state === Tone.State.Started && this._state){\n\t\t\t//figure out the difference between the frequency ticks and the \n\t\t\tvar startTicks = this.frequency.getTicksAtTime(startTime);\n\t\t\tvar ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n\t\t\tvar diff = startTicks - ticksAtStart;\n\t\t\tvar offset = diff % 1;\n\t\t\tif (offset !== 0){\n\t\t\t\toffset = 1 - offset;\n\t\t\t}\n\t\t\tvar nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n\t\t\tvar error = null;\n\t\t\twhile (nextTickTime < endTime && this._state){\n\t\t\t\ttry {\n\t\t\t\t\tcallback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n\t\t\t\t} catch (e){\n\t\t\t\t\terror = e;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._state){\n\t\t\t\t\tnextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\n\t\tif (error){\n\t\t\tthrow error;\n\t\t}\n\t\t\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Clean up\n\t *  @returns {Tone.TickSource} this\n\t */\n\tTone.TickSource.prototype.dispose = function(){\n\t\tTone.Param.prototype.dispose.call(this);\n\t\tthis._state.dispose();\n\t\tthis._state = null;\n\t\tthis._tickOffset.dispose();\n\t\tthis._tickOffset = null;\n\t\tthis._writable(\"frequency\");\n\t\tthis.frequency.dispose();\n\t\tthis.frequency = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.TickSource;\n});\n","define([\"../core/Tone\", \"../core/Context\"], function(Tone){\n\n\t/**\n\t *  @class Tone.AudioNode is the base class for classes which process audio.\n\t *         AudioNodes have inputs and outputs.\n\t *  @param\t{AudioContext=} context\tThe audio context to use with the class\n\t *  @extends {Tone}\n\t */\n\tTone.AudioNode = function(){\n\t\tTone.call(this);\n\n\t\t//use the default context if one is not passed in\n\t\tvar options = Tone.defaults(arguments, [\"context\"], {\n\t\t\t\"context\" : Tone.context\n\t\t});\n\n\t\t/**\n\t\t * The AudioContext of this instance\n\t\t * @private\n\t\t * @type {AudioContext}\n\t\t */\n\t\tthis._context = options.context;\n\t};\n\n\tTone.extend(Tone.AudioNode);\n\n\t/**\n\t * Get the audio context belonging to this instance.\n\t * @type {Tone.Context}\n\t * @memberOf Tone.AudioNode#\n\t * @name context\n\t * @readOnly\n\t */\n\tObject.defineProperty(Tone.AudioNode.prototype, \"context\", {\n\t\tget : function(){\n\t\t\treturn this._context;\n\t\t}\n\t});\n\n\t/**\n\t *  Create input and outputs for this object.\n\t *  @param  {Number}  [input=0]   The number of inputs\n\t *  @param  {Number}  [outputs=0]  The number of outputs\n\t *  @return  {Tone.AudioNode}  this\n\t *  @private\n\t */\n\tTone.AudioNode.prototype.createInsOuts = function(inputs, outputs){\n\n\t\tif (inputs === 1){\n\t\t\tthis.input = this.context.createGain();\n\t\t} else if (inputs > 1){\n\t\t\tthis.input = new Array(inputs);\n\t\t}\n\n\t\tif (outputs === 1){\n\t\t\tthis.output = this.context.createGain();\n\t\t} else if (outputs > 1){\n\t\t\tthis.output = new Array(outputs);\n\t\t}\n\t};\n\n\t/**\n\t *  channelCount is the number of channels used when up-mixing and down-mixing\n\t *  connections to any inputs to the node. The default value is 2 except for\n\t *  specific nodes where its value is specially determined.\n\t *\n\t *  @memberof Tone.AudioNode#\n\t *  @type {Number}\n\t *  @name channelCount\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.AudioNode.prototype, \"channelCount\", {\n\t\tget : function(){\n\t\t\treturn this.output.channelCount;\n\t\t},\n\t\tset : function(c){\n\t\t\treturn this.output.channelCount = c;\n\t\t}\n\t});\n\n\t/**\n\t *  channelCountMode determines how channels will be counted when up-mixing and\n\t *  down-mixing connections to any inputs to the node.\n\t *  The default value is \"max\". This attribute has no effect for nodes with no inputs.\n\t *  @memberof Tone.AudioNode#\n\t *  @type {String}\n\t *  @name channelCountMode\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.AudioNode.prototype, \"channelCountMode\", {\n\t\tget : function(){\n\t\t\treturn this.output.channelCountMode;\n\t\t},\n\t\tset : function(m){\n\t\t\treturn this.output.channelCountMode = m;\n\t\t}\n\t});\n\n\t/**\n\t *  channelInterpretation determines how individual channels will be treated\n\t *  when up-mixing and down-mixing connections to any inputs to the node.\n\t *  The default value is \"speakers\".\n\t *  @memberof Tone.AudioNode#\n\t *  @type {String}\n\t *  @name channelInterpretation\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.AudioNode.prototype, \"channelInterpretation\", {\n\t\tget : function(){\n\t\t\treturn this.output.channelInterpretation;\n\t\t},\n\t\tset : function(i){\n\t\t\treturn this.output.channelInterpretation = i;\n\t\t}\n\t});\n\n\t/**\n\t *  The number of inputs feeding into the AudioNode.\n\t *  For source nodes, this will be 0.\n\t *  @type {Number}\n\t *  @name numberOfInputs\n\t *  @memberof Tone.AudioNode#\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.AudioNode.prototype, \"numberOfInputs\", {\n\t\tget : function(){\n\t\t\tif (this.input){\n\t\t\t\tif (Tone.isArray(this.input)){\n\t\t\t\t\treturn this.input.length;\n\t\t\t\t} else {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  The number of outputs coming out of the AudioNode.\n\t *  @type {Number}\n\t *  @name numberOfOutputs\n\t *  @memberof Tone.AudioNode#\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.AudioNode.prototype, \"numberOfOutputs\", {\n\t\tget : function(){\n\t\t\tif (this.output){\n\t\t\t\tif (Tone.isArray(this.output)){\n\t\t\t\t\treturn this.output.length;\n\t\t\t\t} else {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  connect the output of a ToneNode to an AudioParam, AudioNode, or ToneNode\n\t *  @param  {Tone | AudioParam | AudioNode} unit\n\t *  @param {number} [outputNum=0] optionally which output to connect from\n\t *  @param {number} [inputNum=0] optionally which input to connect to\n\t *  @returns {Tone.AudioNode} this\n\t */\n\tTone.AudioNode.prototype.connect = function(unit, outputNum, inputNum){\n\t\tif (Tone.isArray(this.output)){\n\t\t\toutputNum = Tone.defaultArg(outputNum, 0);\n\t\t\tthis.output[outputNum].connect(unit, 0, inputNum);\n\t\t} else {\n\t\t\tthis.output.connect(unit, outputNum, inputNum);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  disconnect the output\n\t *  @param {Number|AudioNode} output Either the output index to disconnect\n\t *                                   if the output is an array, or the\n\t *                                   node to disconnect from.\n\t *  @returns {Tone.AudioNode} this\n\t */\n\tTone.AudioNode.prototype.disconnect = function(destination, outputNum, inputNum){\n\t\tif (Tone.isArray(this.output)){\n\t\t\tif (Tone.isNumber(destination)){\n\t\t\t\tthis.output[destination].disconnect();\n\t\t\t} else {\n\t\t\t\toutputNum = Tone.defaultArg(outputNum, 0);\n\t\t\t\tthis.output[outputNum].disconnect(destination, 0, inputNum);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.output.disconnect.apply(this.output, arguments);\n\t\t}\n\t};\n\n\t/**\n\t *  Connect the output of this node to the rest of the nodes in series.\n\t *  @example\n\t *  //connect a node to an effect, panVol and then to the master output\n\t *  node.chain(effect, panVol, Tone.Master);\n\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t *  @returns {Tone.AudioNode} this\n\t */\n\tTone.AudioNode.prototype.chain = function(){\n\t\tvar currentUnit = this;\n\t\tfor (var i = 0; i < arguments.length; i++){\n\t\t\tvar toUnit = arguments[i];\n\t\t\tcurrentUnit.connect(toUnit);\n\t\t\tcurrentUnit = toUnit;\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  connect the output of this node to the rest of the nodes in parallel.\n\t *  @param {...AudioParam|Tone|AudioNode} nodes\n\t *  @returns {Tone.AudioNode} this\n\t */\n\tTone.AudioNode.prototype.fan = function(){\n\t\tfor (var i = 0; i < arguments.length; i++){\n\t\t\tthis.connect(arguments[i]);\n\t\t}\n\t\treturn this;\n\t};\n\n\tif (Tone.global.AudioNode){\n\t\t//give native nodes chain and fan methods\n\t\tAudioNode.prototype.chain = Tone.AudioNode.prototype.chain;\n\t\tAudioNode.prototype.fan = Tone.AudioNode.prototype.fan;\n\t}\n\n\t/**\n\t * Dispose and disconnect\n\t * @return {Tone.AudioNode} this\n\t */\n\tTone.AudioNode.prototype.dispose = function(){\n\t\tif (Tone.isDefined(this.input)){\n\t\t\tif (this.input instanceof AudioNode){\n\t\t\t\tthis.input.disconnect();\n\t\t\t}\n\t\t\tthis.input = null;\n\t\t}\n\t\tif (Tone.isDefined(this.output)){\n\t\t\tif (this.output instanceof AudioNode){\n\t\t\t\tthis.output.disconnect();\n\t\t\t}\n\t\t\tthis.output = null;\n\t\t}\n\t\tthis._context = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.AudioNode;\n});\n","define([\"../core/Tone\", \"../core/Param\", \"../core/Gain\", \"../signal/SignalBase\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Multiply two incoming signals. Or, if a number is given in the constructor,\n\t *          multiplies the incoming signal by that value.\n\t *\n\t *  @constructor\n\t *  @extends {Tone.Signal}\n\t *  @param {number=} value Constant value to multiple. If no value is provided,\n\t *                         it will return the product of the first and second inputs\n\t *  @example\n\t * var mult = new Tone.Multiply();\n\t * var sigA = new Tone.Signal(3);\n\t * var sigB = new Tone.Signal(4);\n\t * sigA.connect(mult, 0, 0);\n\t * sigB.connect(mult, 0, 1);\n\t * //output of mult is 12.\n\t *  @example\n\t * var mult = new Tone.Multiply(10);\n\t * var sig = new Tone.Signal(2).connect(mult);\n\t * //the output of mult is 20.\n\t */\n\tTone.Multiply = function(value){\n\n\t\tTone.Signal.call(this);\n\t\tthis.createInsOuts(2, 0);\n\n\t\t/**\n\t\t *  the input node is the same as the output node\n\t\t *  it is also the GainNode which handles the scaling of incoming signal\n\t\t *\n\t\t *  @type {GainNode}\n\t\t *  @private\n\t\t */\n\t\tthis._mult = this.input[0] = this.output = new Tone.Gain();\n\n\t\t/**\n\t\t *  the scaling parameter\n\t\t *  @type {AudioParam}\n\t\t *  @private\n\t\t */\n\t\tthis._param = this.input[1] = this.output.gain;\n\t\tthis.value = Tone.defaultArg(value, 0);\n\t\tthis.proxy = false;\n\t};\n\n\tTone.extend(Tone.Multiply, Tone.Signal);\n\n\t/**\n\t *  clean up\n\t *  @returns {Tone.Multiply} this\n\t */\n\tTone.Multiply.prototype.dispose = function(){\n\t\tTone.Signal.prototype.dispose.call(this);\n\t\tthis._mult.dispose();\n\t\tthis._mult = null;\n\t\tthis._param = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Multiply;\n});\n","define([\"../core/Tone\", \"../signal/WaveShaper\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Pow applies an exponent to the incoming signal. The incoming signal\n\t *         must be AudioRange.\n\t *\n\t *  @extends {Tone.SignalBase}\n\t *  @constructor\n\t *  @param {Positive} exp The exponent to apply to the incoming signal, must be at least 2. \n\t *  @example\n\t * var pow = new Tone.Pow(2);\n\t * var sig = new Tone.Signal(0.5).connect(pow);\n\t * //output of pow is 0.25. \n\t */\n\tTone.Pow = function(exp){\n\n\t\tTone.SignalBase.call(this);\n\t\t\n\t\t/**\n\t\t * the exponent\n\t\t * @private\n\t\t * @type {number}\n\t\t */\n\t\tthis._exp = Tone.defaultArg(exp, 1);\n\n\t\t/**\n\t\t *  @type {WaveShaperNode}\n\t\t *  @private\n\t\t */\n\t\tthis._expScaler = this.input = this.output = new Tone.WaveShaper(this._expFunc(this._exp), 8192);\n\t};\n\n\tTone.extend(Tone.Pow, Tone.SignalBase);\n\n\t/**\n\t * The value of the exponent.\n\t * @memberOf Tone.Pow#\n\t * @type {number}\n\t * @name value\n\t */\n\tObject.defineProperty(Tone.Pow.prototype, \"value\", {\n\t\tget : function(){\n\t\t\treturn this._exp;\n\t\t},\n\t\tset : function(exp){\n\t\t\tthis._exp = exp;\n\t\t\tthis._expScaler.setMap(this._expFunc(this._exp));\n\t\t}\n\t});\n\n\t/**\n\t *  the function which maps the waveshaper\n\t *  @param   {number} exp\n\t *  @return {function}\n\t *  @private\n\t */\n\tTone.Pow.prototype._expFunc = function(exp){\n\t\treturn function(val){\n\t\t\treturn Math.pow(Math.abs(val), exp);\n\t\t};\n\t};\n\n\t/**\n\t *  Clean up.\n\t *  @returns {Tone.Pow} this\n\t */\n\tTone.Pow.prototype.dispose = function(){\n\t\tTone.SignalBase.prototype.dispose.call(this);\n\t\tthis._expScaler.dispose();\n\t\tthis._expScaler = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Pow;\n});\n","define([\"../core/Tone\", \"../core/Context\", \"../shim/OfflineAudioContext\"], function(Tone){\n\n\t/**\n\t *  @class Wrapper around the OfflineAudioContext\n\t *  @extends {Tone.Context}\n\t *  @param  {Number}  channels  The number of channels to render\n\t *  @param  {Number}  duration  The duration to render in samples\n\t *  @param {Number} sampleRate the sample rate to render at\n\t */\n\tTone.OfflineContext = function(channels, duration, sampleRate){\n\n\t\t/**\n\t\t *  The offline context\n\t\t *  @private\n\t\t *  @type  {OfflineAudioContext}\n\t\t */\n\t\tvar offlineContext = new OfflineAudioContext(channels, duration * sampleRate, sampleRate);\n\n\t\t//wrap the methods/members\n\t\tTone.Context.call(this, {\n\t\t\t\"context\" : offlineContext,\n\t\t\t\"clockSource\" : \"offline\",\n\t\t\t\"lookAhead\" : 0,\n\t\t\t\"updateInterval\" : 128 / sampleRate\n\t\t});\n\n\t\t/**\n\t\t *  A private reference to the duration\n\t\t *  @private\n\t\t *  @type  {Number}\n\t\t */\n\t\tthis._duration = duration;\n\n\t\t/**\n\t\t *  An artificial clock source\n\t\t *  @type  {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._currentTime = 0;\n\t};\n\n\tTone.extend(Tone.OfflineContext, Tone.Context);\n\n\t/**\n\t *  Override the now method to point to the internal clock time\n\t *  @return  {Number}\n\t */\n\tTone.OfflineContext.prototype.now = function(){\n\t\treturn this._currentTime;\n\t};\n\n\t/**\n\t *  Overwrite resume, should not do anything in the OfflineAudioContext.\n\t *  @return {Promise}\n\t */\n\tTone.OfflineContext.prototype.resume = function(){\n\t\treturn Promise.resolve();\n\t};\n\n\t/**\n\t *  Render the output of the OfflineContext\n\t *  @return  {Promise}\n\t */\n\tTone.OfflineContext.prototype.render = function(){\n\t\twhile (this._duration - this._currentTime >= 0){\n\t\t\t//invoke all the callbacks on that time\n\t\t\tthis.emit(\"tick\");\n\t\t\t//increment the clock\n\t\t\tthis._currentTime += this.blockTime;\n\t\t}\n\n\t\treturn this._context.startRendering();\n\t};\n\n\t/**\n\t *  Close the context\n\t *  @return  {Promise}\n\t */\n\tTone.OfflineContext.prototype.close = function(){\n\t\tthis._context = null;\n\t\treturn Promise.resolve();\n\t};\n\n\treturn Tone.OfflineContext;\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._m(0),_c('form',{staticClass:\"d-flex flex-column\",on:{\"submit\":function($event){$event.preventDefault();return _vm.submitForm($event)}}},[_c('div',{staticClass:\"row order-3\"},[_c('div',{staticClass:\"col-12 description small\"},[_vm._v(\"\\n        Example searches:\\n        \"),_c('ul',{staticClass:\"inline-list\"},[_c('li',[_c('example-link',{attrs:{\"query\":\"piracy\"}}),_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\" / \")])],1),_c('li',[_c('example-link',{attrs:{\"query\":\"he said, she said\"}}),_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\" / \")])],1),_c('li',[_c('example-link',{attrs:{\"query\":\"ride a *\"}}),_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\" / \")])],1),_c('li',[_c('example-link',{attrs:{\"query\":\"me: lobster, cal: gold, tex: cowboy\"}}),_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\" / \")])],1),_c('li',[_c('example-link',{attrs:{\"query\":\"*: gold\"}}),_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\" / \")])],1),_c('li',[_c('a',{attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.clickHelpButton($event)}}},[_vm._v(\"more ...\")])])])])]),_c('div',{staticClass:\"form-row query-row\"},[_c('div',{staticClass:\"col-sm pr-0\"},[_c('input',{ref:\"textToGraph\",staticClass:\"text-to-graph\",attrs:{\"aria-label\":\"terms to graph\"},domProps:{\"value\":_vm.textToGraph}})]),_c('loading-button',{staticClass:\"col-auto pl-sm-0 ml-auto\",attrs:{\"showLoading\":_vm.showLoading}},[_vm._v(\"Search\")]),_c('div',{staticClass:\"col-auto\"},[_c('panelset-button',{attrs:{\"panel-id\":\"help\",\"current-panel\":_vm.currentPanel,\"title\":\"Advanced search tips\",\"aria-label\":\"advanced search tips\"}},[_vm._v(\"\\n          ADVANCED\\n        \")])],1)],1),_c('panelset-panel',{attrs:{\"panel-id\":\"help\",\"current-panel\":_vm.currentPanel}},[_c('div',{on:{\"click\":_vm.helpLinkClicked}},[_c('h5',[_vm._v(\"Search tips\")]),_c('p',[_vm._v(\"\\n          Search for phrases of one to three words. Multiple phrases can be separated by commas. Do not use quotes.\\n          All searches are case-insensitive. Examples:\\n        \")]),_c('ul',{staticClass:\"bullets\"},[_c('li',[_c('example-link',{attrs:{\"query\":\"piracy\"}}),_vm._v(\" (history of the term \\\"piracy\\\")\")],1),_c('li',[_c('example-link',{attrs:{\"query\":\"his or her\"}}),_vm._v(\" (history of the term \\\"his or her\\\")\")],1),_c('li',[_c('example-link',{attrs:{\"query\":\"apple, banana, orange, pear\"}}),_vm._v(\" (compare \\\"apple\\\" to \\\"banana\\\" to \\\"orange\\\" to \\\"pear\\\")\")],1),_c('li',[_c('example-link',{attrs:{\"query\":\"he said, she said\"}}),_vm._v(\" (compare \\\"he said\\\" to \\\"she said\\\")\")],1)]),_c('h5',{staticClass:\"card-title\"},[_vm._v(\"Wildcard search\")]),_c('p',[_vm._v(\"\\n          Replace the final word of a phrase with \\\"*\\\" to perform a wildcard search. This will return the top ten\\n          phrases beginning with your first one or two words. Wildcards are currently allowed only as the final\\n          word in a phrase. Examples:\\n        \")]),_c('ul',{staticClass:\"bullets\"},[_c('li',[_c('example-link',{attrs:{\"query\":\"constitutional *\"}}),_vm._v(\" (top ten two-word phrases beginning with \\\"constitutional\\\")\")],1),_c('li',[_c('example-link',{attrs:{\"query\":\"ride a *\"}}),_vm._v(\" (top ten three-word phrases beginning with \\\"ride a\\\")\")],1),_c('li',[_vm._v(\"* amendment (not currently supported)\")])]),_c('h5',{staticClass:\"card-title\"},[_vm._v(\"Jurisdiction search\")]),_c('p',[_vm._v(\"\\n          Limit a term to a particular jurisdiction (US state or state-level political division) by starting the term with\\n          that jurisdiction's code. Available jurisdiction codes are listed below. Examples:\\n        \")]),_c('ul',{staticClass:\"bullets\"},[_c('li',[_c('example-link',{attrs:{\"query\":\"cal: gold mine\"}}),_vm._v(\" (history of the term \\\"gold mine\\\" in California)\")],1),_c('li',[_c('example-link',{attrs:{\"query\":\"me: lobster, cal: gold, tex: cowboy\"}}),_vm._v(\" (compare \\\"lobster\\\" in Maine, \\\"gold\\\" in California, and \\\"cowboy\\\" in Texas)\")],1)]),_c('p',[_vm._v(\"\\n          Show all jurisdictions separately by using the special jurisdiction code \\\"*\\\". Examples:\\n        \")]),_c('ul',{staticClass:\"bullets\"},[_c('li',[_c('example-link',{attrs:{\"query\":\"*: gold\"}}),_vm._v(\" (compare \\\"gold\\\" in all jurisdictions separately)\")],1)]),_c('h5',{staticClass:\"card-title\"},[_vm._v(\"Jurisdiction codes\")]),_c('div',{staticClass:\"row\"},_vm._l((_vm.jurisdictions),function(jurisdiction){return _c('div',{key:jurisdiction[0],staticClass:\"col-4\"},[_c('p',[_vm._v(\"\\n            \"+_vm._s(jurisdiction[1])+\": \\\"\"),_c('a',{attrs:{\"href\":(\"?q=\" + (jurisdiction[0]) + \"}: \")},on:{\"click\":function($event){$event.preventDefault();return _vm.appendJurisdictionCode(jurisdiction[0])}}},[_vm._v(\"\\n            \"+_vm._s(jurisdiction[0])+\":\")]),_vm._v(\"\\\"\\n          \")])])}),0)])])],1),(_vm.errors.length)?_c('div',{staticClass:\"row\"},[_c('ul',{staticClass:\"small alert-danger\"},_vm._l((_vm.errors),function(error){return _c('li',[_vm._v(_vm._s(error))])}),0)]):_vm._e(),(_vm.chartData.datasets.length > 0)?_c('div',{staticClass:\"row graph-menu\"},[_c('div',{staticClass:\"col-auto ml-auto\"},[_c('panelset-button',{attrs:{\"panel-id\":\"options\",\"current-panel\":_vm.currentPanel,\"title\":\"Customize\"}},[_c('img',{attrs:{\"src\":((_vm.urls.static) + \"img/icons/settings.svg\")}}),_c('span',[_vm._v(\"Customize graph\")])]),_c('panelset-button',{attrs:{\"panel-id\":\"keyboard\",\"current-panel\":_vm.currentPanel,\"title\":\"Keyboard commands\"}},[_c('img',{attrs:{\"src\":((_vm.urls.static) + \"img/icons/keyboard.svg\")}}),_c('span',[_vm._v(\"Keyboard commands\")])]),_c('panelset-button',{attrs:{\"panel-id\":\"table\",\"current-panel\":_vm.currentPanel,\"title\":\"Table view\"}},[_c('img',{attrs:{\"src\":((_vm.urls.static) + \"img/icons/view_list.svg\")}}),_c('span',[_vm._v(\"Table view\")])]),_c('panelset-button',{attrs:{\"panel-id\":\"cite\",\"current-panel\":_vm.currentPanel,\"title\":\"Cite\"}},[_c('img',{attrs:{\"src\":((_vm.urls.static) + \"img/icons/school.svg\")}}),_c('span',[_vm._v(\"Cite graph\")])]),_c('panelset-button',{attrs:{\"panel-id\":\"download\",\"current-panel\":_vm.currentPanel,\"title\":\"Download\"}},[_c('img',{attrs:{\"src\":((_vm.urls.static) + \"img/icons/download.svg\")}}),_c('span',[_vm._v(\"Download\")])])],1)]):_vm._e(),_c('div',{attrs:{\"id\":\"collapsePanels\"}},[_c('panelset-panel',{attrs:{\"panel-id\":\"options\",\"current-panel\":_vm.currentPanel}},[_c('h5',[_vm._v(\"Customize graph display\")]),_c('fieldset',{staticClass:\"form-group\",attrs:{\"aria-describedby\":\"percentOrAbsHelpText\"}},[_c('p',{staticClass:\"form-text\",attrs:{\"id\":\"percentOrAbsHelpText\"}},[_vm._v(\"\\n          Show count as a percentage of all grams for the year, or an absolute number?\\n        \")]),_c('div',{staticClass:\"form-check form-check-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.percentOrAbs),expression:\"percentOrAbs\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"radio\",\"name\":\"percentOrAbs\",\"id\":\"percentOrAbs1\",\"value\":\"percent\"},domProps:{\"checked\":_vm._q(_vm.percentOrAbs,\"percent\")},on:{\"change\":function($event){_vm.percentOrAbs=\"percent\"}}}),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"percentOrAbs1\"}},[_vm._v(\"Percentage\")])]),_c('div',{staticClass:\"form-check form-check-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.percentOrAbs),expression:\"percentOrAbs\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"radio\",\"name\":\"percentOrAbs\",\"id\":\"percentOrAbs2\",\"value\":\"absolute\"},domProps:{\"checked\":_vm._q(_vm.percentOrAbs,\"absolute\")},on:{\"change\":function($event){_vm.percentOrAbs=\"absolute\"}}}),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"percentOrAbs2\"}},[_vm._v(\"Absolute number\")])])]),_c('fieldset',{staticClass:\"form-group\",attrs:{\"aria-describedby\":\"countTypeHelpText\"}},[_c('p',{staticClass:\"form-text\",attrs:{\"id\":\"countTypeHelpText\"}},[_vm._v(\"\\n          Show count of cases containing your term, or count of individual instances of your term?\\n        \")]),_c('div',{staticClass:\"form-check form-check-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.countType),expression:\"countType\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"radio\",\"name\":\"countType\",\"id\":\"countType1\",\"value\":\"doc_count\"},domProps:{\"checked\":_vm._q(_vm.countType,\"doc_count\")},on:{\"change\":function($event){_vm.countType=\"doc_count\"}}}),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"countType1\"}},[_vm._v(\"Case count\")])]),_c('div',{staticClass:\"form-check form-check-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.countType),expression:\"countType\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"radio\",\"name\":\"countType\",\"id\":\"countType2\",\"value\":\"count\"},domProps:{\"checked\":_vm._q(_vm.countType,\"count\")},on:{\"change\":function($event){_vm.countType=\"count\"}}}),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"countType2\"}},[_vm._v(\"Instance count\")])])]),_c('fieldset',{staticClass:\"form-group\",attrs:{\"aria-describedby\":\"sameYAxisHelpText\"}},[_c('p',{staticClass:\"form-text\",attrs:{\"id\":\"sameYAxisHelpText\"}},[_vm._v(\"\\n          Show all terms on the same Y axis (for comparing frequency) or scale each term to fill the Y axis (for\\n          comparing correlation)?\\n        \")]),_c('div',{staticClass:\"form-check form-check-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sameYAxis),expression:\"sameYAxis\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"radio\",\"name\":\"sameYAxis\",\"id\":\"sameYAxis1\"},domProps:{\"value\":true,\"checked\":_vm._q(_vm.sameYAxis,true)},on:{\"change\":function($event){_vm.sameYAxis=true}}}),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"sameYAxis1\"}},[_vm._v(\"Terms on the same Y axis\")])]),_c('div',{staticClass:\"form-check form-check-inline\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sameYAxis),expression:\"sameYAxis\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"radio\",\"name\":\"sameYAxis\",\"id\":\"sameYAxis2\"},domProps:{\"value\":false,\"checked\":_vm._q(_vm.sameYAxis,false)},on:{\"change\":function($event){_vm.sameYAxis=false}}}),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"sameYAxis2\"}},[_vm._v(\"Terms scaled to fill Y axis\")])])]),_c('div',{staticClass:\"form-group\"},[_c('label',{attrs:{\"for\":\"formControlRange\"}},[_vm._v(\"Smoothing\")]),_c('p',{staticClass:\"form-text\",attrs:{\"id\":\"smoothingFactorHelpText\"}},[(_vm.smoothingFactor > 0)?_c('span',[_vm._v(\"\\n            Data points will be averaged with the nearest \"+_vm._s(_vm.smoothingFactor)+\"% of other points.\\n          \")]):_c('span',[_vm._v(\"\\n            No smoothing will be applied.\\n          \")])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model.lazy\",value:(_vm.smoothingFactor),expression:\"smoothingFactor\",modifiers:{\"lazy\":true}}],staticClass:\"form-control-range\",attrs:{\"type\":\"range\",\"min\":\"0\",\"max\":\"10\",\"id\":\"formControlRange\"},domProps:{\"value\":(_vm.smoothingFactor)},on:{\"change\":function($event){_vm.smoothingFactor=$event.target.value}}})])]),_c('panelset-panel',{attrs:{\"panel-id\":\"keyboard\",\"current-panel\":_vm.currentPanel}},[_c('h5',[_vm._v(\"Keyboard Commands\")]),_c('p',[_vm._v(\"The graph is keyboard accessible. With the graph selected, press:\")]),_c('ul',{staticClass:\"bullets\"},[_c('li',[_vm._v(\"up and down arrows: select terms\")]),_c('li',[_vm._v(\"left and right arrows: select points\")]),_c('li',[_vm._v(\"space bar: enable or disable selected trend line\")]),_c('li',[_vm._v(\"enter key: search for example cases\")]),_c('li',[_vm._v(\"\\n          Sounds:\\n          \"),_c('ul',{staticClass:\"bullets\"},[_c('li',[_vm._v(\"\\\"s\\\" key: audio tones on/off\")]),_c('li',[_vm._v(\"\\\"p\\\" key: auto play audio tones\")]),_c('li',[_vm._v(\"\\\"b\\\" key: blues mode\")])])])])]),_c('panelset-panel',{attrs:{\"panel-id\":\"table\",\"current-panel\":_vm.currentPanel}},[_c('h5',[_vm._v(\"Table View\")]),_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-sm\"},[_c('thead',[_c('tr',[_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Year\")]),_vm._l((_vm.chartData.datasets),function(dataset){return _c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(_vm._s(dataset.label))])})],2)]),_c('tbody',_vm._l((_vm.chartData.labels),function(year,i){return _c('tr',[_c('th',{attrs:{\"scope\":\"row\"}},[_vm._v(_vm._s(year))]),_vm._l((_vm.chartData.datasets),function(dataset,j){return _c('td',[_c('a',{attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.searchForPoint(j, i)}}},[_vm._v(_vm._s(_vm.formatValue(dataset.data[i])))])])})],2)}),0)])])]),_c('panelset-panel',{attrs:{\"panel-id\":\"cite\",\"current-panel\":_vm.currentPanel}},[_c('h5',[_vm._v(\"Scholarly Citation and Reuse\")]),_c('p',[_vm._v(\"\\n        Version: Historical Trends dataset version \"+_vm._s(_vm.datasetVersion)+\", published \"+_vm._s(_vm.datasetDate)+\".\\n      \")]),_c('p',[_vm._v(\"Graphs on this page may be freely reproduced with credit. Suggested citation formats:\")]),_c('dl',{staticClass:\"row\"},[_c('dt',{staticClass:\"col-sm-3\"},[_vm._v(\"APA\")]),_c('dd',{staticClass:\"col-sm-9\"},[_vm._v(\"\\n          \\\"Graph of '\"+_vm._s(_vm.textToGraph)+\",'\\\"\\n          by \"+_vm._s(_vm.author)+\", \"+_vm._s(_vm.datasetYear)+\", \"+_vm._s(_vm.publication)+\" v.\"+_vm._s(_vm.datasetVersion)+\".\\n          Retrieved [date], from \"+_vm._s(_vm.currentUrl)+\".\\n        \")]),_c('dt',{staticClass:\"col-sm-3\"},[_vm._v(\"MLA\")]),_c('dd',{staticClass:\"col-sm-9\"},[_vm._v(\"\\\"Graph of '\"+_vm._s(_vm.textToGraph)+\".'\\\"\\n          \"),_c('i',[_vm._v(_vm._s(_vm.publication)+\" v.\"+_vm._s(_vm.datasetVersion))]),_vm._v(\",\\n          \"),_vm._v(_vm._s(_vm.author)+\".\\n          \"),_vm._v(_vm._s(_vm.datasetDate)+\",\\n          \"),_vm._v(_vm._s(_vm.currentUrl)+\".\\n          \"),_vm._v(\"Accessed [date].\\n        \")]),_c('dt',{staticClass:\"col-sm-3\"},[_vm._v(\"Chicago / Turabian\")]),_c('dd',{staticClass:\"col-sm-9\"},[_vm._v(\"\\n          Graph of \\\"\"+_vm._s(_vm.textToGraph)+\".\\\"\\n          \"+_vm._s(_vm.datasetYear)+\". \"+_vm._s(_vm.publication)+\" v.\"+_vm._s(_vm.datasetVersion)+\", \"+_vm._s(_vm.author)+\", Cambridge, MA.\\n          \"+_vm._s(_vm.currentUrl)+\".\\n        \")]),_c('dt',{staticClass:\"col-sm-3\"},[_vm._v(\"Bluebook\")]),_c('dd',{staticClass:\"col-sm-9\"},[_vm._v(_vm._s(_vm.author)+\", \"),_c('i',[_vm._v(_vm._s(_vm.publication)+\" v.\"+_vm._s(_vm.datasetVersion))]),_vm._v(\", Graph of \\\"\"+_vm._s(_vm.textToGraph)+\",\\\" \"+_vm._s(_vm.currentUrl)+\" (last visited [date]).\")])])]),_c('panelset-panel',{attrs:{\"panel-id\":\"download\",\"current-panel\":_vm.currentPanel}},[_c('h5',[_vm._v(\"Download\")]),_c('ul',{staticClass:\"bullets\"},[_c('li',[_c('strong',[_c('a',{attrs:{\"href\":\"#\",\"download\":\"trends.png\"},on:{\"click\":_vm.imageDownloadClicked,\"contextmenu\":_vm.imageDownloadClicked}},[_vm._v(\"Download as an image\")])])]),_c('li',[_c('a',{attrs:{\"href\":\"#\",\"download\":\"trends.csv\"},on:{\"click\":_vm.csvDownloadClicked,\"contextmenu\":_vm.csvDownloadClicked}},[_vm._v(\"Download CSV\")]),_vm._v(\" (best for analyzing in Excel)\")]),_c('li',[_c('a',{attrs:{\"href\":\"#\",\"download\":\"trends.json\"},on:{\"click\":_vm.jsonDownloadClicked,\"contextmenu\":_vm.jsonDownloadClicked}},[_vm._v(\"Download JSON\")]),_vm._v(\" (best for analyzing from a program)\")])]),_c('div',[_c('p',{staticClass:\"d-inline\"},[_vm._v(\"View the API queries that generated this graph: \")]),_c('ul',{staticClass:\"inline-list\"},_vm._l((_vm.currentApiQueries),function(query,index){return _c('li',[_c('a',{attrs:{\"href\":query[1],\"target\":\"_blank\"}},[_vm._v(_vm._s(query[0]))]),(index !== _vm.currentApiQueries.length - 1)?_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\" / \")]):_vm._e()])}),0)])])],1),_c('div',{staticClass:\"graph\"},[_c('div',{staticClass:\"container graph-container\",attrs:{\"tabindex\":\"0\"},on:{\"keydown\":_vm.chartKeyDown}},[_c('line-example',{ref:\"chart\",attrs:{\"chartData\":_vm.chartData,\"options\":_vm.chartOptions,\"styles\":_vm.chartStyles,\"aria-label\":(\"Graph of '\" + _vm.textToGraph + \"' between \" + _vm.minYear + \" and \" + _vm.maxYear + \". See table view for details.\"),\"aria-describedby\":\"tablePanelButton\",\"role\":\"img\"}}),_c('div',{staticClass:\"sr-only\",attrs:{\"aria-live\":\"assertive\",\"aria-atomic\":\"true\"}},[_vm._v(_vm._s(_vm.canvasStatus))])],1),(_vm.chartData.datasets.length > 0)?_c('div',{staticClass:\"row zoom-row\"},[_c('div',{staticClass:\"col-auto mr-2\"},[_vm._v(\"years\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model.lazy.number\",value:(_vm.minYear),expression:\"minYear\",modifiers:{\"lazy\":true,\"number\":true}}],staticClass:\"col-auto\",attrs:{\"id\":\"min-year\",\"aria-label\":\"start year\",\"type\":\"number\",\"min\":\"1640\",\"max\":\"2018\"},domProps:{\"value\":(_vm.minYear)},on:{\"change\":function($event){_vm.minYear=_vm._n($event.target.value)},\"blur\":function($event){return _vm.$forceUpdate()}}}),_c('vue-slider',{staticClass:\"col mr-3\",attrs:{\"enable-cross\":false,\"min\":_vm.minPossible,\"max\":_vm.maxPossible},model:{value:(_vm.yearSlider),callback:function ($$v) {_vm.yearSlider=$$v},expression:\"yearSlider\"}}),_c('input',{directives:[{name:\"model\",rawName:\"v-model.lazy.number\",value:(_vm.maxYear),expression:\"maxYear\",modifiers:{\"lazy\":true,\"number\":true}}],staticClass:\"col-auto\",attrs:{\"id\":\"max-year\",\"aria-label\":\"end year\",\"type\":\"number\",\"min\":\"1640\",\"max\":\"2018\"},domProps:{\"value\":(_vm.maxYear)},on:{\"change\":function($event){_vm.maxYear=_vm._n($event.target.value)},\"blur\":function($event){return _vm.$forceUpdate()}}})],1):_vm._e()]),_c('search-results',{ref:\"searchResults\",attrs:{\"urls\":_vm.urls}}),(_vm.screenshotReady)?_c('div',{attrs:{\"id\":\"screenshot-ready\"}}):_vm._e()],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page-title\"},[_c('h1',[_vm._v(\"Historical Trends\")]),_c('p',[_vm._v(\"\\n      The \"),_c('a',{attrs:{\"href\":\"/\"}},[_vm._v(\"Caselaw Access Project\")]),_vm._v(\" includes over 6 million U.S. legal cases from the Harvard Law\\n      School Library — about 12 billion words in all. Our Historical Trends tool graphs the frequency\\n      of words and phrases through time, similar to the Google Ngram Viewer.\\n    \")])])}]\n\nexport { render, staticRenderFns }","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();\n}","function dataHandler(newData, oldData) {\n  if (oldData) {\n    var chart = this.$data._chart;\n    var newDatasetLabels = newData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldDatasetLabels = oldData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldLabels = JSON.stringify(oldDatasetLabels);\n    var newLabels = JSON.stringify(newDatasetLabels);\n\n    if (newLabels === oldLabels && oldData.datasets.length === newData.datasets.length) {\n      newData.datasets.forEach(function (dataset, i) {\n        var oldDatasetKeys = Object.keys(oldData.datasets[i]);\n        var newDatasetKeys = Object.keys(dataset);\n        var deletionKeys = oldDatasetKeys.filter(function (key) {\n          return key !== '_meta' && newDatasetKeys.indexOf(key) === -1;\n        });\n        deletionKeys.forEach(function (deletionKey) {\n          delete chart.data.datasets[i][deletionKey];\n        });\n\n        for (var attribute in dataset) {\n          if (dataset.hasOwnProperty(attribute)) {\n            chart.data.datasets[i][attribute] = dataset[attribute];\n          }\n        }\n      });\n\n      if (newData.hasOwnProperty('labels')) {\n        chart.data.labels = newData.labels;\n        this.$emit('labels:update');\n      }\n\n      if (newData.hasOwnProperty('xLabels')) {\n        chart.data.xLabels = newData.xLabels;\n        this.$emit('xlabels:update');\n      }\n\n      if (newData.hasOwnProperty('yLabels')) {\n        chart.data.yLabels = newData.yLabels;\n        this.$emit('ylabels:update');\n      }\n\n      chart.update();\n      this.$emit('chart:update');\n    } else {\n      if (chart) {\n        chart.destroy();\n        this.$emit('chart:destroy');\n      }\n\n      this.renderChart(this.chartData, this.options);\n      this.$emit('chart:render');\n    }\n  } else {\n    if (this.$data._chart) {\n      this.$data._chart.destroy();\n\n      this.$emit('chart:destroy');\n    }\n\n    this.renderChart(this.chartData, this.options);\n    this.$emit('chart:render');\n  }\n}\n\nexport var reactiveData = {\n  data: function data() {\n    return {\n      chartData: null\n    };\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport var reactiveProp = {\n  props: {\n    chartData: {\n      type: Object,\n      required: true,\n      default: function _default() {}\n    }\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport default {\n  reactiveData: reactiveData,\n  reactiveProp: reactiveProp\n};","import Chart from 'chart.js';\nexport function generateChart(chartId, chartType) {\n  return {\n    render: function render(createElement) {\n      return createElement('div', {\n        style: this.styles,\n        class: this.cssClasses\n      }, [createElement('canvas', {\n        attrs: {\n          id: this.chartId,\n          width: this.width,\n          height: this.height\n        },\n        ref: 'canvas'\n      })]);\n    },\n    props: {\n      chartId: {\n        default: chartId,\n        type: String\n      },\n      width: {\n        default: 400,\n        type: Number\n      },\n      height: {\n        default: 400,\n        type: Number\n      },\n      cssClasses: {\n        type: String,\n        default: ''\n      },\n      styles: {\n        type: Object\n      },\n      plugins: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      }\n    },\n    data: function data() {\n      return {\n        _chart: null,\n        _plugins: this.plugins\n      };\n    },\n    methods: {\n      addPlugin: function addPlugin(plugin) {\n        this.$data._plugins.push(plugin);\n      },\n      generateLegend: function generateLegend() {\n        if (this.$data._chart) {\n          return this.$data._chart.generateLegend();\n        }\n      },\n      renderChart: function renderChart(data, options) {\n        if (this.$data._chart) this.$data._chart.destroy();\n        this.$data._chart = new Chart(this.$refs.canvas.getContext('2d'), {\n          type: chartType,\n          data: data,\n          options: options,\n          plugins: this.$data._plugins\n        });\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      if (this.$data._chart) {\n        this.$data._chart.destroy();\n      }\n    }\n  };\n}\nexport var Bar = generateChart('bar-chart', 'bar');\nexport var HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');\nexport var Doughnut = generateChart('doughnut-chart', 'doughnut');\nexport var Line = generateChart('line-chart', 'line');\nexport var Pie = generateChart('pie-chart', 'pie');\nexport var PolarArea = generateChart('polar-chart', 'polarArea');\nexport var Radar = generateChart('radar-chart', 'radar');\nexport var Bubble = generateChart('bubble-chart', 'bubble');\nexport var Scatter = generateChart('scatter-chart', 'scatter');\nexport default {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter\n};","var render, staticRenderFns\nimport script from \"./LineChart.vue?vue&type=script&lang=js&\"\nexport * from \"./LineChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render, staticRenderFns\nimport script from \"./panelset.vue?vue&type=script&lang=js&\"\nexport * from \"./panelset.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\n  import {Line, mixins} from 'vue-chartjs'\n\n  export default {\n    extends: Line,\n    mixins: [mixins.reactiveProp],\n    props: [\"options\"],\n  }\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LineChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LineChart.vue?vue&type=script&lang=js&\"","<script>\n  import Vue from 'vue';\n\n  /*\n    This Panelset mixin creates a set of panels that can each be hidden or shown with a set of buttons. Clicking one\n    button shows that panel and hides any existing panels. Example:\n    <template>\n      <panelset-button panel-id=\"options\" :current-panel=\"currentPanel\" additional-button-attrs...>\n        button contents\n      </panelset-button>\n      <panelset-panel panel-id=\"options\" :current-panel=\"currentPanel\">\n        panel contents\n      </panelset-panel>\n    </template>\n    <script>\n      export default {\n        mixins: [Panelset]\n      }\n    <//script>\n  */\n  export default {\n    components: {\n      PanelsetButton: Vue.component('panelset-button', {\n        props: ['panelId', 'currentPanel', 'title'],\n        template: `\n          <button class=\"btn-secondary\"\n                  :id=\"\\`\\${panelId}PanelButton\\`\"\n                  type=\"button\"\n                  @click=\"onClick\"\n                  @blur=\"onBlur\"\n                  :aria-expanded=\"currentPanel === panelId\"\n                  :aria-controls=\"currentPanel === panelId ? \\`\\${panelId}Panel\\` : false\">\n            <slot></slot>\n          </button>\n        `,\n        methods: {\n          onClick() {\n            if (this.currentPanel === this.panelId) {\n              this.$parent.currentPanel = null;\n            } else {\n              this.$parent.currentPanel = this.panelId;\n              this.focusInPanel();\n            }\n          },\n          onBlur() {\n            if (this.currentPanel === this.panelId) {\n              this.focusInPanel();\n            }\n          },\n          focusInPanel(){\n            /* focus on first element inside panel */\n            Vue.nextTick().then(() => {\n              const firstFocus = document.getElementById(\n                `${this.panelId}Panel`\n              ).querySelectorAll(\n                'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n              )[0];\n              firstFocus.focus();\n            });\n          },\n        }\n      }),\n      PanelsetPanel: Vue.component('panelset-panel', {\n        props: ['panelId', 'currentPanel'],\n        template: `\n          <div class=\"card panelset-panel\"\n               :id=\"\\`\\${panelId}Panel\\`\"\n               v-if=\"currentPanel === panelId\"\n               tabindex=\"-1\"\n               @keydown.esc=\"closeButtonClick\">\n            <div class=\"card-body\">\n              <slot></slot>\n              <button type=\"button\"\n                      @click=\"closeButtonClick\"\n                      class=\"close\"\n                      @blur.prevent=\"closeButtonBlur\"\n                      :aria-controls=\"\\`\\${panelId}Panel\\`\"\n                      :aria-label=\"\\`close \\${panelId} panel\\`\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n          </div>\n        `,\n        methods: {\n          focusOnButton() {\n            document.getElementById(`${this.panelId}PanelButton`).focus();\n          },\n          closeButtonClick() {\n            this.$parent.currentPanel = null;\n            this.focusOnButton();\n          },\n          closeButtonBlur() {\n            this.focusOnButton();\n          },\n        }\n      }),\n    },\n    data: function () {\n      return {\n        currentPanel: null,\n      }\n    },\n  }\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./panelset.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./panelset.vue?vue&type=script&lang=js&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.showLoading)?_c('div',{ref:\"loadingMessage\",staticClass:\"results-list-container d-flex align-items-center\",attrs:{\"tabindex\":\"-1\"}},[_c('span',{staticClass:\"spinner-border spinner-border-sm mr-2\",attrs:{\"role\":\"status\",\"aria-hidden\":\"true\"}}),_vm._v(\"\\n  Loading example cases ...\\n\")]):(_vm.error)?_c('div',{staticClass:\"results-list-container\"},[_vm._v(\"\\n  \"+_vm._s(_vm.error)+\"\\n\")]):(_vm.results)?_c('div',{staticClass:\"results-list-container\"},[_c('h2',{ref:\"casesHeader\",attrs:{\"tabindex\":\"-1\"}},[_vm._v(\"Example cases\")]),_c('p',[_vm._v(\"Cases matching \\\"\"+_vm._s(_vm.term)+\"\\\" in \"+_vm._s(_vm.startYear)),(_vm.startYear !== _vm.endYear)?_c('span',[_vm._v(\"-\"+_vm._s(_vm.endYear))]):_vm._e(),_vm._v(\":\")]),(_vm.results.length)?_c('ul',{staticClass:\"results-list\"},_vm._l((_vm.results),function(result){return _c('case-result',{key:result.id,attrs:{\"result\":result}})}),1):_c('p',[_vm._v(\"No results found.\")]),_c('div',{staticClass:\"text-right\"},[_c('a',{attrs:{\"href\":_vm.searchPageUrl()}},[(_vm.results.length >= 5)?_c('span',[_vm._v(\"\\n        View more\\n      \")]):_c('span',[_vm._v(\"\\n        View search page\\n      \")]),_vm._v(\"\\n      >>\\n    \")])]),_c('p',{staticClass:\"text-muted font-italic\"},[_vm._v(\"\\n    Note: because of differences in tokenization, search results may not exactly match graph counts.\\n  \")])]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div v-if=\"showLoading\" ref=\"loadingMessage\" tabindex=\"-1\" class=\"results-list-container d-flex align-items-center\">\n    <span class=\"spinner-border spinner-border-sm mr-2\"\n          role=\"status\"\n          aria-hidden=\"true\"></span>\n    Loading example cases ...\n  </div>\n  <div v-else-if=\"error\" class=\"results-list-container\">\n    {{error}}\n  </div>\n  <div v-else-if=\"results\" class=\"results-list-container\">\n    <h2 ref=\"casesHeader\" tabindex=\"-1\">Example cases</h2>\n    <p>Cases matching \"{{term}}\" in {{startYear}}<span v-if=\"startYear !== endYear\">-{{endYear}}</span>:</p>\n    <ul v-if=\"results.length\" class=\"results-list\">\n      <case-result v-for=\"result in results\"\n                   :result=\"result\"\n                   :key=\"result.id\">\n      </case-result>\n    </ul>\n    <p v-else>No results found.</p>\n    <div class=\"text-right\">\n      <a :href=\"searchPageUrl()\">\n        <span v-if=\"results.length >= 5\">\n          View more\n        </span>\n        <span v-else>\n          View search page\n        </span>\n        >>\n      </a>\n    </div>\n    <p class=\"text-muted font-italic\">\n      Note: because of differences in tokenization, search results may not exactly match graph counts.\n    </p>\n  </div>\n</template>\n\n<script>\n  import CaseResult from '../search/case-result.vue';\n  import {getApiUrl, jsonQuery} from '../api';\n  import {encodeQueryData} from '../utils';\n  import Vue from 'vue';\n\n  export default {\n    components: {\n      CaseResult,\n    },\n    props: [\n      'urls'\n    ],\n    data() {\n      return {\n        showLoading: false,\n        error: null,\n        results: null,\n        params: null,\n        term: null,\n        startYear: null,\n        endYear: null,\n      }\n    },\n    methods: {\n      search(term, params, startYear, endYear) {\n        const searchParams = this.params = {\n          search: `\"${params.q}\"`,\n          decision_date_min: `${startYear}-01-01`,\n          decision_date_max: `${endYear}-12-31`,\n          page_size: 5,\n        };\n        if (params.jurisdiction)\n          searchParams.jurisdiction = params.jurisdiction;\n        this.showLoading = true;\n        Vue.nextTick().then(() => { this.$refs.loadingMessage.focus() });\n        this.error = null;\n        const url = getApiUrl(urls.api_root,\"cases\", searchParams);  // eslint-disable-line\n        jsonQuery(url).then((resp)=>{\n          this.results = resp.results;\n          this.term = term;\n          this.startYear = startYear;\n          this.endYear = endYear;\n          this.showLoading = false;\n          Vue.nextTick().then(() => { this.$refs.casesHeader.focus() });\n        }).catch(() => {\n          // error handling\n          this.showLoading = false;\n          this.error = \"Error loading examples.\"\n        });\n      },\n      searchPageUrl() {\n        return `${this.urls.search_page}?${encodeQueryData(this.params)}`\n      },\n      reset() {\n        this.showLoading = false;\n        this.error = null;\n        this.results = null;\n      },\n    }\n  }\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-results.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-results.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./search-results.vue?vue&type=template&id=f5652008&\"\nimport script from \"./search-results.vue?vue&type=script&lang=js&\"\nexport * from \"./search-results.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div>\n    <div class=\"page-title\">\n      <h1>Historical Trends</h1>\n      <p>\n        The <a href=\"/\">Caselaw Access Project</a> includes over 6 million U.S. legal cases from the Harvard Law\n        School Library — about 12 billion words in all. Our Historical Trends tool graphs the frequency\n        of words and phrases through time, similar to the Google Ngram Viewer.\n      </p>\n    </div>\n    <form @submit.prevent=\"submitForm\" class=\"d-flex flex-column\">\n\n      <!-- example links -- visually moved to end so dom order makes more sense for screen readers -->\n      <div class=\"row order-3\">\n        <div class=\"col-12 description small\">\n          Example searches:\n          <ul class=\"inline-list\">\n            <li><example-link query=\"piracy\"/> <span aria-hidden=\"true\"> / </span> </li>\n            <li><example-link query=\"he said, she said\"/> <span aria-hidden=\"true\"> / </span> </li>\n            <li><example-link query=\"ride a *\"/> <span aria-hidden=\"true\"> / </span> </li>\n            <li><example-link query=\"me: lobster, cal: gold, tex: cowboy\"/> <span aria-hidden=\"true\"> / </span> </li>\n            <li><example-link query=\"*: gold\"/> <span aria-hidden=\"true\"> / </span> </li>\n            <li><a href=\"#\" @click.prevent=\"clickHelpButton\">more ...</a></li>\n          </ul>\n        </div>\n      </div>\n\n      <div class=\"form-row query-row\">\n        <div class=\"col-sm pr-0\">\n          <input class=\"text-to-graph\"\n                 :value=\"textToGraph\"\n                 ref=\"textToGraph\"\n                 aria-label=\"terms to graph\">\n        </div>\n        <loading-button :showLoading=\"showLoading\" class=\"col-auto pl-sm-0 ml-auto\">Search</loading-button>\n        <div class=\"col-auto\">\n          <panelset-button panel-id=\"help\"\n                           :current-panel=\"currentPanel\"\n                           title=\"Advanced search tips\"\n                           aria-label=\"advanced search tips\">\n            ADVANCED\n          </panelset-button>\n        </div>\n      </div>\n      <panelset-panel panel-id=\"help\"\n                      :current-panel=\"currentPanel\">\n        <div @click=\"helpLinkClicked\">\n          <h5>Search tips</h5>\n          <p>\n            Search for phrases of one to three words. Multiple phrases can be separated by commas. Do not use quotes.\n            All searches are case-insensitive. Examples:\n          </p>\n          <ul class=\"bullets\">\n            <li><example-link query=\"piracy\"/> (history of the term \"piracy\")</li>\n            <li><example-link query=\"his or her\"/> (history of the term \"his or her\")</li>\n            <li><example-link query=\"apple, banana, orange, pear\"/> (compare \"apple\" to \"banana\" to \"orange\" to \"pear\")</li>\n            <li><example-link query=\"he said, she said\"/> (compare \"he said\" to \"she said\")</li>\n          </ul>\n\n          <h5 class=\"card-title\">Wildcard search</h5>\n          <p>\n            Replace the final word of a phrase with \"*\" to perform a wildcard search. This will return the top ten\n            phrases beginning with your first one or two words. Wildcards are currently allowed only as the final\n            word in a phrase. Examples:\n          </p>\n          <ul class=\"bullets\">\n            <li><example-link query=\"constitutional *\"/> (top ten two-word phrases beginning with \"constitutional\")</li>\n            <li><example-link query=\"ride a *\"/> (top ten three-word phrases beginning with \"ride a\")</li>\n            <li>* amendment (not currently supported)</li>\n          </ul>\n\n          <h5 class=\"card-title\">Jurisdiction search</h5>\n          <p>\n            Limit a term to a particular jurisdiction (US state or state-level political division) by starting the term with\n            that jurisdiction's code. Available jurisdiction codes are listed below. Examples:\n          </p>\n          <ul class=\"bullets\">\n            <li><example-link query=\"cal: gold mine\"/> (history of the term \"gold mine\" in California)</li>\n            <li><example-link query=\"me: lobster, cal: gold, tex: cowboy\"/> (compare \"lobster\" in Maine, \"gold\" in California, and \"cowboy\" in Texas)</li>\n          </ul>\n          <p>\n            Show all jurisdictions separately by using the special jurisdiction code \"*\". Examples:\n          </p>\n          <ul class=\"bullets\">\n            <li><example-link query=\"*: gold\"/> (compare \"gold\" in all jurisdictions separately)</li>\n          </ul>\n\n          <h5 class=\"card-title\">Jurisdiction codes</h5>\n          <div class=\"row\">\n          <div class=\"col-4\"\n               v-for=\"jurisdiction in jurisdictions\" :key=\"jurisdiction[0]\">\n            <p>\n              {{jurisdiction[1]}}: \"<a\n                    :href=\"`?q=${jurisdiction[0]}}: `\"\n                    @click.prevent=\"appendJurisdictionCode(jurisdiction[0])\">\n              {{jurisdiction[0]}}:</a>\"\n            </p>\n          </div>\n        </div>\n        </div>\n      </panelset-panel>\n    </form>\n\n    <div class=\"row\" v-if=\"errors.length\">\n      <ul class=\"small alert-danger\">\n        <li v-for=\"error in errors\">{{error}}</li>  <!-- eslint-disable-line vue/require-v-for-key -->\n      </ul>\n    </div>\n\n    <div v-if=\"chartData.datasets.length > 0\" class=\"row graph-menu\">\n      <div class=\"col-auto ml-auto\">\n        <panelset-button panel-id=\"options\" :current-panel=\"currentPanel\" title=\"Customize\">\n          <img :src=\"`${urls.static}img/icons/settings.svg`\">\n          <span>Customize graph</span>\n        </panelset-button>\n        <panelset-button panel-id=\"keyboard\" :current-panel=\"currentPanel\" title=\"Keyboard commands\">\n          <img :src=\"`${urls.static}img/icons/keyboard.svg`\">\n          <span>Keyboard commands</span>\n        </panelset-button>\n        <panelset-button panel-id=\"table\" :current-panel=\"currentPanel\" title=\"Table view\">\n          <img :src=\"`${urls.static}img/icons/view_list.svg`\">\n          <span>Table view</span>\n        </panelset-button>\n        <panelset-button panel-id=\"cite\" :current-panel=\"currentPanel\" title=\"Cite\">\n          <img :src=\"`${urls.static}img/icons/school.svg`\">\n          <span>Cite graph</span>\n        </panelset-button>\n        <panelset-button panel-id=\"download\" :current-panel=\"currentPanel\" title=\"Download\">\n          <img :src=\"`${urls.static}img/icons/download.svg`\">\n          <span>Download</span>\n        </panelset-button>\n      </div>\n    </div>\n\n    <div id=\"collapsePanels\">\n\n      <!-- customize panel -->\n      <panelset-panel panel-id=\"options\" :current-panel=\"currentPanel\">\n        <h5>Customize graph display</h5>\n        <fieldset class=\"form-group\" aria-describedby=\"percentOrAbsHelpText\">\n          <p id=\"percentOrAbsHelpText\" class=\"form-text\">\n            Show count as a percentage of all grams for the year, or an absolute number?\n          </p>\n          <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\"\n                   type=\"radio\"\n                   name=\"percentOrAbs\"\n                   id=\"percentOrAbs1\"\n                   value=\"percent\"\n                   v-model=\"percentOrAbs\">\n            <label class=\"form-check-label\" for=\"percentOrAbs1\">Percentage</label>\n          </div>\n          <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\"\n                   type=\"radio\"\n                   name=\"percentOrAbs\"\n                   id=\"percentOrAbs2\"\n                   value=\"absolute\"\n                   v-model=\"percentOrAbs\">\n            <label class=\"form-check-label\" for=\"percentOrAbs2\">Absolute number</label>\n          </div>\n        </fieldset>\n        <fieldset class=\"form-group\" aria-describedby=\"countTypeHelpText\">\n          <p id=\"countTypeHelpText\" class=\"form-text\">\n            Show count of cases containing your term, or count of individual instances of your term?\n          </p>\n          <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\"\n                   type=\"radio\"\n                   name=\"countType\"\n                   id=\"countType1\"\n                   value=\"doc_count\"\n                   v-model=\"countType\">\n            <label class=\"form-check-label\" for=\"countType1\">Case count</label>\n          </div>\n          <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\"\n                   type=\"radio\"\n                   name=\"countType\"\n                   id=\"countType2\"\n                   value=\"count\"\n                   v-model=\"countType\">\n            <label class=\"form-check-label\" for=\"countType2\">Instance count</label>\n          </div>\n        </fieldset>\n        <fieldset class=\"form-group\" aria-describedby=\"sameYAxisHelpText\">\n          <p id=\"sameYAxisHelpText\" class=\"form-text\">\n            Show all terms on the same Y axis (for comparing frequency) or scale each term to fill the Y axis (for\n            comparing correlation)?\n          </p>\n          <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\"\n                   type=\"radio\"\n                   name=\"sameYAxis\"\n                   id=\"sameYAxis1\"\n                   :value=\"true\"\n                   v-model=\"sameYAxis\">\n            <label class=\"form-check-label\" for=\"sameYAxis1\">Terms on the same Y axis</label>\n          </div>\n          <div class=\"form-check form-check-inline\">\n            <input class=\"form-check-input\"\n                   type=\"radio\"\n                   name=\"sameYAxis\"\n                   id=\"sameYAxis2\"\n                   :value=\"false\"\n                   v-model=\"sameYAxis\">\n            <label class=\"form-check-label\" for=\"sameYAxis2\">Terms scaled to fill Y axis</label>\n          </div>\n        </fieldset>\n        <div class=\"form-group\">\n          <label for=\"formControlRange\">Smoothing</label>\n          <p id=\"smoothingFactorHelpText\" class=\"form-text\">\n            <span v-if=\"smoothingFactor > 0\">\n              Data points will be averaged with the nearest {{smoothingFactor}}% of other points.\n            </span>\n            <span v-else>\n              No smoothing will be applied.\n            </span>\n          </p>\n          <input type=\"range\"\n                 class=\"form-control-range\"\n                 min=\"0\" max=\"10\"\n                 v-model.lazy=\"smoothingFactor\"\n                 id=\"formControlRange\">\n        </div>\n      </panelset-panel>\n\n      <!-- keyboard commands -->\n      <panelset-panel panel-id=\"keyboard\" :current-panel=\"currentPanel\">\n        <h5>Keyboard Commands</h5>\n        <p>The graph is keyboard accessible. With the graph selected, press:</p>\n        <ul class=\"bullets\">\n          <li>up and down arrows: select terms</li>\n          <li>left and right arrows: select points</li>\n          <li>space bar: enable or disable selected trend line</li>\n          <li>enter key: search for example cases</li>\n          <li>\n            Sounds:\n            <ul class=\"bullets\">\n              <li>\"s\" key: audio tones on/off</li>\n              <li>\"p\" key: auto play audio tones</li>\n              <li>\"b\" key: blues mode</li>\n            </ul>\n          </li>\n        </ul>\n      </panelset-panel>\n\n      <!-- table panel -->\n      <panelset-panel panel-id=\"table\" :current-panel=\"currentPanel\">\n        <h5>Table View</h5>\n        <div class=\"table-responsive\">\n          <table class=\"table table-sm\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Year</th>\n                <th v-for=\"dataset in chartData.datasets\" scope=\"col\">{{dataset.label}}</th> <!-- eslint-disable-line vue/require-v-for-key -->\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(year, i) in chartData.labels\"> <!-- eslint-disable-line vue/require-v-for-key -->\n                <th scope=\"row\">{{year}}</th>\n                <td v-for=\"(dataset, j) in chartData.datasets\"> <!-- eslint-disable-line vue/require-v-for-key -->\n                  <a href=\"#\" @click.prevent=\"searchForPoint(j, i)\">{{formatValue(dataset.data[i])}}</a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </panelset-panel>\n\n      <!-- cite panel -->\n      <panelset-panel panel-id=\"cite\" :current-panel=\"currentPanel\">\n        <h5>Scholarly Citation and Reuse</h5>\n        <p>\n          Version: Historical Trends dataset version {{datasetVersion}}, published {{datasetDate}}.\n        </p>\n        <p>Graphs on this page may be freely reproduced with credit. Suggested citation formats:</p>\n        <dl class=\"row\">\n          <dt class=\"col-sm-3\">APA</dt>\n          <dd class=\"col-sm-9\">\n            <!-- via https://columbiacollege-ca.libguides.com/apa/images -->\n            \"Graph of '{{textToGraph}},'\"\n            by {{author}}, {{datasetYear}}, {{publication}} v.{{datasetVersion}}.\n            Retrieved [date], from {{currentUrl}}.\n          </dd>\n          <dt class=\"col-sm-3\">MLA</dt>\n          <dd class=\"col-sm-9\">\n            <!-- via image cited on the web only example from https://owl.purdue.edu/owl/research_and_citation/mla_style/mla_formatting_and_style_guide/mla_works_cited_electronic_sources.html -->\n            <!-- title -->\"Graph of '{{textToGraph}}.'\"\n            <!-- publication --><i>{{publication}} v.{{datasetVersion}}</i>,\n            <!-- author -->{{author}}.\n            <!-- publication date -->{{datasetDate}},\n            <!-- url -->{{currentUrl}}.\n            <!-- accessed date -->Accessed [date].\n          </dd>\n          <dt class=\"col-sm-3\">Chicago / Turabian</dt>\n          <dd class=\"col-sm-9\">\n            <!-- via http://www.easybib.com/guides/citation-guides/chicago-turabian/how-to-cite-a-photo-digital-image-chicago-turabian/ -->\n            Graph of \"{{textToGraph}}.\"\n            {{datasetYear}}. {{publication}} v.{{datasetVersion}}, {{author}}, Cambridge, MA.\n            {{currentUrl}}.\n          </dd>\n          <dt class=\"col-sm-3\">Bluebook</dt>\n          <dd class=\"col-sm-9\">{{author}}, <i>{{publication}} v.{{datasetVersion}}</i>, Graph of \"{{textToGraph}},\" {{currentUrl}} (last visited [date]).</dd>\n        </dl>\n      </panelset-panel>\n\n      <!-- download panel -->\n      <panelset-panel panel-id=\"download\" :current-panel=\"currentPanel\">\n        <h5>Download</h5>\n        <ul class=\"bullets\">\n          <li><strong><a href=\"#\" download=\"trends.png\" @click=\"imageDownloadClicked\" @contextmenu=\"imageDownloadClicked\">Download as an image</a></strong></li>\n          <li><a href=\"#\" download=\"trends.csv\" @click=\"csvDownloadClicked\" @contextmenu=\"csvDownloadClicked\">Download CSV</a> (best for analyzing in Excel)</li>\n          <li><a href=\"#\" download=\"trends.json\" @click=\"jsonDownloadClicked\" @contextmenu=\"jsonDownloadClicked\">Download JSON</a> (best for analyzing from a program)</li>\n        </ul>\n        <div>\n          <p class=\"d-inline\">View the API queries that generated this graph:&nbsp;</p>\n          <ul class=\"inline-list\">\n            <li v-for=\"(query, index) in currentApiQueries\"> <!-- eslint-disable-line vue/require-v-for-key -->\n              <a :href=\"query[1]\" target=\"_blank\">{{query[0]}}</a>\n              <span v-if=\"index !== currentApiQueries.length - 1\" aria-hidden=\"true\"> / </span>\n            </li>\n          </ul>\n        </div>\n      </panelset-panel>\n    </div> <!-- /collapsePanels -->\n\n    <div class=\"graph\">\n      <div class=\"container graph-container\"\n           @keydown=\"chartKeyDown\"\n           tabindex=\"0\">\n        <line-example :chartData=\"chartData\"\n                      :options=\"chartOptions\"\n                      :styles=\"chartStyles\"\n                      :aria-label=\"`Graph of '${textToGraph}' between ${minYear} and ${maxYear}. See table view for details.`\"\n                      aria-describedby=\"tablePanelButton\"\n                      role=\"img\"\n                      ref=\"chart\">\n        </line-example>\n        <div class=\"sr-only\" aria-live=\"assertive\" aria-atomic=\"true\">{{canvasStatus}}</div>\n      </div>\n      <div v-if=\"chartData.datasets.length > 0\" class=\"row zoom-row\">\n        <div class=\"col-auto mr-2\">years</div>\n        <input id=\"min-year\"\n               class=\"col-auto\"\n               aria-label=\"start year\"\n               v-model.lazy.number=\"minYear\"\n               type=\"number\"\n               min=\"1640\" max=\"2018\"/>\n        <vue-slider v-model=\"yearSlider\"\n                    class=\"col mr-3\"\n                    :enable-cross=\"false\"\n                    :min=\"minPossible\"\n                    :max=\"maxPossible\"\n        />\n        <input id=\"max-year\"\n               class=\"col-auto\"\n               aria-label=\"end year\"\n               v-model.lazy.number=\"maxYear\"\n               type=\"number\"\n               min=\"1640\" max=\"2018\"/>\n      </div>\n    </div>\n    <search-results ref=\"searchResults\" :urls=\"urls\"></search-results>\n    <div v-if=\"screenshotReady\" id=\"screenshot-ready\"></div> <!-- empty div to be detected when taking screenshot -->\n  </div>\n</template>\n\n<script>\n  import Chart from 'chart.js';\n  import csvStringify from 'csv-stringify/lib/sync';\n  import debounce from 'lodash.debounce';\n  import Tone from 'tone/Tone/core/Tone';\n  import Synth from 'tone/Tone/instrument/Synth';\n  import Vue from 'vue';\n  import VueSlider from 'vue-slider-component';\n  import 'vue-slider-component/theme/default.css';\n\n  import LineExample from './LineChart.vue';\n  import LoadingButton from '../vue-shared/loading-button.vue';\n  import Panelset from '../vue-shared/panelset';\n  import SearchResults from './search-results.vue';\n  import {getApiUrl, jsonQuery} from '../api'\n\n  // math helpers\n  const mod = (n, m) => ((n % m) + m) % m;  // mod function that works correctly with negative numbers\n  const max = Math.max;\n  const min = Math.min;\n  const average = (items) => items.reduce((a, b) => a + b) / items.length;\n  const deepCopy = (value) => JSON.parse(JSON.stringify(value));\n\n  export default {\n    name: 'Main',\n    mixins: [Panelset],\n    components: {\n      LineExample,\n      LoadingButton,\n      VueSlider,\n      SearchResults,\n      ExampleLink: Vue.component('example-link', {\n        template: `<router-link class=\"example-link\" :to=\"\\`?q=\\${query}\\`\">{{query}}</router-link>`,\n        props: ['query'],\n      }),\n    },\n    beforeMount() {\n      this.jurisdictions = [[\"*\", \"Wildcard\"]].concat(snippets.jurisdictions);  // eslint-disable-line\n      for (const[k, v] of this.jurisdictions)\n        this.jurisdictionLookup[k] = v;\n      this.urls = urls;  // eslint-disable-line\n      Chart.pluginService.register({\n        beforeDraw: this.beforeDraw,\n        afterLayout: this.afterLayout,\n        afterRender: this.afterRender,\n      });\n    },\n    mounted: function () {\n      /* Read url state when first loaded. */\n      const route = this.$route;\n      this.initialQuery = deepCopy(route.query);\n      this.handleRouteUpdate(route);\n      // render default search manually if rendering won't be prompted by URL value\n      if (!route.query.q)\n        this.textToGraphUpdated();\n      window.addEventListener('resize', ()=>{ this.handleWindowResize() });\n      this.handleWindowResize();\n    },\n    watch: {\n      /* Read url state on change. */\n      '$route': function (route, oldRoute) {\n        this.handleRouteUpdate(route, oldRoute);\n      },\n      textToGraph() {\n        this.setUrlParam(\"textToGraph\");\n        this.textToGraphUpdated();\n      },\n      percentOrAbs: function () {\n        this.setUrlParam(\"percentOrAbs\");\n        this.graphResults();\n      },\n      countType: function () {\n        this.setUrlParam(\"countType\");\n        this.graphResults();\n      },\n      sameYAxis: function () {\n        this.setUrlParam(\"sameYAxis\");\n        this.graphResults();\n      },\n      minYear: function () {\n        this.clampYears();\n        this.yearSlider = [this.minYear, this.maxYear];\n        this.setUrlParam(\"minYear\");\n        this.graphResults();\n      },\n      maxYear: function () {\n        this.clampYears();\n        this.yearSlider = [this.minYear, this.maxYear];\n        this.setUrlParam(\"maxYear\");\n        this.graphResults();\n      },\n      yearSlider(newval) {\n        [this.minYear, this.maxYear] = newval;\n      },\n      smoothingFactor: function() {\n        this.setUrlParam(\"smoothingFactor\");\n        this.graphResults();\n      },\n      deselectedTerms: function() {\n        this.setUrlParam(\"deselectedTerms\");\n        this.graphResults();\n      },\n      currentLine() {\n        this.selectLine();\n      },\n      currentPoint() {\n        this.selectPoint();\n      },\n      totalChartHeight(newVal) {\n        this.chartStyles.height = `${newVal}px`;\n      },\n    },\n    data: function () {\n      const chartHeight = 400;\n      // configure all the data values that have their state stored in the URL\n      const urlValues = {\n        textToGraph: {param: \"q\", default: \"apple pie, baseball\"},\n        smoothingFactor: {param: \"sf\", default: 2},\n        maxYear: {\n          param: \"xy\",\n          default: 2018,\n          toValue: this.clampYear,\n          isDefault: (value) => this.rawData && value === this.rawData.maxYear,\n        },\n        minYear: {\n          param: \"ny\",\n          default: 1800,\n          toValue: this.clampYear,\n          isDefault: (value) => this.rawData && value === this.rawData.minYear,\n        },\n        sameYAxis: {param: \"sy\", default: true},\n        countType: {param: \"ct\", default: \"doc_count\"},\n        percentOrAbs: {param: \"pa\", default: \"percent\"},\n        deselectedTerms: {\n          param: \"dt\",\n          default: [],\n          toValue: (value) => value.split(\",\"),\n          toParam: (value) => value.join(\",\"),\n        },\n      };\n      const out = {\n        // citation stuff\n        baseUrl: window.location.origin + this.$router.options.base,\n        currentYear: new Date().getFullYear(),\n        datasetVersion: \"1.0\",\n        datasetDate: \"June 6, 2019\",\n        datasetYear: \"2019\",\n        author: \"Harvard University\",\n        publication: \"Caselaw Access Project Historical Trends\",\n\n        urlValues,\n        yearSlider: [urlValues.minYear.default, urlValues.maxYear.default],\n\n        currentTab: null,\n        currentLine: null,\n        currentPoint: null,\n        currentHelpPanel: null,\n        currentApiQueries: [],\n        chartHeight: chartHeight,\n        chartLegendHeight: 32,\n        chartData: {datasets: []},\n        canvasStatus: \"\",\n        rawData: null,\n        textToGraph: \"apple pie, baseball\",\n        minPossible: urlValues.minYear.default,\n        maxPossible: urlValues.maxYear.default,\n        smoothingWindow: 0,\n        previousSameYAxis: true,\n        jurisdictions: [],\n        jurisdictionLookup: {},\n        screenshotReady: false,  // whether page has rendered sufficiently to take screenshot\n        urls: {},\n        // colors via http://mkweb.bcgsc.ca/biovis2012/ and https://contrast-ratio.com/:\n        // these colors work for color-blindness, and have contrast against white that is WCAG AA large or better\n        colors: [\n          \"rgb(0,0,0)\", \"rgb(73,0,146)\", \"rgb(146,0,0)\",\n          \"rgb(0,73,73)\", \"rgb(0,109,219)\", \"rgb(146,73,0)\",\n          \"rgb(0,146,146)\", \"rgb(182,109,255)\", \"rgb(219,109,0)\",\n        ],\n        pointStyles: ['circle', 'cross', 'crossRot', 'rect', 'rectRounded', 'rectRot', 'star', 'triangle'],\n        soundsOn: false,\n        soundAutoplay: false,\n        soundPlaySpeed: 50,\n        useScales: false,\n        soundScales: [\n          // [0,1,2,3,4,5,6,7,8,9,10,11],  // half steps\n          // 0,2,4,7,9  // pentatonic scale\n          [0, 3, 5, 6, 7, 10],  // blues scale\n        ],\n        currentSoundScale: 0,\n        synth: null,\n        synthStopTime: null,\n        errors: [],\n        showLoading: false,\n        initialQuery: null,\n        chartOptions: {\n          responsive: true,\n          maintainAspectRatio: false,\n          onClick: this.chartOnClick,\n          legend: {\n            labels: {\n              boxWidth: 20,\n              usePointStyle: true,\n            },\n            onClick: this.legendItemOnClick,\n          },\n          layout: {\n            padding: {\n              bottom: 10,\n            }\n          },\n          scales: {\n            yAxes: [{\n              id: '0',\n              type: 'linear',\n              gridLines: {\n                color: \"rgba(0, 0, 0, 0)\",\n              },\n              ticks: {\n                beginAtZero: true,\n              },\n              scaleLabel: {\n                display: true,\n              },\n            }],\n            xAxes: [{\n              gridLines: {\n                color: \"rgba(0, 0, 0, 0)\",\n              },\n            }]\n          },\n          tooltips: {\n            callbacks: {\n              title: (tooltipItem) => {\n                /* format tooltip title to include date range when smoothing is on */\n                return this.formatYearRange(tooltipItem[0].label);\n              },\n              label: (tooltipItem, data) => {\n                return data.datasets[tooltipItem.datasetIndex].label + ': ' + this.formatValue(tooltipItem.yLabel);\n              }\n            }\n          }\n        },\n        chartStyles: {\n          height: `${chartHeight}px`,\n        }\n      };\n      // add each urlValues entry to data\n      for (const [k, v] of Object.entries(urlValues))\n        out[k] = deepCopy(v['default']);\n      return out;\n    },\n    computed: {\n      currentUrl: function () {\n        return this.baseUrl.slice(0, -1) + this.$route.fullPath;\n      },\n      totalChartHeight() {\n        return this.chartHeight + this.chartLegendHeight;\n      },\n      yScaleLabel() {\n        const countType = this.countType === \"count\" ? \"instances\" : \"cases\";\n        if (this.percentOrAbs === \"percent\") {\n          return `% of ${countType}`;\n        } else if (this.smoothingWindow) {\n          return `${countType} per year`;\n        } else {\n          return countType;\n        }\n      },\n    },\n    methods: {\n      formatYearRange(year) {\n        /* return range of years given a year and this.smoothingWindow */\n        if (!this.smoothingWindow)\n          return year;\n        const labels = this.chartData.labels;\n        const startRange = max(labels[0], Number(year)-this.smoothingWindow);\n        const endRange = min(labels[labels.length-1], Number(year)+this.smoothingWindow);\n        return `${startRange}-${endRange}`;\n      },\n      formatValue(value) {\n        /*\n          format numeric datapoint based on percentOrAbs, countType, and smoothingWindow\n        */\n        if (this.percentOrAbs === \"percent\") {\n          return `${!value ? 0 : value === 100 ? 100 : value.toPrecision(2)}${this.yScaleLabel}`;\n        } else if (this.smoothingWindow) {\n          return `about ${value < 10 ? value.toPrecision(2) : Math.round(value)} ${this.yScaleLabel}`;\n        } else {\n          return `${value} ${this.yScaleLabel}`;\n        }\n      },\n      clampYear(year) {\n        return max(min(Number(year), this.maxPossible), this.minPossible);\n      },\n      clampYears() {\n        /* clamp minYear and maxYear to acceptable values */\n        this.minYear = this.clampYear(this.minYear);\n        this.maxYear = this.clampYear(this.maxYear);\n        if (this.minYear > this.maxYear)\n          [this.minYear, this.maxYear] = [this.maxYear, this.minYear];\n      },\n      range(start, stop, step = 1) {\n        start = Number(start);\n        stop = Number(stop);\n        return Array(Math.ceil((stop - start) / step)).fill(start).map((x, y) => x + y * step)\n      },\n      getTerms(text) {\n        let terms = text.split(\",\");\n        return terms.map(term => term.trim());\n      },\n      submitForm() {\n        this.textToGraph = this.$refs.textToGraph.value;\n      },\n      handleRouteUpdate(route) {\n        /* set data values based on query params */\n        const query = route.query;\n        for (const [attr, config] of Object.entries(this.urlValues)) {\n          let value = query[config.param];\n          if (value) {\n            if (config.toValue)\n              value = config.toValue(value);\n            this[attr] = value;\n          }\n        }\n      },\n      setUrlParam(attr) {\n        /* set query params based on data value */\n        const config = this.urlValues[attr];\n        let value = this[attr];\n        const query = deepCopy(this.$route.query);\n        const toParam = config.toParam || ((v) => v);\n        const isDefault = config.isDefault ? config.isDefault(value) : toParam(config.default) === toParam(value);\n        if (isDefault)\n          delete query[config.param];\n        else\n          query[config.param] = toParam(value);\n        this.$router.replace({query});\n      },\n      textToGraphUpdated() {\n        /* handle update to this.textToGraph */\n\n        // clear existing errors, but don't clear existing graph yet in case we can't draw anything new\n        this.errors = [];\n\n        // validate input\n        let q = this.textToGraph;\n        if (!q.trim()){\n          this.errors.push(\"Please enter text\");\n          return;\n        }\n        const terms = this.getTerms(q);\n        this.showLoading = true;\n        this.currentApiQueries = [];\n\n        Promise.all(\n\n          // send request for each term, in parallel\n          terms.map((term)=> {\n            if (term === \"\")\n              return null;\n            const [firstWord, ...restWords] = term.split(/\\s/);\n\n            // parse jurisdiction prefix\n            const params = {};\n            if (firstWord.endsWith(':')) {\n              const jur = firstWord.slice(0, -1);\n              if (!this.jurisdictionLookup[jur]){\n                this.errors.push(`Unknown jurisdiction \"${jur}\". Options are: ${Object.keys(this.jurisdictionLookup)}`);\n                return null;\n              }\n              if (!restWords.length) {\n                this.errors.push(`Jurisdiction ${jur} should be followed by a search term.`);\n                return null;\n              }\n              params.jurisdiction = jur;\n              params.q = restWords.join(' ');\n            } else {\n              params.q = term;\n            }\n\n            // fetch results\n            const url = getApiUrl(this.urls.api_root,\"ngrams\", params);\n            this.currentApiQueries.push([term, url]);\n            return jsonQuery(url).then((resp)=>{\n              // filter out responses with no results\n              if (Object.keys(resp.results).length === 0) {\n                this.errors.push(`\"${term}\" does not appear in our corpus.`);\n                return null;\n              }\n              return {results: resp.results, params};\n            });\n          })\n        ).then((results) => {\n          // display results\n          this.showLoading = false;\n          const rawData = this.parseResponse(results);\n          if (Object.keys(rawData.results).length === 0)\n            return;  // no search term found results\n          this.rawData = rawData;\n\n          // reset (some) graph settings when a new search is run.\n          // we *don't* reset graph settings if this is the first query, and they were set in the URL,\n          // because we want to preserve settings in shared links\n          if (!this.initialQuery || !this.initialQuery[this.urlValues.minYear.param])\n            this.minYear = this.rawData.minYear;\n          if (!this.initialQuery || !this.initialQuery[this.urlValues.maxYear.param])\n            this.maxYear = this.rawData.maxYear;\n          if (!this.initialQuery || !this.initialQuery[this.urlValues.deselectedTerms.param])\n            this.deselectedTerms = [];\n          this.$refs.searchResults.reset();\n          this.initialQuery = null;\n\n          this.graphResults();\n        }).catch(response => {\n          // error handling\n          this.showLoading = false;\n          this.errors.push(\"Connection error: failed to load results\");\n          console.log(\"Connection error:\", response);  // eslint-disable-line\n        });\n\n      },\n      // graphResults is debounced so we don't redraw the graph too often when settings are changed\n      graphResults: debounce(function(){\n\n        // validate input from display options\n        this.clampYears();\n        if (!this.rawData)\n          return;\n        const newDatasets = [];\n        const dataMinYear = this.rawData.minYear;\n        const dataMaxYear = this.rawData.maxYear;\n        const minYear = this.minYear;\n        const maxYear = this.maxYear;\n        let colorIndex = this.rawData.colorOffset;\n        let fullChartReset = false;\n        const years = this.range(minYear, maxYear+1);\n\n        // prepare each dataset\n        for (const [term, rawData] of Object.entries(this.rawData.results)) {\n\n          // apply percentOrAbs and countType settings\n          let data = rawData.data.map((year) => {\n            if (year === null) return 0;\n            if (this.percentOrAbs === \"absolute\") return year[this.countType][0];\n            return year[this.countType][0]/year[this.countType][1]*100;\n          });\n\n          // apply smoothingFactor setting\n          data = this.movingAverage(data, dataMaxYear-dataMinYear);\n\n          // apply minYear and maxYear settings\n          // the zero arrays and min/max functions handle the case where we are zoomed out or in from the actual data\n          data = Array(max(dataMinYear-minYear, 0)).fill(0).concat(\n            data.slice(max(minYear-dataMinYear, 0), min(maxYear-dataMinYear+1, data.length)),\n            Array(max(maxYear-dataMaxYear, 0)).fill(0),\n          );\n\n          // rotate colors\n          const color = this.colors[colorIndex++ % this.colors.length];\n\n          // show individual points if we have fewer than 50 total\n          const pointRadius = maxYear-minYear < 50 ? 3 : 0;\n\n          newDatasets.push({\n            label: term,\n            borderColor: color,\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\n            borderWidth: 2,\n            borderRadius: 100,\n            data: data,\n            pointStyle: this.pointStyles[colorIndex % this.pointStyles.length],\n            pointRadius: pointRadius,\n            pointHitRadius: 5,\n            yAxisID: this.sameYAxis ? '0' : newDatasets.length.toString(),\n            hidden: this.deselectedTerms.includes(term),\n          });\n        }\n\n        // handle this.sameYAxis\n        const yAxes = this.chartOptions.scales.yAxes;\n        if (!this.sameYAxis) {\n          yAxes[0].display = false;\n          if (yAxes.length < newDatasets.length) {\n            fullChartReset = true;\n            for (let i=yAxes.length;i<newDatasets.length;i++) {\n              yAxes.push(Object.assign({}, yAxes[0], {'id': i.toString()}));\n            }\n          }\n        } else {\n          yAxes[0].display = true;\n          if (yAxes[0].scaleLabel.labelString !== this.yScaleLabel) {\n            yAxes[0].scaleLabel.labelString = this.yScaleLabel;\n            fullChartReset = true;\n          }\n        }\n        if (this.sameYAxis !== this.previousSameYAxis) {\n          this.previousSameYAxis = this.sameYAxis;\n          fullChartReset = true;\n        }\n\n        // show chart\n        this.chartData = {\n          labels: years,\n          datasets: newDatasets,\n        };\n\n        // fullChartReset is a workaround for the yAxisID property not being reactive --\n        // see https://github.com/apertureless/vue-chartjs/issues/177\n        if (fullChartReset)\n          this.$refs.chart.renderChart(this.chartData, this.chartOptions);\n      }, 50),\n      parseResponse(apiResults) {\n        const results = {};\n        let minYear = null, maxYear = null;\n        for (const result of apiResults) {\n          if (result === null)\n            continue;\n          for (const [gram, jurs] of Object.entries(result.results)) {\n            for (const [jurName, jurData] of Object.entries(jurs)) {\n              const years = new Array(this.maxPossible + 1).fill(null);\n              for (const yearData of jurData) {\n                let year = yearData['year'];\n                if (year === \"total\")\n                  continue;\n                year = parseInt(year, 10);\n                if (minYear === null || minYear > year)\n                  minYear = year;\n                if (maxYear === null || maxYear < year)\n                  maxYear = year;\n                years[year] = yearData;\n              }\n              results[(jurName === \"total\" ? \"\" : this.jurisdictionLookup[jurName] + \": \") + gram] = {\n                data: years,\n                params: result.params,\n              };\n            }\n          }\n        }\n        minYear = max(minYear, this.minPossible);\n        maxYear = min(maxYear, this.maxPossible);\n        for (const key of Object.keys(results)){\n          results[key].data = results[key].data.slice(minYear, maxYear+1);\n        }\n        // set a random colorOffset for this response, so colors change on each request\n        const colorOffset = Math.floor(Math.random() * this.colors.length);\n        return {colorOffset, minYear, maxYear, results};\n      },\n      movingAverage(items, totalRange) {\n        /* average each item in items along with smoothingFactor % of adjacent items */\n        const window = Math.floor(totalRange * (this.smoothingFactor/100));\n        this.smoothingWindow = window;\n        if (window < 1)\n          return items;\n        return items.map((_, i) => average(items.slice(max(i-window, 0), min(i+window, items.length))));\n      },\n      appendJurisdictionCode(code) {\n        if (this.textToGraph)\n          this.textToGraph += \", \";\n        this.textToGraph += code + \": \";\n        this.$refs.textToGraph.focus();\n      },\n      imageDownloadClicked(event) {\n        /* when the Download url is clicked/right-clicked/touched, intercept the event and fill in the correct data for download */\n        const payload = this.$refs.chart.$refs.canvas.toDataURL('image/png');\n        event.currentTarget.href = payload;\n      },\n      jsonDownloadClicked(event) {\n        /* when the Download url is clicked/right-clicked/touched, intercept the event and fill in the correct data for download */\n        let payload = deepCopy(this.rawData);\n        delete payload.colorOffset;\n        payload = \"data:application/json;base64,\" + btoa(JSON.stringify(payload, null, 2));\n        event.currentTarget.href = payload;\n      },\n      csvDownloadClicked(event) {\n        /* when the Download url is clicked/right-clicked/touched, intercept the event and fill in the correct data for download */\n        const results = this.rawData.results;\n        const terms = Object.keys(results);\n        let payload = [];\n        payload.push([\"Year\", ...terms.flatMap((term)=>[\n          `\"${term}\" Case Count`,\n          `\"${term}\" Case Denominator`,\n          `\"${term}\" Instance Count`,\n          `\"${term}\" Instance Denominator`,\n        ])]);\n        for (const [i, year] of this.chartData.labels.entries()) {\n          payload.push([year, ...terms.flatMap((key)=>{\n            const data = results[key].data[i];\n            if (data === null)\n              return [\"\", \"\", \"\", \"\"];\n            else\n              return [data.doc_count[0], data.doc_count[1], data.count[0], data.count[1]];\n          })]);\n        }\n        payload = \"data:text/csv;base64,\" + btoa(csvStringify(payload));\n        event.currentTarget.href = payload;\n      },\n      chartKeyDown(event) {\n        /* handle keyboard events on chart */\n        switch (event.key) {\n          case \"ArrowDown\":\n            this.currentLine = mod(this.currentLine === null ? 0 : this.currentLine + 1, this.chartData.datasets.length);\n            break;\n          case \"ArrowUp\":\n            this.currentLine = mod(this.currentLine === null ? 0 : this.currentLine - 1, this.chartData.datasets.length);\n            break;\n          case \"ArrowRight\":\n            this.currentPoint = mod(this.currentPoint === null ? 0 : this.currentPoint + 1, this.chartData.labels.length);\n            break;\n          case \"ArrowLeft\":\n            this.currentPoint = mod(this.currentPoint === null ? 0 : this.currentPoint - 1, this.chartData.labels.length);\n            break;\n          case \" \":\n            if (this.currentLine !== null)\n              this.clickLegendItem(this.currentLine);\n            break;\n          case \"Enter\":\n            this.currentLine |= 0;\n            this.currentPoint |= 0;\n            this.searchForPoint(this.currentLine, this.currentPoint);\n            break;\n          case \"s\":\n            this.toggleSoundsOn();\n            break;\n          case \"p\":\n            this.soundAutoplay = !this.soundAutoplay;\n            if (this.soundAutoplay) {\n              if (!this.soundsOn) this.toggleSoundsOn();\n              this.currentLine |= 0;\n              this.currentPoint |= 0;\n              this.autoplaySound();\n            }\n            break;\n          case \"b\":\n            this.useScales = !this.useScales;\n            this.setCanvasStatus(`blues mode ${this.useScales?\"on\":\"off\"}`);\n            if (!this.soundsOn) this.toggleSoundsOn();\n            break;\n          default:\n            return;\n        }\n        event.preventDefault();\n      },\n      toggleSoundsOn() {\n        this.soundsOn = !this.soundsOn;\n        this.setCanvasStatus(`audio tones ${this.soundsOn?\"on\":\"off\"}`);\n        if (this.soundsOn)\n          this.synth = new Synth({envelope: {attack: this.soundPlaySpeed/1000}}).toMaster();\n      },\n      autoplaySound() {\n        setTimeout(()=>{\n          if (this.soundAutoplay) {\n            if (this.currentPoint < this.chartData.labels.length - 1) {\n              this.currentPoint += 1;\n              this.autoplaySound();\n            } else\n              this.soundAutoplay = false;\n          }\n        }, this.soundPlaySpeed);\n      },\n      selectLine() {\n        /* handle update to this.currentLine */\n        const datasets = this.chartData.datasets;\n        const index = this.currentLine;\n        for (const [i, dataset] of datasets.entries()) {\n          if (index === i) {\n            dataset.borderWidth = 4;\n          } else {\n            dataset.borderWidth = 2;\n          }\n        }\n        this.chartOptions.animation = {duration: 0};\n        this.$refs.chart.renderChart(this.chartData, this.chartOptions);\n        delete this.chartOptions.animation;\n        if (this.currentPoint !== null)\n          this.selectPoint();\n        this.setCanvasStatus(datasets[index].label + \" trend line\");\n      },\n      selectPoint() {\n        /* handle update to this.currentPoint */\n        if (this.currentLine === null)\n          this.currentLine = 0;\n        const chart = this.$refs.chart.$data._chart;\n        const meta = chart.getDatasetMeta(this.currentLine);\n        const rect = chart.canvas.getBoundingClientRect();\n        const point = meta.data[this.currentPoint].getCenterPoint();\n        chart.canvas.dispatchEvent(new MouseEvent('mousemove', {\n          clientX: rect.left + point.x,\n          clientY: rect.top + point.y\n        }));\n        const dataset = this.chartData.datasets[this.currentLine];\n        const value = dataset.data[this.currentPoint];\n        this.setCanvasStatus(`${dataset.label} ${this.formatYearRange(this.chartData.labels[this.currentPoint])} ${this.formatValue(value)}`);\n\n        // play sound when point selected\n        if (this.soundsOn) {\n          const halfStep = 2**(1/12);\n          const scaledValue = value / meta.dataset._scale.max;\n          let note;\n          if (this.useScales) {\n            // musical scale version\n            const baseNote = 110;  // start two octaves below middle A\n            const scale = this.soundScales[this.currentSoundScale];\n            const octaves = 4;  // total octaves of notes we have to work with\n            const granularity = octaves * scale.length;  // total notes we have to work with\n            let quantizedValue = Math.floor(scaledValue * granularity);\n            quantizedValue += this.currentLine % 12;  // each line gets its own key\n            const halfSteps = Math.floor(quantizedValue / scale.length) * 12 + scale[quantizedValue % scale.length];\n            note = baseNote * halfStep ** halfSteps;\n          } else {\n            // continuous frequency version\n            const baseNote = 220;\n            const octaves = 3;\n            const halfSteps = scaledValue * 12 * octaves;\n            note = baseNote * halfStep ** halfSteps;\n          }\n          if (this.synthStopTime === null)\n            this.synth.triggerAttack(note);\n          else\n            this.synth.setNote(note);\n          this.synthStopTime = Tone.now() + this.soundPlaySpeed/1000;\n          setTimeout(this.endSounds, this.soundPlaySpeed);\n        }\n      },\n      endSounds() {\n        if (this.synthStopTime === null || this.synthStopTime <= Tone.now()) {\n          this.synth.triggerRelease();\n          this.synthStopTime = null;\n        } else {\n          setTimeout(this.endSounds, this.soundPlaySpeed);\n        }\n      },\n      setCanvasStatus: debounce(function(status){\n        this.canvasStatus = status;\n      }, 500),\n      clickLegendItem(datasetIndex) {\n        /* trigger a click event on legend item for given dataset index */\n        const chart = this.$refs.chart.$data._chart;\n        const legend = chart.legend;\n        legend.options.onClick.call(legend, null, legend.legendItems[datasetIndex]);\n      },\n      legendItemOnClick(e, legendItem) {\n        /* handle click on legend item */\n        const term = this.chartData.datasets[legendItem.datasetIndex].label;\n        const index = this.deselectedTerms.indexOf(term);\n        if (index === -1)\n          this.deselectedTerms.push(term);\n        else\n          this.deselectedTerms.splice(index, 1);\n      },\n      chartOnClick(e, targets) {\n        if (!targets.length)\n          return;\n        const chart = this.$refs.chart.$data._chart;\n        const point = chart.getElementAtEvent(e)[0];\n        this.currentPoint = point._index;\n        this.currentLine = point._datasetIndex;\n        this.searchForPoint(point._datasetIndex, point._index);\n      },\n      searchForPoint(termIndex, pointIndex) {\n        const year = this.chartData.labels[pointIndex];\n        const term = this.chartData.datasets[termIndex].label;\n        const params = this.rawData.results[term].params;\n        this.$refs.searchResults.search(term, params, year-this.smoothingWindow, year+this.smoothingWindow);\n      },\n      beforeDraw(chart) {\n        /*\n          Runs before each chart.js animation frame.\n          Draw the chart background (white background and credit line).\n        */\n        const ctx = chart.chart.ctx;\n        const canvas = ctx.canvas;\n        const w = canvas.clientWidth;\n        const h = canvas.clientHeight;\n        ctx.save();\n        // white background for PNG download\n        ctx.fillStyle = \"#FFF\";\n        ctx.fillRect(0, 0, w, h);\n        // credit text\n        ctx.fillStyle = \"#888\";\n        ctx.font = \"10px Arial\";\n        ctx.textAlign = \"right\";\n        ctx.fillText(`Caselaw Access Project${w>400?' at Harvard Law School':''}. ${this.baseUrl}`, w-5, h-11);\n        ctx.restore();\n      },\n      handleWindowResize() {\n        /* try to set chart height to 400, but allow it to shrink down to 200 if window height is too small */\n        const availableHeight = window.innerHeight - document.getElementById('main-nav').offsetHeight;\n        this.chartHeight = max(200, min(availableHeight, 400));\n      },\n      afterLayout(chart) {\n        /*\n          Runs after chart.js calculates layout.\n          Resize chart when legend height changes, so legend doesn't squeeze out the chart itself.\n        */\n        this.chartLegendHeight = chart.legend.height;\n      },\n      afterRender() {\n        /* Runs after chart.js finishes animating an update. */\n        this.screenshotReady = true;  // let screenshot tool know that page is ready\n      },\n      clickHelpButton() {\n        document.getElementById('helpPanelButton').click();\n      },\n      helpLinkClicked(event) {\n        /* hide the help panel when a link inside is clicked */\n        if (event.target.tagName === \"A\")\n          this.clickHelpButton();\n      }\n    },\n  }\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./main.vue?vue&type=template&id=3210f040&\"\nimport script from \"./main.vue?vue&type=script&lang=js&\"\nexport * from \"./main.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport Main from './main.vue'\n\nVue.config.devtools = true;\nVue.config.productionTip = false;\n\nVue.use(VueRouter);\nconst router = new VueRouter({\n  mode: 'history',\n  base: '/trends/',\n  routes: [\n    {path: '/', component: Main, name: 'main'},\n    {path: '*', redirect: '/'},\n  ]\n});\nnew Vue({\n  el: '#app',\n  components: { Main },\n  template: '<Main/>',\n  router\n});","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","define([\"../core/Tone\", \"../core/AudioNode\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Base class for all Signals. Used Internally.\n\t *\n\t *  @constructor\n\t *  @extends {Tone}\n\t */\n\tTone.SignalBase = function(){\n\t\tTone.AudioNode.call(this);\n\t};\n\n\tTone.extend(Tone.SignalBase, Tone.AudioNode);\n\n\t/**\n\t *  When signals connect to other signals or AudioParams,\n\t *  they take over the output value of that signal or AudioParam.\n\t *  For all other nodes, the behavior is the same as a default <code>connect</code>.\n\t *\n\t *  @override\n\t *  @param {AudioParam|AudioNode|Tone.Signal|Tone} node\n\t *  @param {number} [outputNumber=0] The output number to connect from.\n\t *  @param {number} [inputNumber=0] The input number to connect to.\n\t *  @returns {Tone.SignalBase} this\n\t */\n\tTone.SignalBase.prototype.connect = function(node, outputNumber, inputNumber){\n\t\t//zero it out so that the signal can have full control\n\t\tif ((Tone.Signal && Tone.Signal === node.constructor) ||\n\t\t\t\t(Tone.Param && Tone.Param === node.constructor)){\n\t\t\t//cancel changes\n\t\t\tnode._param.cancelScheduledValues(0);\n\t\t\t//reset the value\n\t\t\tnode._param.setValueAtTime(0, 0);\n\t\t\t//mark the value as overridden\n\t\t\tnode.overridden = true;\n\t\t} else if (node instanceof AudioParam){\n\t\t\tnode.cancelScheduledValues(0);\n\t\t\tnode.setValueAtTime(0, 0);\n\t\t}\n\t\tTone.AudioNode.prototype.connect.call(this, node, outputNumber, inputNumber);\n\t\treturn this;\n\t};\n\n\treturn Tone.SignalBase;\n});\n","define([\"../core/Tone\", \"../source/Source\", \"../source/Oscillator\", \"../source/PulseOscillator\", \"../source/PWMOscillator\",\n\t\"../source/FMOscillator\", \"../source/AMOscillator\", \"../source/FatOscillator\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,\n\t *         Tone.PWMOscillator, Tone.FMOscillator, Tone.AMOscillator, and Tone.FatOscillator\n\t *         into one class. The oscillator class can be changed by setting the `type`.\n\t *         `omniOsc.type = \"pwm\"` will set it to the Tone.PWMOscillator. Prefixing\n\t *         any of the basic types (\"sine\", \"square4\", etc.) with \"fm\", \"am\", or \"fat\"\n\t *         will use the FMOscillator, AMOscillator or FatOscillator respectively.\n\t *         For example: `omniOsc.type = \"fatsawtooth\"` will create set the oscillator\n\t *         to a FatOscillator of type \"sawtooth\".\n\t *\n\t *  @extends {Tone.Source}\n\t *  @constructor\n\t *  @param {Frequency} frequency The initial frequency of the oscillator.\n\t *  @param {String} type The type of the oscillator.\n\t *  @example\n\t *  var omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\");\n\t */\n\tTone.OmniOscillator = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\"], Tone.OmniOscillator);\n\t\tTone.Source.call(this, options);\n\n\t\t/**\n\t\t *  The frequency control.\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t\t/**\n\t\t *  The detune control\n\t\t *  @type {Cents}\n\t\t *  @signal\n\t\t */\n\t\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t\t/**\n\t\t *  the type of the oscillator source\n\t\t *  @type {String}\n\t\t *  @private\n\t\t */\n\t\tthis._sourceType = undefined;\n\n\t\t/**\n\t\t *  the oscillator\n\t\t *  @type {Tone.Oscillator}\n\t\t *  @private\n\t\t */\n\t\tthis._oscillator = null;\n\n\t\t//set the oscillator\n\t\tthis.type = options.type;\n\t\tthis._readOnly([\"frequency\", \"detune\"]);\n\t\t//set the options\n\t\tthis.set(options);\n\t};\n\n\tTone.extend(Tone.OmniOscillator, Tone.Source);\n\n\t/**\n\t *  default values\n\t *  @static\n\t *  @type {Object}\n\t *  @const\n\t */\n\tTone.OmniOscillator.defaults = {\n\t\t\"frequency\" : 440,\n\t\t\"detune\" : 0,\n\t\t\"type\" : \"sine\",\n\t\t\"phase\" : 0\n\t};\n\n\t/**\n\t *  @enum {String}\n\t *  @private\n\t */\n\tvar OmniOscType = {\n\t\tPulse : \"PulseOscillator\",\n\t\tPWM : \"PWMOscillator\",\n\t\tOsc : \"Oscillator\",\n\t\tFM : \"FMOscillator\",\n\t\tAM : \"AMOscillator\",\n\t\tFat : \"FatOscillator\"\n\t};\n\n\t/**\n\t *  start the oscillator\n\t *  @param {Time} [time=now] the time to start the oscillator\n\t *  @private\n\t */\n\tTone.OmniOscillator.prototype._start = function(time){\n\t\tthis._oscillator.start(time);\n\t};\n\n\t/**\n\t *  start the oscillator\n\t *  @param {Time} [time=now] the time to start the oscillator\n\t *  @private\n\t */\n\tTone.OmniOscillator.prototype._stop = function(time){\n\t\tthis._oscillator.stop(time);\n\t};\n\n\tTone.OmniOscillator.prototype.restart = function(time){\n\t\tthis._oscillator.restart(time);\n\t};\n\n\t/**\n\t * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n\t * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n\t * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n\t * oscillator's class are accessible when the oscillator is set to that type, but throws an error\n\t * when it's not.\n\t *\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {String}\n\t * @name type\n\t * @example\n\t * omniOsc.type = \"pwm\";\n\t * //modulationFrequency is parameter which is available\n\t * //only when the type is \"pwm\".\n\t * omniOsc.modulationFrequency.value = 0.5;\n\t * @example\n\t * //an square wave frequency modulated by a sawtooth\n\t * omniOsc.type = \"fmsquare\";\n\t * omniOsc.modulationType = \"sawtooth\";\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"type\", {\n\t\tget : function(){\n\t\t\tvar prefix = \"\";\n\t\t\tif (this._sourceType === OmniOscType.FM){\n\t\t\t\tprefix = \"fm\";\n\t\t\t} else if (this._sourceType === OmniOscType.AM){\n\t\t\t\tprefix = \"am\";\n\t\t\t} else if (this._sourceType === OmniOscType.Fat){\n\t\t\t\tprefix = \"fat\";\n\t\t\t}\n\t\t\treturn prefix + this._oscillator.type;\n\t\t},\n\t\tset : function(type){\n\t\t\tif (type.substr(0, 2) === \"fm\"){\n\t\t\t\tthis._createNewOscillator(OmniOscType.FM);\n\t\t\t\tthis._oscillator.type = type.substr(2);\n\t\t\t} else if (type.substr(0, 2) === \"am\"){\n\t\t\t\tthis._createNewOscillator(OmniOscType.AM);\n\t\t\t\tthis._oscillator.type = type.substr(2);\n\t\t\t} else if (type.substr(0, 3) === \"fat\"){\n\t\t\t\tthis._createNewOscillator(OmniOscType.Fat);\n\t\t\t\tthis._oscillator.type = type.substr(3);\n\t\t\t} else if (type === \"pwm\"){\n\t\t\t\tthis._createNewOscillator(OmniOscType.PWM);\n\t\t\t} else if (type === \"pulse\"){\n\t\t\t\tthis._createNewOscillator(OmniOscType.Pulse);\n\t\t\t} else {\n\t\t\t\tthis._createNewOscillator(OmniOscType.Osc);\n\t\t\t\tthis._oscillator.type = type;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The partials of the waveform. A partial represents\n\t * the amplitude at a harmonic. The first harmonic is the\n\t * fundamental frequency, the second is the octave and so on\n\t * following the harmonic series.\n\t * Setting this value will automatically set the type to \"custom\".\n\t * The value is an empty array when the type is not \"custom\".\n\t * This is not available on \"pwm\" and \"pulse\" oscillator types.\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {Array}\n\t * @name partials\n\t * @example\n\t * osc.partials = [1, 0.2, 0.01];\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"partials\", {\n\t\tget : function(){\n\t\t\treturn this._oscillator.partials;\n\t\t},\n\t\tset : function(partials){\n\t\t\tthis._oscillator.partials = partials;\n\t\t}\n\t});\n\n\t/**\n\t * The partial count of the oscillator. This is not available on \"pwm\" and \"pulse\" oscillator types.\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {Number}\n\t * @name partialCount\n\t * @example\n\t * //set the maximum number of partials\n\t * osc.partialCount = 0;\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"partialCount\", {\n\t\tget : function(){\n\t\t\treturn this._oscillator.partialCount;\n\t\t},\n\t\tset : function(partialCount){\n\t\t\tthis._oscillator.partialCount = partialCount;\n\t\t}\n\t});\n\n\t/**\n\t *  Set a member/attribute of the oscillator.\n\t *  @param {Object|String} params\n\t *  @param {number=} value\n\t *  @param {Time=} rampTime\n\t *  @returns {Tone.OmniOscillator} this\n\t */\n\tTone.OmniOscillator.prototype.set = function(params, value){\n\t\t//make sure the type is set first\n\t\tif (params === \"type\"){\n\t\t\tthis.type = value;\n\t\t} else if (Tone.isObject(params) && params.hasOwnProperty(\"type\")){\n\t\t\tthis.type = params.type;\n\t\t}\n\t\t//then set the rest\n\t\tTone.prototype.set.apply(this, arguments);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Get the object's attributes. Given no arguments get\n\t *  will return all available object properties and their corresponding\n\t *  values. Pass in a single attribute to retrieve or an array\n\t *  of attributes. The attribute strings can also include a \".\"\n\t *  to access deeper properties.\n\t *  @param {Array=|string|undefined} params the parameters to get, otherwise will return\n\t *  \t\t\t\t\t                  all available.\n\t *  @returns {Object}\n\t */\n\tTone.OmniOscillator.prototype.get = function(params){\n\t\tvar options = this._oscillator.get(params);\n\t\toptions.type = this.type;\n\t\treturn options;\n\t};\n\n\t/**\n\t *  connect the oscillator to the frequency and detune signals\n\t *  @private\n\t */\n\tTone.OmniOscillator.prototype._createNewOscillator = function(oscType){\n\t\tif (oscType !== this._sourceType){\n\t\t\tthis._sourceType = oscType;\n\t\t\tvar OscillatorConstructor = Tone[oscType];\n\t\t\t//short delay to avoid clicks on the change\n\t\t\tvar now = this.now();\n\t\t\tif (this._oscillator !== null){\n\t\t\t\tvar oldOsc = this._oscillator;\n\t\t\t\toldOsc.stop(now);\n\t\t\t\t//dispose the old one\n\t\t\t\tthis.context.setTimeout(function(){\n\t\t\t\t\toldOsc.dispose();\n\t\t\t\t\toldOsc = null;\n\t\t\t\t}, this.blockTime);\n\t\t\t}\n\t\t\tthis._oscillator = new OscillatorConstructor();\n\t\t\tthis.frequency.connect(this._oscillator.frequency);\n\t\t\tthis.detune.connect(this._oscillator.detune);\n\t\t\tthis._oscillator.connect(this.output);\n\t\t\tif (this.state === Tone.State.Started){\n\t\t\t\tthis._oscillator.start(now);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {Degrees}\n\t * @name phase\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"phase\", {\n\t\tget : function(){\n\t\t\treturn this._oscillator.phase;\n\t\t},\n\t\tset : function(phase){\n\t\t\tthis._oscillator.phase = phase;\n\t\t}\n\t});\n\n\t/**\n\t * The source type names\n\t * @private\n\t * @type {Object}\n\t */\n\tvar SourceTypeNames = {\n\t\tPulseOscillator : \"pulse\",\n\t\tPWMOscillator : \"pwm\",\n\t\tOscillator : \"oscillator\",\n\t\tFMOscillator : \"fm\",\n\t\tAMOscillator : \"am\",\n\t\tFatOscillator : \"fat\"\n\t};\n\n\t/**\n\t * The source type of the oscillator. \n\t * @memberOf Tone.OmniOscillator#\n\t * @type {String}\n\t * @name sourceType\n\t * @example\n\t * var omniOsc = new Tone.OmniOscillator(440, \"fmsquare\");\n\t * omniOsc.sourceType // 'fm'\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"sourceType\", {\n\t\tget : function(){\n\t\t\treturn SourceTypeNames[this._sourceType];\n\t\t},\n\t\tset : function(sType){\n\t\t\t//the basetype defaults to sine\n\t\t\tvar baseType = \"sine\";\n\t\t\tif (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\"){\n\t\t\t\tbaseType = this._oscillator.type;\n\t\t\t} \n\n\t\t\t//set the type\n\t\t\tif (sType === SourceTypeNames.FMOscillator){\n\t\t\t\tthis.type = \"fm\" + baseType;\n\t\t\t} else if (sType === SourceTypeNames.AMOscillator){\n\t\t\t\tthis.type = \"am\" + baseType;\n\t\t\t} else if (sType === SourceTypeNames.FatOscillator){\n\t\t\t\tthis.type = \"fat\" + baseType;\n\t\t\t} else if (sType === SourceTypeNames.Oscillator){\n\t\t\t\tthis.type = baseType;\n\t\t\t} else if (sType === SourceTypeNames.PulseOscillator){\n\t\t\t\tthis.type = \"pulse\";\n\t\t\t} else if (sType === SourceTypeNames.PWMOscillator){\n\t\t\t\tthis.type = \"pwm\";\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The base type of the oscillator.\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {String}\n\t * @name baseType\n\t * @example\n\t * var omniOsc = new Tone.OmniOscillator(440, \"fmsquare4\");\n\t * omniOsc.sourceType // 'fm'\n\t * omniOsc.baseType //'square'\n\t * omniOsc.partialCount //4\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"baseType\", {\n\t\tget : function(){\n\t\t\treturn this._oscillator.baseType;\n\t\t},\n\t\tset : function(baseType){\n\t\t\tif (this.sourceType !== SourceTypeNames.PulseOscillator && this.sourceType !== SourceTypeNames.PWMOscillator){\n\t\t\t\tthis._oscillator.baseType = baseType;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The width of the oscillator (only if the oscillator is set to \"pulse\")\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {NormalRange}\n\t * @signal\n\t * @name width\n\t * @example\n\t * var omniOsc = new Tone.OmniOscillator(440, \"pulse\");\n\t * //can access the width attribute only if type === \"pulse\"\n\t * omniOsc.width.value = 0.2;\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"width\", {\n\t\tget : function(){\n\t\t\tif (this._sourceType === OmniOscType.Pulse){\n\t\t\t\treturn this._oscillator.width;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The number of detuned oscillators\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {Number}\n\t * @name count\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"count\", {\n\t\tget : function(){\n\t\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\t\treturn this._oscillator.count;\n\t\t\t}\n\t\t},\n\t\tset : function(count){\n\t\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\t\tthis._oscillator.count = count;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The detune spread between the oscillators. If \"count\" is\n\t * set to 3 oscillators and the \"spread\" is set to 40,\n\t * the three oscillators would be detuned like this: [-20, 0, 20]\n\t * for a total detune spread of 40 cents. See Tone.FatOscillator\n\t * for more info.\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {Cents}\n\t * @name spread\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"spread\", {\n\t\tget : function(){\n\t\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\t\treturn this._oscillator.spread;\n\t\t\t}\n\t\t},\n\t\tset : function(spread){\n\t\t\tif (this._sourceType === OmniOscType.Fat){\n\t\t\t\tthis._oscillator.spread = spread;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The type of the modulator oscillator. Only if the oscillator\n\t * is set to \"am\" or \"fm\" types. see. Tone.AMOscillator or Tone.FMOscillator\n\t * for more info.\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {String}\n\t * @name modulationType\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"modulationType\", {\n\t\tget : function(){\n\t\t\tif (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM){\n\t\t\t\treturn this._oscillator.modulationType;\n\t\t\t}\n\t\t},\n\t\tset : function(mType){\n\t\t\tif (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM){\n\t\t\t\tthis._oscillator.modulationType = mType;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the\n\t * ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t * modulating signal (ma) -- as in ma/mf.\n\t * See Tone.FMOscillator for more info.\n\t * @type {Positive}\n\t * @signal\n\t * @name modulationIndex\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"modulationIndex\", {\n\t\tget : function(){\n\t\t\tif (this._sourceType === OmniOscType.FM){\n\t\t\t\treturn this._oscillator.modulationIndex;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t *  A harmonicity of 1 gives both oscillators the same frequency.\n\t *  Harmonicity = 2 means a change of an octave. See Tone.AMOscillator or Tone.FMOscillator\n\t *  for more info.\n\t *  @memberOf Tone.OmniOscillator#\n\t *  @signal\n\t *  @type {Positive}\n\t *  @name harmonicity\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"harmonicity\", {\n\t\tget : function(){\n\t\t\tif (this._sourceType === OmniOscType.FM || this._sourceType === OmniOscType.AM){\n\t\t\t\treturn this._oscillator.harmonicity;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The modulationFrequency Signal of the oscillator\n\t * (only if the oscillator type is set to pwm). See\n\t * Tone.PWMOscillator for more info.\n\t * @memberOf Tone.OmniOscillator#\n\t * @type {Frequency}\n\t * @signal\n\t * @name modulationFrequency\n\t * @example\n\t * var omniOsc = new Tone.OmniOscillator(440, \"pwm\");\n\t * //can access the modulationFrequency attribute only if type === \"pwm\"\n\t * omniOsc.modulationFrequency.value = 0.2;\n\t */\n\tObject.defineProperty(Tone.OmniOscillator.prototype, \"modulationFrequency\", {\n\t\tget : function(){\n\t\t\tif (this._sourceType === OmniOscType.PWM){\n\t\t\t\treturn this._oscillator.modulationFrequency;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  Clean up.\n\t *  @return {Tone.OmniOscillator} this\n\t */\n\tTone.OmniOscillator.prototype.dispose = function(){\n\t\tTone.Source.prototype.dispose.call(this);\n\t\tthis._writable([\"frequency\", \"detune\"]);\n\t\tthis.detune.dispose();\n\t\tthis.detune = null;\n\t\tthis.frequency.dispose();\n\t\tthis.frequency = null;\n\t\tthis._oscillator.dispose();\n\t\tthis._oscillator = null;\n\t\tthis._sourceType = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.OmniOscillator;\n});\n","define([\"../core/Tone\", \"../signal/WaveShaper\", \"../signal/Signal\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1]. \n\t *         See Tone.GainToAudio.\n\t *\n\t *  @extends {Tone.SignalBase}\n\t *  @constructor\n\t *  @example\n\t *  var a2g = new Tone.AudioToGain();\n\t */\n\tTone.AudioToGain = function(){\n\n\t\tTone.SignalBase.call(this);\n\t\t/**\n\t\t *  @type {WaveShaperNode}\n\t\t *  @private\n\t\t */\n\t\tthis._norm = this.input = this.output = new Tone.WaveShaper(function(x){\n\t\t\treturn (x + 1) / 2;\n\t\t});\n\t};\n\n\tTone.extend(Tone.AudioToGain, Tone.SignalBase);\n\n\t/**\n\t *  clean up\n\t *  @returns {Tone.AudioToGain} this\n\t */\n\tTone.AudioToGain.prototype.dispose = function(){\n\t\tTone.SignalBase.prototype.dispose.call(this);\n\t\tthis._norm.dispose();\n\t\tthis._norm = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.AudioToGain;\n});\n","define([\"../core/Tone\", \"../core/OfflineContext\"], function(Tone){\n\n\tif (Tone.supported){\n\n\t\tvar ua = navigator.userAgent.toLowerCase();\n\t\tvar isMobileSafari = ua.includes(\"safari\") && !ua.includes(\"chrome\") && ua.includes(\"mobile\");\n\t\tif (isMobileSafari){\n\t\t\t//mobile safari has a bizarre bug with the offline context\n\t\t\t//when a BufferSourceNode is started, it starts the offline context\n\t\t\t//\n\t\t\t//deferring all BufferSource starts till the last possible moment\n\t\t\t//reduces the likelihood of this happening\n\t\t\tTone.OfflineContext.prototype.createBufferSource = function(){\n\t\t\t\tvar bufferSource = this._context.createBufferSource();\n\t\t\t\tvar _native_start = bufferSource.start;\n\t\t\t\tbufferSource.start = function(time){\n\t\t\t\t\tthis.setTimeout(function(){\n\t\t\t\t\t\t_native_start.call(bufferSource, time);\n\t\t\t\t\t}.bind(this), 0);\n\t\t\t\t}.bind(this);\n\t\t\t\treturn bufferSource;\n\t\t\t};\n\t\t}\n\t}\n\n});\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","define([\"../core/Tone\", \"../type/Time\", \"../type/Frequency\", \"../type/TransportTime\", \"../core/Context\"], function(Tone){\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tTYPES\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t * Units which a value can take on.\n\t * @enum {String}\n\t */\n\tTone.Type = {\n\t\t/**\n\t\t *  Default units\n\t\t *  @typedef {Default}\n\t\t */\n\t\tDefault : \"number\",\n\t\t/**\n\t\t *  Time can be described in a number of ways. Read more [Time](https://github.com/Tonejs/Tone.js/wiki/Time).\n\t\t *\n\t\t *  * Numbers, which will be taken literally as the time (in seconds).\n\t\t *  * Notation, (\"4n\", \"8t\") describes time in BPM and time signature relative values.\n\t\t *  * TransportTime, (\"4:3:2\") will also provide tempo and time signature relative times\n\t\t *  in the form BARS:QUARTERS:SIXTEENTHS.\n\t\t *  * Frequency, (\"8hz\") is converted to the length of the cycle in seconds.\n\t\t *  * Now-Relative, (\"+1\") prefix any of the above with \"+\" and it will be interpreted as\n\t\t *  \"the current time plus whatever expression follows\".\n\t\t *  * Object, ({\"4n\" : 3, \"8t\" : -1}). The resulting time is equal to the sum of all of the keys multiplied by the values in the object. \n\t\t *  * No Argument, for methods which accept time, no argument will be interpreted as\n\t\t *  \"now\" (i.e. the currentTime).\n\t\t *\n\t\t *  @typedef {Time}\n\t\t */\n\t\tTime : \"time\",\n\t\t/**\n\t\t *  Frequency can be described similar to time, except ultimately the\n\t\t *  values are converted to frequency instead of seconds. A number\n\t\t *  is taken literally as the value in hertz. Additionally any of the\n\t\t *  Time encodings can be used. Note names in the form\n\t\t *  of NOTE OCTAVE (i.e. C4) are also accepted and converted to their\n\t\t *  frequency value.\n\t\t *  @typedef {Frequency}\n\t\t */\n\t\tFrequency : \"frequency\",\n\t\t/**\n\t\t *  TransportTime describes a position along the Transport's timeline. It is\n\t\t *  similar to Time in that it uses all the same encodings, but TransportTime specifically\n\t\t *  pertains to the Transport's timeline, which is startable, stoppable, loopable, and seekable.\n\t\t *  [Read more](https://github.com/Tonejs/Tone.js/wiki/TransportTime)\n\t\t *  @typedef {TransportTime}\n\t\t */\n\t\tTransportTime : \"transportTime\",\n\t\t/**\n\t\t *  Ticks are the basic subunit of the Transport. They are\n\t\t *  the smallest unit of time that the Transport supports.\n\t\t *  @typedef {Ticks}\n\t\t */\n\t\tTicks : \"ticks\",\n\t\t/**\n\t\t *  Normal values are within the range [0, 1].\n\t\t *  @typedef {NormalRange}\n\t\t */\n\t\tNormalRange : \"normalRange\",\n\t\t/**\n\t\t *  AudioRange values are between [-1, 1].\n\t\t *  @typedef {AudioRange}\n\t\t */\n\t\tAudioRange : \"audioRange\",\n\t\t/**\n\t\t *  Decibels are a logarithmic unit of measurement which is useful for volume\n\t\t *  because of the logarithmic way that we perceive loudness. 0 decibels\n\t\t *  means no change in volume. -10db is approximately half as loud and 10db\n\t\t *  is twice is loud.\n\t\t *  @typedef {Decibels}\n\t\t */\n\t\tDecibels : \"db\",\n\t\t/**\n\t\t *  Half-step note increments, i.e. 12 is an octave above the root. and 1 is a half-step up.\n\t\t *  @typedef {Interval}\n\t\t */\n\t\tInterval : \"interval\",\n\t\t/**\n\t\t *  Beats per minute.\n\t\t *  @typedef {BPM}\n\t\t */\n\t\tBPM : \"bpm\",\n\t\t/**\n\t\t *  The value must be greater than or equal to 0.\n\t\t *  @typedef {Positive}\n\t\t */\n\t\tPositive : \"positive\",\n\t\t/**\n\t\t *  Gain is the ratio between input and output of a signal.\n\t\t *  A gain of 0 is the same as silencing the signal. A gain of\n\t\t *  1, causes no change to the incoming signal.\n\t\t *  @typedef {Gain}\n\t\t */\n\t\tGain : \"gain\",\n\t\t/**\n\t\t *  A cent is a hundredth of a semitone.\n\t\t *  @typedef {Cents}\n\t\t */\n\t\tCents : \"cents\",\n\t\t/**\n\t\t *  Angle between 0 and 360.\n\t\t *  @typedef {Degrees}\n\t\t */\n\t\tDegrees : \"degrees\",\n\t\t/**\n\t\t *  A number representing a midi note.\n\t\t *  @typedef {MIDI}\n\t\t */\n\t\tMIDI : \"midi\",\n\t\t/**\n\t\t *  A colon-separated representation of time in the form of\n\t\t *  Bars:Beats:Sixteenths.\n\t\t *  @typedef {BarsBeatsSixteenths}\n\t\t */\n\t\tBarsBeatsSixteenths : \"barsBeatsSixteenths\",\n\t\t/**\n\t\t *  Sampling is the reduction of a continuous signal to a discrete signal.\n\t\t *  Audio is typically sampled 44100 times per second.\n\t\t *  @typedef {Samples}\n\t\t */\n\t\tSamples : \"samples\",\n\t\t/**\n\t\t *  Hertz are a frequency representation defined as one cycle per second.\n\t\t *  @typedef {Hertz}\n\t\t */\n\t\tHertz : \"hertz\",\n\t\t/**\n\t\t *  A frequency represented by a letter name,\n\t\t *  accidental and octave. This system is known as\n\t\t *  [Scientific Pitch Notation](https://en.wikipedia.org/wiki/Scientific_pitch_notation).\n\t\t *  @typedef {Note}\n\t\t */\n\t\tNote : \"note\",\n\t\t/**\n\t\t *  One millisecond is a thousandth of a second.\n\t\t *  @typedef {Milliseconds}\n\t\t */\n\t\tMilliseconds : \"milliseconds\",\n\t\t/**\n\t\t *  Seconds are the time unit of the AudioContext. In the end,\n\t\t *  all values need to be evaluated to seconds.\n\t\t *  @typedef {Seconds}\n\t\t */\n\t\tSeconds : \"seconds\",\n\t\t/**\n\t\t *  A string representing a duration relative to a measure.\n\t\t *  * \"4n\" = quarter note\n\t\t *  * \"2m\" = two measures\n\t\t *  * \"8t\" = eighth-note triplet\n\t\t *  @typedef {Notation}\n\t\t */\n\t\tNotation : \"notation\",\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// AUGMENT TONE's PROTOTYPE\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Convert Time into seconds.\n\t *\n\t *  Unlike the method which it overrides, this takes into account\n\t *  transporttime and musical notation.\n\t *\n\t *  Time : 1.40\n\t *  Notation: 4n or 1m or 2t\n\t *  Now Relative: +3n\n\t *\n\t *  @param  {Time} time\n\t *  @return {Seconds}\n\t */\n\tTone.prototype.toSeconds = function(time){\n\t\tif (Tone.isNumber(time)){\n\t\t\treturn time;\n\t\t} else if (Tone.isUndef(time)){\n\t\t\treturn this.now();\n\t\t} else if (Tone.isString(time) || Tone.isObject(time)){\n\t\t\treturn (new Tone.Time(time)).toSeconds();\n\t\t} else if (time instanceof Tone.TimeBase){\n\t\t\treturn time.toSeconds();\n\t\t}\n\t};\n\n\t/**\n\t *  Convert a frequency representation into a number.\n\t *  @param  {Frequency} freq\n\t *  @return {Hertz}      the frequency in hertz\n\t */\n\tTone.prototype.toFrequency = function(freq){\n\t\tif (Tone.isNumber(freq)){\n\t\t\treturn freq;\n\t\t} else if (Tone.isString(freq) || Tone.isUndef(freq) || Tone.isObject(freq)){\n\t\t\treturn (new Tone.Frequency(freq)).valueOf();\n\t\t} else if (freq instanceof Tone.TimeBase){\n\t\t\treturn freq.toFrequency();\n\t\t}\n\t};\n\n\t/**\n\t *  Convert a time representation into ticks.\n\t *  @param  {Time} time\n\t *  @return {Ticks}  the time in ticks\n\t */\n\tTone.prototype.toTicks = function(time){\n\t\tif (Tone.isNumber(time) || Tone.isString(time) || Tone.isObject(time)){\n\t\t\treturn (new Tone.TransportTime(time)).toTicks();\n\t\t} else if (Tone.isUndef(time)){\n\t\t\treturn Tone.Transport.ticks;\n\t\t} else if (time instanceof Tone.TimeBase){\n\t\t\treturn time.toTicks();\n\t\t}\n\t};\n\n\treturn Tone;\n});\n","define([\"../core/Tone\", \"../source/Source\", \"../source/Oscillator\",\n\t\"../signal/Multiply\", \"../core/Gain\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.FMOscillator\n\t *\n\t *  @extends {Tone.Source}\n\t *  @constructor\n\t *  @param {Frequency} frequency The starting frequency of the oscillator.\n\t *  @param {String} type The type of the carrier oscillator.\n\t *  @param {String} modulationType The type of the modulator oscillator.\n\t *  @example\n\t * //a sine oscillator frequency-modulated by a square wave\n\t * var fmOsc = new Tone.FMOscillator(\"Ab3\", \"sine\", \"square\").toMaster().start();\n\t */\n\tTone.FMOscillator = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\", \"modulationType\"], Tone.FMOscillator);\n\t\tTone.Source.call(this, options);\n\n\t\t/**\n\t\t *  The carrier oscillator\n\t\t *  @type {Tone.Oscillator}\n\t\t *  @private\n\t\t */\n\t\tthis._carrier = new Tone.Oscillator(options.frequency, options.type);\n\n\t\t/**\n\t\t *  The oscillator's frequency\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t\t/**\n\t\t *  The detune control signal.\n\t\t *  @type {Cents}\n\t\t *  @signal\n\t\t */\n\t\tthis.detune = this._carrier.detune;\n\t\tthis.detune.value = options.detune;\n\n\t\t/**\n\t\t *  The modulation index which is in essence the depth or amount of the modulation. In other terms it is the\n\t\t *  ratio of the frequency of the modulating signal (mf) to the amplitude of the\n\t\t *  modulating signal (ma) -- as in ma/mf.\n\t\t *\t@type {Positive}\n\t\t *\t@signal\n\t\t */\n\t\tthis.modulationIndex = new Tone.Multiply(options.modulationIndex);\n\t\tthis.modulationIndex.units = Tone.Type.Positive;\n\n\t\t/**\n\t\t *  The modulating oscillator\n\t\t *  @type  {Tone.Oscillator}\n\t\t *  @private\n\t\t */\n\t\tthis._modulator = new Tone.Oscillator(options.frequency, options.modulationType);\n\n\t\t/**\n\t\t *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n\t\t *  A harmonicity of 1 gives both oscillators the same frequency.\n\t\t *  Harmonicity = 2 means a change of an octave.\n\t\t *  @type {Positive}\n\t\t *  @signal\n\t\t *  @example\n\t\t * //pitch the modulator an octave below carrier\n\t\t * synth.harmonicity.value = 0.5;\n\t\t */\n\t\tthis.harmonicity = new Tone.Multiply(options.harmonicity);\n\t\tthis.harmonicity.units = Tone.Type.Positive;\n\n\t\t/**\n\t\t *  the node where the modulation happens\n\t\t *  @type {Tone.Gain}\n\t\t *  @private\n\t\t */\n\t\tthis._modulationNode = new Tone.Gain(0);\n\n\t\t//connections\n\t\tthis.frequency.connect(this._carrier.frequency);\n\t\tthis.frequency.chain(this.harmonicity, this._modulator.frequency);\n\t\tthis.frequency.chain(this.modulationIndex, this._modulationNode);\n\t\tthis._modulator.connect(this._modulationNode.gain);\n\t\tthis._modulationNode.connect(this._carrier.frequency);\n\t\tthis._carrier.connect(this.output);\n\t\tthis.detune.connect(this._modulator.detune);\n\n\t\tthis.phase = options.phase;\n\n\t\tthis._readOnly([\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n\t};\n\n\tTone.extend(Tone.FMOscillator, Tone.Source);\n\n\t/**\n\t *  default values\n\t *  @static\n\t *  @type {Object}\n\t *  @const\n\t */\n\tTone.FMOscillator.defaults = {\n\t\t\"frequency\" : 440,\n\t\t\"detune\" : 0,\n\t\t\"phase\" : 0,\n\t\t\"type\" : \"sine\",\n\t\t\"modulationIndex\" : 2,\n\t\t\"modulationType\" : \"square\",\n\t\t\"harmonicity\" : 1\n\t};\n\n\t/**\n\t *  start the oscillator\n\t *  @param  {Time} [time=now]\n\t *  @private\n\t */\n\tTone.FMOscillator.prototype._start = function(time){\n\t\tthis._modulator.start(time);\n\t\tthis._carrier.start(time);\n\t};\n\n\t/**\n\t *  stop the oscillator\n\t *  @param  {Time} time (optional) timing parameter\n\t *  @private\n\t */\n\tTone.FMOscillator.prototype._stop = function(time){\n\t\tthis._modulator.stop(time);\n\t\tthis._carrier.stop(time);\n\t};\n\n\t/**\n\t *  stop the oscillator\n\t *  @param  {Time} time (optional) timing parameter\n\t *  @private\n\t */\n\tTone.FMOscillator.prototype.restart = function(time){\n\t\tthis._modulator.restart(time);\n\t\tthis._carrier.restart(time);\n\t};\n\n\t/**\n\t * The type of the carrier oscillator\n\t * @memberOf Tone.FMOscillator#\n\t * @type {string}\n\t * @name type\n\t */\n\tObject.defineProperty(Tone.FMOscillator.prototype, \"type\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.type;\n\t\t},\n\t\tset : function(type){\n\t\t\tthis._carrier.type = type;\n\t\t}\n\t});\n\n\t/**\n\t * The oscillator type without the partialsCount appended to the end\n\t * @memberOf Tone.FMOscillator#\n\t * @type {string}\n\t * @name baseType\n\t * @example\n\t * osc.type = 'sine2'\n\t * osc.baseType //'sine'\n\t * osc.partialCount = 2\n\t */\n\tObject.defineProperty(Tone.FMOscillator.prototype, \"baseType\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.baseType;\n\t\t},\n\t\tset : function(baseType){\n\t\t\tthis._carrier.baseType = baseType;\n\t\t}\n\t});\n\n\t/**\n\t * 'partialCount' offers an alternative way to set the number of used partials. \n\t * When partialCount is 0, the maximum number of partials are used when representing\n\t * the waveform using the periodicWave. When 'partials' is set, this value is \n\t * not settable, but equals the length of the partials array.\n\t * @memberOf Tone.FMOscillator#\n\t * @type {Number}\n\t * @name partialCount\n\t */\n\tObject.defineProperty(Tone.FMOscillator.prototype, \"partialCount\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.partialCount;\n\t\t},\n\t\tset : function(partialCount){\n\t\t\tthis._carrier.partialCount = partialCount;\n\t\t}\n\t});\n\n\t/**\n\t * The type of the modulator oscillator\n\t * @memberOf Tone.FMOscillator#\n\t * @type {String}\n\t * @name modulationType\n\t */\n\tObject.defineProperty(Tone.FMOscillator.prototype, \"modulationType\", {\n\t\tget : function(){\n\t\t\treturn this._modulator.type;\n\t\t},\n\t\tset : function(type){\n\t\t\tthis._modulator.type = type;\n\t\t}\n\t});\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t * @memberOf Tone.FMOscillator#\n\t * @type {number}\n\t * @name phase\n\t */\n\tObject.defineProperty(Tone.FMOscillator.prototype, \"phase\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.phase;\n\t\t},\n\t\tset : function(phase){\n\t\t\tthis._carrier.phase = phase;\n\t\t\tthis._modulator.phase = phase;\n\t\t}\n\t});\n\n\t/**\n\t * The partials of the carrier waveform. A partial represents\n\t * the amplitude at a harmonic. The first harmonic is the\n\t * fundamental frequency, the second is the octave and so on\n\t * following the harmonic series.\n\t * Setting this value will automatically set the type to \"custom\".\n\t * The value is an empty array when the type is not \"custom\".\n\t * @memberOf Tone.FMOscillator#\n\t * @type {Array}\n\t * @name partials\n\t * @example\n\t * osc.partials = [1, 0.2, 0.01];\n\t */\n\tObject.defineProperty(Tone.FMOscillator.prototype, \"partials\", {\n\t\tget : function(){\n\t\t\treturn this._carrier.partials;\n\t\t},\n\t\tset : function(partials){\n\t\t\tthis._carrier.partials = partials;\n\t\t}\n\t});\n\n\t/**\n\t *  Clean up.\n\t *  @return {Tone.FMOscillator} this\n\t */\n\tTone.FMOscillator.prototype.dispose = function(){\n\t\tTone.Source.prototype.dispose.call(this);\n\t\tthis._writable([\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n\t\tthis.frequency.dispose();\n\t\tthis.frequency = null;\n\t\tthis.detune = null;\n\t\tthis.harmonicity.dispose();\n\t\tthis.harmonicity = null;\n\t\tthis._carrier.dispose();\n\t\tthis._carrier = null;\n\t\tthis._modulator.dispose();\n\t\tthis._modulator = null;\n\t\tthis._modulationNode.dispose();\n\t\tthis._modulationNode = null;\n\t\tthis.modulationIndex.dispose();\n\t\tthis.modulationIndex = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.FMOscillator;\n});\n","var isObject = require('./_is-object');\nvar setPrototypeOf = require('./_set-proto').set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n","define([\"../core/Tone\", \"../type/Type\", \"../core/Master\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Base-class for all instruments\n\t *\n\t *  @constructor\n\t *  @extends {Tone.AudioNode}\n\t */\n\tTone.Instrument = function(options){\n\n\t\t//get the defaults\n\t\toptions = Tone.defaultArg(options, Tone.Instrument.defaults);\n\t\tTone.AudioNode.call(this);\n\n\t\t/**\n\t\t *  The output and volume triming node\n\t\t *  @type  {Tone.Volume}\n\t\t *  @private\n\t\t */\n\t\tthis._volume = this.output = new Tone.Volume(options.volume);\n\n\t\t/**\n\t\t * The volume of the output in decibels.\n\t\t * @type {Decibels}\n\t\t * @signal\n\t\t * @example\n\t\t * source.volume.value = -6;\n\t\t */\n\t\tthis.volume = this._volume.volume;\n\t\tthis._readOnly(\"volume\");\n\n\t\t/**\n\t\t * Keep track of all events scheduled to the transport\n\t\t * when the instrument is 'synced'\n\t\t * @type {Array<Number>}\n\t\t * @private\n\t\t */\n\t\tthis._scheduledEvents = [];\n\t};\n\n\tTone.extend(Tone.Instrument, Tone.AudioNode);\n\n\t/**\n\t *  the default attributes\n\t *  @type {object}\n\t */\n\tTone.Instrument.defaults = {\n\t\t/** the volume of the output in decibels */\n\t\t\"volume\" : 0\n\t};\n\n\t/**\n\t *  @abstract\n\t *  @param {string|number} note the note to trigger\n\t *  @param {Time} [time=now] the time to trigger the ntoe\n\t *  @param {number} [velocity=1] the velocity to trigger the note\n\t */\n\tTone.Instrument.prototype.triggerAttack = Tone.noOp;\n\n\t/**\n\t *  @abstract\n\t *  @param {Time} [time=now] when to trigger the release\n\t */\n\tTone.Instrument.prototype.triggerRelease = Tone.noOp;\n\n\t/**\n\t * Sync the instrument to the Transport. All subsequent calls of\n\t * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n\t * will be scheduled along the transport.\n\t * @example\n\t * instrument.sync()\n\t * //schedule 3 notes when the transport first starts\n\t * instrument.triggerAttackRelease('C4', '8n', 0)\n\t * instrument.triggerAttackRelease('E4', '8n', '8n')\n\t * instrument.triggerAttackRelease('G4', '8n', '4n')\n\t * //start the transport to hear the notes\n\t * Transport.start()\n\t * @returns {Tone.Instrument} this\n\t */\n\tTone.Instrument.prototype.sync = function(){\n\t\tthis._syncMethod(\"triggerAttack\", 1);\n\t\tthis._syncMethod(\"triggerRelease\", 0);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Wrap the given method so that it can be synchronized\n\t * @param {String} method Which method to wrap and sync\n\t * @param  {Number} timePosition What position the time argument appears in\n\t * @private\n\t */\n\tTone.Instrument.prototype._syncMethod = function(method, timePosition){\n\t\tvar originalMethod = this[\"_original_\"+method] = this[method];\n\t\tthis[method] = function(){\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\tvar time = args[timePosition];\n\t\t\tvar id = Tone.Transport.schedule(function(t){\n\t\t\t\targs[timePosition] = t;\n\t\t\t\toriginalMethod.apply(this, args);\n\t\t\t}.bind(this), time);\n\t\t\tthis._scheduledEvents.push(id);\n\t\t}.bind(this);\n\t};\n\n\t/**\n\t * Unsync the instrument from the Transport\n\t * @returns {Tone.Instrument} this\n\t */\n\tTone.Instrument.prototype.unsync = function(){\n\t\tthis._scheduledEvents.forEach(function(id){\n\t\t\tTone.Transport.clear(id);\n\t\t});\n\t\tthis._scheduledEvents = [];\n\t\tif (this._original_triggerAttack){\n\t\t\tthis.triggerAttack = this._original_triggerAttack;\n\t\t\tthis.triggerRelease = this._original_triggerRelease;\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Trigger the attack and then the release after the duration.\n\t *  @param  {Frequency} note     The note to trigger.\n\t *  @param  {Time} duration How long the note should be held for before\n\t *                          triggering the release. This value must be greater than 0.\n\t *  @param {Time} [time=now]  When the note should be triggered.\n\t *  @param  {NormalRange} [velocity=1] The velocity the note should be triggered at.\n\t *  @returns {Tone.Instrument} this\n\t *  @example\n\t * //trigger \"C4\" for the duration of an 8th note\n\t * synth.triggerAttackRelease(\"C4\", \"8n\");\n\t */\n\tTone.Instrument.prototype.triggerAttackRelease = function(note, duration, time, velocity){\n\t\ttime = this.toSeconds(time);\n\t\tduration = this.toSeconds(duration);\n\t\tthis.triggerAttack(note, time, velocity);\n\t\tthis.triggerRelease(time + duration);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  clean up\n\t *  @returns {Tone.Instrument} this\n\t */\n\tTone.Instrument.prototype.dispose = function(){\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis._volume.dispose();\n\t\tthis._volume = null;\n\t\tthis._writable([\"volume\"]);\n\t\tthis.volume = null;\n\t\tthis.unsync();\n\t\tthis._scheduledEvents = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Instrument;\n});\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","define([\"../core/Tone\", \"../source/Source\", \"../source/PulseOscillator\",\n\t\"../source/Oscillator\", \"../signal/Multiply\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.PWMOscillator modulates the width of a Tone.PulseOscillator\n\t *         at the modulationFrequency. This has the effect of continuously\n\t *         changing the timbre of the oscillator by altering the harmonics\n\t *         generated.\n\t *\n\t *  @extends {Tone.Source}\n\t *  @constructor\n\t *  @param {Frequency} frequency The starting frequency of the oscillator.\n\t *  @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse.\n\t *  @example\n\t *  var pwm = new Tone.PWMOscillator(\"Ab3\", 0.3).toMaster().start();\n\t */\n\tTone.PWMOscillator = function(){\n\t\tvar options = Tone.defaults(arguments, [\"frequency\", \"modulationFrequency\"], Tone.PWMOscillator);\n\t\tTone.Source.call(this, options);\n\n\t\t/**\n\t\t *  the pulse oscillator\n\t\t *  @type {Tone.PulseOscillator}\n\t\t *  @private\n\t\t */\n\t\tthis._pulse = new Tone.PulseOscillator(options.modulationFrequency);\n\t\t//change the pulse oscillator type\n\t\tthis._pulse._sawtooth.type = \"sine\";\n\n\t\t/**\n\t\t *  the modulator\n\t\t *  @type {Tone.Oscillator}\n\t\t *  @private\n\t\t */\n\t\tthis._modulator = new Tone.Oscillator({\n\t\t\t\"frequency\" : options.frequency,\n\t\t\t\"detune\" : options.detune,\n\t\t\t\"phase\" : options.phase\n\t\t});\n\n\t\t/**\n\t\t *  Scale the oscillator so it doesn't go silent\n\t\t *  at the extreme values.\n\t\t *  @type {Tone.Multiply}\n\t\t *  @private\n\t\t */\n\t\tthis._scale = new Tone.Multiply(2);\n\n\t\t/**\n\t\t *  The frequency control.\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = this._modulator.frequency;\n\n\t\t/**\n\t\t *  The detune of the oscillator.\n\t\t *  @type {Cents}\n\t\t *  @signal\n\t\t */\n\t\tthis.detune = this._modulator.detune;\n\n\t\t/**\n\t\t *  The modulation rate of the oscillator.\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.modulationFrequency = this._pulse.frequency;\n\n\t\t//connections\n\t\tthis._modulator.chain(this._scale, this._pulse.width);\n\t\tthis._pulse.connect(this.output);\n\t\tthis._readOnly([\"modulationFrequency\", \"frequency\", \"detune\"]);\n\t};\n\n\tTone.extend(Tone.PWMOscillator, Tone.Source);\n\n\t/**\n\t *  default values\n\t *  @static\n\t *  @type {Object}\n\t *  @const\n\t */\n\tTone.PWMOscillator.defaults = {\n\t\t\"frequency\" : 440,\n\t\t\"detune\" : 0,\n\t\t\"phase\" : 0,\n\t\t\"modulationFrequency\" : 0.4,\n\t};\n\n\t/**\n\t *  start the oscillator\n\t *  @param  {Time} [time=now]\n\t *  @private\n\t */\n\tTone.PWMOscillator.prototype._start = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._modulator.start(time);\n\t\tthis._pulse.start(time);\n\t};\n\n\t/**\n\t *  stop the oscillator\n\t *  @param  {Time} time (optional) timing parameter\n\t *  @private\n\t */\n\tTone.PWMOscillator.prototype._stop = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._modulator.stop(time);\n\t\tthis._pulse.stop(time);\n\t};\n\n\t/**\n\t *  restart the oscillator\n\t *  @param  {Time} time (optional) timing parameter\n\t *  @private\n\t */\n\tTone.PWMOscillator.prototype.restart = function(time){\n\t\tthis._modulator.restart(time);\n\t\tthis._pulse.restart(time);\n\t};\n\n\t/**\n\t * The type of the oscillator. Always returns \"pwm\".\n\t * @readOnly\n\t * @memberOf Tone.PWMOscillator#\n\t * @type {string}\n\t * @name type\n\t */\n\tObject.defineProperty(Tone.PWMOscillator.prototype, \"type\", {\n\t\tget : function(){\n\t\t\treturn \"pwm\";\n\t\t}\n\t});\n\n\t/**\n\t * The baseType of the oscillator. Always returns \"pwm\".\n\t * @readOnly\n\t * @memberOf Tone.PWMOscillator#\n\t * @type {string}\n\t * @name baseType\n\t */\n\tObject.defineProperty(Tone.PWMOscillator.prototype, \"baseType\", {\n\t\tget : function(){\n\t\t\treturn \"pwm\";\n\t\t}\n\t});\n\n\t/**\n\t * The partials of the waveform. Cannot set partials for this waveform type\n\t * @memberOf Tone.PWMOscillator#\n\t * @type {Array}\n\t * @name partials\n\t * @private\n\t */\n\tObject.defineProperty(Tone.PWMOscillator.prototype, \"partials\", {\n\t\tget : function(){\n\t\t\treturn [];\n\t\t}\n\t});\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t * @memberOf Tone.PWMOscillator#\n\t * @type {number}\n\t * @name phase\n\t */\n\tObject.defineProperty(Tone.PWMOscillator.prototype, \"phase\", {\n\t\tget : function(){\n\t\t\treturn this._modulator.phase;\n\t\t},\n\t\tset : function(phase){\n\t\t\tthis._modulator.phase = phase;\n\t\t}\n\t});\n\n\t/**\n\t *  Clean up.\n\t *  @return {Tone.PWMOscillator} this\n\t */\n\tTone.PWMOscillator.prototype.dispose = function(){\n\t\tTone.Source.prototype.dispose.call(this);\n\t\tthis._pulse.dispose();\n\t\tthis._pulse = null;\n\t\tthis._scale.dispose();\n\t\tthis._scale = null;\n\t\tthis._modulator.dispose();\n\t\tthis._modulator = null;\n\t\tthis._writable([\"modulationFrequency\", \"frequency\", \"detune\"]);\n\t\tthis.frequency = null;\n\t\tthis.detune = null;\n\t\tthis.modulationFrequency = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.PWMOscillator;\n});\n","define([\"../core/Tone\", \"../shim/AudioContext\"], function(Tone){\n\n\tif (Tone.supported && !Tone.global.AudioContext.prototype._native_createWaveShaper){\n\n\t\t//fixes safari only bug which is still present in 11\n\t\tvar ua = navigator.userAgent.toLowerCase();\n\t\tvar isSafari = ua.includes(\"safari\") && !ua.includes(\"chrome\");\n\t\tif (isSafari){\n\n\t\t\tvar WaveShaperNode = function(context){\n\n\t\t\t\tthis._internalNode = this.input = this.output = context._native_createWaveShaper();\n\n\t\t\t\tthis._curve = null;\n\n\t\t\t\tfor (var prop in this._internalNode){\n\t\t\t\t\tthis._defineProperty(this._internalNode, prop);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tObject.defineProperty(WaveShaperNode.prototype, \"curve\", {\n\t\t\t\t\"get\" : function(){\n\t\t\t\t\treturn this._curve;\n\t\t\t\t},\n\t\t\t\t\"set\" : function(curve){\n\t\t\t\t\tthis._curve = curve;\n\t\t\t\t\tvar array = new Float32Array(curve.length+1);\n\t\t\t\t\tarray.set(curve, 1);\n\t\t\t\t\tarray[0] = curve[0];\n\t\t\t\t\tthis._internalNode.curve = array;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tWaveShaperNode.prototype._defineProperty = function(context, prop){\n\t\t\t\tif (Tone.isUndef(this[prop])){\n\t\t\t\t\tObject.defineProperty(this, prop, {\n\t\t\t\t\t\t\"get\" : function(){\n\t\t\t\t\t\t\tif (typeof context[prop] === \"function\"){\n\t\t\t\t\t\t\t\treturn context[prop].bind(context);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn context[prop];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"set\" : function(val){\n\t\t\t\t\t\t\tcontext[prop] = val;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tTone.global.AudioContext.prototype._native_createWaveShaper = Tone.global.AudioContext.prototype.createWaveShaper;\n\t\t\tTone.global.AudioContext.prototype.createWaveShaper = function(){\n\t\t\t\treturn new WaveShaperNode(this);\n\t\t\t};\n\t\t}\n\t}\n\n});\n","define([\"../core/Tone\"], function(Tone){\n\n\t/**\n\t *  AudioBuffer.copyTo/FromChannel polyfill\n\t *  @private\n\t */\n\tif (Tone.supported){\n\t\tif (!AudioBuffer.prototype.copyToChannel){\n\t\t\tAudioBuffer.prototype.copyToChannel = function(src, chanNum, start){\n\t\t\t\tvar channel = this.getChannelData(chanNum);\n\t\t\t\tstart = start || 0;\n\t\t\t\tfor (var i = 0; i < channel.length; i++){\n\t\t\t\t\tchannel[i+start] = src[i];\n\t\t\t\t}\n\t\t\t};\n\t\t\tAudioBuffer.prototype.copyFromChannel = function(dest, chanNum, start){\n\t\t\t\tvar channel = this.getChannelData(chanNum);\n\t\t\t\tstart = start || 0;\n\t\t\t\tfor (var i = 0; i < dest.length; i++){\n\t\t\t\t\tdest[i] = channel[i+start];\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n});\n","define([\"../core/Tone\", \"../core/Emitter\", \"../type/Type\", \"../shim/AudioBuffer\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Buffer loading and storage. Tone.Buffer is used internally by all\n\t *          classes that make requests for audio files such as Tone.Player,\n\t *          Tone.Sampler and Tone.Convolver.\n\t *\n\t *          Aside from load callbacks from individual buffers, Tone.Buffer\n\t *  \t\tprovides events which keep track of the loading progress\n\t *  \t\tof _all_ of the buffers. These are Tone.Buffer.on(\"load\" / \"progress\" / \"error\")\n\t *\n\t *  @constructor\n\t *  @extends {Tone}\n\t *  @param {AudioBuffer|String} url The url to load, or the audio buffer to set.\n\t *  @param {Function=} onload A callback which is invoked after the buffer is loaded.\n\t *                            It's recommended to use `Tone.Buffer.on('load', callback)` instead\n\t *                            since it will give you a callback when _all_ buffers are loaded.\n\t *  @param {Function=} onerror The callback to invoke if there is an error\n\t *  @example\n\t * var buffer = new Tone.Buffer(\"path/to/sound.mp3\", function(){\n\t * \t//the buffer is now available.\n\t * \tvar buff = buffer.get();\n\t * });\n\t *  @example\n\t * //can load provide fallback extension types if the first type is not supported.\n\t * var buffer = new Tone.Buffer(\"path/to/sound.[mp3|ogg|wav]\");\n\t */\n\tTone.Buffer = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"url\", \"onload\", \"onerror\"], Tone.Buffer);\n\t\tTone.call(this);\n\n\t\t/**\n\t\t *  stores the loaded AudioBuffer\n\t\t *  @type {AudioBuffer}\n\t\t *  @private\n\t\t */\n\t\tthis._buffer = null;\n\n\t\t/**\n\t\t *  indicates if the buffer should be reversed or not\n\t\t *  @type {Boolean}\n\t\t *  @private\n\t\t */\n\t\tthis._reversed = options.reverse;\n\n\t\t/**\n\t\t *  The XHR\n\t\t *  @type  {XMLHttpRequest}\n\t\t *  @private\n\t\t */\n\t\tthis._xhr = null;\n\n\t\t/**\n\t\t * Private callback when the buffer is loaded.\n\t\t * @type {Function}\n\t\t * @private\n\t\t */\n\t\tthis.onload = Tone.noOp;\n\n\t\tif (options.url instanceof AudioBuffer || options.url instanceof Tone.Buffer){\n\t\t\tthis.set(options.url);\n\t\t\tif (!this.loaded){\n\t\t\t\tthis.onload = options.onload;\n\t\t\t}\n\t\t} else if (Tone.isString(options.url)){\n\t\t\tthis.load(options.url).then(options.onload).catch(options.onerror);\n\t\t}\n\t};\n\n\tTone.extend(Tone.Buffer);\n\n\t/**\n\t *  the default parameters\n\t *  @type {Object}\n\t */\n\tTone.Buffer.defaults = {\n\t\t\"url\" : undefined,\n\t\t\"reverse\" : false,\n\t\t\"onload\" : Tone.noOp,\n\t\t\"onerror\" : Tone.noOp\n\t};\n\n\t/**\n\t *  Pass in an AudioBuffer or Tone.Buffer to set the value\n\t *  of this buffer.\n\t *  @param {AudioBuffer|Tone.Buffer} buffer the buffer\n\t *  @returns {Tone.Buffer} this\n\t */\n\tTone.Buffer.prototype.set = function(buffer){\n\t\tif (buffer instanceof Tone.Buffer){\n\t\t\t//if it's loaded, set it\n\t\t\tif (buffer.loaded){\n\t\t\t\tthis._buffer = buffer.get();\n\t\t\t} else {\n\t\t\t\t//otherwise when it's loaded, invoke it's callback\n\t\t\t\tbuffer.onload = function(){\n\t\t\t\t\tthis.set(buffer);\n\t\t\t\t\tthis.onload(this);\n\t\t\t\t}.bind(this);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._buffer = buffer;\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  @return {AudioBuffer} The audio buffer stored in the object.\n\t */\n\tTone.Buffer.prototype.get = function(){\n\t\treturn this._buffer;\n\t};\n\n\t/**\n\t *  Makes an xhr reqest for the selected url then decodes\n\t *  the file as an audio buffer. Invokes\n\t *  the callback once the audio buffer loads.\n\t *  @param {String} url The url of the buffer to load.\n\t *                      filetype support depends on the\n\t *                      browser.\n\t *  @returns {Promise} returns a Promise which resolves with the Tone.Buffer\n\t */\n\tTone.Buffer.prototype.load = function(url, onload, onerror){\n\n\t\tvar promise = new Promise(function(load, error){\n\n\t\t\tthis._xhr = Tone.Buffer.load(url,\n\n\t\t\t\t//success\n\t\t\t\tfunction(buff){\n\t\t\t\t\tthis._xhr = null;\n\t\t\t\t\tthis.set(buff);\n\t\t\t\t\tload(this);\n\t\t\t\t\tthis.onload(this);\n\t\t\t\t\tif (onload){\n\t\t\t\t\t\tonload(this);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this),\n\n\t\t\t\t//error\n\t\t\t\tfunction(err){\n\t\t\t\t\tthis._xhr = null;\n\t\t\t\t\terror(err);\n\t\t\t\t\tif (onerror){\n\t\t\t\t\t\tonerror(err);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this));\n\n\t\t}.bind(this));\n\n\t\treturn promise;\n\t};\n\n\t/**\n\t *  dispose and disconnect\n\t *  @returns {Tone.Buffer} this\n\t */\n\tTone.Buffer.prototype.dispose = function(){\n\t\tTone.prototype.dispose.call(this);\n\t\tthis._buffer = null;\n\t\tif (this._xhr){\n\t\t\tTone.Buffer._removeFromDownloadQueue(this._xhr);\n\t\t\tthis._xhr.abort();\n\t\t\tthis._xhr = null;\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * If the buffer is loaded or not\n\t * @memberOf Tone.Buffer#\n\t * @type {Boolean}\n\t * @name loaded\n\t * @readOnly\n\t */\n\tObject.defineProperty(Tone.Buffer.prototype, \"loaded\", {\n\t\t\"get\" : function(){\n\t\t\treturn this.length > 0;\n\t\t},\n\t});\n\n\t/**\n\t * The duration of the buffer.\n\t * @memberOf Tone.Buffer#\n\t * @type {Number}\n\t * @name duration\n\t * @readOnly\n\t */\n\tObject.defineProperty(Tone.Buffer.prototype, \"duration\", {\n\t\t\"get\" : function(){\n\t\t\tif (this._buffer){\n\t\t\t\treturn this._buffer.duration;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t});\n\n\t/**\n\t * The length of the buffer in samples\n\t * @memberOf Tone.Buffer#\n\t * @type {Number}\n\t * @name length\n\t * @readOnly\n\t */\n\tObject.defineProperty(Tone.Buffer.prototype, \"length\", {\n\t\t\"get\" : function(){\n\t\t\tif (this._buffer){\n\t\t\t\treturn this._buffer.length;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t});\n\n\t/**\n\t * The number of discrete audio channels. Returns 0 if no buffer\n\t * is loaded.\n\t * @memberOf Tone.Buffer#\n\t * @type {Number}\n\t * @name numberOfChannels\n\t * @readOnly\n\t */\n\tObject.defineProperty(Tone.Buffer.prototype, \"numberOfChannels\", {\n\t\t\"get\" : function(){\n\t\t\tif (this._buffer){\n\t\t\t\treturn this._buffer.numberOfChannels;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t});\n\n\t/**\n\t *  Set the audio buffer from the array. To create a multichannel AudioBuffer,\n\t *  pass in a multidimensional array.\n\t *  @param {Float32Array} array The array to fill the audio buffer\n\t *  @return {Tone.Buffer} this\n\t */\n\tTone.Buffer.prototype.fromArray = function(array){\n\t\tvar isMultidimensional = array[0].length > 0;\n\t\tvar channels = isMultidimensional ? array.length : 1;\n\t\tvar len = isMultidimensional ? array[0].length : array.length;\n\t\tvar buffer = this.context.createBuffer(channels, len, this.context.sampleRate);\n\t\tif (!isMultidimensional && channels === 1){\n\t\t\tarray = [array];\n\t\t}\n\t\tfor (var c = 0; c < channels; c++){\n\t\t\tbuffer.copyToChannel(array[c], c);\n\t\t}\n\t\tthis._buffer = buffer;\n\t\treturn this;\n\t};\n\n\t/**\n\t * \tSums muliple channels into 1 channel\n\t *  @param {Number=} channel Optionally only copy a single channel from the array.\n\t *  @return {Array}\n\t */\n\tTone.Buffer.prototype.toMono = function(chanNum){\n\t\tif (Tone.isNumber(chanNum)){\n\t\t\tthis.fromArray(this.toArray(chanNum));\n\t\t} else {\n\t\t\tvar outputArray = new Float32Array(this.length);\n\t\t\tvar numChannels = this.numberOfChannels;\n\t\t\tfor (var channel = 0; channel < numChannels; channel++){\n\t\t\t\tvar channelArray = this.toArray(channel);\n\t\t\t\tfor (var i = 0; i < channelArray.length; i++){\n\t\t\t\t\toutputArray[i] += channelArray[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\t//divide by the number of channels\n\t\t\toutputArray = outputArray.map(function(sample){\n\t\t\t\treturn sample / numChannels;\n\t\t\t});\n\t\t\tthis.fromArray(outputArray);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * \tGet the buffer as an array. Single channel buffers will return a 1-dimensional\n\t * \tFloat32Array, and multichannel buffers will return multidimensional arrays.\n\t *  @param {Number=} channel Optionally only copy a single channel from the array.\n\t *  @return {Array}\n\t */\n\tTone.Buffer.prototype.toArray = function(channel){\n\t\tif (Tone.isNumber(channel)){\n\t\t\treturn this.getChannelData(channel);\n\t\t} else if (this.numberOfChannels === 1){\n\t\t\treturn this.toArray(0);\n\t\t} else {\n\t\t\tvar ret = [];\n\t\t\tfor (var c = 0; c < this.numberOfChannels; c++){\n\t\t\t\tret[c] = this.getChannelData(c);\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n\n\t/**\n\t *  Returns the Float32Array representing the PCM audio data for the specific channel.\n\t *  @param  {Number}  channel  The channel number to return\n\t *  @return  {Float32Array}  The audio as a TypedArray\n\t */\n\tTone.Buffer.prototype.getChannelData = function(channel){\n\t\treturn this._buffer.getChannelData(channel);\n\t};\n\n\t/**\n\t *  Cut a subsection of the array and return a buffer of the\n\t *  subsection. Does not modify the original buffer\n\t *  @param {Time} start The time to start the slice\n\t *  @param {Time=} end The end time to slice. If none is given\n\t *                     will default to the end of the buffer\n\t *  @return {Tone.Buffer} this\n\t */\n\tTone.Buffer.prototype.slice = function(start, end){\n\t\tend = Tone.defaultArg(end, this.duration);\n\t\tvar startSamples = Math.floor(this.context.sampleRate * this.toSeconds(start));\n\t\tvar endSamples = Math.floor(this.context.sampleRate * this.toSeconds(end));\n\t\tvar replacement = [];\n\t\tfor (var i = 0; i < this.numberOfChannels; i++){\n\t\t\treplacement[i] = this.toArray(i).slice(startSamples, endSamples);\n\t\t}\n\t\tvar retBuffer = new Tone.Buffer().fromArray(replacement);\n\t\treturn retBuffer;\n\t};\n\n\t/**\n\t *  Reverse the buffer.\n\t *  @private\n\t *  @return {Tone.Buffer} this\n\t */\n\tTone.Buffer.prototype._reverse = function(){\n\t\tif (this.loaded){\n\t\t\tfor (var i = 0; i < this.numberOfChannels; i++){\n\t\t\t\tArray.prototype.reverse.call(this.getChannelData(i));\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Reverse the buffer.\n\t * @memberOf Tone.Buffer#\n\t * @type {Boolean}\n\t * @name reverse\n\t */\n\tObject.defineProperty(Tone.Buffer.prototype, \"reverse\", {\n\t\t\"get\" : function(){\n\t\t\treturn this._reversed;\n\t\t},\n\t\t\"set\" : function(rev){\n\t\t\tif (this._reversed !== rev){\n\t\t\t\tthis._reversed = rev;\n\t\t\t\tthis._reverse();\n\t\t\t}\n\t\t},\n\t});\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// STATIC METHODS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t//statically inherits Emitter methods\n\tTone.Emitter.mixin(Tone.Buffer);\n\n\t/**\n\t *  the static queue for all of the xhr requests\n\t *  @type {Array}\n\t *  @private\n\t */\n\tTone.Buffer._downloadQueue = [];\n\n\t/**\n\t *  A path which is prefixed before every url.\n\t *  @type  {String}\n\t *  @static\n\t */\n\tTone.Buffer.baseUrl = \"\";\n\n\t/**\n\t *  Create a Tone.Buffer from the array. To create a multichannel AudioBuffer,\n\t *  pass in a multidimensional array.\n\t *  @param {Float32Array} array The array to fill the audio buffer\n\t *  @return {Tone.Buffer} A Tone.Buffer created from the array\n\t */\n\tTone.Buffer.fromArray = function(array){\n\t\treturn (new Tone.Buffer()).fromArray(array);\n\t};\n\n\t/**\n\t * Creates a Tone.Buffer from a URL, returns a promise\n\t * which resolves to a Tone.Buffer\n\t * @param  {String} url The url to load.\n\t * @return {Promise<Tone.Buffer>}     A promise which resolves to a Tone.Buffer\n\t */\n\tTone.Buffer.fromUrl = function(url){\n\t\tvar buffer = new Tone.Buffer();\n\t\treturn buffer.load(url).then(function(){\n\t\t\treturn buffer;\n\t\t});\n\t};\n\n\t/**\n\t * Remove an xhr request from the download queue\n\t * @private\n\t */\n\tTone.Buffer._removeFromDownloadQueue = function(request){\n\t\tvar index = Tone.Buffer._downloadQueue.indexOf(request);\n\t\tif (index !== -1){\n\t\t\tTone.Buffer._downloadQueue.splice(index, 1);\n\t\t}\n\t};\n\n\t/**\n\t *  Loads a url using XMLHttpRequest.\n\t *  @param {String} url\n\t *  @param {Function} onload\n\t *  @param {Function} onerror\n\t *  @param {Function} onprogress\n\t *  @return {XMLHttpRequest}\n\t */\n\tTone.Buffer.load = function(url, onload, onerror){\n\t\t//default\n\t\tonload = Tone.defaultArg(onload, Tone.noOp);\n\n\t\t// test if the url contains multiple extensions\n\t\tvar matches = url.match(/\\[(.+\\|?)+\\]$/);\n\t\tif (matches){\n\t\t\tvar extensions = matches[1].split(\"|\");\n\t\t\tvar extension = extensions[0];\n\t\t\tfor (var i = 0; i < extensions.length; i++){\n\t\t\t\tif (Tone.Buffer.supportsType(extensions[i])){\n\t\t\t\t\textension = extensions[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\turl = url.replace(matches[0], extension);\n\t\t}\n\n\t\tfunction onError(e){\n\t\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\t\tTone.Buffer.emit(\"error\", e);\n\t\t\tif (onerror){\n\t\t\t\tonerror(e);\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\n\t\tfunction onProgress(){\n\t\t\t//calculate the progress\n\t\t\tvar totalProgress = 0;\n\t\t\tfor (var i = 0; i < Tone.Buffer._downloadQueue.length; i++){\n\t\t\t\ttotalProgress += Tone.Buffer._downloadQueue[i].progress;\n\t\t\t}\n\t\t\tTone.Buffer.emit(\"progress\", totalProgress / Tone.Buffer._downloadQueue.length);\n\t\t}\n\n\t\tvar request = new XMLHttpRequest();\n\t\trequest.open(\"GET\", Tone.Buffer.baseUrl + url, true);\n\t\trequest.responseType = \"arraybuffer\";\n\t\t//start out as 0\n\t\trequest.progress = 0;\n\n\t\tTone.Buffer._downloadQueue.push(request);\n\n\t\trequest.addEventListener(\"load\", function(){\n\n\t\t\tif (request.status === 200){\n\t\t\t\tTone.context.decodeAudioData(request.response).then(function(buff){\n\n\t\t\t\t\trequest.progress = 1;\n\t\t\t\t\tonProgress();\n\t\t\t\t\tonload(buff);\n\n\t\t\t\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\t\t\t\tif (Tone.Buffer._downloadQueue.length === 0){\n\t\t\t\t\t\t//emit the event at the end\n\t\t\t\t\t\tTone.Buffer.emit(\"load\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(function(){\n\t\t\t\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\t\t\t\tonError(\"Tone.Buffer: could not decode audio data: \"+url);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tonError(\"Tone.Buffer: could not locate file: \"+url);\n\t\t\t}\n\t\t});\n\t\trequest.addEventListener(\"error\", onError);\n\n\t\trequest.addEventListener(\"progress\", function(event){\n\t\t\tif (event.lengthComputable){\n\t\t\t\t//only go to 95%, the last 5% is when the audio is decoded\n\t\t\t\trequest.progress = (event.loaded / event.total) * 0.95;\n\t\t\t\tonProgress();\n\t\t\t}\n\t\t});\n\n\t\trequest.send();\n\n\t\treturn request;\n\t};\n\n\t/**\n\t *  Stop all of the downloads in progress\n\t *  @return {Tone.Buffer}\n\t *  @static\n\t */\n\tTone.Buffer.cancelDownloads = function(){\n\t\tTone.Buffer._downloadQueue.slice().forEach(function(request){\n\t\t\tTone.Buffer._removeFromDownloadQueue(request);\n\t\t\trequest.abort();\n\t\t});\n\t\treturn Tone.Buffer;\n\t};\n\n\t/**\n\t *  Checks a url's extension to see if the current browser can play that file type.\n\t *  @param {String} url The url/extension to test\n\t *  @return {Boolean} If the file extension can be played\n\t *  @static\n\t *  @example\n\t * Tone.Buffer.supportsType(\"wav\"); //returns true\n\t * Tone.Buffer.supportsType(\"path/to/file.wav\"); //returns true\n\t */\n\tTone.Buffer.supportsType = function(url){\n\t\tvar extension = url.split(\".\");\n\t\textension = extension[extension.length - 1];\n\t\tvar response = document.createElement(\"audio\").canPlayType(\"audio/\"+extension);\n\t\treturn response !== \"\";\n\t};\n\n\t/**\n\t *  Returns a Promise which resolves when all of the buffers have loaded\n\t *  @return {Promise}\n\t */\n\tTone.loaded = function(){\n\t\tvar onload, onerror;\n\t\tfunction removeEvents(){\n\t\t\t//remove the events when it's resolved\n\t\t\tTone.Buffer.off(\"load\", onload);\n\t\t\tTone.Buffer.off(\"error\", onerror);\n\t\t}\n\t\treturn new Promise(function(success, fail){\n\t\t\tonload = function(){\n\t\t\t\tsuccess();\n\t\t\t};\n\t\t\tonerror = function(){\n\t\t\t\tfail();\n\t\t\t};\n\t\t\t//add the event listeners\n\t\t\tTone.Buffer.on(\"load\", onload);\n\t\t\tTone.Buffer.on(\"error\", onerror);\n\t\t}).then(removeEvents).catch(function(e){\n\t\t\tremoveEvents();\n\t\t\tthrow new Error(e);\n\t\t});\n\t};\n\n\treturn Tone.Buffer;\n});\n","define([\"../core/Tone\", \"../signal/Signal\", \"../source/Source\",\n\t\"../core/Transport\", \"../source/OscillatorNode\"],\nfunction(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.Oscillator supports a number of features including\n\t *         phase rotation, multiple oscillator types (see Tone.Oscillator.type),\n\t *         and Transport syncing (see Tone.Oscillator.syncFrequency).\n\t *\n\t *  @constructor\n\t *  @extends {Tone.Source}\n\t *  @param {Frequency} [frequency] Starting frequency\n\t *  @param {string} [type] The oscillator type. Read more about type below.\n\t *  @example\n\t * //make and start a 440hz sine tone\n\t * var osc = new Tone.Oscillator(440, \"sine\").toMaster().start();\n\t */\n\tTone.Oscillator = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\"], Tone.Oscillator);\n\t\tTone.Source.call(this, options);\n\n\t\t/**\n\t\t *  the main oscillator\n\t\t *  @type {OscillatorNode}\n\t\t *  @private\n\t\t */\n\t\tthis._oscillator = null;\n\n\t\t/**\n\t\t *  The frequency control.\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n\n\t\t/**\n\t\t *  The detune control signal.\n\t\t *  @type {Cents}\n\t\t *  @signal\n\t\t */\n\t\tthis.detune = new Tone.Signal(options.detune, Tone.Type.Cents);\n\n\t\t/**\n\t\t *  the periodic wave\n\t\t *  @type {PeriodicWave}\n\t\t *  @private\n\t\t */\n\t\tthis._wave = null;\n\n\t\t/**\n\t\t *  The partials of the oscillator\n\t\t *  @type {Array}\n\t\t *  @private\n\t\t */\n\t\tthis._partials = options.partials;\n\n\t\t/**\n\t\t *  The number of partials to limit or extend the periodic wave by\n\t\t *  @type {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._partialCount = options.partialCount;\n\n\t\t/**\n\t\t *  the phase of the oscillator\n\t\t *  between 0 - 360\n\t\t *  @type {number}\n\t\t *  @private\n\t\t */\n\t\tthis._phase = options.phase;\n\n\t\t/**\n\t\t *  the type of the oscillator\n\t\t *  @type {string}\n\t\t *  @private\n\t\t */\n\t\tthis._type = options.type;\n\n\t\t//setup\n\t\tif (options.partialCount && options.type !== Tone.Oscillator.Type.Custom){\n\t\t\tthis._type = this.baseType + options.partialCount.toString();\n\t\t}\n\t\tthis.phase = this._phase;\n\t\tthis._readOnly([\"frequency\", \"detune\"]);\n\t};\n\n\tTone.extend(Tone.Oscillator, Tone.Source);\n\n\t/**\n\t *  the default parameters\n\t *  @type {Object}\n\t */\n\tTone.Oscillator.defaults = {\n\t\t\"type\" : \"sine\",\n\t\t\"frequency\" : 440,\n\t\t\"detune\" : 0,\n\t\t\"phase\" : 0,\n\t\t\"partials\" : [],\n\t\t\"partialCount\" : 0\n\t};\n\n\t/**\n\t *  The Oscillator types\n\t *  @enum {String}\n\t */\n\tTone.Oscillator.Type = {\n\t\tSine : \"sine\",\n\t\tTriangle : \"triangle\",\n\t\tSawtooth : \"sawtooth\",\n\t\tSquare : \"square\",\n\t\tCustom : \"custom\"\n\t};\n\n\t/**\n\t *  start the oscillator\n\t *  @param  {Time} [time=now]\n\t *  @private\n\t */\n\tTone.Oscillator.prototype._start = function(time){\n\t\tthis.log(\"start\", time);\n\t\t//new oscillator with previous values\n\t\tthis._oscillator = new Tone.OscillatorNode();\n\t\tif (this._wave){\n\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t} else {\n\t\t\tthis._oscillator.type = this._type;\n\t\t}\n\t\t//connect the control signal to the oscillator frequency & detune\n\t\tthis._oscillator.connect(this.output);\n\t\tthis.frequency.connect(this._oscillator.frequency);\n\t\tthis.detune.connect(this._oscillator.detune);\n\t\t//start the oscillator\n\t\ttime = this.toSeconds(time);\n\t\tthis._oscillator.start(time);\n\t};\n\n\t/**\n\t *  stop the oscillator\n\t *  @private\n\t *  @param  {Time} [time=now] (optional) timing parameter\n\t *  @returns {Tone.Oscillator} this\n\t */\n\tTone.Oscillator.prototype._stop = function(time){\n\t\tthis.log(\"stop\", time);\n\t\tif (this._oscillator){\n\t\t\ttime = this.toSeconds(time);\n\t\t\tthis._oscillator.stop(time);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Restart the oscillator. Does not stop the oscillator, but instead\n\t * just cancels any scheduled 'stop' from being invoked.\n\t * @param  {Time=} time\n\t * @return {Tone.Oscillator}      this\n\t */\n\tTone.Oscillator.prototype.restart = function(time){\n\t\tif (this._oscillator){\n\t\t\tthis._oscillator.cancelStop();\n\t\t}\n\t\tthis._state.cancel(this.toSeconds(time));\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n\t *  will also affect the oscillators frequency.\n\t *  @returns {Tone.Oscillator} this\n\t *  @example\n\t * Tone.Transport.bpm.value = 120;\n\t * osc.frequency.value = 440;\n\t * //the ration between the bpm and the frequency will be maintained\n\t * osc.syncFrequency();\n\t * Tone.Transport.bpm.value = 240;\n\t * // the frequency of the oscillator is doubled to 880\n\t */\n\tTone.Oscillator.prototype.syncFrequency = function(){\n\t\tTone.Transport.syncSignal(this.frequency);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Unsync the oscillator's frequency from the Transport.\n\t *  See Tone.Oscillator.syncFrequency\n\t *  @returns {Tone.Oscillator} this\n\t */\n\tTone.Oscillator.prototype.unsyncFrequency = function(){\n\t\tTone.Transport.unsyncSignal(this.frequency);\n\t\treturn this;\n\t};\n\n\t/**\n\t * The type of the oscillator: either sine, square, triangle, or sawtooth. Also capable of\n\t * setting the first x number of partials of the oscillator. For example: \"sine4\" would\n\t * set be the first 4 partials of the sine wave and \"triangle8\" would set the first\n\t * 8 partials of the triangle wave.\n\t * <br><br>\n\t * Uses PeriodicWave internally even for native types so that it can set the phase.\n\t * PeriodicWave equations are from the\n\t * [Webkit Web Audio implementation](https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/modules/webaudio/PeriodicWave.cpp&sq=package:chromium).\n\t *\n\t * @memberOf Tone.Oscillator#\n\t * @type {string}\n\t * @name type\n\t * @example\n\t * //set it to a square wave\n\t * osc.type = \"square\";\n\t * @example\n\t * //set the first 6 partials of a sawtooth wave\n\t * osc.type = \"sawtooth6\";\n\t */\n\tObject.defineProperty(Tone.Oscillator.prototype, \"type\", {\n\t\tget : function(){\n\t\t\treturn this._type;\n\t\t},\n\t\tset : function(type){\n\t\t\tvar coefs = this._getRealImaginary(type, this._phase);\n\t\t\tvar periodicWave = this.context.createPeriodicWave(coefs[0], coefs[1]);\n\t\t\tthis._wave = periodicWave;\n\t\t\tif (this._oscillator !== null){\n\t\t\t\tthis._oscillator.setPeriodicWave(this._wave);\n\t\t\t}\n\t\t\tthis._type = type;\n\t\t}\n\t});\n\n\t/**\n\t * The oscillator type without the partialsCount appended to the end\n\t * @memberOf Tone.Oscillator#\n\t * @type {string}\n\t * @name baseType\n\t * @example\n\t * osc.type = 'sine2'\n\t * osc.baseType //'sine'\n\t * osc.partialCount = 2\n\t */\n\tObject.defineProperty(Tone.Oscillator.prototype, \"baseType\", {\n\t\tget : function(){\n\t\t\treturn this._type.replace(this.partialCount, \"\");\n\t\t},\n\t\tset : function(baseType){\n\t\t\tif (this.partialCount && this._type !== Tone.Oscillator.Type.Custom && baseType !== Tone.Oscillator.Type.Custom){\n\t\t\t\tthis.type = baseType + this.partialCount;\n\t\t\t} else {\n\t\t\t\tthis.type = baseType;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * 'partialCount' offers an alternative way to set the number of used partials. \n\t * When partialCount is 0, the maximum number of partials are used when representing\n\t * the waveform using the periodicWave. When 'partials' is set, this value is \n\t * not settable, but equals the length of the partials array.\n\t * @example\n\t * osc.type = 'sine'\n\t * osc.partialCount = 3\n\t * //is equivalent to\n\t * osc.type = 'sine3'\n\t * @memberOf Tone.Oscillator#\n\t * @type {Number}\n\t * @name partialCount\n\t */\n\tObject.defineProperty(Tone.Oscillator.prototype, \"partialCount\", {\n\t\tget : function(){\n\t\t\treturn this._partialCount;\n\t\t},\n\t\tset : function(p){\n\t\t\tvar type = this._type;\n\t\t\tvar partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n\t\t\tif (partial){\n\t\t\t\ttype = partial[1];\n\t\t\t}\n\t\t\tif (this._type !== Tone.Oscillator.Type.Custom){\n\t\t\t\tif (p === 0){\n\t\t\t\t\tthis.type = type;\n\t\t\t\t} else {\n\t\t\t\t\tthis.type = type + p.toString();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  Get the object's attributes. Given no arguments get\n\t *  will return all available object properties and their corresponding\n\t *  values. \n\t *  @memberOf Tone.Oscillator#\n\t *  @returns {Object}\n\t */\n\tTone.Oscillator.prototype.get = function(){\n\t\tconst values = Tone.prototype.get.apply(this, arguments);\n\t\tif (values.type !== Tone.Oscillator.Type.Custom){\n\t\t\tdelete values.partials;\n\t\t}\n\t\treturn values;\n\t};\n\n\t/**\n\t *  Returns the real and imaginary components based\n\t *  on the oscillator type.\n\t *  @returns {Array} [real, imaginary]\n\t *  @private\n\t */\n\tTone.Oscillator.prototype._getRealImaginary = function(type, phase){\n\t\tvar fftSize = 4096;\n\t\tvar periodicWaveSize = fftSize / 2;\n\n\t\tvar real = new Float32Array(periodicWaveSize);\n\t\tvar imag = new Float32Array(periodicWaveSize);\n\n\t\tvar partialCount = 1;\n\t\tif (type === Tone.Oscillator.Type.Custom){\n\t\t\tpartialCount = this._partials.length + 1;\n\t\t\tthis._partialCount = this._partials.length;\n\t\t\tperiodicWaveSize = partialCount;\n\t\t} else {\n\t\t\tvar partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n\t\t\tif (partial){\n\t\t\t\tpartialCount = parseInt(partial[2]) + 1;\n\t\t\t\tthis._partialCount = parseInt(partial[2]);\n\t\t\t\ttype = partial[1];\n\t\t\t\tpartialCount = Math.max(partialCount, 2);\n\t\t\t\tperiodicWaveSize = partialCount;\n\t\t\t} else {\n\t\t\t\tthis._partialCount = 0;\n\t\t\t}\n\t\t\tthis._partials = [];\n\t\t}\n\n\t\tfor (var n = 1; n < periodicWaveSize; ++n){\n\t\t\tvar piFactor = 2 / (n * Math.PI);\n\t\t\tvar b;\n\t\t\tswitch (type){\n\t\t\t\tcase Tone.Oscillator.Type.Sine:\n\t\t\t\t\tb = (n <= partialCount) ? 1 : 0;\n\t\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tone.Oscillator.Type.Square:\n\t\t\t\t\tb = (n & 1) ? 2 * piFactor : 0;\n\t\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tone.Oscillator.Type.Sawtooth:\n\t\t\t\t\tb = piFactor * ((n & 1) ? 1 : -1);\n\t\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tone.Oscillator.Type.Triangle:\n\t\t\t\t\tif (n & 1){\n\t\t\t\t\t\tb = 2 * (piFactor * piFactor) * ((((n - 1) >> 1) & 1) ? -1 : 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tb = 0;\n\t\t\t\t\t}\n\t\t\t\t\tthis._partials[n-1] = b;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tone.Oscillator.Type.Custom:\n\t\t\t\t\tb = this._partials[n - 1];\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new TypeError(\"Tone.Oscillator: invalid type: \"+type);\n\t\t\t}\n\t\t\tif (b !== 0){\n\t\t\t\treal[n] = -b * Math.sin(phase * n);\n\t\t\t\timag[n] = b * Math.cos(phase * n);\n\t\t\t} else {\n\t\t\t\treal[n] = 0;\n\t\t\t\timag[n] = 0;\n\t\t\t}\n\t\t}\n\t\treturn [real, imag];\n\t};\n\n\t/**\n\t *  Compute the inverse FFT for a given phase.\n\t *  @param  {Float32Array}  real\n\t *  @param  {Float32Array}  imag\n\t *  @param  {NormalRange}  phase\n\t *  @return  {AudioRange}\n\t *  @private\n\t */\n\tTone.Oscillator.prototype._inverseFFT = function(real, imag, phase){\n\t\tvar sum = 0;\n\t\tvar len = real.length;\n\t\tfor (var i = 0; i < len; i++){\n\t\t\tsum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n\t\t}\n\t\treturn sum;\n\t};\n\n\t/**\n\t *  Returns the initial value of the oscillator.\n\t *  @return  {AudioRange}\n\t *  @private\n\t */\n\tTone.Oscillator.prototype._getInitialValue = function(){\n\t\tvar coefs = this._getRealImaginary(this._type, 0);\n\t\tvar real = coefs[0];\n\t\tvar imag = coefs[1];\n\t\tvar maxValue = 0;\n\t\tvar twoPi = Math.PI * 2;\n\t\t//check for peaks in 8 places\n\t\tfor (var i = 0; i < 8; i++){\n\t\t\tmaxValue = Math.max(this._inverseFFT(real, imag, (i / 8) * twoPi), maxValue);\n\t\t}\n\t\treturn -this._inverseFFT(real, imag, this._phase) / maxValue;\n\t};\n\n\t/**\n\t * The partials of the waveform. A partial represents\n\t * the amplitude at a harmonic. The first harmonic is the\n\t * fundamental frequency, the second is the octave and so on\n\t * following the harmonic series.\n\t * Setting this value will automatically set the type to \"custom\".\n\t * The value is an empty array when the type is not \"custom\".\n\t * @memberOf Tone.Oscillator#\n\t * @type {Array}\n\t * @name partials\n\t * @example\n\t * osc.partials = [1, 0.2, 0.01];\n\t */\n\tObject.defineProperty(Tone.Oscillator.prototype, \"partials\", {\n\t\tget : function(){\n\t\t\treturn this._partials;\n\t\t},\n\t\tset : function(partials){\n\t\t\tthis._partials = partials;\n\t\t\tthis.type = Tone.Oscillator.Type.Custom;\n\t\t}\n\t});\n\n\t/**\n\t * The phase of the oscillator in degrees.\n\t * @memberOf Tone.Oscillator#\n\t * @type {Degrees}\n\t * @name phase\n\t * @example\n\t * osc.phase = 180; //flips the phase of the oscillator\n\t */\n\tObject.defineProperty(Tone.Oscillator.prototype, \"phase\", {\n\t\tget : function(){\n\t\t\treturn this._phase * (180 / Math.PI);\n\t\t},\n\t\tset : function(phase){\n\t\t\tthis._phase = phase * Math.PI / 180;\n\t\t\t//reset the type\n\t\t\tthis.type = this._type;\n\t\t}\n\t});\n\n\t/**\n\t *  Dispose and disconnect.\n\t *  @return {Tone.Oscillator} this\n\t */\n\tTone.Oscillator.prototype.dispose = function(){\n\t\tTone.Source.prototype.dispose.call(this);\n\t\tif (this._oscillator !== null){\n\t\t\tthis._oscillator.dispose();\n\t\t\tthis._oscillator = null;\n\t\t}\n\t\tthis._wave = null;\n\t\tthis._writable([\"frequency\", \"detune\"]);\n\t\tthis.frequency.dispose();\n\t\tthis.frequency = null;\n\t\tthis.detune.dispose();\n\t\tthis.detune = null;\n\t\tthis._partials = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Oscillator;\n});\n","define([\"../core/Tone\", \"../core/TransportEvent\", \"../type/Ticks\"], function(Tone){\n\n\t/**\n\t *  @class Tone.TransportRepeatEvent is an internal class used by Tone.Transport\n\t *         to schedule repeat events. This class should not be instantiated directly.\n\t *  @extends {Tone.TransportEvent}\n\t *  @param {Object} options\n\t */\n\tTone.TransportRepeatEvent = function(Transport, options){\n\n\t\tTone.TransportEvent.call(this, Transport, options);\n\t\toptions = Tone.defaultArg(options, Tone.TransportRepeatEvent.defaults);\n\n\t\t/**\n\t\t * When the event should stop repeating\n\t\t * @type {Ticks}\n\t\t * @private\n\t\t */\n\t\tthis.duration = Tone.Ticks(options.duration);\n\n\t\t/**\n\t\t * The interval of the repeated event\n\t\t * @type {Ticks}\n\t\t * @private\n\t\t */\n\t\tthis._interval = Tone.Ticks(options.interval);\n\n\t\t/**\n\t\t * The ID of the current timeline event\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\t\tthis._currentId = -1;\n\n\t\t/**\n\t\t * The ID of the next timeline event\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\t\tthis._nextId = -1;\n\n\t\t/**\n\t\t  * The time of the next event\n\t\t  * @type {Ticks}\n\t\t  * @private\n\t\t  */\n\t\tthis._nextTick = this.time;\n\n\t\t/**\n\t\t * a reference to the bound start method\n\t\t * @type {Function}\n\t\t * @private\n\t\t */\n\t\tthis._boundRestart = this._restart.bind(this);\n\t\tthis.Transport.on(\"start loopStart\", this._boundRestart);\n\t\tthis._restart();\n\t};\n\n\tTone.extend(Tone.TransportRepeatEvent, Tone.TransportEvent);\n\n\t/**\n\t * The defaults\n\t * @static\n\t * @type {Object}\n\t */\n\tTone.TransportRepeatEvent.defaults = {\n\t\t\"duration\" : Infinity,\n\t\t\"interval\" : 1\n\t};\n\n\t/**\n\t * Invoke the callback. Returns the tick time which\n\t * the next event should be scheduled at.\n\t * @param  {Number} time  The AudioContext time in seconds of the event\n\t */\n\tTone.TransportRepeatEvent.prototype.invoke = function(time){\n\t\t//create more events if necessary\n\t\tthis._createEvents(time);\n\t\t//call the super class\n\t\tTone.TransportEvent.prototype.invoke.call(this, time);\n\t};\n\n\t/**\n\t * Push more events onto the timeline to keep up with the position of the timeline\n\t * @private\n\t */\n\tTone.TransportRepeatEvent.prototype._createEvents = function(time){\n\t\t// schedule the next event\n\t\tvar ticks = this.Transport.getTicksAtTime(time);\n\t\tif (ticks >= this.time && ticks >= this._nextTick &&\n\t\tthis._nextTick + this._interval < this.time + this.duration){\n\t\t\tthis._nextTick += this._interval;\n\t\t\tthis._currentId = this._nextId;\n\t\t\tthis._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n\t\t}\n\t};\n\n\t/**\n\t * Push more events onto the timeline to keep up with the position of the timeline\n\t * @private\n\t */\n\tTone.TransportRepeatEvent.prototype._restart = function(time){\n\t\tthis.Transport.clear(this._currentId);\n\t\tthis.Transport.clear(this._nextId);\n\t\tthis._nextTick = this.time;\n\t\tvar ticks = this.Transport.getTicksAtTime(time);\n\t\tif (ticks > this.time){\n\t\t\tthis._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n\t\t}\n\t\tthis._currentId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n\t\tthis._nextTick += this._interval;\n\t\tthis._nextId = this.Transport.scheduleOnce(this.invoke.bind(this), Tone.Ticks(this._nextTick));\n\t};\n\n\t/**\n\t * Clean up\n\t * @return {Tone.TransportRepeatEvent} this\n\t */\n\tTone.TransportRepeatEvent.prototype.dispose = function(){\n\t\tthis.Transport.clear(this._currentId);\n\t\tthis.Transport.clear(this._nextId);\n\t\tthis.Transport.off(\"start loopStart\", this._boundRestart);\n\t\tthis._boundCreateEvents = null;\n\t\tTone.TransportEvent.prototype.dispose.call(this);\n\t\tthis.duration = null;\n\t\tthis._interval = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.TransportRepeatEvent;\n});\n","if(typeof moment === 'undefined') {var e = new Error(\"Cannot find module 'moment'\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = moment;","define([\"../core/Tone\", \"../signal/Signal\", \"../core/Gain\", \"../core/AudioNode\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Tone.Volume is a simple volume node, useful for creating a volume fader.\n\t *\n\t *  @extends {Tone.AudioNode}\n\t *  @constructor\n\t *  @param {Decibels} [volume=0] the initial volume\n\t *  @example\n\t * var vol = new Tone.Volume(-12);\n\t * instrument.chain(vol, Tone.Master);\n\t */\n\tTone.Volume = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"volume\"], Tone.Volume);\n\t\tTone.AudioNode.call(this, options);\n\n\t\t/**\n\t\t * the output node\n\t\t * @type {GainNode}\n\t\t * @private\n\t\t */\n\t\tthis.output = this.input = new Tone.Gain(options.volume, Tone.Type.Decibels);\n\n\t\t/**\n\t\t * The unmuted volume\n\t\t * @type {Decibels}\n\t\t * @private\n\t\t */\n\t\tthis._unmutedVolume = options.volume;\n\n\t\t/**\n\t\t *  The volume control in decibels.\n\t\t *  @type {Decibels}\n\t\t *  @signal\n\t\t */\n\t\tthis.volume = this.output.gain;\n\n\t\tthis._readOnly(\"volume\");\n\n\t\t//set the mute initially\n\t\tthis.mute = options.mute;\n\t};\n\n\tTone.extend(Tone.Volume, Tone.AudioNode);\n\n\t/**\n\t *  Defaults\n\t *  @type  {Object}\n\t *  @const\n\t *  @static\n\t */\n\tTone.Volume.defaults = {\n\t\t\"volume\" : 0,\n\t\t\"mute\" : false\n\t};\n\n\t/**\n\t * Mute the output.\n\t * @memberOf Tone.Volume#\n\t * @type {boolean}\n\t * @name mute\n\t * @example\n\t * //mute the output\n\t * volume.mute = true;\n\t */\n\tObject.defineProperty(Tone.Volume.prototype, \"mute\", {\n\t\tget : function(){\n\t\t\treturn this.volume.value === -Infinity;\n\t\t},\n\t\tset : function(mute){\n\t\t\tif (!this.mute && mute){\n\t\t\t\tthis._unmutedVolume = this.volume.value;\n\t\t\t\t//maybe it should ramp here?\n\t\t\t\tthis.volume.value = -Infinity;\n\t\t\t} else if (this.mute && !mute){\n\t\t\t\tthis.volume.value = this._unmutedVolume;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  clean up\n\t *  @returns {Tone.Volume} this\n\t */\n\tTone.Volume.prototype.dispose = function(){\n\t\tthis.input.dispose();\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis._writable(\"volume\");\n\t\tthis.volume.dispose();\n\t\tthis.volume = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.Volume;\n});\n","define([\"../core/Tone\", \"../core/Buffer\", \"../source/Source\", \"../core/Gain\",\n\t\"../core/AudioNode\"], function(Tone){\n\n\t/**\n\t *  @class Wrapper around the native fire-and-forget OscillatorNode. Adds the\n\t *     ability to reschedule the stop method. ***[Tone.Oscillator](Oscillator) is better \n\t *     for most use-cases***\n\t *  @extends {Tone.AudioNode}\n\t *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n\t *  @param  {Function}  onload  The callback to invoke when the\n\t *                               buffer is done playing.\n\t */\n\tTone.OscillatorNode = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"frequency\", \"type\"], Tone.OscillatorNode);\n\t\tTone.AudioNode.call(this, options);\n\n\t\t/**\n\t\t *  The callback to invoke after the\n\t\t *  buffer source is done playing.\n\t\t *  @type  {Function}\n\t\t */\n\t\tthis.onended = options.onended;\n\n\t\t/**\n\t\t *  The oscillator start time\n\t\t *  @type  {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._startTime = -1;\n\n\t\t/**\n\t\t *  The oscillator stop time\n\t\t *  @type  {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._stopTime = -1;\n\n\t\t/**\n\t\t *  The gain node which envelopes the OscillatorNode\n\t\t *  @type  {Tone.Gain}\n\t\t *  @private\n\t\t */\n\t\tthis._gainNode = this.output = new Tone.Gain(0);\n\n\t\t/**\n\t\t *  The oscillator\n\t\t *  @type  {OscillatorNode}\n\t\t *  @private\n\t\t */\n\t\tthis._oscillator = this.context.createOscillator();\n\t\tthis._oscillator.connect(this._gainNode);\n\t\tthis.type = options.type;\n\n\t\t/**\n\t\t *  The frequency of the oscillator\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = new Tone.Param({\n\t\t\tparam : this._oscillator.frequency, \n\t\t\tunits : Tone.Type.Frequency,\n\t\t\tvalue : options.frequency\n\t\t});\n\n\t\t/**\n\t\t *  The detune of the oscillator\n\t\t *  @type {Frequency}\n\t\t *  @signal\n\t\t */\n\t\tthis.detune = new Tone.Param({\n\t\t\tparam : this._oscillator.detune,\n\t\t\tunits : Tone.Type.Cents,\n\t\t\tvalue : options.detune\n\t\t});\n\n\t\t/**\n\t\t *  The value that the buffer ramps to\n\t\t *  @type {Gain}\n\t\t *  @private\n\t\t */\n\t\tthis._gain = 1;\n\t};\n\n\tTone.extend(Tone.OscillatorNode, Tone.AudioNode);\n\n\t/**\n\t *  The defaults\n\t *  @const\n\t *  @type  {Object}\n\t */\n\tTone.OscillatorNode.defaults = {\n\t\t\"frequency\" : 440,\n\t\t\"detune\" : 0,\n\t\t\"type\" : \"sine\",\n\t\t\"onended\" : Tone.noOp\n\t};\n\n\t/**\n\t *  Returns the playback state of the oscillator, either \"started\" or \"stopped\".\n\t *  @type {Tone.State}\n\t *  @readOnly\n\t *  @memberOf Tone.OscillatorNode#\n\t *  @name state\n\t */\n\tObject.defineProperty(Tone.OscillatorNode.prototype, \"state\", {\n\t\tget : function(){\n\t\t\treturn this.getStateAtTime(this.now());\n\t\t}\n\t});\n\n\t/**\n\t *  Get the playback state at the given time\n\t *  @param  {Time}  time  The time to test the state at\n\t *  @return  {Tone.State}  The playback state. \n\t */\n\tTone.OscillatorNode.prototype.getStateAtTime = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tif (this._startTime !== -1 && time >= this._startTime && (this._stopTime === -1 || time <= this._stopTime)){\n\t\t\treturn Tone.State.Started;\n\t\t} else {\n\t\t\treturn Tone.State.Stopped;\n\t\t}\n\t};\n\n\t/**\n     * Start the oscillator node at the given time\n     * @param  {Time=} time When to start the oscillator\n     * @return {OscillatorNode}      this\n     */\n\tTone.OscillatorNode.prototype.start = function(time){\n\t\tthis.log(\"start\", time);\n\t\tif (this._startTime === -1){\n\t\t\tthis._startTime = this.toSeconds(time);\n\t\t\tthis._oscillator.start(this._startTime);\n\t\t\tthis._gainNode.gain.setValueAtTime(1, this._startTime);\n\t\t} else {\n\t\t\tthrow new Error(\"cannot call OscillatorNode.start more than once\");\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n     * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n     * @param  {PeriodicWave} periodicWave PeriodicWave should be created with context.createPeriodicWave\n     * @return {OscillatorNode} this\n     */\n\tTone.OscillatorNode.prototype.setPeriodicWave = function(periodicWave){\n\t\tthis._oscillator.setPeriodicWave(periodicWave);\n\t\treturn this;\n\t};\n\n\t/**\n     * Stop the oscillator node at the given time\n     * @param  {Time=} time When to stop the oscillator\n     * @return {OscillatorNode}      this\n     */\n\tTone.OscillatorNode.prototype.stop = function(time){\n\t\tthis.log(\"stop\", time);\n\t\tthis.assert(this._startTime !== -1, \"'start' must be called before 'stop'\");\n\t\t//cancel the previous stop\n\t\tthis.cancelStop();\n\t\t//reschedule it\n\t\tthis._stopTime = this.toSeconds(time);\n\t\tif (this._stopTime > this._startTime){\n\t\t\tthis._gainNode.gain.setValueAtTime(0, this._stopTime);\n\t\t\tthis.context.clearTimeout(this._timeout);\n\t\t\tthis._timeout = this.context.setTimeout(function(){\n\t\t\t\tthis._oscillator.stop(this.now());\n\t\t\t\tthis.onended();\n\t\t\t}.bind(this), this._stopTime - this.context.currentTime);\n\t\t} else {\n\t\t\t//cancel the stop envelope\n\t\t\tthis._gainNode.gain.cancelScheduledValues(this._startTime);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Cancel a scheduled stop event\n\t *  @return  {Tone.OscillatorNode}  this\n\t */\n\tTone.OscillatorNode.prototype.cancelStop = function(){\n\t\tif (this._startTime !== -1){\n\t\t\t//cancel the stop envelope\n\t\t\tthis._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime);\n\t\t\tthis.context.clearTimeout(this._timeout);\n\t\t\tthis._stopTime = -1;\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n\t * @memberOf Tone.OscillatorNode#\n\t * @type {Time}\n\t * @name type\n\t */\n\tObject.defineProperty(Tone.OscillatorNode.prototype, \"type\", {\n\t\tget : function(){\n\t\t\treturn this._oscillator.type;\n\t\t},\n\t\tset : function(type){\n\t\t\tthis._oscillator.type = type;\n\t\t}\n\t});\n\n\t/**\n\t *  Clean up.\n\t *  @return  {Tone.OscillatorNode}  this\n\t */\n\tTone.OscillatorNode.prototype.dispose = function(){\n\t\tthis.context.clearTimeout(this._timeout);\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis.onended = null;\n\t\tthis._oscillator.disconnect();\n\t\tthis._oscillator = null;\n\t\tthis._gainNode.dispose();\n\t\tthis._gainNode = null;\n\t\tthis.frequency.dispose();\n\t\tthis.frequency = null;\n\t\tthis.detune.dispose();\n\t\tthis.detune = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.OscillatorNode;\n});\n","define([\"../core/Tone\", \"../type/Ticks\"], function(Tone){\n\n\t/**\n\t *  @class Tone.TransportEvent is an internal class used by (Tone.Transport)[Transport]\n\t *         to schedule events. Do no invoke this class directly, it is\n\t *         handled from within Tone.Transport.\n\t *  @extends {Tone}\n\t *  @param {Object} options\n\t */\n\tTone.TransportEvent = function(Transport, options){\n\n\t\toptions = Tone.defaultArg(options, Tone.TransportEvent.defaults);\n\t\tTone.call(this);\n\n\t\t/**\n\t\t * Reference to the Transport that created it\n\t\t * @type {Tone.Transport}\n\t\t */\n\t\tthis.Transport = Transport;\n\n\t\t/**\n\t\t * The unique id of the event\n\t\t * @type {Number}\n\t\t */\n\t\tthis.id = Tone.TransportEvent._eventId++;\n\n\t\t/**\n\t\t * The time the event starts\n\t\t * @type {Ticks}\n\t\t */\n\t\tthis.time = Tone.Ticks(options.time);\n\n\t\t/**\n\t\t * The callback to invoke\n\t\t * @type {Function}\n\t\t */\n\t\tthis.callback = options.callback;\n\n\t\t/**\n\t\t * If the event should be removed after being created.\n\t\t * @type {Boolean}\n\t\t * @private\n\t\t */\n\t\tthis._once = options.once;\n\t};\n\n\tTone.extend(Tone.TransportEvent);\n\n\t/**\n\t * The defaults\n\t * @static\n\t * @type {Object}\n\t */\n\tTone.TransportEvent.defaults = {\n\t\t\"once\" : false,\n\t\t\"callback\" : Tone.noOp,\n\t};\n\n\t/**\n\t * Current ID counter\n\t * @private\n\t * @static\n\t * @type {Number}\n\t */\n\tTone.TransportEvent._eventId = 0;\n\n\t/**\n\t * Invoke the event callback.\n\t * @param  {Time} time  The AudioContext time in seconds of the event\n\t */\n\tTone.TransportEvent.prototype.invoke = function(time){\n\t\tif (this.callback){\n\t\t\tthis.callback(time);\n\t\t\tif (this._once && this.Transport){\n\t\t\t\tthis.Transport.clear(this.id);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Clean up\n\t * @return {Tone.TransportEvent} this\n\t */\n\tTone.TransportEvent.prototype.dispose = function(){\n\t\tTone.prototype.dispose.call(this);\n\t\tthis.Transport = null;\n\t\tthis.callback = null;\n\t\tthis.time = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.TransportEvent;\n});\n","define([\"../core/Tone\", \"../type/TimeBase\", \"../type/Frequency\"], function(Tone){\n\n\t/**\n\t *  @class Tone.Time is a primitive type for encoding Time values.\n\t *         Tone.Time can be constructed with or without the `new` keyword. Tone.Time can be passed\n\t *         into the parameter of any method which takes time as an argument.\n\t *  @constructor\n\t *  @extends {Tone.TimeBase}\n\t *  @param  {String|Number|Object}  val    The time value.\n\t *  @param  {String=}  units  The units of the value.\n\t *  @example\n\t * var t = Tone.Time(\"4n\");//a quarter note\n\t */\n\tTone.Time = function(val, units){\n\t\tif (this instanceof Tone.Time){\n\n\t\t\tTone.TimeBase.call(this, val, units);\n\n\t\t} else {\n\t\t\treturn new Tone.Time(val, units);\n\t\t}\n\t};\n\n\tTone.extend(Tone.Time, Tone.TimeBase);\n\n\t/**\n\t * Extend the base expressions\n\t */\n\tTone.Time.prototype._expressions = Object.assign({}, Tone.TimeBase.prototype._expressions, {\n\t\t\"quantize\" : {\n\t\t\tregexp : /^@(.+)/,\n\t\t\tmethod : function(capture){\n\t\t\t\tif (Tone.Transport){\n\t\t\t\t\tvar quantTo = new this.constructor(capture);\n\t\t\t\t\treturn this._secondsToUnits(Tone.Transport.nextSubdivision(quantTo));\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"now\" : {\n\t\t\tregexp : /^\\+(.+)/,\n\t\t\tmethod : function(capture){\n\t\t\t\treturn this._now() + (new this.constructor(capture));\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  Quantize the time by the given subdivision. Optionally add a\n\t *  percentage which will move the time value towards the ideal\n\t *  quantized value by that percentage.\n\t *  @param  {Number|Time}  val    The subdivision to quantize to\n\t *  @param  {NormalRange}  [percent=1]  Move the time value\n\t *                                   towards the quantized value by\n\t *                                   a percentage.\n\t *  @return  {Number}  this\n\t *  @example\n\t * Tone.Time(21).quantize(2) //returns 22\n\t * Tone.Time(0.6).quantize(\"4n\", 0.5) //returns 0.55\n\t */\n\tTone.Time.prototype.quantize = function(subdiv, percent){\n\t\tpercent = Tone.defaultArg(percent, 1);\n\t\tvar subdivision = new this.constructor(subdiv);\n\t\tvar value = this.valueOf();\n\t\tvar multiple = Math.round(value / subdivision);\n\t\tvar ideal = multiple * subdivision;\n\t\tvar diff = ideal - value;\n\t\treturn value + diff * percent;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// CONVERSIONS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Convert a Time to Notation. The notation values are will be the\n\t *  closest representation between 1m to 128th note.\n\t *  @return {Notation}\n\t *  @example\n\t * //if the Transport is at 120bpm:\n\t * Tone.Time(2).toNotation();//returns \"1m\"\n\t */\n\tTone.Time.prototype.toNotation = function(){\n\t\tvar time = this.toSeconds();\n\t\tvar testNotations = [\"1m\"];\n\t\tfor (var power = 1; power < 8; power++){\n\t\t\tvar subdiv = Math.pow(2, power);\n\t\t\ttestNotations.push(subdiv + \"n.\");\n\t\t\ttestNotations.push(subdiv + \"n\");\n\t\t\ttestNotations.push(subdiv + \"t\");\n\t\t}\n\t\ttestNotations.push(\"0\");\n\t\t//find the closets notation representation\n\t\tvar closest = testNotations[0];\n\t\tvar closestSeconds = Tone.Time(testNotations[0]).toSeconds();\n\t\ttestNotations.forEach(function(notation){\n\t\t\tvar notationSeconds = Tone.Time(notation).toSeconds();\n\t\t\tif (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)){\n\t\t\t\tclosest = notation;\n\t\t\t\tclosestSeconds = notationSeconds;\n\t\t\t}\n\t\t});\n\t\treturn closest;\n\t};\n\n\t/**\n\t *  Return the time encoded as Bars:Beats:Sixteenths.\n\t *  @return  {BarsBeatsSixteenths}\n\t */\n\tTone.Time.prototype.toBarsBeatsSixteenths = function(){\n\t\tvar quarterTime = this._beatsToUnits(1);\n\t\tvar quarters = this.valueOf() / quarterTime;\n\t\tquarters = parseFloat(quarters.toFixed(4));\n\t\tvar measures = Math.floor(quarters / this._getTimeSignature());\n\t\tvar sixteenths = (quarters % 1) * 4;\n\t\tquarters = Math.floor(quarters) % this._getTimeSignature();\n\t\tsixteenths = sixteenths.toString();\n\t\tif (sixteenths.length > 3){\n\t\t\t// the additional parseFloat removes insignificant trailing zeroes\n\t\t\tsixteenths = parseFloat(parseFloat(sixteenths).toFixed(3));\n\t\t}\n\t\tvar progress = [measures, quarters, sixteenths];\n\t\treturn progress.join(\":\");\n\t};\n\n\t/**\n\t *  Return the time in ticks.\n\t *  @return  {Ticks}\n\t */\n\tTone.Time.prototype.toTicks = function(){\n\t\tvar quarterTime = this._beatsToUnits(1);\n\t\tvar quarters = this.valueOf() / quarterTime;\n\t\treturn Math.round(quarters * this._getPPQ());\n\t};\n\n\t/**\n\t *  Return the time in seconds.\n\t *  @return  {Seconds}\n\t */\n\tTone.Time.prototype.toSeconds = function(){\n\t\treturn this.valueOf();\n\t};\n\n\t/**\n\t *  Return the value as a midi note.\n\t *  @return  {Midi}\n\t */\n\tTone.Time.prototype.toMidi = function(){\n\t\treturn Tone.Frequency.ftom(this.toFrequency());\n\t};\n\n\treturn Tone.Time;\n});\n","define([\"../core/Tone\", \"../source/TickSource\", \"../core/TimelineState\",\n\t\"../core/Emitter\", \"../core/Context\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  A sample accurate clock which provides a callback at the given rate.\n\t *          While the callback is not sample-accurate (it is still susceptible to\n\t *          loose JS timing), the time passed in as the argument to the callback\n\t *          is precise. For most applications, it is better to use Tone.Transport\n\t *          instead of the Clock by itself since you can synchronize multiple callbacks.\n\t *\n\t * \t@constructor\n\t *  @extends {Tone.Emitter}\n\t * \t@param {function} callback The callback to be invoked with the time of the audio event\n\t * \t@param {Frequency} frequency The rate of the callback\n\t * \t@example\n\t * //the callback will be invoked approximately once a second\n\t * //and will print the time exactly once a second apart.\n\t * var clock = new Tone.Clock(function(time){\n\t * \tconsole.log(time);\n\t * }, 1);\n\t */\n\tTone.Clock = function(){\n\n\t\tvar options = Tone.defaults(arguments, [\"callback\", \"frequency\"], Tone.Clock);\n\t\tTone.Emitter.call(this);\n\n\t\t/**\n\t\t *  The callback function to invoke at the scheduled tick.\n\t\t *  @type  {Function}\n\t\t */\n\t\tthis.callback = options.callback;\n\n\t\t/**\n\t\t *  The next time the callback is scheduled.\n\t\t *  @type {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._nextTick = 0;\n\n\t\t/**\n\t\t *  The tick counter\n\t\t *  @type  {Tone.TickSource}\n\t\t *  @private\n\t\t */\n\t\tthis._tickSource = new Tone.TickSource(options.frequency);\n\n\t\t/**\n\t\t *  The last time the loop callback was invoked\n\t\t *  @private\n\t\t *  @type {Number}\n\t\t */\n\t\tthis._lastUpdate = 0;\n\n\t\t/**\n\t\t *  The rate the callback function should be invoked.\n\t\t *  @type  {BPM}\n\t\t *  @signal\n\t\t */\n\t\tthis.frequency = this._tickSource.frequency;\n\t\tthis._readOnly(\"frequency\");\n\n\t\t/**\n\t\t *  The state timeline\n\t\t *  @type {Tone.TimelineState}\n\t\t *  @private\n\t\t */\n\t\tthis._state = new Tone.TimelineState(Tone.State.Stopped);\n\t\t//add an initial state\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, 0);\n\n\t\t/**\n\t\t *  The loop function bound to its context.\n\t\t *  This is necessary to remove the event in the end.\n\t\t *  @type {Function}\n\t\t *  @private\n\t\t */\n\t\tthis._boundLoop = this._loop.bind(this);\n\n\t\t//bind a callback to the worker thread\n\t\tthis.context.on(\"tick\", this._boundLoop);\n\t};\n\n\tTone.extend(Tone.Clock, Tone.Emitter);\n\n\t/**\n\t *  The defaults\n\t *  @const\n\t *  @type  {Object}\n\t */\n\tTone.Clock.defaults = {\n\t\t\"callback\" : Tone.noOp,\n\t\t\"frequency\" : 1,\n\t};\n\n\t/**\n\t *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n\t *  @type {Tone.State}\n\t *  @readOnly\n\t *  @memberOf Tone.Clock#\n\t *  @name state\n\t */\n\tObject.defineProperty(Tone.Clock.prototype, \"state\", {\n\t\tget : function(){\n\t\t\treturn this._state.getValueAtTime(this.now());\n\t\t}\n\t});\n\n\t/**\n\t *  Start the clock at the given time. Optionally pass in an offset\n\t *  of where to start the tick counter from.\n\t *  @param  {Time=}  time    The time the clock should start\n\t *  @param  {Ticks=}  offset  Where the tick counter starts counting from.\n\t *  @return  {Tone.Clock}  this\n\t */\n\tTone.Clock.prototype.start = function(time, offset){\n\t\t//make sure the context is started\n\t\tthis.context.resume();\n\t\t//start the loop\n\t\ttime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(time) !== Tone.State.Started){\n\t\t\tthis._state.setStateAtTime(Tone.State.Started, time);\n\t\t\tthis._tickSource.start(time, offset);\n\t\t\tif (time < this._lastUpdate){\n\t\t\t\tthis.emit(\"start\", time, offset);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Stop the clock. Stopping the clock resets the tick counter to 0.\n\t *  @param {Time} [time=now] The time when the clock should stop.\n\t *  @returns {Tone.Clock} this\n\t *  @example\n\t * clock.stop();\n\t */\n\tTone.Clock.prototype.stop = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tthis._state.cancel(time);\n\t\tthis._state.setStateAtTime(Tone.State.Stopped, time);\n\t\tthis._tickSource.stop(time);\n\t\tif (time < this._lastUpdate){\n\t\t\tthis.emit(\"stop\", time);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Pause the clock. Pausing does not reset the tick counter.\n\t *  @param {Time} [time=now] The time when the clock should stop.\n\t *  @returns {Tone.Clock} this\n\t */\n\tTone.Clock.prototype.pause = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tif (this._state.getValueAtTime(time) === Tone.State.Started){\n\t\t\tthis._state.setStateAtTime(Tone.State.Paused, time);\n\t\t\tthis._tickSource.pause(time);\n\t\t\tif (time < this._lastUpdate){\n\t\t\t\tthis.emit(\"pause\", time);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  The number of times the callback was invoked. Starts counting at 0\n\t *  and increments after the callback was invoked.\n\t *  @type {Ticks}\n\t */\n\tObject.defineProperty(Tone.Clock.prototype, \"ticks\", {\n\t\tget : function(){\n\t\t\treturn Math.ceil(this.getTicksAtTime(this.now()));\n\t\t},\n\t\tset : function(t){\n\t\t\tthis._tickSource.ticks = t;\n\t\t}\n\t});\n\n\t/**\n\t *  The time since ticks=0 that the Clock has been running. Accounts\n\t *  for tempo curves\n\t *  @type {Seconds}\n\t */\n\tObject.defineProperty(Tone.Clock.prototype, \"seconds\", {\n\t\tget : function(){\n\t\t\treturn this._tickSource.seconds;\n\t\t},\n\t\tset : function(s){\n\t\t\tthis._tickSource.seconds = s;\n\t\t}\n\t});\n\n\t/**\n\t *  Return the elapsed seconds at the given time.\n\t *  @param  {Time}  time  When to get the elapsed seconds\n\t *  @return  {Seconds}  The number of elapsed seconds\n\t */\n\tTone.Clock.prototype.getSecondsAtTime = function(time){\n\t\treturn this._tickSource.getSecondsAtTime(time);\n\t};\n\n\t/**\n\t * Set the clock's ticks at the given time.\n\t * @param  {Ticks} ticks The tick value to set\n\t * @param  {Time} time  When to set the tick value\n\t * @return {Tone.Clock}       this\n\t */\n\tTone.Clock.prototype.setTicksAtTime = function(ticks, time){\n\t\tthis._tickSource.setTicksAtTime(ticks, time);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Get the clock's ticks at the given time.\n\t * @param  {Time} time  When to get the tick value\n\t * @return {Ticks}       The tick value at the given time.\n\t */\n\tTone.Clock.prototype.getTicksAtTime = function(time){\n\t\treturn this._tickSource.getTicksAtTime(time);\n\t};\n\n\t/**\n\t * Get the time of the next tick\n\t * @param  {Ticks} ticks The tick number.\n\t * @param  {Time} before \n\t * @return {Tone.Clock}       this\n\t */\n\tTone.Clock.prototype.nextTickTime = function(offset, when){\n\t\twhen = this.toSeconds(when);\n\t\tvar currentTick = this.getTicksAtTime(when);\n\t\treturn this._tickSource.getTimeOfTick(currentTick+offset, when);\n\t};\n\n\t/**\n\t *  The scheduling loop.\n\t *  @private\n\t */\n\tTone.Clock.prototype._loop = function(){\n\n\t\tvar startTime = this._lastUpdate;\n\t\tvar endTime = this.now();\n\t\tthis._lastUpdate = endTime;\n\n\t\tif (startTime !== endTime){\n\t\t\t//the state change events\n\t\t\tthis._state.forEachBetween(startTime, endTime, function(e){\n\t\t\t\tswitch (e.state){\n\t\t\t\t\tcase Tone.State.Started : \n\t\t\t\t\t\tvar offset = this._tickSource.getTicksAtTime(e.time);\n\t\t\t\t\t\tthis.emit(\"start\", e.time, offset);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Tone.State.Stopped : \n\t\t\t\t\t\tif (e.time !== 0){\n\t\t\t\t\t\t\tthis.emit(\"stop\", e.time);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Tone.State.Paused :\n\t\t\t\t\t\tthis.emit(\"pause\", e.time); \n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t\t//the tick callbacks\n\t\t\tthis._tickSource.forEachTickBetween(startTime, endTime, function(time, ticks){\n\t\t\t\tthis.callback(time, ticks);\n\t\t\t}.bind(this));\n\t\t}\n\t};\n\n\t/**\n\t *  Returns the scheduled state at the given time.\n\t *  @param  {Time}  time  The time to query.\n\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t *  @example\n\t * clock.start(\"+0.1\");\n\t * clock.getStateAtTime(\"+0.1\"); //returns \"started\"\n\t */\n\tTone.Clock.prototype.getStateAtTime = function(time){\n\t\ttime = this.toSeconds(time);\n\t\treturn this._state.getValueAtTime(time);\n\t};\n\n\t/**\n\t *  Clean up\n\t *  @returns {Tone.Clock} this\n\t */\n\tTone.Clock.prototype.dispose = function(){\n\t\tTone.Emitter.prototype.dispose.call(this);\n\t\tthis.context.off(\"tick\", this._boundLoop);\n\t\tthis._writable(\"frequency\");\n\t\tthis._tickSource.dispose();\n\t\tthis._tickSource = null;\n\t\tthis.frequency = null;\n\t\tthis._boundLoop = null;\n\t\tthis._nextTick = Infinity;\n\t\tthis.callback = null;\n\t\tthis._state.dispose();\n\t\tthis._state = null;\n\t};\n\n\treturn Tone.Clock;\n});\n","define([\"../core/Tone\", \"../component/Volume\", \"../core/Context\", \"../core/AudioNode\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  A single master output which is connected to the\n\t *          AudioDestinationNode (aka your speakers).\n\t *          It provides useful conveniences such as the ability\n\t *          to set the volume and mute the entire application.\n\t *          It also gives you the ability to apply master effects to your application.\n\t *          <br><br>\n\t *          Like Tone.Transport, A single Tone.Master is created\n\t *          on initialization and you do not need to explicitly construct one.\n\t *\n\t *  @constructor\n\t *  @extends {Tone}\n\t *  @singleton\n\t *  @example\n\t * //the audio will go from the oscillator to the speakers\n\t * oscillator.connect(Tone.Master);\n\t * //a convenience for connecting to the master output is also provided:\n\t * oscillator.toMaster();\n\t * //the above two examples are equivalent.\n\t */\n\tTone.Master = function(){\n\n\t\tTone.AudioNode.call(this);\n\t\tTone.getContext(function(){\n\t\t\tthis.createInsOuts(1, 0);\n\n\t\t\t/**\n\t\t\t *  The private volume node\n\t\t\t *  @type  {Tone.Volume}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._volume = this.output = new Tone.Volume();\n\n\t\t\t/**\n\t\t\t * The volume of the master output.\n\t\t\t * @type {Decibels}\n\t\t\t * @signal\n\t\t\t */\n\t\t\tthis.volume = this._volume.volume;\n\n\t\t\tthis._readOnly(\"volume\");\n\t\t\t//connections\n\t\t\tthis.input.chain(this.output, this.context.destination);\n\n\t\t\t//master is a singleton so it adds itself to the context\n\t\t\tthis.context.master = this;\n\t\t}.bind(this));\n\t};\n\n\tTone.extend(Tone.Master, Tone.AudioNode);\n\n\t/**\n\t *  @type {Object}\n\t *  @const\n\t */\n\tTone.Master.defaults = {\n\t\t\"volume\" : 0,\n\t\t\"mute\" : false\n\t};\n\n\t/**\n\t * Is an instanceof Tone.Master\n\t * @type {Boolean}\n\t */\n\tTone.Master.prototype.isMaster = true;\n\n\t/**\n\t * Mute the output.\n\t * @memberOf Tone.Master#\n\t * @type {boolean}\n\t * @name mute\n\t * @example\n\t * //mute the output\n\t * Tone.Master.mute = true;\n\t */\n\tObject.defineProperty(Tone.Master.prototype, \"mute\", {\n\t\tget : function(){\n\t\t\treturn this._volume.mute;\n\t\t},\n\t\tset : function(mute){\n\t\t\tthis._volume.mute = mute;\n\t\t}\n\t});\n\n\t/**\n\t *  Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n\t *  chained in the master effects chain.\n\t *  @param {AudioNode|Tone} args... All arguments will be connected in a row\n\t *                                  and the Master will be routed through it.\n\t *  @return  {Tone.Master}  this\n\t *  @example\n\t * //some overall compression to keep the levels in check\n\t * var masterCompressor = new Tone.Compressor({\n\t * \t\"threshold\" : -6,\n\t * \t\"ratio\" : 3,\n\t * \t\"attack\" : 0.5,\n\t * \t\"release\" : 0.1\n\t * });\n\t * //give a little boost to the lows\n\t * var lowBump = new Tone.Filter(200, \"lowshelf\");\n\t * //route everything through the filter\n\t * //and compressor before going to the speakers\n\t * Tone.Master.chain(lowBump, masterCompressor);\n\t */\n\tTone.Master.prototype.chain = function(){\n\t\tthis.input.disconnect();\n\t\tthis.input.chain.apply(this.input, arguments);\n\t\targuments[arguments.length - 1].connect(this.output);\n\t};\n\n\t/**\n\t *  Clean up\n\t *  @return  {Tone.Master}  this\n\t */\n\tTone.Master.prototype.dispose = function(){\n\t\tTone.AudioNode.prototype.dispose.call(this);\n\t\tthis._writable(\"volume\");\n\t\tthis._volume.dispose();\n\t\tthis._volume = null;\n\t\tthis.volume = null;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tAUGMENT TONE's PROTOTYPE\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Connect 'this' to the master output. Shorthand for this.connect(Tone.Master)\n\t *  @returns {Tone.AudioNode} this\n\t *  @example\n\t * //connect an oscillator to the master output\n\t * var osc = new Tone.Oscillator().toMaster();\n\t */\n\tTone.AudioNode.prototype.toMaster = function(){\n\t\tthis.connect(this.context.master);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  initialize the module and listen for new audio contexts\n\t */\n\tvar MasterConstructor = Tone.Master;\n\tTone.Master = new MasterConstructor();\n\n\tTone.Context.on(\"init\", function(context){\n\t\t// if it already exists, just restore it\n\t\tif (context.master && context.master.isMaster){\n\t\t\tTone.Master = context.master;\n\t\t} else {\n\t\t\tTone.Master = new MasterConstructor();\n\t\t}\n\t});\n\n\tTone.Context.on(\"close\", function(context){\n\t\tif (context.master && context.master.isMaster){\n\t\t\tcontext.master.dispose();\n\t\t}\n\t});\n\n\treturn Tone.Master;\n});\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","define([\"../core/Tone\"], function(Tone){\n\n\t/**\n\t *  @class Tone.TimeBase is a flexible encoding of time\n\t *         which can be evaluated to and from a string.\n\t *  @extends {Tone}\n\t *  @param  {Time}  val    The time value as a number, string or object\n\t *  @param  {String=}  units  Unit values\n\t *  @example\n\t * Tone.TimeBase(4, \"n\")\n\t * Tone.TimeBase(2, \"t\")\n\t * Tone.TimeBase(\"2t\")\n\t * Tone.TimeBase({\"2t\" : 2})\n\t * Tone.TimeBase(\"2t\") + Tone.TimeBase(\"4n\");\n\t */\n\tTone.TimeBase = function(val, units){\n\n\t\t//allows it to be constructed with or without 'new'\n\t\tif (this instanceof Tone.TimeBase){\n\n\t\t\t/**\n\t\t\t *  The value\n\t\t\t *  @type  {Number|String|Tone.TimeBase}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._val = val;\n\n\t\t\t/**\n\t\t\t * The units\n\t\t\t * @type {String?}\n\t\t\t * @private\n\t\t\t */\n\t\t\tthis._units = units;\n\n\t\t\t//test if the value is a string representation of a number\n\t\t\tif (Tone.isUndef(this._units) && Tone.isString(this._val) &&\n\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\tparseFloat(this._val) == this._val && this._val.charAt(0) !== \"+\"){\n\t\t\t\tthis._val = parseFloat(this._val);\n\t\t\t\tthis._units = this._defaultUnits;\n\t\t\t} else if (val && val.constructor === this.constructor){\n\t\t\t\t//if they're the same type, just copy values over\n\t\t\t\tthis._val = val._val;\n\t\t\t\tthis._units = val._units;\n\t\t\t} else if (val instanceof Tone.TimeBase){\n\t\t\t\tswitch (this._defaultUnits){\n\t\t\t\t\tcase \"s\" :\n\t\t\t\t\t\tthis._val = val.toSeconds();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"i\" :\n\t\t\t\t\t\tthis._val = val.toTicks();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"hz\" :\n\t\t\t\t\t\tthis._val = val.toFrequency();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"midi\" :\n\t\t\t\t\t\tthis._val = val.toMidi();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault :\n\t\t\t\t\t\tthrow new Error(\"Unrecognized default units \"+this._defaultUnits);\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn new Tone.TimeBase(val, units);\n\t\t}\n\t};\n\n\tTone.extend(Tone.TimeBase);\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tABSTRACT SYNTAX TREE PARSER\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  All the primary expressions.\n\t *  @private\n\t *  @type  {Object}\n\t */\n\tTone.TimeBase.prototype._expressions = {\n\t\t\"n\" : {\n\t\t\tregexp : /^(\\d+)n(\\.?)$/i,\n\t\t\tmethod : function(value, dot){\n\t\t\t\tvalue = parseInt(value);\n\t\t\t\tvar scalar = dot === \".\" ? 1.5 : 1;\n\t\t\t\tif (value === 1){\n\t\t\t\t\treturn this._beatsToUnits(this._getTimeSignature())*scalar;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._beatsToUnits(4 / value)*scalar;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"t\" : {\n\t\t\tregexp : /^(\\d+)t$/i,\n\t\t\tmethod : function(value){\n\t\t\t\tvalue = parseInt(value);\n\t\t\t\treturn this._beatsToUnits(8 / (parseInt(value) * 3));\n\t\t\t}\n\t\t},\n\t\t\"m\" : {\n\t\t\tregexp : /^(\\d+)m$/i,\n\t\t\tmethod : function(value){\n\t\t\t\treturn this._beatsToUnits(parseInt(value) * this._getTimeSignature());\n\t\t\t}\n\t\t},\n\t\t\"i\" : {\n\t\t\tregexp : /^(\\d+)i$/i,\n\t\t\tmethod : function(value){\n\t\t\t\treturn this._ticksToUnits(parseInt(value));\n\t\t\t}\n\t\t},\n\t\t\"hz\" : {\n\t\t\tregexp : /^(\\d+(?:\\.\\d+)?)hz$/i,\n\t\t\tmethod : function(value){\n\t\t\t\treturn this._frequencyToUnits(parseFloat(value));\n\t\t\t}\n\t\t},\n\t\t\"tr\" : {\n\t\t\tregexp : /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/,\n\t\t\tmethod : function(m, q, s){\n\t\t\t\tvar total = 0;\n\t\t\t\tif (m && m !== \"0\"){\n\t\t\t\t\ttotal += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n\t\t\t\t}\n\t\t\t\tif (q && q !== \"0\"){\n\t\t\t\t\ttotal += this._beatsToUnits(parseFloat(q));\n\t\t\t\t}\n\t\t\t\tif (s && s !== \"0\"){\n\t\t\t\t\ttotal += this._beatsToUnits(parseFloat(s) / 4);\n\t\t\t\t}\n\t\t\t\treturn total;\n\t\t\t}\n\t\t},\n\t\t\"s\" : {\n\t\t\tregexp : /^(\\d+(?:\\.\\d+)?)s$/,\n\t\t\tmethod : function(value){\n\t\t\t\treturn this._secondsToUnits(parseFloat(value));\n\t\t\t}\n\t\t},\n\t\t\"samples\" : {\n\t\t\tregexp : /^(\\d+)samples$/,\n\t\t\tmethod : function(value){\n\t\t\t\treturn parseInt(value) / this.context.sampleRate;\n\t\t\t}\n\t\t},\n\t\t\"default\" : {\n\t\t\tregexp : /^(\\d+(?:\\.\\d+)?)$/,\n\t\t\tmethod : function(value){\n\t\t\t\treturn this._expressions[this._defaultUnits].method.call(this, value);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t *  The default units if none are given.\n\t *  @type {String}\n\t *  @private\n\t */\n\tTone.TimeBase.prototype._defaultUnits = \"s\";\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tTRANSPORT FALLBACKS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t * Return the bpm, or 120 if Transport is not available\n\t * @type {Number}\n\t * @private\n\t */\n\tTone.TimeBase.prototype._getBpm = function(){\n\t\tif (Tone.Transport){\n\t\t\treturn Tone.Transport.bpm.value;\n\t\t} else {\n\t\t\treturn 120;\n\t\t}\n\t};\n\n\t/**\n\t * Return the timeSignature or 4 if Transport is not available\n\t * @type {Number}\n\t * @private\n\t */\n\tTone.TimeBase.prototype._getTimeSignature = function(){\n\t\tif (Tone.Transport){\n\t\t\treturn Tone.Transport.timeSignature;\n\t\t} else {\n\t\t\treturn 4;\n\t\t}\n\t};\n\n\t/**\n\t * Return the PPQ or 192 if Transport is not available\n\t * @type {Number}\n\t * @private\n\t */\n\tTone.TimeBase.prototype._getPPQ = function(){\n\t\tif (Tone.Transport){\n\t\t\treturn Tone.Transport.PPQ;\n\t\t} else {\n\t\t\treturn 192;\n\t\t}\n\t};\n\n\t/**\n\t * Return the current time in whichever context is relevant\n\t * @type {Number}\n\t * @private\n\t */\n\tTone.TimeBase.prototype._now = function(){\n\t\treturn this.now();\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tUNIT CONVERSIONS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Returns the value of a frequency in the current units\n\t *  @param {Frequency} freq\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.TimeBase.prototype._frequencyToUnits = function(freq){\n\t\treturn 1/freq;\n\t};\n\n\t/**\n\t *  Return the value of the beats in the current units\n\t *  @param {Number} beats\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.TimeBase.prototype._beatsToUnits = function(beats){\n\t\treturn (60 / this._getBpm()) * beats;\n\t};\n\n\t/**\n\t *  Returns the value of a second in the current units\n\t *  @param {Seconds} seconds\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.TimeBase.prototype._secondsToUnits = function(seconds){\n\t\treturn seconds;\n\t};\n\n\t/**\n\t *  Returns the value of a tick in the current time units\n\t *  @param {Ticks} ticks\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.TimeBase.prototype._ticksToUnits = function(ticks){\n\t\treturn ticks * (this._beatsToUnits(1) / this._getPPQ());\n\t};\n\n\t/**\n\t * With no arguments, return 'now'\n\t *  @return  {Number}\n\t *  @private\n\t */\n\tTone.TimeBase.prototype._noArg = function(){\n\t\treturn this._now();\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t//\tEXPRESSIONS\n\t///////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Evaluate the time value. Returns the time\n\t *  in seconds.\n\t *  @return  {Seconds}\n\t */\n\tTone.TimeBase.prototype.valueOf = function(){\n\t\tif (Tone.isUndef(this._val)){\n\t\t\treturn this._noArg();\n\t\t} else if (Tone.isString(this._val) && Tone.isUndef(this._units)){\n\t\t\tfor (var units in this._expressions){\n\t\t\t\tif (this._expressions[units].regexp.test(this._val.trim())){\n\t\t\t\t\tthis._units = units;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (Tone.isObject(this._val)){\n\t\t\tvar total = 0;\n\t\t\tfor (var typeName in this._val){\n\t\t\t\tvar quantity = this._val[typeName];\n\t\t\t\tvar time = (new this.constructor(typeName)).valueOf() * quantity;\n\t\t\t\ttotal += time;\n\t\t\t}\n\t\t\treturn total;\n\t\t}\n\t\tif (Tone.isDefined(this._units)){\n\t\t\tvar expr = this._expressions[this._units];\n\t\t\tvar matching = this._val.toString().trim().match(expr.regexp);\n\t\t\tif (matching){\n\t\t\t\treturn expr.method.apply(this, matching.slice(1));\n\t\t\t} else {\n\t\t\t\treturn expr.method.call(this, parseFloat(this._val));\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._val;\n\t\t}\n\t};\n\n\t/**\n\t *  Return the value in seconds\n\t *  @return {Seconds}\n\t */\n\tTone.TimeBase.prototype.toSeconds = function(){\n\t\treturn this.valueOf();\n\t};\n\n\t/**\n\t *  Return the value in hertz\n\t *  @return {Frequency}\n\t */\n\tTone.TimeBase.prototype.toFrequency = function(){\n\t\treturn 1 / this.toSeconds();\n\t};\n\n\t/**\n\t *  Return the time in samples\n\t *  @return  {Samples}\n\t */\n\tTone.TimeBase.prototype.toSamples = function(){\n\t\treturn this.toSeconds() * this.context.sampleRate;\n\t};\n\n\t/**\n\t *  Return the time in milliseconds.\n\t *  @return  {Milliseconds}\n\t */\n\tTone.TimeBase.prototype.toMilliseconds = function(){\n\t\treturn this.toSeconds() * 1000;\n\t};\n\n\t/**\n\t *  Clean up\n\t *  @return {Tone.TimeBase} this\n\t */\n\tTone.TimeBase.prototype.dispose = function(){\n\t\tthis._val = null;\n\t\tthis._units = null;\n\t};\n\n\treturn Tone.TimeBase;\n});\n","define([\"../core/Tone\", \"../core/Timeline\", \"../type/Type\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  A Timeline State. Provides the methods: <code>setStateAtTime(\"state\", time)</code>\n\t *          and <code>getValueAtTime(time)</code>.\n\t *\n\t *  @extends {Tone.Timeline}\n\t *  @param {String} initial The initial state of the TimelineState. \n\t *                          Defaults to <code>undefined</code>\n\t */\n\tTone.TimelineState = function(initial){\n\n\t\tTone.Timeline.call(this);\n\n\t\t/**\n\t\t *  The initial state\n\t\t *  @private\n\t\t *  @type {String}\n\t\t */\n\t\tthis._initial = initial;\n\t};\n\n\tTone.extend(Tone.TimelineState, Tone.Timeline);\n\n\t/**\n\t *  Returns the scheduled state scheduled before or at\n\t *  the given time.\n\t *  @param  {Number}  time  The time to query.\n\t *  @return  {String}  The name of the state input in setStateAtTime.\n\t */\n\tTone.TimelineState.prototype.getValueAtTime = function(time){\n\t\tvar event = this.get(time);\n\t\tif (event !== null){\n\t\t\treturn event.state;\n\t\t} else {\n\t\t\treturn this._initial;\n\t\t}\n\t};\n\n\t/**\n\t *  Add a state to the timeline.\n\t *  @param  {String}  state The name of the state to set.\n\t *  @param  {Number}  time  The time to query.\n\t *  @returns {Tone.TimelineState} this\n\t */\n\tTone.TimelineState.prototype.setStateAtTime = function(state, time){\n\t\t//all state changes need to be >= the previous state time\n\t\t//TODO throw error if time < the previous event time\n\t\tthis.add({\n\t\t\t\"state\" : state,\n\t\t\t\"time\" : time\n\t\t});\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Return the event before the time with the given state\n\t *  @param {Tone.State} state The state to look for\n\t *  @param  {Time}  time  When to check before\t\t\t\n\t *  @return  {Object}  The event with the given state before the time\n\t */\n\tTone.TimelineState.prototype.getLastState = function(state, time){\n\t\ttime = this.toSeconds(time);\n\t\tvar index = this._search(time);\n\t\tfor (var i = index; i >= 0; i--){\n\t\t\tvar event = this._timeline[i];\n\t\t\tif (event.state === state){\n\t\t\t\treturn event;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t *  Return the event after the time with the given state\n\t *  @param {Tone.State} state The state to look for\n\t *  @param  {Time}  time  When to check from\n\t *  @return  {Object}  The event with the given state after the time\n\t */\n\tTone.TimelineState.prototype.getNextState = function(state, time){\n\t\ttime = this.toSeconds(time);\n\t\tvar index = this._search(time);\n\t\tif (index !== -1){\n\t\t\tfor (var i = index; i < this._timeline.length; i++){\n\t\t\t\tvar event = this._timeline[i];\n\t\t\t\tif (event.state === state){\n\t\t\t\t\treturn event;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn Tone.TimelineState;\n});\n","define([\"../core/Tone\", \"../core/Clock\", \"../type/Type\", \"../core/Timeline\",\n\t\"../core/Emitter\", \"../core/Gain\", \"../core/IntervalTimeline\",\n\t\"../core/TransportRepeatEvent\", \"../core/TransportEvent\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class  Transport for timing musical events.\n\t *          Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n\t *          Tone.Transport timing events pass in the exact time of the scheduled event\n\t *          in the argument of the callback function. Pass that time value to the object\n\t *          you're scheduling. <br><br>\n\t *          A single transport is created for you when the library is initialized.\n\t *          <br><br>\n\t *          The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n\t *          called with the time of that event as the argument.\n\t *\n\t *  @extends {Tone.Emitter}\n\t *  @singleton\n\t *  @example\n\t * //repeated event every 8th note\n\t * Tone.Transport.scheduleRepeat(function(time){\n\t * \t//do something with the time\n\t * }, \"8n\");\n\t *  @example\n\t * //schedule an event on the 16th measure\n\t * Tone.Transport.schedule(function(time){\n\t * \t//do something with the time\n\t * }, \"16:0:0\");\n\t */\n\tTone.Transport = function(){\n\n\t\tTone.Emitter.call(this);\n\n\t\tTone.getContext(function(){\n\n\t\t\t///////////////////////////////////////////////////////////////////////\n\t\t\t//\tLOOPING\n\t\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t\t/**\n\t\t\t * \tIf the transport loops or not.\n\t\t\t *  @type {boolean}\n\t\t\t */\n\t\t\tthis.loop = false;\n\n\t\t\t/**\n\t\t\t * \tThe loop start position in ticks\n\t\t\t *  @type {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._loopStart = 0;\n\n\t\t\t/**\n\t\t\t * \tThe loop end position in ticks\n\t\t\t *  @type {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._loopEnd = 0;\n\n\t\t\t///////////////////////////////////////////////////////////////////////\n\t\t\t//\tCLOCK/TEMPO\n\t\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t\t/**\n\t\t\t *  Pulses per quarter is the number of ticks per quarter note.\n\t\t\t *  @private\n\t\t\t *  @type  {Number}\n\t\t\t */\n\t\t\tthis._ppq = TransportConstructor.defaults.PPQ;\n\n\t\t\t/**\n\t\t\t *  watches the main oscillator for timing ticks\n\t\t\t *  initially starts at 120bpm\n\t\t\t *  @private\n\t\t\t *  @type {Tone.Clock}\n\t\t\t */\n\t\t\tthis._clock = new Tone.Clock({\n\t\t\t\t\"callback\" : this._processTick.bind(this),\n\t\t\t\t\"frequency\" : 0,\n\t\t\t});\n\n\t\t\tthis._bindClockEvents();\n\n\t\t\t/**\n\t\t\t *  The Beats Per Minute of the Transport.\n\t\t\t *  @type {BPM}\n\t\t\t *  @signal\n\t\t\t *  @example\n\t\t\t * Tone.Transport.bpm.value = 80;\n\t\t\t * //ramp the bpm to 120 over 10 seconds\n\t\t\t * Tone.Transport.bpm.rampTo(120, 10);\n\t\t\t */\n\t\t\tthis.bpm = this._clock.frequency;\n\t\t\tthis.bpm._toUnits = this._toUnits.bind(this);\n\t\t\tthis.bpm._fromUnits = this._fromUnits.bind(this);\n\t\t\tthis.bpm.units = Tone.Type.BPM;\n\t\t\tthis.bpm.value = TransportConstructor.defaults.bpm;\n\t\t\tthis._readOnly(\"bpm\");\n\n\t\t\t/**\n\t\t\t *  The time signature, or more accurately the numerator\n\t\t\t *  of the time signature over a denominator of 4.\n\t\t\t *  @type {Number}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._timeSignature = TransportConstructor.defaults.timeSignature;\n\n\t\t\t///////////////////////////////////////////////////////////////////////\n\t\t\t//\tTIMELINE EVENTS\n\t\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t\t/**\n\t\t\t *  All the events in an object to keep track by ID\n\t\t\t *  @type {Object}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._scheduledEvents = {};\n\n\t\t\t/**\n\t\t\t * \tThe scheduled events.\n\t\t\t *  @type {Tone.Timeline}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._timeline = new Tone.Timeline();\n\n\t\t\t/**\n\t\t\t *  Repeated events\n\t\t\t *  @type {Array}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._repeatedEvents = new Tone.IntervalTimeline();\n\n\t\t\t/**\n\t\t\t *  All of the synced Signals\n\t\t\t *  @private\n\t\t\t *  @type {Array}\n\t\t\t */\n\t\t\tthis._syncedSignals = [];\n\n\t\t\t///////////////////////////////////////////////////////////////////////\n\t\t\t//\tSWING\n\t\t\t//////////////////////////////////////////////////////////////////////\n\n\t\t\t/**\n\t\t\t *  The subdivision of the swing\n\t\t\t *  @type  {Ticks}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._swingTicks = TransportConstructor.defaults.PPQ / 2; //8n\n\n\t\t\t/**\n\t\t\t *  The swing amount\n\t\t\t *  @type {NormalRange}\n\t\t\t *  @private\n\t\t\t */\n\t\t\tthis._swingAmount = 0;\n\n\t\t\t//transport is a singleton so it adds itself to the context\n\t\t\tthis.context.transport = this;\n\n\t\t}.bind(this));\n\t};\n\n\tTone.extend(Tone.Transport, Tone.Emitter);\n\n\t/**\n\t *  the defaults\n\t *  @type {Object}\n\t *  @const\n\t *  @static\n\t */\n\tTone.Transport.defaults = {\n\t\t\"bpm\" : 120,\n\t\t\"swing\" : 0,\n\t\t\"swingSubdivision\" : \"8n\",\n\t\t\"timeSignature\" : 4,\n\t\t\"loopStart\" : 0,\n\t\t\"loopEnd\" : \"4m\",\n\t\t\"PPQ\" : 192\n\t};\n\n\t/**\n\t * Is an instanceof Tone.Transport\n\t * @type {Boolean}\n\t */\n\tTone.Transport.prototype.isTransport = true;\n\n\t///////////////////////////////////////////////////////////////////////////////\n\t//\tTICKS\n\t///////////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  called on every tick\n\t *  @param   {number} tickTime clock relative tick time\n\t *  @private\n\t */\n\tTone.Transport.prototype._processTick = function(tickTime, ticks){\n\t\t//handle swing\n\t\tif (this._swingAmount > 0 &&\n\t\t\tticks % this._ppq !== 0 && //not on a downbeat\n\t\t\tticks % (this._swingTicks * 2) !== 0){\n\t\t\t//add some swing\n\t\t\tvar progress = (ticks % (this._swingTicks * 2)) / (this._swingTicks * 2);\n\t\t\tvar amount = Math.sin((progress) * Math.PI) * this._swingAmount;\n\t\t\ttickTime += Tone.Ticks(this._swingTicks * 2/3).toSeconds() * amount;\n\t\t}\n\t\t//do the loop test\n\t\tif (this.loop){\n\t\t\tif (ticks >= this._loopEnd){\n\t\t\t\tthis.emit(\"loopEnd\", tickTime);\n\t\t\t\tthis._clock.setTicksAtTime(this._loopStart, tickTime);\n\t\t\t\tticks = this._loopStart;\n\t\t\t\tthis.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n\t\t\t\tthis.emit(\"loop\", tickTime);\n\t\t\t}\n\t\t}\n\t\t//invoke the timeline events scheduled on this tick\n\t\tthis._timeline.forEachAtTime(ticks, function(event){\n\t\t\tevent.invoke(tickTime);\n\t\t});\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////////\n\t//\tSCHEDULABLE EVENTS\n\t///////////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Schedule an event along the timeline.\n\t *  @param {Function} callback The callback to be invoked at the time.\n\t *  @param {TransportTime}  time The time to invoke the callback at.\n\t *  @return {Number} The id of the event which can be used for canceling the event.\n\t *  @example\n\t * //trigger the callback when the Transport reaches the desired time\n\t * Tone.Transport.schedule(function(time){\n\t * \tenvelope.triggerAttack(time);\n\t * }, \"128i\");\n\t */\n\tTone.Transport.prototype.schedule = function(callback, time){\n\t\tvar event = new Tone.TransportEvent(this, {\n\t\t\t\"time\" : Tone.TransportTime(time),\n\t\t\t\"callback\" : callback\n\t\t});\n\t\treturn this._addEvent(event, this._timeline);\n\t};\n\n\t/**\n\t *  Schedule a repeated event along the timeline. The event will fire\n\t *  at the `interval` starting at the `startTime` and for the specified\n\t *  `duration`.\n\t *  @param  {Function}  callback   The callback to invoke.\n\t *  @param  {Time}    interval   The duration between successive\n\t *                               callbacks. Must be a positive number.\n\t *  @param  {TransportTime=}    startTime  When along the timeline the events should\n\t *                               start being invoked.\n\t *  @param {Time} [duration=Infinity] How long the event should repeat.\n\t *  @return  {Number}    The ID of the scheduled event. Use this to cancel\n\t *                           the event.\n\t *  @example\n\t * //a callback invoked every eighth note after the first measure\n\t * Tone.Transport.scheduleRepeat(callback, \"8n\", \"1m\");\n\t */\n\tTone.Transport.prototype.scheduleRepeat = function(callback, interval, startTime, duration){\n\t\tvar event = new Tone.TransportRepeatEvent(this, {\n\t\t\t\"callback\" : callback,\n\t\t\t\"interval\" : Tone.Time(interval),\n\t\t\t\"time\" : Tone.TransportTime(startTime),\n\t\t\t\"duration\" : Tone.Time(Tone.defaultArg(duration, Infinity)),\n\t\t});\n\t\t//kick it off if the Transport is started\n\t\treturn this._addEvent(event, this._repeatedEvents);\n\t};\n\n\t/**\n\t *  Schedule an event that will be removed after it is invoked.\n\t *  Note that if the given time is less than the current transport time,\n\t *  the event will be invoked immediately.\n\t *  @param {Function} callback The callback to invoke once.\n\t *  @param {TransportTime} time The time the callback should be invoked.\n\t *  @returns {Number} The ID of the scheduled event.\n\t */\n\tTone.Transport.prototype.scheduleOnce = function(callback, time){\n\t\tvar event = new Tone.TransportEvent(this, {\n\t\t\t\"time\" : Tone.TransportTime(time),\n\t\t\t\"callback\" : callback,\n\t\t\t\"once\" : true\n\t\t});\n\t\treturn this._addEvent(event, this._timeline);\n\t};\n\n\t/**\n\t *  Clear the passed in event id from the timeline\n\t *  @param {Number} eventId The id of the event.\n\t *  @returns {Tone.Transport} this\n\t */\n\tTone.Transport.prototype.clear = function(eventId){\n\t\tif (this._scheduledEvents.hasOwnProperty(eventId)){\n\t\t\tvar item = this._scheduledEvents[eventId.toString()];\n\t\t\titem.timeline.remove(item.event);\n\t\t\titem.event.dispose();\n\t\t\tdelete this._scheduledEvents[eventId.toString()];\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add an event to the correct timeline. Keep track of the\n\t * timeline it was added to.\n\t * @param {Tone.TransportEvent}\tevent\n\t * @param {Tone.Timeline} timeline\n\t * @returns {Number} the event id which was just added\n\t * @private\n\t */\n\tTone.Transport.prototype._addEvent = function(event, timeline){\n\t\tthis._scheduledEvents[event.id.toString()] = {\n\t\t\t\"event\" : event,\n\t\t\t\"timeline\" : timeline\n\t\t};\n\t\ttimeline.add(event);\n\t\treturn event.id;\n\t};\n\n\t/**\n\t *  Remove scheduled events from the timeline after\n\t *  the given time. Repeated events will be removed\n\t *  if their startTime is after the given time\n\t *  @param {TransportTime} [after=0] Clear all events after\n\t *                          this time.\n\t *  @returns {Tone.Transport} this\n\t */\n\tTone.Transport.prototype.cancel = function(after){\n\t\tafter = Tone.defaultArg(after, 0);\n\t\tafter = this.toTicks(after);\n\t\tthis._timeline.forEachFrom(after, function(event){\n\t\t\tthis.clear(event.id);\n\t\t}.bind(this));\n\t\tthis._repeatedEvents.forEachFrom(after, function(event){\n\t\t\tthis.clear(event.id);\n\t\t}.bind(this));\n\t\treturn this;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////////\n\t//\tSTART/STOP/PAUSE\n\t///////////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Bind start/stop/pause events from the clock and emit them.\n\t *  @private\n\t */\n\tTone.Transport.prototype._bindClockEvents = function(){\n\t\tthis._clock.on(\"start\", function(time, offset){\n\t\t\toffset = Tone.Ticks(offset).toSeconds();\n\t\t\tthis.emit(\"start\", time, offset);\n\t\t}.bind(this));\n\n\t\tthis._clock.on(\"stop\", function(time){\n\t\t\tthis.emit(\"stop\", time);\n\t\t}.bind(this));\n\n\t\tthis._clock.on(\"pause\", function(time){\n\t\t\tthis.emit(\"pause\", time);\n\t\t}.bind(this));\n\t};\n\n\t/**\n\t *  Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n\t *  @type {Tone.State}\n\t *  @readOnly\n\t *  @memberOf Tone.Transport#\n\t *  @name state\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"state\", {\n\t\tget : function(){\n\t\t\treturn this._clock.getStateAtTime(this.now());\n\t\t}\n\t});\n\n\t/**\n\t *  Start the transport and all sources synced to the transport.\n\t *  @param  {Time} [time=now] The time when the transport should start.\n\t *  @param  {TransportTime=} offset The timeline offset to start the transport.\n\t *  @returns {Tone.Transport} this\n\t *  @example\n\t * //start the transport in one second starting at beginning of the 5th measure.\n\t * Tone.Transport.start(\"+1\", \"4:0:0\");\n\t */\n\tTone.Transport.prototype.start = function(time, offset){\n\t\t//start the clock\n\t\tif (Tone.isDefined(offset)){\n\t\t\toffset = this.toTicks(offset);\n\t\t}\n\t\tthis._clock.start(time, offset);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Stop the transport and all sources synced to the transport.\n\t *  @param  {Time} [time=now] The time when the transport should stop.\n\t *  @returns {Tone.Transport} this\n\t *  @example\n\t * Tone.Transport.stop();\n\t */\n\tTone.Transport.prototype.stop = function(time){\n\t\tthis._clock.stop(time);\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Pause the transport and all sources synced to the transport.\n\t *  @param  {Time} [time=now]\n\t *  @returns {Tone.Transport} this\n\t */\n\tTone.Transport.prototype.pause = function(time){\n\t\tthis._clock.pause(time);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Toggle the current state of the transport. If it is\n\t * started, it will stop it, otherwise it will start the Transport.\n\t * @param  {Time=} time The time of the event\n\t * @return {Tone.Transport}      this\n\t */\n\tTone.Transport.prototype.toggle = function(time){\n\t\ttime = this.toSeconds(time);\n\t\tif (this._clock.getStateAtTime(time) !== Tone.State.Started){\n\t\t\tthis.start(time);\n\t\t} else {\n\t\t\tthis.stop(time);\n\t\t}\n\t\treturn this;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////////\n\t//\tSETTERS/GETTERS\n\t///////////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  The time signature as just the numerator over 4.\n\t *  For example 4/4 would be just 4 and 6/8 would be 3.\n\t *  @memberOf Tone.Transport#\n\t *  @type {Number|Array}\n\t *  @name timeSignature\n\t *  @example\n\t * //common time\n\t * Tone.Transport.timeSignature = 4;\n\t * // 7/8\n\t * Tone.Transport.timeSignature = [7, 8];\n\t * //this will be reduced to a single number\n\t * Tone.Transport.timeSignature; //returns 3.5\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"timeSignature\", {\n\t\tget : function(){\n\t\t\treturn this._timeSignature;\n\t\t},\n\t\tset : function(timeSig){\n\t\t\tif (Tone.isArray(timeSig)){\n\t\t\t\ttimeSig = (timeSig[0] / timeSig[1]) * 4;\n\t\t\t}\n\t\t\tthis._timeSignature = timeSig;\n\t\t}\n\t});\n\n\t/**\n\t * When the Tone.Transport.loop = true, this is the starting position of the loop.\n\t * @memberOf Tone.Transport#\n\t * @type {Time}\n\t * @name loopStart\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"loopStart\", {\n\t\tget : function(){\n\t\t\treturn Tone.Ticks(this._loopStart).toSeconds();\n\t\t},\n\t\tset : function(startPosition){\n\t\t\tthis._loopStart = this.toTicks(startPosition);\n\t\t}\n\t});\n\n\t/**\n\t * When the Tone.Transport.loop = true, this is the ending position of the loop.\n\t * @memberOf Tone.Transport#\n\t * @type {Time}\n\t * @name loopEnd\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"loopEnd\", {\n\t\tget : function(){\n\t\t\treturn Tone.Ticks(this._loopEnd).toSeconds();\n\t\t},\n\t\tset : function(endPosition){\n\t\t\tthis._loopEnd = this.toTicks(endPosition);\n\t\t}\n\t});\n\n\t/**\n\t *  Set the loop start and stop at the same time.\n\t *  @param {TransportTime} startPosition\n\t *  @param {TransportTime} endPosition\n\t *  @returns {Tone.Transport} this\n\t *  @example\n\t * //loop over the first measure\n\t * Tone.Transport.setLoopPoints(0, \"1m\");\n\t * Tone.Transport.loop = true;\n\t */\n\tTone.Transport.prototype.setLoopPoints = function(startPosition, endPosition){\n\t\tthis.loopStart = startPosition;\n\t\tthis.loopEnd = endPosition;\n\t\treturn this;\n\t};\n\n\t/**\n\t *  The swing value. Between 0-1 where 1 equal to\n\t *  the note + half the subdivision.\n\t *  @memberOf Tone.Transport#\n\t *  @type {NormalRange}\n\t *  @name swing\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"swing\", {\n\t\tget : function(){\n\t\t\treturn this._swingAmount;\n\t\t},\n\t\tset : function(amount){\n\t\t\t//scale the values to a normal range\n\t\t\tthis._swingAmount = amount;\n\t\t}\n\t});\n\n\t/**\n\t *  Set the subdivision which the swing will be applied to.\n\t *  The default value is an 8th note. Value must be less\n\t *  than a quarter note.\n\t *\n\t *  @memberOf Tone.Transport#\n\t *  @type {Time}\n\t *  @name swingSubdivision\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"swingSubdivision\", {\n\t\tget : function(){\n\t\t\treturn Tone.Ticks(this._swingTicks).toNotation();\n\t\t},\n\t\tset : function(subdivision){\n\t\t\tthis._swingTicks = this.toTicks(subdivision);\n\t\t}\n\t});\n\n\t/**\n\t *  The Transport's position in Bars:Beats:Sixteenths.\n\t *  Setting the value will jump to that position right away.\n\t *  @memberOf Tone.Transport#\n\t *  @type {BarsBeatsSixteenths}\n\t *  @name position\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"position\", {\n\t\tget : function(){\n\t\t\tvar now = this.now();\n\t\t\tvar ticks = this._clock.getTicksAtTime(now);\n\t\t\treturn Tone.Ticks(ticks).toBarsBeatsSixteenths();\n\t\t},\n\t\tset : function(progress){\n\t\t\tvar ticks = this.toTicks(progress);\n\t\t\tthis.ticks = ticks;\n\t\t}\n\t});\n\n\t/**\n\t *  The Transport's position in seconds\n\t *  Setting the value will jump to that position right away.\n\t *  @memberOf Tone.Transport#\n\t *  @type {Seconds}\n\t *  @name seconds\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"seconds\", {\n\t\tget : function(){\n\t\t\treturn this._clock.seconds;\n\t\t},\n\t\tset : function(s){\n\t\t\tvar now = this.now();\n\t\t\tvar ticks = this.bpm.timeToTicks(s, now);\n\t\t\tthis.ticks = ticks;\n\t\t}\n\t});\n\n\t/**\n\t *  The Transport's loop position as a normalized value. Always\n\t *  returns 0 if the transport if loop is not true.\n\t *  @memberOf Tone.Transport#\n\t *  @name progress\n\t *  @type {NormalRange}\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"progress\", {\n\t\tget : function(){\n\t\t\tif (this.loop){\n\t\t\t\tvar now = this.now();\n\t\t\t\tvar ticks = this._clock.getTicksAtTime(now);\n\t\t\t\treturn (ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  The transports current tick position.\n\t *\n\t *  @memberOf Tone.Transport#\n\t *  @type {Ticks}\n\t *  @name ticks\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"ticks\", {\n\t\tget : function(){\n\t\t\treturn this._clock.ticks;\n\t\t},\n\t\tset : function(t){\n\t\t\tif (this._clock.ticks !== t){\n\t\t\t\tvar now = this.now();\n\t\t\t\t//stop everything synced to the transport\n\t\t\t\tif (this.state === Tone.State.Started){\n\t\t\t\t\tthis.emit(\"stop\", now);\n\t\t\t\t\tthis._clock.setTicksAtTime(t, now);\n\t\t\t\t\t//restart it with the new time\n\t\t\t\t\tthis.emit(\"start\", now, this.seconds);\n\t\t\t\t} else {\n\t\t\t\t\tthis._clock.setTicksAtTime(t, now);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * Get the clock's ticks at the given time.\n\t * @param  {Time} time  When to get the tick value\n\t * @return {Ticks}       The tick value at the given time.\n\t */\n\tTone.Transport.prototype.getTicksAtTime = function(time){\n\t\treturn Math.round(this._clock.getTicksAtTime(time));\n\t};\n\n\t/**\n\t *  Return the elapsed seconds at the given time.\n\t *  @param  {Time}  time  When to get the elapsed seconds\n\t *  @return  {Seconds}  The number of elapsed seconds\n\t */\n\tTone.Transport.prototype.getSecondsAtTime = function(time){\n\t\treturn this._clock.getSecondsAtTime(time);\n\t};\n\n\t/**\n\t *  Pulses Per Quarter note. This is the smallest resolution\n\t *  the Transport timing supports. This should be set once\n\t *  on initialization and not set again. Changing this value\n\t *  after other objects have been created can cause problems.\n\t *\n\t *  @memberOf Tone.Transport#\n\t *  @type {Number}\n\t *  @name PPQ\n\t */\n\tObject.defineProperty(Tone.Transport.prototype, \"PPQ\", {\n\t\tget : function(){\n\t\t\treturn this._ppq;\n\t\t},\n\t\tset : function(ppq){\n\t\t\tvar bpm = this.bpm.value;\n\t\t\tthis._ppq = ppq;\n\t\t\tthis.bpm.value = bpm;\n\t\t}\n\t});\n\n\t/**\n\t *  Convert from BPM to frequency (factoring in PPQ)\n\t *  @param  {BPM}  bpm The BPM value to convert to frequency\n\t *  @return  {Frequency}  The BPM as a frequency with PPQ factored in.\n\t *  @private\n\t */\n\tTone.Transport.prototype._fromUnits = function(bpm){\n\t\treturn 1 / (60 / bpm / this.PPQ);\n\t};\n\n\t/**\n\t *  Convert from frequency (with PPQ) into BPM\n\t *  @param  {Frequency}  freq The clocks frequency to convert to BPM\n\t *  @return  {BPM}  The frequency value as BPM.\n\t *  @private\n\t */\n\tTone.Transport.prototype._toUnits = function(freq){\n\t\treturn (freq / this.PPQ) * 60;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////////\n\t//\tSYNCING\n\t///////////////////////////////////////////////////////////////////////////////\n\n\t/**\n\t *  Returns the time aligned to the next subdivision\n\t *  of the Transport. If the Transport is not started,\n\t *  it will return 0.\n\t *  Note: this will not work precisely during tempo ramps.\n\t *  @param  {Time}  subdivision  The subdivision to quantize to\n\t *  @return  {Number}  The context time of the next subdivision.\n\t *  @example\n\t * Tone.Transport.start(); //the transport must be started\n\t * Tone.Transport.nextSubdivision(\"4n\");\n\t */\n\tTone.Transport.prototype.nextSubdivision = function(subdivision){\n\t\tsubdivision = this.toTicks(subdivision);\n\t\tif (this.state !== Tone.State.Started){\n\t\t\t//if the transport's not started, return 0\n\t\t\treturn 0;\n\t\t} else {\n\t\t\tvar now = this.now();\n\t\t\t//the remainder of the current ticks and the subdivision\n\t\t\tvar transportPos = this.getTicksAtTime(now);\n\t\t\tvar remainingTicks = subdivision - transportPos % subdivision;\n\t\t\treturn this._clock.nextTickTime(remainingTicks, now);\n\t\t}\n\t};\n\n\t/**\n\t *  Attaches the signal to the tempo control signal so that\n\t *  any changes in the tempo will change the signal in the same\n\t *  ratio.\n\t *\n\t *  @param  {Tone.Signal} signal\n\t *  @param {number=} ratio Optionally pass in the ratio between\n\t *                         the two signals. Otherwise it will be computed\n\t *                         based on their current values.\n\t *  @returns {Tone.Transport} this\n\t */\n\tTone.Transport.prototype.syncSignal = function(signal, ratio){\n\t\tif (!ratio){\n\t\t\t//get the sync ratio\n\t\t\tvar now = this.now();\n\t\t\tif (signal.getValueAtTime(now) !== 0){\n\t\t\t\tratio = signal.getValueAtTime(now) / this.bpm.getValueAtTime(now);\n\t\t\t} else {\n\t\t\t\tratio = 0;\n\t\t\t}\n\t\t}\n\t\tvar ratioSignal = new Tone.Gain(ratio);\n\t\tthis.bpm.chain(ratioSignal, signal._param);\n\t\tthis._syncedSignals.push({\n\t\t\t\"ratio\" : ratioSignal,\n\t\t\t\"signal\" : signal,\n\t\t\t\"initial\" : signal.value\n\t\t});\n\t\tsignal.value = 0;\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Unsyncs a previously synced signal from the transport's control.\n\t *  See Tone.Transport.syncSignal.\n\t *  @param  {Tone.Signal} signal\n\t *  @returns {Tone.Transport} this\n\t */\n\tTone.Transport.prototype.unsyncSignal = function(signal){\n\t\tfor (var i = this._syncedSignals.length - 1; i >= 0; i--){\n\t\t\tvar syncedSignal = this._syncedSignals[i];\n\t\t\tif (syncedSignal.signal === signal){\n\t\t\t\tsyncedSignal.ratio.dispose();\n\t\t\t\tsyncedSignal.signal.value = syncedSignal.initial;\n\t\t\t\tthis._syncedSignals.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t *  Clean up.\n\t *  @returns {Tone.Transport} this\n\t *  @private\n\t */\n\tTone.Transport.prototype.dispose = function(){\n\t\tTone.Emitter.prototype.dispose.call(this);\n\t\tthis._clock.dispose();\n\t\tthis._clock = null;\n\t\tthis._writable(\"bpm\");\n\t\tthis.bpm = null;\n\t\tthis._timeline.dispose();\n\t\tthis._timeline = null;\n\t\tthis._repeatedEvents.dispose();\n\t\tthis._repeatedEvents = null;\n\t\treturn this;\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////////\n\t//\tINITIALIZATION\n\t///////////////////////////////////////////////////////////////////////////////\n\n\tvar TransportConstructor = Tone.Transport;\n\tTone.Transport = new TransportConstructor();\n\n\tTone.Context.on(\"init\", function(context){\n\t\tif (context.transport && context.transport.isTransport){\n\t\t\tTone.Transport = context.transport;\n\t\t} else {\n\t\t\tTone.Transport = new TransportConstructor();\n\t\t}\n\t});\n\n\tTone.Context.on(\"close\", function(context){\n\t\tif (context.transport && context.transport.isTransport){\n\t\t\tcontext.transport.dispose();\n\t\t}\n\t});\n\n\treturn Tone.Transport;\n});\n","define([\"../core/Tone\", \"../shim/OfflineAudioContext\"], function(Tone){\n\n\tif (Tone.supported){\n\t\tif (!Tone.global.hasOwnProperty(\"AudioContext\") && Tone.global.hasOwnProperty(\"webkitAudioContext\")){\n\t\t\tTone.global.AudioContext = Tone.global.webkitAudioContext;\n\t\t}\n\n\t\t//not functionally equivalent, but only an API placeholder\n\t\tif (!AudioContext.prototype.close){\n\t\t\tAudioContext.prototype.close = function(){\n\t\t\t\tif (Tone.isFunction(this.suspend)){\n\t\t\t\t\tthis.suspend();\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve();\n\t\t\t};\n\t\t}\n\n\t\t//not functionally equivalent\n\t\tif (!AudioContext.prototype.resume){\n\t\t\tAudioContext.prototype.resume = function(){\n\t\t\t\t//play some silent audio to jumpstart the context\n\t\t\t\tvar buffer = this.createBuffer(1, 1, this.sampleRate);\n\t\t\t\tvar source = this.createBufferSource();\n\t\t\t\tsource.buffer = buffer;\n\t\t\t\tsource.connect(this.destination);\n\t\t\t\tsource.start(0);\n\t\t\t\treturn Promise.resolve();\n\t\t\t};\n\t\t}\n\n\t\t//createGain\n\t\tif (!AudioContext.prototype.createGain && AudioContext.prototype.createGainNode){\n\t\t\tAudioContext.prototype.createGain = AudioContext.prototype.createGainNode;\n\t\t}\n\n\t\t//createDelay\n\t\tif (!AudioContext.prototype.createDelay && AudioContext.prototype.createDelayNode){\n\t\t\tAudioContext.prototype.createDelay = AudioContext.prototype.createDelayNode;\n\t\t}\n\n\t\t//test decodeAudioData returns a promise\n\t\t// https://github.com/mohayonao/web-audio-api-shim/blob/master/src/AudioContext.js\n\t\t// MIT License (c) 2015 @mohayonao\n\t\tvar decodeAudioDataPromise = false;\n\t\tvar offlineContext = new OfflineAudioContext(1, 1, 44100);\n\t\tvar audioData = new Uint32Array([1179011410, 48, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 8, 0, 0, 0, 0]).buffer;\n\t\ttry {\n\t\t\tvar ret = offlineContext.decodeAudioData(audioData);\n\t\t\tif (ret && Tone.isFunction(ret.then)){\n\t\t\t\tdecodeAudioDataPromise = true;\n\t\t\t}\n\t\t} catch (e){\n\t\t\tdecodeAudioDataPromise = false;\n\t\t}\n\n\t\tif (!decodeAudioDataPromise){\n\t\t\tAudioContext.prototype._native_decodeAudioData = AudioContext.prototype.decodeAudioData;\n\t\t\tAudioContext.prototype.decodeAudioData = function(audioData){\n\t\t\t\treturn new Promise(function(success, error){\n\t\t\t\t\tthis._native_decodeAudioData(audioData, success, error);\n\t\t\t\t}.bind(this));\n\t\t\t};\n\t\t}\n\t}\n});\n","define([\"../core/Tone\", \"../core/Emitter\", \"../core/Timeline\", \"../shim/AudioContext\"], function(Tone){\n\n\t/**\n\t *  @class Wrapper around the native AudioContext.\n\t *  @extends {Tone.Emitter}\n\t *  @param {AudioContext=} context optionally pass in a context\n\t */\n\tTone.Context = function(){\n\n\t\tTone.Emitter.call(this);\n\n\t\tvar options = Tone.defaults(arguments, [\"context\"], Tone.Context);\n\n\t\tif (!options.context){\n\t\t\toptions.context = new Tone.global.AudioContext();\n\t\t\tif (!options.context){\n\t\t\t\tthrow new Error(\"could not create AudioContext. Possibly too many AudioContexts running already.\");\n\t\t\t}\n\t\t}\n\t\tthis._context = options.context;\n\t\t//make sure it's not an AudioContext wrapper\n\t\twhile (this._context.rawContext){\n\t\t\tthis._context = this._context.rawContext;\n\t\t}\n\t\t// extend all of the methods\n\t\tfor (var prop in this._context){\n\t\t\tthis._defineProperty(this._context, prop);\n\t\t}\n\n\t\t/**\n\t\t *  The default latency hint\n\t\t *  @type  {String}\n\t\t *  @private\n\t\t */\n\t\tthis._latencyHint = options.latencyHint;\n\n\t\t/**\n\t\t *  An object containing all of the constants AudioBufferSourceNodes\n\t\t *  @type  {Object}\n\t\t *  @private\n\t\t */\n\t\tthis._constants = {};\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t// WORKER\n\t\t///////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  The amount of time events are scheduled\n\t\t *  into the future\n\t\t *  @type  {Number}\n\t\t */\n\t\tthis.lookAhead = options.lookAhead;\n\n\t\t/**\n\t\t *  A reference to the actual computed update interval\n\t\t *  @type  {Number}\n\t\t *  @private\n\t\t */\n\t\tthis._computedUpdateInterval = 0;\n\n\t\t/**\n\t\t *  A reliable callback method\n\t\t *  @private\n\t\t *  @type  {Ticker}\n\t\t */\n\t\tthis._ticker = new Ticker(this.emit.bind(this, \"tick\"), options.clockSource, options.updateInterval);\n\n\t\t///////////////////////////////////////////////////////////////////////\n\t\t// TIMEOUTS\n\t\t///////////////////////////////////////////////////////////////////////\n\n\t\t/**\n\t\t *  All of the setTimeout events.\n\t\t *  @type  {Tone.Timeline}\n\t\t *  @private\n\t\t */\n\t\tthis._timeouts = new Tone.Timeline();\n\n\t\t/**\n\t\t *  The timeout id counter\n\t\t *  @private\n\t\t *  @type {Number}\n\t\t */\n\t\tthis._timeoutIds = 0;\n\n\t\tthis.on(\"tick\", this._timeoutLoop.bind(this));\n\n\t\t//forward state change events\n\t\tthis._context.onstatechange = function(e){\n\t\t\tthis.emit(\"statechange\", e);\n\t\t}.bind(this);\n\t};\n\n\tTone.extend(Tone.Context, Tone.Emitter);\n\tTone.Emitter.mixin(Tone.Context);\n\n\t/**\n\t * defaults\n\t * @static\n\t * @type {Object}\n\t */\n\tTone.Context.defaults = {\n\t\t\"clockSource\" : \"worker\",\n\t\t\"latencyHint\" : \"interactive\",\n\t\t\"lookAhead\" : 0.1,\n\t\t\"updateInterval\" : 0.03\n\t};\n\n\t/**\n\t * Is an instanceof Tone.Context\n\t * @type {Boolean}\n\t */\n\tTone.Context.prototype.isContext = true;\n\n\t/**\n\t *  Define a property on this Tone.Context.\n\t *  This is used to extend the native AudioContext\n\t *  @param  {AudioContext}  context\n\t *  @param  {String}  prop\n\t *  @private\n\t */\n\tTone.Context.prototype._defineProperty = function(context, prop){\n\t\tif (Tone.isUndef(this[prop])){\n\t\t\tObject.defineProperty(this, prop, {\n\t\t\t\t\"get\" : function(){\n\t\t\t\t\tif (typeof context[prop] === \"function\"){\n\t\t\t\t\t\treturn context[prop].bind(context);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn context[prop];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"set\" : function(val){\n\t\t\t\t\tcontext[prop] = val;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t *  The current audio context time\n\t *  @return  {Number}\n\t */\n\tTone.Context.prototype.now = function(){\n\t\treturn this._context.currentTime + this.lookAhead;\n\t};\n\n\t/**\n\t *  The audio output destination. Alias for Tone.Master\n\t *  @readyOnly\n\t *  @type  {Tone.Master}\n\t */\n\tObject.defineProperty(Tone.Context.prototype, \"destination\", {\n\t\t\"get\" : function(){\n\t\t\tif (!this.master){\n\t\t\t\treturn this._context.destination;\n\t\t\t} else {\n\t\t\t\treturn this.master;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  Starts the audio context from a suspended state. This is required\n\t *  to initially start the AudioContext.\n\t *  @return  {Promise}\n\t */\n\tTone.Context.prototype.resume = function(){\n\t\tif (this._context.state === \"suspended\" && this._context instanceof AudioContext){\n\t\t\treturn this._context.resume();\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t};\n\n\t/**\n\t *  Promise which is invoked when the context is running.\n\t *  Tries to resume the context if it's not started.\n\t *  @return  {Promise}\n\t */\n\tTone.Context.prototype.close = function(){\n\t\tvar closePromise = Promise.resolve();\n\t\t//never close the global Tone.Context\n\t\tif (this !== Tone.global.TONE_AUDIO_CONTEXT){\n\t\t\tclosePromise = this.rawContext.close();\n\t\t}\n\t\treturn closePromise.then(function(){\n\t\t\tTone.Context.emit(\"close\", this);\n\t\t}.bind(this));\n\t};\n\n\t/**\n\t *  Generate a looped buffer at some constant value.\n\t *  @param  {Number}  val\n\t *  @return  {BufferSourceNode}\n\t */\n\tTone.Context.prototype.getConstant = function(val){\n\t\tif (this._constants[val]){\n\t\t\treturn this._constants[val];\n\t\t} else {\n\t\t\tvar buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n\t\t\tvar arr = buffer.getChannelData(0);\n\t\t\tfor (var i = 0; i < arr.length; i++){\n\t\t\t\tarr[i] = val;\n\t\t\t}\n\t\t\tvar constant = this._context.createBufferSource();\n\t\t\tconstant.channelCount = 1;\n\t\t\tconstant.channelCountMode = \"explicit\";\n\t\t\tconstant.buffer = buffer;\n\t\t\tconstant.loop = true;\n\t\t\tconstant.start(0);\n\t\t\tthis._constants[val] = constant;\n\t\t\treturn constant;\n\t\t}\n\t};\n\n\t/**\n\t *  The private loop which keeps track of the context scheduled timeouts\n\t *  Is invoked from the clock source\n\t *  @private\n\t */\n\tTone.Context.prototype._timeoutLoop = function(){\n\t\tvar now = this.now();\n\t\twhile (this._timeouts && this._timeouts.length && this._timeouts.peek().time <= now){\n\t\t\tthis._timeouts.shift().callback();\n\t\t}\n\t};\n\n\t/**\n\t *  A setTimeout which is gaurenteed by the clock source.\n\t *  Also runs in the offline context.\n\t *  @param  {Function}  fn       The callback to invoke\n\t *  @param  {Seconds}    timeout  The timeout in seconds\n\t *  @returns {Number} ID to use when invoking Tone.Context.clearTimeout\n\t */\n\tTone.Context.prototype.setTimeout = function(fn, timeout){\n\t\tthis._timeoutIds++;\n\t\tvar now = this.now();\n\t\tthis._timeouts.add({\n\t\t\t\"callback\" : fn,\n\t\t\t\"time\" : now + timeout,\n\t\t\t\"id\" : this._timeoutIds\n\t\t});\n\t\treturn this._timeoutIds;\n\t};\n\n\t/**\n\t *  Clears a previously scheduled timeout with Tone.context.setTimeout\n\t *  @param  {Number}  id  The ID returned from setTimeout\n\t *  @return  {Tone.Context}  this\n\t */\n\tTone.Context.prototype.clearTimeout = function(id){\n\t\tthis._timeouts.forEach(function(event){\n\t\t\tif (event.id === id){\n\t\t\t\tthis.remove(event);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t};\n\n\t/**\n\t *  How often the Web Worker callback is invoked.\n\t *  This number corresponds to how responsive the scheduling\n\t *  can be. Context.updateInterval + Context.lookAhead gives you the\n\t *  total latency between scheduling an event and hearing it.\n\t *  @type {Number}\n\t *  @memberOf Tone.Context#\n\t *  @name updateInterval\n\t */\n\tObject.defineProperty(Tone.Context.prototype, \"updateInterval\", {\n\t\t\"get\" : function(){\n\t\t\treturn this._ticker.updateInterval;\n\t\t},\n\t\t\"set\" : function(interval){\n\t\t\tthis._ticker.updateInterval = interval;\n\t\t}\n\t});\n\n\t/**\n\t *  The unwrapped AudioContext.\n\t *  @type {AudioContext}\n\t *  @memberOf Tone.Context#\n\t *  @name rawContext\n\t *  @readOnly\n\t */\n\tObject.defineProperty(Tone.Context.prototype, \"rawContext\", {\n\t\t\"get\" : function(){\n\t\t\treturn this._context;\n\t\t}\n\t});\n\n\t/**\n\t *  What the source of the clock is, either \"worker\" (Web Worker [default]),\n\t *  \"timeout\" (setTimeout), or \"offline\" (none).\n\t *  @type {String}\n\t *  @memberOf Tone.Context#\n\t *  @name clockSource\n\t */\n\tObject.defineProperty(Tone.Context.prototype, \"clockSource\", {\n\t\t\"get\" : function(){\n\t\t\treturn this._ticker.type;\n\t\t},\n\t\t\"set\" : function(type){\n\t\t\tthis._ticker.type = type;\n\t\t}\n\t});\n\n\t/**\n\t *  The type of playback, which affects tradeoffs between audio\n\t *  output latency and responsiveness.\n\t *\n\t *  In addition to setting the value in seconds, the latencyHint also\n\t *  accepts the strings \"interactive\" (prioritizes low latency),\n\t *  \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n\t *  latency and performance), and \"fastest\" (lowest latency, might glitch more often).\n\t *  @type {String|Seconds}\n\t *  @memberOf Tone.Context#\n\t *  @name latencyHint\n\t *  @example\n\t * //set the lookAhead to 0.3 seconds\n\t * Tone.context.latencyHint = 0.3;\n\t */\n\tObject.defineProperty(Tone.Context.prototype, \"latencyHint\", {\n\t\t\"get\" : function(){\n\t\t\treturn this._latencyHint;\n\t\t},\n\t\t\"set\" : function(hint){\n\t\t\tvar lookAhead = hint;\n\t\t\tthis._latencyHint = hint;\n\t\t\tif (Tone.isString(hint)){\n\t\t\t\tswitch (hint){\n\t\t\t\t\tcase \"interactive\" :\n\t\t\t\t\t\tlookAhead = 0.1;\n\t\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"playback\" :\n\t\t\t\t\t\tlookAhead = 0.8;\n\t\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"balanced\" :\n\t\t\t\t\t\tlookAhead = 0.25;\n\t\t\t\t\t\tthis._context.latencyHint = hint;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"fastest\" :\n\t\t\t\t\t\tthis._context.latencyHint = \"interactive\";\n\t\t\t\t\t\tlookAhead = 0.01;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.lookAhead = lookAhead;\n\t\t\tthis.updateInterval = lookAhead/3;\n\t\t}\n\t});\n\n\t/**\n\t *  Unlike other dispose methods, this returns a Promise\n\t *  which executes when the context is closed and disposed\n\t *  @returns {Promise} this\n\t */\n\tTone.Context.prototype.dispose = function(){\n\t\treturn this.close().then(function(){\n\t\t\tTone.Emitter.prototype.dispose.call(this);\n\t\t\tthis._ticker.dispose();\n\t\t\tthis._ticker = null;\n\t\t\tthis._timeouts.dispose();\n\t\t\tthis._timeouts = null;\n\t\t\tfor (var con in this._constants){\n\t\t\t\tthis._constants[con].disconnect();\n\t\t\t}\n\t\t\tthis._constants = null;\n\t\t}.bind(this));\n\t};\n\n\t/**\n\t * @class A class which provides a reliable callback using either\n\t *        a Web Worker, or if that isn't supported, falls back to setTimeout.\n\t * @private\n\t */\n\tvar Ticker = function(callback, type, updateInterval){\n\n\t\t/**\n\t\t * Either \"worker\" or \"timeout\"\n\t\t * @type {String}\n\t\t * @private\n\t\t */\n\t\tthis._type = type;\n\n\t\t/**\n\t\t * The update interval of the worker\n\t\t * @private\n\t\t * @type {Number}\n\t\t */\n\t\tthis._updateInterval = updateInterval;\n\n\t\t/**\n\t\t * The callback to invoke at regular intervals\n\t\t * @type {Function}\n\t\t * @private\n\t\t */\n\t\tthis._callback = Tone.defaultArg(callback, Tone.noOp);\n\n\t\t//create the clock source for the first time\n\t\tthis._createClock();\n\t};\n\n\t/**\n\t * The possible ticker types\n\t * @private\n\t * @type {Object}\n\t */\n\tTicker.Type = {\n\t\t\"Worker\" : \"worker\",\n\t\t\"Timeout\" : \"timeout\",\n\t\t\"Offline\" : \"offline\"\n\t};\n\n\t/**\n\t *  Generate a web worker\n\t *  @return  {WebWorker}\n\t *  @private\n\t */\n\tTicker.prototype._createWorker = function(){\n\n\t\t//URL Shim\n\t\tTone.global.URL = Tone.global.URL || Tone.global.webkitURL;\n\n\t\tvar blob = new Blob([\n\t\t\t//the initial timeout time\n\t\t\t\"var timeoutTime = \"+(this._updateInterval * 1000).toFixed(1)+\";\" +\n\t\t\t//onmessage callback\n\t\t\t\"self.onmessage = function(msg){\" +\n\t\t\t\"\ttimeoutTime = parseInt(msg.data);\" +\n\t\t\t\"};\" +\n\t\t\t//the tick function which posts a message\n\t\t\t//and schedules a new tick\n\t\t\t\"function tick(){\" +\n\t\t\t\"\tsetTimeout(tick, timeoutTime);\" +\n\t\t\t\"\tself.postMessage('tick');\" +\n\t\t\t\"}\" +\n\t\t\t//call tick initially\n\t\t\t\"tick();\"\n\t\t]);\n\t\tvar blobUrl = URL.createObjectURL(blob);\n\t\tvar worker = new Worker(blobUrl);\n\n\t\tworker.onmessage = this._callback.bind(this);\n\n\t\tthis._worker = worker;\n\t};\n\n\t/**\n\t * Create a timeout loop\n\t * @private\n\t */\n\tTicker.prototype._createTimeout = function(){\n\t\tthis._timeout = setTimeout(function(){\n\t\t\tthis._createTimeout();\n\t\t\tthis._callback();\n\t\t}.bind(this), this._updateInterval * 1000);\n\t};\n\n\t/**\n\t * Create the clock source.\n\t * @private\n\t */\n\tTicker.prototype._createClock = function(){\n\t\tif (this._type === Ticker.Type.Worker){\n\t\t\ttry {\n\t\t\t\tthis._createWorker();\n\t\t\t} catch (e){\n\t\t\t\t// workers not supported, fallback to timeout\n\t\t\t\tthis._type = Ticker.Type.Timeout;\n\t\t\t\tthis._createClock();\n\t\t\t}\n\t\t} else if (this._type === Ticker.Type.Timeout){\n\t\t\tthis._createTimeout();\n\t\t}\n\t};\n\n\t/**\n\t * @memberOf Ticker#\n\t * @type {Number}\n\t * @name updateInterval\n\t * @private\n\t */\n\tObject.defineProperty(Ticker.prototype, \"updateInterval\", {\n\t\t\"get\" : function(){\n\t\t\treturn this._updateInterval;\n\t\t},\n\t\t\"set\" : function(interval){\n\t\t\tthis._updateInterval = Math.max(interval, 128/44100);\n\t\t\tif (this._type === Ticker.Type.Worker){\n\t\t\t\tthis._worker.postMessage(Math.max(interval * 1000, 1));\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * The type of the ticker, either a worker or a timeout\n\t * @memberOf Ticker#\n\t * @type {Number}\n\t * @name type\n\t * @private\n\t */\n\tObject.defineProperty(Ticker.prototype, \"type\", {\n\t\t\"get\" : function(){\n\t\t\treturn this._type;\n\t\t},\n\t\t\"set\" : function(type){\n\t\t\tthis._disposeClock();\n\t\t\tthis._type = type;\n\t\t\tthis._createClock();\n\t\t}\n\t});\n\n\t/**\n\t * Clean up the current clock source\n\t * @private\n\t */\n\tTicker.prototype._disposeClock = function(){\n\t\tif (this._timeout){\n\t\t\tclearTimeout(this._timeout);\n\t\t\tthis._timeout = null;\n\t\t}\n\t\tif (this._worker){\n\t\t\tthis._worker.terminate();\n\t\t\tthis._worker.onmessage = null;\n\t\t\tthis._worker = null;\n\t\t}\n\t};\n\n\t/**\n\t * Clean up\n\t * @private\n\t */\n\tTicker.prototype.dispose = function(){\n\t\tthis._disposeClock();\n\t\tthis._callback = null;\n\t};\n\n\t/**\n\t *  Adds connect/disconnect methods\n\t *  @private\n\t */\n\tTone.getContext(function(){\n\n\t\tvar nativeConnect = AudioNode.prototype.connect;\n\t\tvar nativeDisconnect = AudioNode.prototype.disconnect;\n\n\t\t//replace the old connect method\n\t\tfunction toneConnect(B, outNum, inNum){\n\t\t\tif (B.input){\n\t\t\t\tinNum = Tone.defaultArg(inNum, 0);\n\t\t\t\tif (Tone.isArray(B.input)){\n\t\t\t\t\treturn this.connect(B.input[inNum]);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.connect(B.input, outNum, inNum);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tif (B instanceof AudioNode){\n\t\t\t\t\t\tnativeConnect.call(this, B, outNum, inNum);\n\t\t\t\t\t\treturn B;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnativeConnect.call(this, B, outNum);\n\t\t\t\t\t\treturn B;\n\t\t\t\t\t}\n\t\t\t\t} catch (e){\n\t\t\t\t\tthrow new Error(\"error connecting to node: \"+B+\"\\n\"+e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//replace the old disconnect method\n\t\tfunction toneDisconnect(B, outNum, inNum){\n\t\t\tif (B && B.input && Tone.isArray(B.input)){\n\t\t\t\tinNum = Tone.defaultArg(inNum, 0);\n\t\t\t\tthis.disconnect(B.input[inNum], outNum, 0);\n\t\t\t} else if (B && B.input){\n\t\t\t\tthis.disconnect(B.input, outNum, inNum);\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tif (B instanceof AudioParam){\n\t\t\t\t\t\tnativeDisconnect.call(this, B, outNum);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnativeDisconnect.apply(this, arguments);\n\t\t\t\t\t}\n\t\t\t\t} catch (e){\n\t\t\t\t\tthrow new Error(\"error disconnecting node: \"+B+\"\\n\"+e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (AudioNode.prototype.connect !== toneConnect){\n\t\t\tAudioNode.prototype.connect = toneConnect;\n\t\t\tAudioNode.prototype.disconnect = toneDisconnect;\n\t\t}\n\t});\n\n\t// set the audio context initially, and if one is not already created\n\tif (Tone.supported && !Tone.initialized){\t\t\t\n\t\tif (!Tone.global.TONE_AUDIO_CONTEXT){\n\t\t\tTone.global.TONE_AUDIO_CONTEXT = new Tone.Context();\n\t\t}\n\t\tTone.context = Tone.global.TONE_AUDIO_CONTEXT;\n\n\t\t// log on first initialization\n\t\t// allow optional silencing of this log\n\t\tif (!Tone.global.TONE_SILENCE_VERSION_LOGGING){\n\t\t\tvar prefix = \"v\";\n\t\t\tif (Tone.version === \"dev\"){\n\t\t\t\tprefix = \"\";\n\t\t\t}\n\t\t\tvar printString = \" * Tone.js \" + prefix + Tone.version + \" * \"; \n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(\"%c\" + printString, \"background: #000; color: #fff\");\n\t\t}\n\t} else if (!Tone.supported){\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.warn(\"This browser does not support Tone.js\");\n\t}\n\n\treturn Tone.Context;\n});\n","define([\"../core/Tone\", \"../signal/SignalBase\", \"../shim/WaveShaperNode\"], function(Tone){\n\n\t\"use strict\";\n\n\t/**\n\t *  @class Wraps the native Web Audio API\n\t *         [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n\t *\n\t *  @extends {Tone.SignalBase}\n\t *  @constructor\n\t *  @param {function|Array|Number} mapping The function used to define the values.\n\t *                                    The mapping function should take two arguments:\n\t *                                    the first is the value at the current position\n\t *                                    and the second is the array position.\n\t *                                    If the argument is an array, that array will be\n\t *                                    set as the wave shaping function. The input\n\t *                                    signal is an AudioRange [-1, 1] value and the output\n\t *                                    signal can take on any numerical values.\n\t *\n\t *  @param {Number} [bufferLen=1024] The length of the WaveShaperNode buffer.\n\t *  @example\n\t * var timesTwo = new Tone.WaveShaper(function(val){\n\t * \treturn val * 2;\n\t * }, 2048);\n\t *  @example\n\t * //a waveshaper can also be constructed with an array of values\n\t * var invert = new Tone.WaveShaper([1, -1]);\n\t */\n\tTone.WaveShaper = function(mapping, bufferLen){\n\n\t\tTone.SignalBase.call(this);\n\n\t\t/**\n\t\t *  the waveshaper\n\t\t *  @type {WaveShaperNode}\n\t\t *  @private\n\t\t */\n\t\tthis._shaper = this.input = this.output = this.context.createWaveShaper();\n\n\t\t/**\n\t\t *  the waveshapers curve\n\t\t *  @type {Float32Array}\n\t\t *  @private\n\t\t */\n\t\tthis._curve = null;\n\n\t\tif (Array.isArray(mapping)){\n\t\t\tthis.curve = mapping;\n\t\t} else if (isFinite(mapping) || Tone.isUndef(mapping)){\n\t\t\tthis._curve = new Float32Array(Tone.defaultArg(mapping, 1024));\n\t\t} else if (Tone.isFunction(mapping)){\n\t\t\tthis._curve = new Float32Array(Tone.defaultArg(bufferLen, 1024));\n\t\t\tthis.setMap(mapping);\n\t\t}\n\t};\n\n\tTone.extend(Tone.WaveShaper, Tone.SignalBase);\n\n\t/**\n\t *  Uses a mapping function to set the value of the curve.\n\t *  @param {function} mapping The function used to define the values.\n\t *                            The mapping function take two arguments:\n\t *                            the first is the value at the current position\n\t *                            which goes from -1 to 1 over the number of elements\n\t *                            in the curve array. The second argument is the array position.\n\t *  @returns {Tone.WaveShaper} this\n\t *  @example\n\t * //map the input signal from [-1, 1] to [0, 10]\n\t * shaper.setMap(function(val, index){\n\t * \treturn (val + 1) * 5;\n\t * })\n\t */\n\tTone.WaveShaper.prototype.setMap = function(mapping){\n\t\tvar array = new Array(this._curve.length);\n\t\tfor (var i = 0, len = this._curve.length; i < len; i++){\n\t\t\tvar normalized = (i / (len - 1)) * 2 - 1;\n\t\t\tarray[i] = mapping(normalized, i);\n\t\t}\n\t\tthis.curve = array;\n\t\treturn this;\n\t};\n\n\t/**\n\t * The array to set as the waveshaper curve. For linear curves\n\t * array length does not make much difference, but for complex curves\n\t * longer arrays will provide smoother interpolation.\n\t * @memberOf Tone.WaveShaper#\n\t * @type {Array}\n\t * @name curve\n\t */\n\tObject.defineProperty(Tone.WaveShaper.prototype, \"curve\", {\n\t\tget : function(){\n\t\t\treturn this._shaper.curve;\n\t\t},\n\t\tset : function(mapping){\n\t\t\tthis._curve = new Float32Array(mapping);\n\t\t\tthis._shaper.curve = this._curve;\n\t\t}\n\t});\n\n\t/**\n\t * Specifies what type of oversampling (if any) should be used when\n\t * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\".\n\t * @memberOf Tone.WaveShaper#\n\t * @type {string}\n\t * @name oversample\n\t */\n\tObject.defineProperty(Tone.WaveShaper.prototype, \"oversample\", {\n\t\tget : function(){\n\t\t\treturn this._shaper.oversample;\n\t\t},\n\t\tset : function(oversampling){\n\t\t\tif ([\"none\", \"2x\", \"4x\"].includes(oversampling)){\n\t\t\t\tthis._shaper.oversample = oversampling;\n\t\t\t} else {\n\t\t\t\tthrow new RangeError(\"Tone.WaveShaper: oversampling must be either 'none', '2x', or '4x'\");\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t *  Clean up.\n\t *  @returns {Tone.WaveShaper} this\n\t */\n\tTone.WaveShaper.prototype.dispose = function(){\n\t\tTone.SignalBase.prototype.dispose.call(this);\n\t\tthis._shaper.disconnect();\n\t\tthis._shaper = null;\n\t\tthis._curve = null;\n\t\treturn this;\n\t};\n\n\treturn Tone.WaveShaper;\n});\n"],"sourceRoot":""}