{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./static/js/case-editor/main.vue?7214","webpack:////node_modules/compute-scroll-into-view/es/index.js","webpack:////node_modules/scroll-into-view-if-needed/es/index.js","webpack:///./static/js/case-editor/helpers.js","webpack:///static/js/case-editor/main.vue","webpack:///./static/js/case-editor/main.vue?b09d","webpack:///./static/js/case-editor/main.vue","webpack:///./static/js/case-editor/main.js","webpack:///./static/js/case-editor/main.vue?e99e"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","case-editor","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticClass","href","urls","case","_v","_s","templateVars","citation_full","class","toggle-btn","on","showOcr","click","$event","showConfidence","toggleInstructions","saveCase","clearEdits","aria-live","saveStatus","_e","style","currentWordStyle","ref","type","placeholder","domProps","currentWord","string","input","wordEdited","target","disabled","addSoftHyphen","_l","word","wordClicked","originalString","removeEdit","for","directives","rawName","metadata","expression","checked","Array","isArray","human_corrected","_i","change","$$a","$$el","$$c","$$v","$$i","$set","concat","composing","staticStyle","flex","overflow-y","opinion","paragraph","paragraphBlocks","block","refInFor","wordClass","wordTextStyle","stringWithoutSoftHyphens","footnote","label","page","show-ocr","src","image_url","width","scale","height","wordImageStyle","display","_m","staticRenderFns","isElement","el","nodeType","canOverflow","overflow","skipOverflowHiddenElements","getFrameElement","ownerDocument","defaultView","frameElement","e","isHiddenByFrame","frame","clientHeight","scrollHeight","clientWidth","scrollWidth","isScrollable","getComputedStyle","overflowY","overflowX","alignNearest","scrollingEdgeStart","scrollingEdgeEnd","scrollingSize","scrollingBorderStart","scrollingBorderEnd","elementEdgeStart","elementEdgeEnd","elementSize","es","options","scrollMode","inline","boundary","checkBoundary","node","TypeError","scrollingElement","document","documentElement","frames","cursor","parentNode","body","viewportWidth","visualViewport","innerWidth","viewportHeight","innerHeight","viewportX","scrollX","pageXOffset","viewportY","scrollY","pageYOffset","_target$getBoundingCl","getBoundingClientRect","targetHeight","targetWidth","targetTop","top","targetRight","right","targetBottom","bottom","targetLeft","left","targetBlock","targetInline","computations","index","_frame$getBoundingCli","frameStyle","borderLeft","parseInt","borderLeftWidth","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","blockScroll","inlineScroll","scrollbarWidth","offsetWidth","scrollbarHeight","offsetHeight","Math","max","scrollLeft","scrollTop","min","isOptionsObject","keys","defaultBehavior","actions","behavior","canSmoothScroll","forEach","_ref","scroll","getOptions","scrollIntoView","targetIsDetached","contains","computeOptions","scroll_into_view_if_needed_es","SOFT_HYPHEN","FAKE_SOFT_HYPHEN","mainvue_type_script_lang_js_","pages","editedWords","mounted","watch","handler","saveStateToStorage","deep","created","opinions","serverMetadata","objectSpread","blocksById","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","next","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","blocks","err","return","fonts","_Object$keys","fontId","processFont","styles","family","size","charAscentCache","storageKey","savedStateJson","localStorage","getItem","savedWordEdits","savedState","JSON","parse","edit_list","_i2","_Object$entries","entries","_Object$entries$_i","slicedToArray","k","_Object$entries$_i$","oldVal","newVal","console","log","removeItem","extractWords","_this","addEventListener","ctrlKey","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_step3$value","imageRef","$refs","pageImages","handleWindowResize","methods","$delete","replace","_this2","block_ids","map","blockId","currentPage","pagesByWordId","background-image","background-size","w","h","background-position","x","y","font","yOffset","fontScale","background-color","wordConfidenceColor","lineHeight","current-word","edited","focus","scrollToWord","alpha","wordConfidence","red","containerWidth","pageImageContainer","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_this3","wordId","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","words","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_loop","tokens","wordEdits","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_step7$value","token","_token","tag","rect","wc","strings","wordIndex","join","getFontLineHeight","toConsumableArray","split","getCharAscent","_iterator6","instructions","getElementById","confirm","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","getMetadataEdits","_i3","_Object$entries2","_Object$entries2$_i","v","serverVal","getTokenEdits","wordIndexed","arguments","editList","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","pageId","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_step11$value","newString","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_step12$value","getState","lodash_debounce_default","save_state","setItem","stringify","_saveCase","asyncToGenerator","regeneratorRuntime","mark","_callee","description","state","wrap","_context","prev","prompt","abrupt","jquery_default","a","ajax","contentType","promise","t0","location","stop","canvas","createElement","ctx","getContext","measureText","actualBoundingBoxAscent","includes","parseFloat","case_editor_mainvue_type_script_lang_js_","component","componentNormalizer","main","Vue","components","Main","template","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_main_vue_vue_type_style_index_0_id_005e926b_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_main_vue_vue_type_style_index_0_id_005e926b_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/case-editor.18b9a0d8.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"case-editor\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/dist/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([10,\"chunk-common\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"edit-app\"}},[_c('div',{staticClass:\"row p-2\"},[_c('div',{staticClass:\"col-6\"},[_c('h1',[_c('a',{attrs:{\"href\":_vm.urls.case}},[_vm._v(_vm._s(_vm.templateVars.citation_full))])])]),_c('div',{staticClass:\"col-6 text-right viz-controls\"},[_c('button',{class:{'toggle-btn': true, 'on': _vm.showOcr},on:{\"click\":function($event){_vm.showOcr=!_vm.showOcr}}},[_vm._v(\"(^O)CR\")]),_c('button',{class:{'toggle-btn': true, 'on': _vm.showConfidence},on:{\"click\":function($event){_vm.showConfidence=!_vm.showConfidence}}},[_vm._v(\"W(^C)\")]),_c('button',{staticClass:\"toggle-btn off\",on:{\"click\":_vm.toggleInstructions}},[_vm._v(\"help\")]),_c('button',{staticClass:\"btn-primary mr-1 mb-1 ml-3\",on:{\"click\":function($event){return _vm.saveCase($event)}}},[_vm._v(\"(^s)ave case to DB\")]),_c('button',{staticClass:\"btn-secondary\",on:{\"click\":_vm.clearEdits}},[_vm._v(\"Clear All Edits\")]),_c('span',{attrs:{\"aria-live\":\"polite\"}},[(_vm.saveStatus)?_c('span',{staticClass:\"ml-1\"},[_c('br'),_vm._v(_vm._s(_vm.saveStatus))]):_vm._e()])])]),_c('div',{staticClass:\"tools-row row\"},[_c('div',{staticClass:\"scrollable col-4\"},[_c('h4',{staticClass:\"section-title\"},[_vm._v(\"current word\")]),_c('div',{style:(_vm.currentWordStyle())}),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-10\"},[_c('input',{ref:\"currentWord\",attrs:{\"type\":\"text\",\"id\":\"current_word\",\"placeholder\":\"current word\"},domProps:{\"value\":_vm.currentWord ? _vm.currentWord.string : ''},on:{\"input\":function($event){return _vm.wordEdited($event.target.value)}}})]),_c('div',{staticClass:\"col-2\"},[_c('button',{attrs:{\"disabled\":_vm.currentWord === null},on:{\"click\":function($event){return _vm.addSoftHyphen()}}},[_vm._v(\"⧟\")])])])]),_c('div',{staticClass:\"scrollable col-4 edits-container\"},[_c('h4',{staticClass:\"section-title\"},[_vm._v(\"edits\")]),_c('div',{staticClass:\"edited-word-list mt-3\"},_vm._l((_vm.editedWords),function(word){return _c('div',{key:word.id,staticClass:\"row edit-entry\"},[_c('div',{staticClass:\"col-5 word\",on:{\"click\":function($event){return _vm.wordClicked(word)}}},[_vm._v(_vm._s(word.originalString))]),_c('div',{staticClass:\"col-6 word\",on:{\"click\":function($event){return _vm.wordClicked(word)}}},[_vm._v(_vm._s(word.string))]),_c('div',{staticClass:\"col-1 edit-controls\"},[_c('span',{staticClass:\"edit-delete\",on:{\"click\":function($event){return _vm.removeEdit(word.id)}}},[_vm._v(\"⊗\")])])])}),0)]),_c('div',{staticClass:\"scrollable col-4\"},[_c('h4',{staticClass:\"section-title\"},[_vm._v(\"case metadata\")]),_c('div',{staticClass:\"row\"},[_c('label',{staticClass:\"col-8 m-0\",attrs:{\"for\":\"metadata-human-corrected\"}},[_vm._v(\"Human Corrected\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.metadata.human_corrected),expression:\"metadata.human_corrected\"}],staticClass:\"col-4\",attrs:{\"type\":\"checkbox\",\"id\":\"metadata-human-corrected\"},domProps:{\"checked\":Array.isArray(_vm.metadata.human_corrected)?_vm._i(_vm.metadata.human_corrected,null)>-1:(_vm.metadata.human_corrected)},on:{\"change\":function($event){var $$a=_vm.metadata.human_corrected,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.metadata, \"human_corrected\", $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.metadata, \"human_corrected\", $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.metadata, \"human_corrected\", $$c)}}}}),_c('small',{staticClass:\"form-text text-muted\"},[_vm._v(\"Set \\\"Human Corrected\\\" if this case has been fully corrected and is essentially error-free.\")]),_c('label',{staticClass:\"col-4\",attrs:{\"for\":\"metadata-name-abbreviation\"}},[_vm._v(\"Short Name\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.metadata.name_abbreviation),expression:\"metadata.name_abbreviation\"}],staticClass:\"col-8\",attrs:{\"type\":\"text\",\"placeholder\":\"case short name\",\"id\":\"metadata-name-abbreviation\"},domProps:{\"value\":(_vm.metadata.name_abbreviation)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.metadata, \"name_abbreviation\", $event.target.value)}}}),_c('label',{staticClass:\"col-4\",attrs:{\"for\":\"metadata-name\"}},[_vm._v(\"Long Name\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.metadata.name),expression:\"metadata.name\"}],staticClass:\"col-8\",attrs:{\"type\":\"text\",\"placeholder\":\"case name\",\"id\":\"metadata-name\"},domProps:{\"value\":(_vm.metadata.name)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.metadata, \"name\", $event.target.value)}}}),_c('label',{staticClass:\"col-4\",attrs:{\"for\":\"metadata-decision-date-original\"}},[_vm._v(\"Decision Date (YYYY-MM-DD)\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.metadata.decision_date_original),expression:\"metadata.decision_date_original\"}],staticClass:\"col-8\",attrs:{\"type\":\"text\",\"placeholder\":\"decision date\",\"id\":\"metadata-decision-date-original\"},domProps:{\"value\":(_vm.metadata.decision_date_original)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.metadata, \"decision_date_original\", $event.target.value)}}}),_c('label',{staticClass:\"col-4\",attrs:{\"for\":\"metadata-docket-number\"}},[_vm._v(\"Docket Number\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.metadata.docket_number),expression:\"metadata.docket_number\"}],staticClass:\"col-8\",attrs:{\"type\":\"text\",\"placeholder\":\"docket number\",\"id\":\"metadata-docket-number\"},domProps:{\"value\":(_vm.metadata.docket_number)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.metadata, \"docket_number\", $event.target.value)}}})])])]),_c('div',{staticClass:\"row\",staticStyle:{\"flex\":\"1 1 auto\",\"overflow-y\":\"auto\"}},[_c('div',{staticClass:\"scrollable col-6\",attrs:{\"id\":\"textView\"}},_vm._l((_vm.opinions),function(opinion){return _c('div',{staticClass:\"opinion\"},[_c('h4',{staticClass:\"section-title\"},[_vm._v(\"opinion: \"+_vm._s(opinion.type))]),_vm._l((opinion.paragraphs),function(paragraph){return _c('div',{key:paragraph.id,staticClass:\"paragraph\"},[_c('span',{staticClass:\"paragraph-class\"},[_vm._v(_vm._s(paragraph.class))]),_vm._l((_vm.paragraphBlocks(paragraph)),function(block){return _vm._l((block.words),function(word){return (_vm.mounted)?_c('span',{key:word.id,ref:(\"wordText\" + (word.id)),refInFor:true,class:_vm.wordClass(word),style:(_vm.wordTextStyle(word)),on:{\"click\":function($event){return _vm.wordClicked(word)}}},[_vm._v(_vm._s(word.stringWithoutSoftHyphens))]):_vm._e()})})],2)}),_vm._l((opinion.footnotes),function(footnote){return _c('div',{key:footnote.id},[_c('span',[_vm._v(_vm._s(footnote.label))]),_vm._l((opinion.paragraphs),function(paragraph){return _c('div',{key:paragraph.id},[_c('span',[_vm._v(_vm._s(paragraph.class))]),_vm._l((_vm.paragraphBlocks(paragraph)),function(block){return _vm._l((block.words),function(word){return (_vm.mounted)?_c('span',{key:word.id,ref:(\"wordText\" + (word.id)),refInFor:true,class:_vm.wordClass(word),style:(_vm.wordTextStyle(word)),on:{\"click\":function($event){return _vm.wordClicked(word)}}},[_vm._v(_vm._s(word.stringWithoutSoftHyphens))]):_vm._e()})})],2)})],2)})],2)}),0),_c('div',{ref:\"pageImageContainer\",staticClass:\"scrollable col-6\",attrs:{\"id\":\"imageView\"}},_vm._l((_vm.pages),function(page){return _c('div',{key:page.id,ref:\"pageImages\",refInFor:true,class:{page: true, 'show-ocr': _vm.showOcr}},[_c('img',{attrs:{\"src\":page.image_url,\"width\":page.width * page.scale,\"height\":page.height * page.scale}}),_vm._l((page.words),function(word){return (_vm.mounted)?_c('span',{key:word.id,ref:(\"wordImage\" + (word.id)),refInFor:true,class:_vm.wordClass(word),style:(_vm.wordImageStyle(page, word)),on:{\"click\":function($event){return _vm.wordClicked(word)}}},[_vm._v(\"\\n          \"+_vm._s(word.string)+\"\\n        \")]):_vm._e()})],2)}),0)]),_c('div',{staticClass:\"pt-6\",staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"instructions_modal_overlay\"}},[_c('div',{staticClass:\"col-8 offset-2 p-5\",attrs:{\"id\":\"instructions_modal\"}},[_c('div',{attrs:{\"id\":\"modal_close\"},on:{\"click\":_vm.toggleInstructions}},[_vm._v(\"⊗\")]),_vm._m(0),_vm._m(1),_vm._m(2),_vm._m(3)])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row pt-3\"},[_c('div',{staticClass:\"q col-3\"},[_vm._v(\"When should I press “Save”?\")]),_c('div',{staticClass:\"a col-9 pl-3\"},[_vm._v(\"\\n          Corrections to a case should be made in a batch, and you should only press “save” when you have made all changes you intend to make to a case. This avoids preserving intermediate edits on the server that aren’t needed. In the meantime, each change you make will be immediately stored to your local browser storage, and will be stored across restarts until you are ready to save.\\n        \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row pt-3\"},[_c('div',{staticClass:\"q col-3\"},[_vm._v(\"Why is there a space after each word?\")]),_c('div',{staticClass:\"a col-9 pl-3\"},[_vm._v(\"\\n          The space after each word should be preserved (if it is supposed to be there) -- it controls whether there will be a space between that word and the next word when they are combined into text.\\n        \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row pt-3\"},[_c('div',{staticClass:\"q col-3\"},[_vm._v(\"What is the significance of the word confidence labels?\")]),_c('div',{staticClass:\"a col-9 pl-3\"},[_vm._v(\"\\n          The word confidence button highlights words that the OCR engine was less confident about. Word confidence is labeled by the OCR engine on a scale from 0.0 (least confident) to 1.0 (most confident). These scores have no objective meaning.\\n        \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"row pt-3\"},[_c('div',{staticClass:\"q col-3\"},[_vm._v(\"What is the “⧟” button for?\")]),_c('div',{staticClass:\"a col-9 pl-3\"},[_vm._v(\"\\n          The “⧟” button is for inserting a “soft hyphen.” When the OCR engine sees a hyphen at the end of a line, it has to guess whether to encode the hyphen as a “hard hyphen,” which should be preserved in the text, or a “soft hyphen,” an invisible character which indicates where the word was broken over the line but should not be preserved in text.\"),_c('br'),_vm._v(\"\\n          For example, if the OCR engine saw “hyphen-” at the end of one line, and “ated” at the start of the next line, it needed to decide whether the text output should be “hyphen-ated” or “hyphenated.” If the engine wrongly output “hyphen-ated”, you could use the soft hyphen button to change it to “hyphen⧟” “ated”, which would render as “hyphenated” in the text.\\n        \")])])}]\n\nexport { render, staticRenderFns }","function isElement(el) {\n  return el != null && typeof el === 'object' && el.nodeType === 1;\n}\n\nfunction canOverflow(overflow, skipOverflowHiddenElements) {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false;\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip';\n}\n\nfunction getFrameElement(el) {\n  if (!el.ownerDocument || !el.ownerDocument.defaultView) {\n    return null;\n  }\n\n  try {\n    return el.ownerDocument.defaultView.frameElement;\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction isHiddenByFrame(el) {\n  var frame = getFrameElement(el);\n\n  if (!frame) {\n    return false;\n  }\n\n  return frame.clientHeight < el.scrollHeight || frame.clientWidth < el.scrollWidth;\n}\n\nfunction isScrollable(el, skipOverflowHiddenElements) {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    var style = getComputedStyle(el, null);\n    return canOverflow(style.overflowY, skipOverflowHiddenElements) || canOverflow(style.overflowX, skipOverflowHiddenElements) || isHiddenByFrame(el);\n  }\n\n  return false;\n}\n\nfunction alignNearest(scrollingEdgeStart, scrollingEdgeEnd, scrollingSize, scrollingBorderStart, scrollingBorderEnd, elementEdgeStart, elementEdgeEnd, elementSize) {\n  if (elementEdgeStart < scrollingEdgeStart && elementEdgeEnd > scrollingEdgeEnd || elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd) {\n    return 0;\n  }\n\n  if (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize || elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart;\n  }\n\n  if (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize || elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd;\n  }\n\n  return 0;\n}\n\nexport default (function (target, options) {\n  var scrollMode = options.scrollMode,\n      block = options.block,\n      inline = options.inline,\n      boundary = options.boundary,\n      skipOverflowHiddenElements = options.skipOverflowHiddenElements;\n  var checkBoundary = typeof boundary === 'function' ? boundary : function (node) {\n    return node !== boundary;\n  };\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target');\n  }\n\n  var scrollingElement = document.scrollingElement || document.documentElement;\n  var frames = [];\n  var cursor = target;\n\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    cursor = cursor.parentNode;\n\n    if (cursor === scrollingElement) {\n      frames.push(cursor);\n      break;\n    }\n\n    if (cursor === document.body && isScrollable(cursor) && !isScrollable(document.documentElement)) {\n      continue;\n    }\n\n    if (isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor);\n    }\n  }\n\n  var viewportWidth = window.visualViewport ? visualViewport.width : innerWidth;\n  var viewportHeight = window.visualViewport ? visualViewport.height : innerHeight;\n  var viewportX = window.scrollX || pageXOffset;\n  var viewportY = window.scrollY || pageYOffset;\n\n  var _target$getBoundingCl = target.getBoundingClientRect(),\n      targetHeight = _target$getBoundingCl.height,\n      targetWidth = _target$getBoundingCl.width,\n      targetTop = _target$getBoundingCl.top,\n      targetRight = _target$getBoundingCl.right,\n      targetBottom = _target$getBoundingCl.bottom,\n      targetLeft = _target$getBoundingCl.left;\n\n  var targetBlock = block === 'start' || block === 'nearest' ? targetTop : block === 'end' ? targetBottom : targetTop + targetHeight / 2;\n  var targetInline = inline === 'center' ? targetLeft + targetWidth / 2 : inline === 'end' ? targetRight : targetLeft;\n  var computations = [];\n\n  for (var index = 0; index < frames.length; index++) {\n    var frame = frames[index];\n\n    var _frame$getBoundingCli = frame.getBoundingClientRect(),\n        height = _frame$getBoundingCli.height,\n        width = _frame$getBoundingCli.width,\n        top = _frame$getBoundingCli.top,\n        right = _frame$getBoundingCli.right,\n        bottom = _frame$getBoundingCli.bottom,\n        left = _frame$getBoundingCli.left;\n\n    if (scrollMode === 'if-needed' && targetTop >= 0 && targetLeft >= 0 && targetBottom <= viewportHeight && targetRight <= viewportWidth && targetTop >= top && targetBottom <= bottom && targetLeft >= left && targetRight <= right) {\n      return computations;\n    }\n\n    var frameStyle = getComputedStyle(frame);\n    var borderLeft = parseInt(frameStyle.borderLeftWidth, 10);\n    var borderTop = parseInt(frameStyle.borderTopWidth, 10);\n    var borderRight = parseInt(frameStyle.borderRightWidth, 10);\n    var borderBottom = parseInt(frameStyle.borderBottomWidth, 10);\n    var blockScroll = 0;\n    var inlineScroll = 0;\n    var scrollbarWidth = 'offsetWidth' in frame ? frame.offsetWidth - frame.clientWidth - borderLeft - borderRight : 0;\n    var scrollbarHeight = 'offsetHeight' in frame ? frame.offsetHeight - frame.clientHeight - borderTop - borderBottom : 0;\n\n    if (scrollingElement === frame) {\n      if (block === 'start') {\n        blockScroll = targetBlock;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(viewportY, viewportY + viewportHeight, viewportHeight, borderTop, borderBottom, viewportY + targetBlock, viewportY + targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - viewportHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth;\n      } else {\n        inlineScroll = alignNearest(viewportX, viewportX + viewportWidth, viewportWidth, borderLeft, borderRight, viewportX + targetInline, viewportX + targetInline + targetWidth, targetWidth);\n      }\n\n      blockScroll = Math.max(0, blockScroll + viewportY);\n      inlineScroll = Math.max(0, inlineScroll + viewportX);\n    } else {\n      if (block === 'start') {\n        blockScroll = targetBlock - top - borderTop;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(top, bottom, height, borderTop, borderBottom + scrollbarHeight, targetBlock, targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - (top + height / 2) + scrollbarHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - left - borderLeft;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (left + width / 2) + scrollbarWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth;\n      } else {\n        inlineScroll = alignNearest(left, right, width, borderLeft, borderRight + scrollbarWidth, targetInline, targetInline + targetWidth, targetWidth);\n      }\n\n      var scrollLeft = frame.scrollLeft,\n          scrollTop = frame.scrollTop;\n      blockScroll = Math.max(0, Math.min(scrollTop + blockScroll, frame.scrollHeight - height + scrollbarHeight));\n      inlineScroll = Math.max(0, Math.min(scrollLeft + inlineScroll, frame.scrollWidth - width + scrollbarWidth));\n      targetBlock += scrollTop - blockScroll;\n      targetInline += scrollLeft - inlineScroll;\n    }\n\n    computations.push({\n      el: frame,\n      top: blockScroll,\n      left: inlineScroll\n    });\n  }\n\n  return computations;\n});","import compute from 'compute-scroll-into-view';\n\nfunction isOptionsObject(options) {\n  return options === Object(options) && Object.keys(options).length !== 0;\n}\n\nfunction defaultBehavior(actions, behavior) {\n  if (behavior === void 0) {\n    behavior = 'auto';\n  }\n\n  var canSmoothScroll = ('scrollBehavior' in document.body.style);\n  actions.forEach(function (_ref) {\n    var el = _ref.el,\n        top = _ref.top,\n        left = _ref.left;\n\n    if (el.scroll && canSmoothScroll) {\n      el.scroll({\n        top: top,\n        left: left,\n        behavior: behavior\n      });\n    } else {\n      el.scrollTop = top;\n      el.scrollLeft = left;\n    }\n  });\n}\n\nfunction getOptions(options) {\n  if (options === false) {\n    return {\n      block: 'end',\n      inline: 'nearest'\n    };\n  }\n\n  if (isOptionsObject(options)) {\n    return options;\n  }\n\n  return {\n    block: 'start',\n    inline: 'nearest'\n  };\n}\n\nfunction scrollIntoView(target, options) {\n  var targetIsDetached = !target.ownerDocument.documentElement.contains(target);\n\n  if (isOptionsObject(options) && typeof options.behavior === 'function') {\n    return options.behavior(targetIsDetached ? [] : compute(target, options));\n  }\n\n  if (targetIsDetached) {\n    return;\n  }\n\n  var computeOptions = getOptions(options);\n  return defaultBehavior(compute(target, computeOptions), computeOptions.behavior);\n}\n\nexport default scrollIntoView;","export const SOFT_HYPHEN = '\\xad';\nexport const FAKE_SOFT_HYPHEN = \"⧟\";\n","<template>\n  <div id=\"edit-app\">\n    <div class=\"row p-2\">\n      <div class=\"col-6\">\n        <h1><a :href=\"urls.case\">{{templateVars.citation_full}}</a></h1>\n      </div>\n      <div class=\"col-6 text-right viz-controls\">\n        <button @click=\"showOcr=!showOcr\" :class=\"{'toggle-btn': true, 'on': showOcr}\">(^O)CR</button>\n        <button @click=\"showConfidence=!showConfidence\" :class=\"{'toggle-btn': true, 'on': showConfidence}\">W(^C)</button>\n        <button @click=\"toggleInstructions\" class=\"toggle-btn off\">help</button>\n        <button class=\"btn-primary mr-1 mb-1 ml-3\" @click=\"saveCase($event)\">(^s)ave case to DB</button>\n        <button class=\"btn-secondary\" @click=\"clearEdits\">Clear All Edits</button>\n        <span aria-live=\"polite\"><span v-if=\"saveStatus\" class=\"ml-1\"><br>{{saveStatus}}</span></span>\n      </div>\n    </div>\n    <div class=\"tools-row row\">\n      <div class=\"scrollable col-4\">\n        <h4 class=\"section-title\">current word</h4>\n        <div :style=\"currentWordStyle()\"></div>\n        <div class=\"row\">\n          <div class=\"col-10\">\n            <input type=\"text\" id=\"current_word\" :value=\"currentWord ? currentWord.string : ''\" placeholder=\"current word\" ref=\"currentWord\" @input=\"wordEdited($event.target.value)\">\n          </div>\n          <div class=\"col-2\"><button @click=\"addSoftHyphen()\" :disabled=\"currentWord === null\">⧟</button></div>\n        </div>\n      </div>\n      <div class=\"scrollable col-4 edits-container\">\n        <h4 class=\"section-title\">edits</h4>\n        <div class=\"edited-word-list mt-3\">\n          <div class=\"row edit-entry\" v-for=\"word in editedWords\" :key=\"word.id\">\n            <div class=\"col-5 word\" @click=\"wordClicked(word)\">{{word.originalString}}</div>\n            <div class=\"col-6 word\" @click=\"wordClicked(word)\">{{word.string}}</div>\n            <div class=\"col-1 edit-controls\"><span class=\"edit-delete\" @click=\"removeEdit(word.id)\">&#8855;</span></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"scrollable col-4\">\n        <h4 class=\"section-title\">case metadata</h4>\n        <div class=\"row\">\n          <label class=\"col-8 m-0\" for=\"metadata-human-corrected\">Human Corrected</label>\n          <input class=\"col-4\" type=\"checkbox\" v-model=\"metadata.human_corrected\" id=\"metadata-human-corrected\">\n          <small class=\"form-text text-muted\">Set \"Human Corrected\" if this case has been fully corrected and is essentially error-free.</small>\n          <label class=\"col-4\" for=\"metadata-name-abbreviation\">Short Name</label>\n          <input class=\"col-8\" type=\"text\" v-model=\"metadata.name_abbreviation\" placeholder=\"case short name\" id=\"metadata-name-abbreviation\">\n          <label class=\"col-4\" for=\"metadata-name\">Long Name</label>\n          <input class=\"col-8\" type=\"text\" v-model=\"metadata.name\" placeholder=\"case name\" id=\"metadata-name\">\n          <label class=\"col-4\" for=\"metadata-decision-date-original\">Decision Date (YYYY-MM-DD)</label>\n          <input class=\"col-8\" type=\"text\" v-model=\"metadata.decision_date_original\" placeholder=\"decision date\" id=\"metadata-decision-date-original\">\n          <label class=\"col-4\" for=\"metadata-docket-number\">Docket Number</label>\n          <input class=\"col-8\" type=\"text\" v-model=\"metadata.docket_number\" placeholder=\"docket number\" id=\"metadata-docket-number\">\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" style=\"flex: 1 1 auto; overflow-y: auto;\">\n      <div id=\"textView\" class=\"scrollable col-6\">\n        <div v-for=\"opinion in opinions\" class=\"opinion\">\n          <h4 class=\"section-title\">opinion: {{opinion.type}}</h4>\n          <div v-for=\"paragraph in opinion.paragraphs\" :key=\"paragraph.id\" class=\"paragraph\">\n            <span class=\"paragraph-class\">{{paragraph.class}}</span>\n            <template v-for=\"block in paragraphBlocks(paragraph)\"><span\n              v-if=\"mounted\"\n              v-for=\"word in block.words\"\n              :key=\"word.id\"\n              :style=\"wordTextStyle(word)\"\n              @click=\"wordClicked(word)\"\n              :ref=\"`wordText${word.id}`\"\n              :class=\"wordClass(word)\"\n            >{{word.stringWithoutSoftHyphens}}</span></template>\n          </div>\n\n          <div v-for=\"footnote in opinion.footnotes\" :key=\"footnote.id\">\n            <span>{{footnote.label}}</span>\n\n            <!-- THIS IS NOT DRY YET -- REPEAT OF ABOVE -->\n            <div v-for=\"paragraph in opinion.paragraphs\" :key=\"paragraph.id\">\n              <span>{{paragraph.class}}</span>\n              <template v-for=\"block in paragraphBlocks(paragraph)\"><span\n                v-if=\"mounted\"\n                v-for=\"word in block.words\"\n                :key=\"word.id\"\n                :style=\"wordTextStyle(word)\"\n                @click=\"wordClicked(word)\"\n                :ref=\"`wordText${word.id}`\"\n                :class=\"wordClass(word)\"\n              >{{word.stringWithoutSoftHyphens}}</span></template>\n            </div>\n            <!-- END THING TO DRY -->\n          </div>\n\n        </div>\n      </div>\n      <div id=\"imageView\" class=\"scrollable col-6\" ref=\"pageImageContainer\">\n        <div v-for=\"page in pages\" :key=\"page.id\" ref=\"pageImages\" :class=\"{page: true, 'show-ocr': showOcr}\">\n          <img :src=\"page.image_url\" :width=\"page.width * page.scale\" :height=\"page.height * page.scale\">\n          <span v-if=\"mounted\"\n                v-for=\"word in page.words\"\n                :key=\"word.id\"\n                :style=\"wordImageStyle(page, word)\"\n                @click=\"wordClicked(word)\"\n                :ref=\"`wordImage${word.id}`\"\n                :class=\"wordClass(word)\">\n            {{word.string}}\n          </span>\n        </div>\n      </div>\n    </div>\n    <div class=\"pt-6\" id=\"instructions_modal_overlay\" style=\"display: none\">\n      <div class=\"col-8 offset-2 p-5\" id=\"instructions_modal\">\n        <div id=\"modal_close\" @click=\"toggleInstructions\">&#8855;</div>\n        <div class=\"row pt-3\">\n          <div class=\"q col-3\">When should I press “Save”?</div>\n          <div class=\"a col-9 pl-3\">\n            Corrections to a case should be made in a batch, and you should only press “save” when you have made all changes you intend to make to a case. This avoids preserving intermediate edits on the server that aren’t needed. In the meantime, each change you make will be immediately stored to your local browser storage, and will be stored across restarts until you are ready to save.\n          </div>\n        </div>\n        <div class=\"row pt-3\">\n          <div class=\"q col-3\">Why is there a space after each word?</div>\n          <div class=\"a col-9 pl-3\">\n            The space after each word should be preserved (if it is supposed to be there) -- it controls whether there will be a space between that word and the next word when they are combined into text.\n          </div>\n        </div>\n        <div class=\"row pt-3\">\n          <div class=\"q col-3\">What is the significance of the word confidence labels?</div>\n          <div class=\"a col-9 pl-3\">\n            The word confidence button highlights words that the OCR engine was less confident about. Word confidence is labeled by the OCR engine on a scale from 0.0 (least confident) to 1.0 (most confident). These scores have no objective meaning.\n          </div>\n        </div>\n        <div class=\"row pt-3\">\n          <div class=\"q col-3\">What is the “⧟” button for?</div>\n          <div class=\"a col-9 pl-3\">\n            The “⧟” button is for inserting a “soft hyphen.” When the OCR engine sees a hyphen at the end of a line, it has to guess whether to encode the hyphen as a “hard hyphen,” which should be preserved in the text, or a “soft hyphen,” an invisible character which indicates where the word was broken over the line but should not be preserved in text.<br>\n            For example, if the OCR engine saw “hyphen-” at the end of one line, and “ated” at the start of the next line, it needed to decide whether the text output should be “hyphen-ated” or “hyphenated.” If the engine wrongly output “hyphen-ated”, you could use the soft hyphen button to change it to “hyphen⧟” “ated”, which would render as “hyphenated” in the text.\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import $ from \"jquery\";\n  import '../jquery_django_csrf';\n  import debounce from \"lodash.debounce\";\n  import scrollIntoView from 'scroll-into-view-if-needed';\n\n  import {FAKE_SOFT_HYPHEN, SOFT_HYPHEN} from \"./helpers\";\n\n  export default {\n    data() {\n      return {\n        pages: null,\n        metadata: null,\n        currentWord: null,\n        showOcr: false,\n        showConfidence: false,\n        editedWords: {},\n        saveStatus: null,\n        mounted: false,\n      }\n    },\n    watch: {\n      metadata: {\n        handler() {\n          this.saveStateToStorage();\n        },\n        deep: true\n      },\n      editedWords: {\n        handler() {\n          this.saveStateToStorage();\n        },\n        deep: true\n      },\n    },\n    created() {\n      // load local variables from Django template\n      this.templateVars = templateVars;  // eslint-disable-line\n      this.urls = this.templateVars.urls;\n      this.opinions = this.templateVars.opinions;\n\n      // preprocess metadata\n      this.metadata = this.templateVars.metadata;\n      this.serverMetadata = {...this.metadata};\n\n      // preprocess pages\n      this.pages = this.templateVars.pages;\n      this.blocksById = {};\n      for (const page of this.pages)\n        for (const block of page.blocks)\n          this.blocksById[block.id] = block;\n\n      // preprocess fonts\n      this.fonts = this.templateVars.fonts;\n      for (const fontId of Object.keys(this.fonts))\n        this.fonts[fontId] = this.processFont(this.fonts[fontId]);\n      this.fonts[-1] = {styles:'', family:'Times New Roman', size:12.0};  // default font\n      this.charAscentCache = {};\n\n      // load state from localStorage\n      this.storageKey = `caseedit-${this.metadata.id}`;\n      const savedStateJson = localStorage.getItem(this.storageKey);\n      this.savedWordEdits = {};\n      if (savedStateJson) {\n        try {\n          const savedState = JSON.parse(savedStateJson);\n\n          // for use in extracting words\n          this.savedWordEdits = savedState.edit_list;\n\n          // apply saved updates to metadata, if server val still matches old val\n          if (Object.keys(savedState.metadata).length > 0) {\n            for (const [k, [oldVal, newVal]] of Object.entries(savedState.metadata)) {\n              if (this.metadata[k] === oldVal)\n                this.metadata[k] = newVal;\n            }\n          }\n        } catch(e) {\n          // localStorage is wiped in case of error, so bad state doesn't leave user with an unusable page\n          console.log(\"Error applying edit_list to server state\", e); // eslint-disable-line\n          localStorage.removeItem(this.storageKey);\n        }\n      }\n      this.extractWords();  // depends on saved state\n    },\n    mounted: function () {\n      document.addEventListener('keyup', (e)=>{\n        if (e.ctrlKey) {\n          switch(e.key) {\n            case \"o\":\n                this.showOcr = !this.showOcr;\n              break;\n            case \"c\":\n              this.showConfidence = !this.showConfidence;\n              break;\n            case \"s\":\n              this.saveCase();\n              break;\n            default:\n              break;\n          }\n        }\n      });\n      for (const [i, page] of this.pages.entries())\n        page.imageRef = this.$refs.pageImages[i];\n      window.addEventListener('resize', ()=>{ this.handleWindowResize() });\n      this.handleWindowResize();\n      this.mounted = true;\n    },\n    methods: {\n      wordEdited(newVal) {\n        const word = this.currentWord;\n        if (word.originalString === newVal)\n          this.$delete(this.editedWords, word.id);\n        else\n          this.$set(this.editedWords, word.id, word);\n        word.string = newVal;\n        word.stringWithoutSoftHyphens = word.string.replace(FAKE_SOFT_HYPHEN, '');\n      },\n      paragraphBlocks(paragraph) {\n        if (!paragraph.block_ids)\n          return [];\n        return paragraph.block_ids.map(blockId => this.blocksById[blockId]);\n      },\n      currentWordStyle() {\n        if (this.currentWord) {\n          const currentPage = this.pagesByWordId[this.currentWord.id];\n          return {\n            'background-image':`url(${currentPage.image_url})`,\n            'background-size': `${currentPage.width}px`,\n            width: `${this.currentWord.w}px`,\n            height: `${this.currentWord.h}px`,\n            'background-position': `-${this.currentWord.x}px -${this.currentWord.y}px`,\n          };\n        }\n        return {width: '20rem', height: '2rem'};\n      },\n      wordImageStyle(page, word) {\n        const font = word.font;\n        return {\n          left: `${word.x * page.scale}px`,\n          top: `${word.y * page.scale - word.yOffset * page.fontScale - 1}px`,  // -1 for top border\n          'background-color': this.showConfidence ? word.wordConfidenceColor : 'unset',\n          // font format is \"<styles> <font size>/<line height> <font families>\":\n          font: `${font.styles} ${font.size * page.fontScale}px/${word.lineHeight * page.fontScale}px ${font.family}`,\n        };\n      },\n      wordTextStyle(word) {\n        const font = word.font;\n        return {\n          'background-color': this.showConfidence ? word.wordConfidenceColor : 'unset',\n          font: `${word.font.styles}`,\n        };\n      },\n      wordClass(word) {\n        return {\n          'current-word': this.currentWord === word,\n          'edited': word.string !== word.originalString,\n        };\n      },\n      wordClicked(word) {\n        this.currentWord = word;\n        this.$refs.currentWord.focus();\n        this.scrollToWord(word.id);\n      },\n      wordConfidenceColor(word) {\n        const alpha = (.6 - word.wordConfidence)*100;\n        const red = 255 * word.wordConfidence + 127;\n        return `rgba(${red}, 0, 0, ${alpha}%)`;\n      },\n      handleWindowResize() {\n        const containerWidth = this.$refs.pageImageContainer.offsetWidth;\n        for (const page of this.pages) {\n          this.$set(page, 'scale', containerWidth / page.width);\n          // Conversion factor for font pts on scanned page to pixels.\n          // For example, a font detected as \"12pt\" in our 300DPI scan was actually 12/72 * 300 == 50px high.\n          page.fontScale = page.scale * 300/72;\n        }\n      },\n      extractWords() {\n        /*\n          Extract a list of words from the token stream in each page.blocks, and store the words in each page.words.\n\n          word objects look like this: {\n            blockId,\n            wordConfidence, font,  // display metadata\n            x, y, w, h,  // location\n            lineHeight, yOffset,  // calculated OCR alignment values\n            strings: [{index, value}],  // list of the original token stream strings composing this word\n            originalString,  // merged strings, before any edits\n            string,  // merged strings, including any edits\n          }\n\n          To save changes later, we'll update `blocks[blockId].tokens[index]` to `string`, and empty any additional `strings`.\n         */\n        let wordId = 0;\n        this.pagesByWordId = {};\n        for (const page of this.pages) {\n          const words = [];\n          for (const block of page.blocks) {\n            block.words = [];\n            if (!block.tokens)\n              continue;\n            let word = null;\n            let fontId = -1;\n            const wordEdits = this.savedWordEdits[page.id] && this.savedWordEdits[page.id][block.id] ? this.savedWordEdits[page.id][block.id] : {};\n            for (const [i, token] of block.tokens.entries()) {\n              if (typeof token === 'string') {\n                if (word)\n                  word.strings.push({index: i, value: token});\n                continue;\n              }\n              const [tag, attrs] = token;\n              if(tag === 'ocr') {\n                const rect = attrs.rect;\n                word = {\n                  blockId: block.id,\n                  wordConfidence: attrs.wc,\n                  font: this.fonts[fontId],\n                  strings: [],\n                  x: rect[0],\n                  y: rect[1],\n                  w: rect[2],\n                  h: rect[3],\n                };\n              } else if(tag === '/ocr') {\n                if (!word)\n                  continue;  // tag closed before opened -- shouldn't happen\n                if (word.strings.length) {\n                  // apply saved edits, if any\n                  const wordIndex = words.length;\n                  word.index = wordIndex;\n                  word.originalString = word.strings.map(s=>s.value).join(\"\").replace(SOFT_HYPHEN, FAKE_SOFT_HYPHEN);\n                  if (wordIndex in wordEdits && wordEdits[wordIndex][0] === word.originalString) {\n                    word.string = wordEdits[wordIndex][1];\n                    this.editedWords[wordId] = word;\n                  } else {\n                    word.string = word.originalString;\n                  }\n                  word.stringWithoutSoftHyphens = word.string.replace(FAKE_SOFT_HYPHEN, '');\n\n                  // for OCR alignment, calculate line height based on font, and apply a y offset based on the tallest\n                  // character in the word\n                  word.lineHeight = this.getFontLineHeight(fontId);\n                  word.yOffset = Math.min(...word.string.split('').map(c => word.lineHeight - this.getCharAscent(c, fontId)));\n\n                  // calculate background color\n                  word.wordConfidenceColor = this.wordConfidenceColor(word);\n\n                  wordId++;\n                  word.id = wordId;\n                  words.push(word);\n                  block.words.push(word);\n                  this.pagesByWordId[wordId] = page;\n                }\n                word = null;\n              } else if(tag === 'font') {\n                fontId = attrs.id;\n              } else if(tag === '/font') {\n                fontId = -1;\n              }\n            }\n          }\n          page.words = words;\n        }\n      },\n      toggleInstructions() {\n        const instructions = document.getElementById(\"instructions_modal_overlay\")\n        instructions.style.display = instructions.style.display === \"none\" ? 'block' : 'none'\n      },\n      scrollToWord(wordId) {\n        scrollIntoView(this.$refs[`wordText${wordId}`][0], {scrollMode: 'if-needed'});\n        scrollIntoView(this.$refs[`wordImage${wordId}`][0], {scrollMode: 'if-needed'});\n      },\n      removeEdit(wordId) {\n        const word = this.editedWords[wordId];\n        word.string = word.originalString;\n        this.$delete(this.editedWords, wordId);\n      },\n      clearEdits() {\n        if (!confirm('CONFIRM: permanently discard your edits?\\nThere is no undo for this command.')) {\n          return;\n        }\n        localStorage.removeItem(this.storageKey);\n        this.metadata = {...this.serverMetadata};\n        for (const page of this.pages)\n          for (const word of page.words)\n            if (word.string !== word.originalString)\n              word.string = word.originalString;\n      },\n      getMetadataEdits() {\n        /*\n          Prepare dict of all edited metadata, including old value and new value so we can check for consistency\n        */\n        const metadata = {};\n        for (const [k, v] of Object.entries(this.metadata)) {\n          const serverVal = this.serverMetadata[k];\n          if (v !== serverVal)\n            metadata[k] = [serverVal, v];\n        }\n        return metadata;\n      },\n      getTokenEdits(wordIndexed=false) {\n        /*\n          Prepare dict of all edited OCR strings, including old value and new value so we can check for consistency.\n          Dict looks like {\n            <pageId>: {\n              <blockId>: {\n                <index>: [oldVal, newVal]\n              }\n            }\n          }\n          With wordIndexed=false, <index> represents an index into the tokens for the block, used for saving to server.\n          With wordIndexed=true, <index> represents index into clickable words in the block, used for saving to localStorage.\n        */\n        const editList = {};\n        for (const page of this.pages) {\n          const pageId = page.id;\n          for (const [wordIndex, word] of page.words.entries()) {\n            if (word.string !== word.originalString) {\n              if (!editList[pageId])\n                editList[pageId] = {};\n              if (!editList[pageId][word.blockId])\n                editList[pageId][word.blockId] = {};\n              if (wordIndexed) {\n                editList[pageId][word.blockId][wordIndex] = [word.originalString, word.string];\n              } else {\n                const newString = word.string.replace(FAKE_SOFT_HYPHEN, SOFT_HYPHEN);\n                for (const [i, string] of word.strings.entries()) {\n                  editList[pageId][word.blockId][string.index] = [string.value, i === 0 ? newString : ''];\n                }\n              }\n            }\n          }\n        }\n        return editList;\n      },\n      getState(wordIndexed=false) {\n        /* get state for saving to localStorage or server */\n        return {\n          'metadata': this.getMetadataEdits(),\n          'edit_list': this.getTokenEdits(wordIndexed),\n        };\n      },\n      saveStateToStorage: debounce(function() {\n        /* save to local storage */\n        const save_state = this.getState(true)\n        localStorage.setItem(this.storageKey, JSON.stringify(save_state));\n      }, 500),\n      async saveCase() {\n        /* save to server */\n        const description = prompt(`\n          CONFIRM: permanently replace ${this.templateVars.citation_full} in the CAP database with your edited version?\n          There is no undo for this command.\n          Enter a description of your edits to continue:\n        `, '');\n        if (!description)\n          return;\n        this.saveStatus = \"saving ...\";\n        const state = this.getState();\n        state.description = description;\n        try {\n          await $.ajax('', {\n            type : 'POST',\n            data: JSON.stringify(state),\n            contentType: 'application/json',\n          }).promise();\n        } catch(e) {\n          this.saveStatus = `error saving: ${e}`;\n          return;\n        }\n        localStorage.removeItem(this.storageKey);\n        window.location.href = this.urls.case;\n      },\n      getCharAscent(c, fontId) {\n        /*\n          Return character's ascent, meaning how high in pts the character visually reaches above the baseline in this font.\n          (So \"T\" has a higher value than \"i\" has a higher value than \"a\", which is the same as \"g\".)\n        */\n        const key = `${fontId}-${c}`;\n        if (!this.charAscentCache.hasOwnProperty(key)) {\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d');\n          const font = this.fonts[fontId];\n          ctx.font = `${font.styles} ${font.size}pt ${font.family}`;\n          // multiply by 3/4 to convert from px to pt\n          this.charAscentCache[key] = ctx.measureText(c).actualBoundingBoxAscent * 3/4;\n        }\n        return this.charAscentCache[key];\n      },\n      getFontLineHeight(fontId) {\n        /*\n          Return the ascent height of capital letters in this font.\n          Setting a span's line-height: to this height means that capital letters will touch the top of the\n          containing element, and we then only need to offset the span for lowercase letters.\n        */\n        return this.getCharAscent('T', fontId);\n      },\n      addSoftHyphen() {\n        this.currentWord.string = this.currentWord.string + FAKE_SOFT_HYPHEN\n      },\n      processFont(font) {\n        /*\n          Process backend font that looks like\n            {type: \"serif\", style: \"bold smallcaps\", family: \"Times New Roman\", size: \"11.00\", width: \"proportional\"}\n          into CSS-ready font snippets like\n            {family: '\"Times New Roman\",serif', size: 11.0, styles: 'small-caps bold'}\n          Snippets are kept separate so font size can be scaled later.\n        */\n        let styles = [];\n        if (font.style.includes('italics'))\n          styles.push('italic');\n        if (font.style.includes('smallcaps'))\n          styles.push('small-caps');\n        if (font.style.includes('bold'))\n          styles.push('bold');\n        return {\n          family: `\"${font.family}\",${font.type}`,\n          size: parseFloat(font.size),\n          styles: styles.join(' '),\n        };\n      },\n    },\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .scrollable {\n    border: 2px gray solid;\n    padding: 1em;\n  }\n  .page {\n    position: relative;\n    span {\n      border: 1px transparent solid;\n      line-height: 1;\n      color: transparent;\n      position: absolute;\n    }\n    &.show-ocr {\n      img {\n        opacity: 0.2;\n      }\n\n      span {\n        color: unset;\n      }\n    }\n  }\n  .current-word {\n    border: 1px green solid !important;\n  }\n  .edited {\n    border: 1px orange solid !important;\n  }\n  #textView {\n    padding: 2em;\n    hyphens: none;\n    .opinion {\n      padding-bottom: 2em;\n      padding-top: 2em;\n      border-bottom: 1px gray solid;\n    }\n    .paragraph {\n      margin-bottom: 1em;\n    }\n    .paragraph-class {\n      margin-right: 1em;\n      color: gray;\n    }\n  }\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./main.vue?vue&type=template&id=005e926b&scoped=true&\"\nimport script from \"./main.vue?vue&type=script&lang=js&\"\nexport * from \"./main.vue?vue&type=script&lang=js&\"\nimport style0 from \"./main.vue?vue&type=style&index=0&id=005e926b&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"005e926b\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport Main from './main.vue'\n\n\nnew Vue({\n  el: '#app',\n  components: { Main },\n  template: '<Main/>'\n});\n\n\n\n","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main.vue?vue&type=style&index=0&id=005e926b&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./main.vue?vue&type=style&index=0&id=005e926b&lang=scss&scoped=true&\""],"sourceRoot":""}